{"version":3,"sources":["webpack:///static/js/2.ab65ceb6c07e0c15ee0b.js","webpack:///./node_modules/antlr4/atn/ParserATNSimulator.js","webpack:///./node_modules/freelog_policy_compiler/BeautifyExtension.js","webpack:///./node_modules/antlr4/atn/LexerActionExecutor.js","webpack:///./node_modules/presentable_policy_compiler/JSONGeneratorExtension.js","webpack:///./src/views/node/presentable/steps/index.vue?6165","webpack:///./src/views/node/presentables/index.vue?299e","webpack:///./src/views/node/presentable/steps/index.vue","webpack:///./node_modules/antlr4/polyfills/codepointat.js","webpack:///./src/components/TableView/index.vue","webpack:///./node_modules/core-js/library/modules/es6.number.is-integer.js","webpack:///./node_modules/policy_lang/index.js","webpack:///./node_modules/antlr4/Recognizer.js","webpack:///./src/views/node/presentable/detail/index.vue?4d15","webpack:///./src/config/index.js","webpack:///./node_modules/antlr4/atn/ATNDeserializer.js","webpack:///./node_modules/antlr4/InputStream.js","webpack:///./node_modules/core-js/library/modules/core.is-iterable.js","webpack:///./src/components/TableView/index.vue?9ebe","webpack:///./node_modules/antlr4/error/Errors.js","webpack:///./node_modules/antlr4/RuleContext.js","webpack:///src/views/node/presentables/index.vue","webpack:///./src/views/node/presentable/steps/index.js","webpack:///src/views/node/presentable/contract/detail/index.vue","webpack:///./node_modules/antlr4/atn/ATN.js","webpack:///src/views/node/presentable/create/index.vue","webpack:///./node_modules/antlr4/atn/ATNType.js","webpack:///./node_modules/antlr4/index.js","webpack:///./src/views/node/presentable/policy/index.vue","webpack:///./src/views/node/presentable/contract/detail/index.vue?ab8f","webpack:///./src/views/node/presentable/policy/index.js","webpack:///./node_modules/core-js/library/modules/_is-integer.js","webpack:///./node_modules/antlr4/error/DiagnosticErrorListener.js","webpack:///./node_modules/babel-runtime/core-js/get-iterator.js","webpack:///./node_modules/antlr4/dfa/index.js","webpack:///./node_modules/antlr4/tree/index.js","webpack:///./node_modules/antlr4/ParserRuleContext.js","webpack:///./node_modules/freelog_policy_compiler/JSONGeneratorExtension.js","webpack:///./node_modules/antlr4/BufferedTokenStream.js","webpack:///./src/views/node/presentable/tags/index.js","webpack:///./node_modules/antlr4/CommonTokenStream.js","webpack:///./node_modules/antlr4/CharStreams.js","webpack:///./src/views/node/presentable/create/index.vue?debd","webpack:///./node_modules/presentable_policy_compiler/index.js","webpack:///./node_modules/antlr4/dfa/DFAState.js","webpack:///./src/views/node/presentable/tags/index.vue","webpack:///./node_modules/antlr4/atn/LexerAction.js","webpack:///./src/views/node/presentable/create/index.js","webpack:///./src/views/node/presentable/policy/index.vue?838f","webpack:///./node_modules/presentable_policy_lang/gen/presentable_policyListener.js","webpack:///./node_modules/antlr4/atn/PredictionMode.js","webpack:///./src/components/TableView/index.vue?5aa8","webpack:///./node_modules/policy_lang/gen/policyParser.js","webpack:///./src/views/node/presentable/edit/index.vue","webpack:///./node_modules/presentable_policy_lang/gen/presentable_policyLexer.js","webpack:///./src/components/TableView/index.vue?b2f0","webpack:///./src/views/node/presentable/contract/detail/index.vue?3fb2","webpack:///./src/components/TableView/index.js","webpack:///src/views/node/presentable/edit/index.vue","webpack:///./src/views/node/presentable/policy/index.vue?b818","webpack:///./node_modules/freelog_policy_compiler/index.js","webpack:///./node_modules/babel-runtime/core-js/number/is-integer.js","webpack:///./node_modules/antlr4/LL1Analyzer.js","webpack:///./node_modules/policy_lang/gen/policyListener.js","webpack:///./node_modules/antlr4/IntervalSet.js","webpack:///./node_modules/antlr4/CommonTokenFactory.js","webpack:///./node_modules/core-js/library/fn/object/values.js","webpack:///./node_modules/antlr4/dfa/DFA.js","webpack:///./node_modules/antlr4/atn/Transition.js","webpack:///./node_modules/antlr4/Parser.js","webpack:///./node_modules/antlr4/tree/Tree.js","webpack:///./node_modules/presentable_policy_compiler/ErrorListenerExtend.js","webpack:///./node_modules/antlr4/atn/LexerATNSimulator.js","webpack:///./node_modules/antlr4/tree/Trees.js","webpack:///./node_modules/core-js/library/fn/is-iterable.js","webpack:///./src/views/node/presentable/detail/index.vue?1745","webpack:///./node_modules/antlr4/PredictionContext.js","webpack:///src/views/node/presentable/steps/index.vue","webpack:///./src/views/node/presentable/edit/index.vue?7337","webpack:///./src/views/node/presentable/tags/index.vue?dd7d","webpack:///./src/config/resource.js","webpack:///./src/views/node/presentable/steps/index.vue?5e2f","webpack:///./node_modules/antlr4/atn/ATNSimulator.js","webpack:///./node_modules/antlr4/Utils.js","webpack:///./node_modules/core-js/library/fn/number/is-integer.js","webpack:///./node_modules/babel-runtime/helpers/slicedToArray.js","webpack:///./src/config/presentable.js","webpack:///./src/views/node/presentable/contract/detail/index.vue","webpack:///./node_modules/core-js/library/modules/es7.object.values.js","webpack:///./node_modules/core-js/library/fn/get-iterator.js","webpack:///./node_modules/core-js/library/modules/core.get-iterator.js","webpack:///./node_modules/babel-runtime/core-js/object/values.js","webpack:///./node_modules/antlr4/Lexer.js","webpack:///./node_modules/antlr4/dfa/DFASerializer.js","webpack:///./src/views/node/presentable/edit/index.vue?78a2","webpack:///./src/views/node/presentable/detail/index.js","webpack:///./node_modules/antlr4/atn/ATNDeserializationOptions.js","webpack:///./node_modules/presentable_policy_lang/gen/presentable_policyParser.js","webpack:///./node_modules/antlr4/Token.js","webpack:///./node_modules/antlr4/atn/ATNState.js","webpack:///./node_modules/antlr4/error/ErrorStrategy.js","webpack:///./node_modules/presentable_policy_lang/index.js","webpack:///./src/config/contract.js","webpack:///./src/views/node/presentables/index.vue","webpack:///./src/views/node/presentables/index.js","webpack:///./src/views/node/presentable/create/index.vue","webpack:///./src/views/node/presentable/contract/detail/index.vue?525f","webpack:///./node_modules/core-js/library/modules/_object-to-array.js","webpack:///./node_modules/freelog_policy_compiler/ErrorListenerExtend.js","webpack:///./src/views/node/presentable/create/index.vue?faa0","webpack:///./src/views/node/presentable/detail/index.vue?4b84","webpack:///./node_modules/antlr4/atn/index.js","webpack:///./src/views/node/presentables/index.vue?2214","webpack:///./node_modules/antlr4/polyfills/fromcodepoint.js","webpack:///./src/views/node/presentable/edit/index.js","webpack:///./node_modules/antlr4/error/ErrorListener.js","webpack:///src/views/node/presentable/detail/index.vue","webpack:///./src/views/node/presentable/detail/index.vue","webpack:///src/components/TableView/index.vue","webpack:///./node_modules/underscore/underscore.js","webpack:///./src/views/node/presentable/contract/detail/index.js","webpack:///./src/views/node/presentables/index.vue?4c53","webpack:///src/views/node/presentable/tags/index.vue","webpack:///./src/views/node/presentable/create/index.vue?73ba","webpack:///./src/views/node/presentable/edit/index.vue?485c","webpack:///./node_modules/policy_lang/gen/policyLexer.js","webpack:///./node_modules/presentable_policy_compiler/BeautifyExtension.js","webpack:///./node_modules/babel-runtime/core-js/is-iterable.js","webpack:///./src/views/node/presentable/tags/index.vue?b8b5","webpack:///./node_modules/antlr4/atn/ATNConfigSet.js","webpack:///./node_modules/antlr4/atn/SemanticContext.js","webpack:///./src/views/node/presentable/tags/index.vue?f916","webpack:///./node_modules/antlr4/FileStream.js","webpack:///./src/views/node/presentable/steps/index.vue?801a","webpack:///./node_modules/antlr4/error/index.js","webpack:///./node_modules/antlr4/atn/ATNConfig.js","webpack:///src/views/node/presentable/policy/index.vue","webpack:///./src/views/node/presentable/policy/index.vue?e947"],"names":["webpackJsonp","+1pv","module","exports","__webpack_require__","ParserATNSimulator","parser","atn","decisionToDFA","sharedContextCache","ATNSimulator","call","this","predictionMode","PredictionMode","LL","_input","_startIndex","_outerContext","_dfa","mergeCache","Utils","Set","BitSet","DoubleDict","ATN","ATNState","ATNConfig","ATNConfigSet","Token","DFAState","PredPrediction","RuleContext","SemanticContext","ParserRuleContext","RuleStopState","StarLoopEntryState","PredictionContext","Interval","Transitions","Transition","SetTransition","NotSetTransition","RuleTransition","ActionTransition","NoViableAltException","SingletonPredictionContext","predictionContextFromRuleContext","prototype","Object","create","constructor","debug","debug_closure","debug_add","debug_list_atn_decisions","dfa_debug","retry_debug","reset","adaptivePredict","input","decision","outerContext","console","log","getLookaheadName","LT","line","column","index","dfa","m","mark","s0","precedenceDfa","getPrecedenceStartState","getPrecedence","EMPTY","toString","ruleNames","s0_closure","computeStartState","atnStartState","configs","applyPrecedenceFilter","addDFAState","setPrecedenceStartState","alt","execATN","literalNames","seek","release","startIndex","previousD","t","LA","D","getExistingTargetState","computeTargetState","ERROR","e","noViableAlt","getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule","INVALID_ALT_NUMBER","requiresFullContext","SLL","conflictingAlts","predicates","conflictIndex","evalSemanticContext","length","minValue","reportAttemptingFullContext","execATNWithFullContext","isAcceptState","prediction","stopIndex","alts","reportAmbiguity","EOF","consume","edges","reach","computeReachSet","addDFAEdge","predictedAlt","getUniqueAlt","altSubSets","getConflictingAltSubsets","arrayToString","allSubsetsConflict","getConflictingAlts","uniqueAlt","hasSLLConflictTerminatingPrediction","hasSemanticContext","predicateDFAState","getDecisionState","dfaState","decisionState","nalts","transitions","altsToCollectPredsFrom","getConflictingAltsOrUniqueAlt","altToPred","getPredsForAmbigAlts","getPredicatePredictions","foundExactAmbig","previous","resolvesToJustOneViableAlt","LL_EXACT_AMBIG_DETECTION","allSubsetsEqual","getSingleViableAlt","reportContextSensitivity","closure","fullCtx","intermediate","skippedStopStates","i","items","c","getTokenName","state","push","j","trans","target","getReachableTarget","cfg","add","closureBusy","treatEofAsEpsilon","k","removeAllConfigsNotInRuleStopState","hasConfigInRuleStopState","l","lookToEndOfRule","allConfigsInRuleStopStates","result","config","epsilonOnlyTransitions","nextTokens","contains","EPSILON","endOfRuleState","ruleToStopState","ruleIndex","p","ctx","initialContext","context","statesFromAlt1","configSet","updatedContext","semanticContext","evalPrecedence","stateNumber","precedenceFilterSuppressed","equals","ttype","matches","maxTokenType","ambigAlts","orContext","nPredAlts","pred","NONE","pairs","containsPredicate","cfgs","splitAccordingToSemanticValidity","semValidConfigs","semInvalidConfigs","getAltThatFinishedDecisionEntryRule","reachesIntoOuterContext","hasEmptyPath","indexOf","Math","min","apply","succeeded","failed","evaluate","predPredictions","complete","predictions","pair","predicateEvaluationResult","collectPredicates","closureCheckingStopState","depth","isEmpty","getReturnState","EMPTY_RETURN_STATE","returnState","states","newContext","getParent","parms","getRuleName","closure_","canDropLoopEntryEdgeInLeftRecursiveRule","continueCollecting","getEpsilonTarget","isEpsilon","newDepth","outermostPrecedenceReturn","dipsIntoOuterContext","stateType","STAR_LOOP_ENTRY","isPrecedenceDecision","numCtxs","decisionStartState","blockEndStateNum","endState","blockEndState","returnStateNumber","returnStateTarget","BLOCK_END","inContext","serializationType","RULE","ruleTransition","PRECEDENCE","precedenceTransition","PREDICATE","predTransition","ACTION","actionTransition","ATOM","RANGE","SET","actionIndex","pt","precedence","getRuleInvocationStack","currentPosition","predSucceeds","getPredicate","newSemCtx","andContext","predIndex","isCtxDependent","followState","altsets","getAlts","symbolicNames","getInputStream","getTokens","dumpDeadEndConfigs","nvae","decs","getDeadEndConfigs","AtomTransition","label","neg","set","error","get","from_","to","existing","readOnly","optimizeConfigs","setReadonly","interval","getTokenStream","getText","getErrorListenerDispatch","exact","/CDt","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_createClass","defineProperties","props","descriptor","defineProperty","key","protoProps","staticProps","policyListener","_","Beautify","_policyListener","_this","getPrototypeOf","errorMsg","stringArray","_nextIndent","_this2","each","range","slice","Number","deleteIndent","map","children","child","addIndent","_this3","concat","ID","_this4","_this5","_this6","_this7","_this8","_this9","_this10","_this11","_this12","_this13","_this14","_this15","_this16","getChildCount","getChild","_this17","/Z+8","LexerActionExecutor","lexerActions","cachedHashCode","hashStuff","LexerIndexedCustomAction","append","lexerActionExecutor","lexerAction","fixOffsetBeforeMatch","offset","updatedLexerActions","isPositionDependent","execute","lexer","requiresSeek","action","hashCode","updateHashCode","hash","update","other","numActions","idx","/qG2","permute","ch","splice","usedChars","permArr","pop","policy","underscore","JSONGeneratorExtentionClass","policy_segments","segment_block","initialState","teminateState","users","all_occured_states","state_transition_table","parentCtx","activatedStates","userObj","userType","uniq","current_state","current_state_clause","next_state","events","state_transition","currentState","event","type","params","nextState","timeUnit","time_unit","eventName","date","DATE","day","INT","unit","tbd","transactionAmount","tempLicenseIds","license_resource_id","licensId","join","amount","/qoj","__webpack_exports__","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","space","active","process-status","processStatus","finish-status","finishStatus","align-center","title","description","_v","staticRenderFns","esExports","/tJ5","content","locals","0AMZ","injectStyle","ssrContext","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_index_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_b9e66b48_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_index_vue__","normalizeComponent","__vue_styles__","Component","13lD","String","codePointAt","object","$defineProperty","position","string","size","second","first","charCodeAt","1G+u","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_361849fa_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_index_vue__","1alW","$export","S","isInteger","1sgP","policyLexer","policyParser","2EdO","Recognizer","_listeners","ConsoleErrorListener","INSTANCE","_interp","_stateNumber","ProxyErrorListener","tokenTypeMapCache","ruleIndexMapCache","checkVersion","toolVersion","addErrorListener","listener","removeErrorListeners","getTokenTypeMap","tokenNames","getTokenNames","undefined","reduce","o","getRuleIndexMap","getTokenType","tokenName","INVALID_TYPE","getErrorHeader","getOffendingToken","getTokenErrorDisplay","s","text","replace","sempred","localctx","precpred","2LyA","detail","presentableId","_e","tab-position","tabPosition","model","callback","$$v","activeTabName","expression","name","_s","_resourceDetail","resourceId","resourceName","resourceType","status","userId","_f","createDate","$set","tagInfo","staticStyle","width","on","click","updatePresentableHandler","contractDetail","_contractDetail","2uFj","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default","n","__WEBPACK_IMPORTED_MODULE_1__contract__","__WEBPACK_IMPORTED_MODULE_2__resource__","__WEBPACK_IMPORTED_MODULE_3__presentable__","3Rtt","initArray","tmp","ATNDeserializer","options","ATNDeserializationOptions","defaultOptions","deserializationOptions","stateFactories","actionFactories","ATNType","ATNStates","BasicState","DecisionState","BlockStartState","BlockEndState","LoopEndState","RuleStartState","TokensStartState","PlusLoopbackState","StarLoopbackState","PlusBlockStartState","StarBlockStartState","BasicBlockStartState","RangeTransition","EpsilonTransition","WildcardTransition","PredicateTransition","PrecedencePredicateTransition","IntervalSet","LexerActions","LexerActionType","LexerSkipAction","LexerChannelAction","LexerCustomAction","LexerMoreAction","LexerTypeAction","LexerPushModeAction","LexerPopModeAction","LexerModeAction","ADDED_UNICODE_SMP","SUPPORTED_UUIDS","isFeatureSupported","feature","actualUuid","idx1","deserialize","data","checkUUID","readATN","readStates","readRules","readModes","sets","readSets","readInt","bind","uuid","readInt32","readEdges","readDecisions","readLexerActions","markPrecedenceDecisions","verifyATN","generateRuleBypassTransitions","grammarType","PARSER","adjust","v","temp","split","pos","version","readUUID","loopBackStateNumbers","endStateNumbers","nstates","stype","stateFactory","LOOP_END","loopBackStateNumber","endStateNumber","addState","loopBackState","numNonGreedyStates","nonGreedy","numPrecedenceStates","isPrecedenceRule","nrules","LEXER","ruleToTokenType","ruleToStartState","startState","tokenType","stopState","nmodes","modeToStartState","readUnicode","iset","addOne","i1","i2","addRange","nedges","src","trg","arg1","arg2","arg3","edgeFactory","addTransition","ndecisions","decState","decisionToState","count","actionType","data1","data2","lexerActionFactory","generateRuleBypassTransition","bypassStart","bypassStop","defineDecisionState","excludeTransition","stateIsEndStateFor","transition","matchState","maybeLoopEndState","checkCondition","condition","message","readLong","byteToHex","bth","substr","toUpperCase","bb","int","NOT_SET","WILDCARD","sf","BASIC","RULE_START","BLOCK_START","PLUS_BLOCK_START","STAR_BLOCK_START","TOKEN_START","RULE_STOP","STAR_LOOP_BACK","PLUS_LOOP_BACK","af","CHANNEL","CUSTOM","MODE","MORE","POP_MODE","PUSH_MODE","SKIP","TYPE","4iSB","_loadString","stream","decodeToUnicodeCodePoints","_index","strdata","codePoint","codeUnit","_size","InputStream","marker","start","stop","fromCodePoint","5PlU","classof","ITERATOR","Iterators","isIterable","it","O","hasOwnProperty","5b3W","directives","rawName","modifiers","body","tableData","stripe","border","_t","background","current-page","pageMeta","page","page-sizes","page-size","pageSize","layout","total","size-change","handleSizeChange","current-change","handleCurrentChange","5d5Q","RecognitionException","Error","captureStackTrace","stack","recognizer","offendingToken","offendingState","LexerNoViableAltException","deadEndConfigs","startToken","_ctx","getCurrentToken","InputMismatchException","FailedPredicateException","predicate","formatMessage","predicateIndex","ParseCancellationException","getExpectedTokens","symbol","6GCw","parent","invokingState","RuleNode","INVALID_INTERVAL","getSourceInterval","getRuleContext","getPayload","getAltNumber","setAltNumber","altNumber","accept","visitor","visitChildren","Trees","toStringTree","recog","ri","6S+M","__WEBPACK_IMPORTED_MODULE_0__index__","7AHu","default","mounted","7Ae7","7y1Z","modeNameToStartState","LL1Analyzer","nextTokensInContext","LOOK","nextTokensNoContext","nextTokenWithinRule","removeState","following","expected","addSet","removeOne","rt","803e","8Teg","9C8F","codepointat","fromcodepoint","tree","CharStreams","CommonToken","FileStream","CommonTokenStream","Lexer","Parser","pc","PredictionContextCache","9e1m","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_41f78b08_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_index_vue__","9eSa","AEih","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_assign__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_assign___default","__WEBPACK_IMPORTED_MODULE_2_presentable_policy_compiler__","__WEBPACK_IMPORTED_MODULE_2_presentable_policy_compiler___default","policyText","watch","methods","textChange","$emit","validate","myBeautify","a","compile","$message","submit","$route","query","contractId","nodeId","parseInt","formData","presentableName","btoa","languageType","$services","presentables","post","then","res","getData","success","$router","path","msg","catch","$error","showErrorMessage","AKgy","isObject","floor","isFinite","B0bK","DiagnosticErrorListener","exactOnly","ErrorListener","getDecisionDescription","notifyErrorListeners","ruleName","reportedAlts","values","BO1k","__esModule","CF8A","DFA","DFASerializer","LexerDFASerializer","CLgU","Tree","ParseTreeListener","ParseTreeVisitor","ParseTreeWalker","EesY","invokingStateNumber","exception","InterpreterRuleContext","TerminalNode","TerminalNodeImpl","ErrorNodeImpl","copyFrom","enterRule","exitRule","addChild","removeLastChild","addTokenNode","token","node","addErrorNode","badToken","getToken","tokens","getTypedRuleContext","ctxType","getTypedRuleContexts","contexts","tokenIndex","Ev7n","segmentText","source","terminateState","account_id","FEATHERACCOUNT","ExQ7","TokenStream","BufferedTokenStream","tokenSource","fetchedEOF","lazyInit","adjustSeekIndex","sync","fetch","nextToken","types","subset","LB","setup","setTokenSource","nextTokenOnChannel","channel","previousTokenOnChannel","getHiddenTokensToRight","nextOnChannel","DEFAULT_TOKEN_CHANNEL","filterForChannel","getHiddenTokensToLeft","prevOnChannel","left","right","hidden","getSourceName","fill","F0r5","presentableTags","inputVisible","inputValue","Array","val","setCurrentValue","handleClose","tag","showInput","$nextTick","$refs","saveTagInput","focus","handleInputConfirm","Fzuw","DEFAULT_CHANNEL","getNumberOfOnChannelTokens","HNBV","isNodeJs","window","importScripts","fs","fromString","str","fromBlob","blob","encoding","onLoad","onError","reader","FileReader","onload","is","onerror","readAsText","fromBuffer","buffer","fromPath","readFile","err","fromPathSync","readFileSync","HwOZ","I+6F","antlr4","arguments","extentionClass","chars","buildParseTrees","DEFAULT","walk","IUCG","Hash","getAltSet","finish","ItGU","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_09f5c69c_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_index_vue__","J8R0","LexerAction","mode","skip","pushMode","popMode","more","_channel","JMs1","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_values__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_values___default","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_keys__","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_keys___default","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_assign__","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_assign___default","__WEBPACK_IMPORTED_MODULE_3_babel_runtime_core_js_promise__","__WEBPACK_IMPORTED_MODULE_3_babel_runtime_core_js_promise___default","__WEBPACK_IMPORTED_MODULE_4_babel_runtime_core_js_get_iterator__","__WEBPACK_IMPORTED_MODULE_4_babel_runtime_core_js_get_iterator___default","__WEBPACK_IMPORTED_MODULE_5_babel_runtime_helpers_slicedToArray__","__WEBPACK_IMPORTED_MODULE_5_babel_runtime_helpers_slicedToArray___default","__WEBPACK_IMPORTED_MODULE_6_babel_runtime_core_js_number_is_integer__","__WEBPACK_IMPORTED_MODULE_6_babel_runtime_core_js_number_is_integer___default","__WEBPACK_IMPORTED_MODULE_7__views_node_presentable_steps_index_vue__","__WEBPACK_IMPORTED_MODULE_8__policy_index_vue__","__WEBPACK_IMPORTED_MODULE_9__config_index__","__WEBPACK_IMPORTED_MODULE_10_freelog_policy_compiler__","__WEBPACK_IMPORTED_MODULE_10_freelog_policy_compiler___default","RESOURCE_TYPES","activeName","tabList","selected","done","init","components","PresentableSteps","PresentablePolicy","loadPolicyDetail","queryContractsStatus","segmentChangeHandler","tabData","select","checked","some","tab","partyTwo","resourceIds","contractRecords","forEach","item","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","next","_ref","_ref2","contract","policies","created","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_ref3","_ref4","segmentId","return","loadResourceDetail","resId","resource","resolve","pageBuild","resources","widgetsDataMap","systemMeta","widgets","obj","userPolicy","_formatSegmentText","formatSegmentText","validatePageBuildParam","reject","pageBuildResourceId","validMap","invalidMap","names","createPageBuildContract","param","pbContract","errcode","newContracts","oldContracts","gotoCreateUserPolicy","createResourceContract","showConfirmDialog","$confirm","confirmButtonText","cancelButtonText","createContract","selectedContracts","contracts","contractType","targetId","serialNumber","createPresentablePolicy","promises","all","responseList","paddingContractIds","contractIds","contractIdMap","extractSubmitData","warning","JvoN","sources","mappings","file","sourcesContent","sourceRoot","LPMK","presentable_policyListener","enterP","exitP","enterSegment","exitSegment","enterAudience_clause","exitAudience_clause","enterAthorize_token_clause","exitAthorize_token_clause","enterAudience_individuals_clause","exitAudience_individuals_clause","enterAudience_groups_clause","exitAudience_groups_clause","enterState_clause","exitState_clause","enterCurrent_state_clause","exitCurrent_state_clause","enterTarget_clause","exitTarget_clause","enterAccepting","exitAccepting","enterEvent","exitEvent","enterAnd_event","exitAnd_event","enterPeriod_event","exitPeriod_event","enterSpecific_date_event","exitSpecific_date_event","enterRelative_date_event","exitRelative_date_event","enterPricing_agreement_event","exitPricing_agreement_event","enterTransaction_event","exitTransaction_event","enterGuaranty_event","exitGuaranty_event","enterContract_guaranty","exitContract_guaranty","enterPlatform_guaranty","exitPlatform_guaranty","enterSigning_event","exitSigning_event","enterAccess_count_event","exitAccess_count_event","enterVisit_increment_event","exitVisit_increment_event","enterVisit_event","exitVisit_event","enterBalance_event","exitBalance_event","enterBalance_greater","exitBalance_greater","enterBalance_smaller","exitBalance_smaller","enterSettlement_event","exitSettlement_event","enterLicense_resource_id","exitLicense_resource_id","enterAccount_id","exitAccount_id","enterUsers","exitUsers","enterUser_groups","exitUser_groups","enterAnd","exitAnd","enterView_unit","exitView_unit","enterTime_unit","exitTime_unit","enterStart_hour","exitStart_hour","enterEnd_hour","exitEnd_hour","LYMb","Map","AltDict","equalArrays","dup","hasConflictingAltSet","hasStateAssociatedWithOneAlt","hasNonConflictingAltSet","or","configToAlts","hashFunction","equalsFunction","c1","c2","put","getValues","getStateToAltMap","minAlt","LoYW","Lrau","decisionsToDFA","PContext","RULE_p","SegmentContext","RULE_segment","Audience_clauseContext","RULE_audience_clause","Athorize_token_clauseContext","RULE_athorize_token_clause","Audience_individuals_clauseContext","RULE_audience_individuals_clause","Audience_groups_clauseContext","RULE_audience_groups_clause","State_clauseContext","RULE_state_clause","Current_state_clauseContext","RULE_current_state_clause","Target_clauseContext","RULE_target_clause","AcceptingContext","RULE_accepting","EventContext","RULE_event","And_eventContext","RULE_and_event","Period_eventContext","RULE_period_event","Specific_date_eventContext","RULE_specific_date_event","Relative_date_eventContext","RULE_relative_date_event","Pricing_agreement_eventContext","RULE_pricing_agreement_event","Transaction_eventContext","RULE_transaction_event","Guaranty_eventContext","RULE_guaranty_event","Contract_guarantyContext","RULE_contract_guaranty","Platform_guarantyContext","RULE_platform_guaranty","Signing_eventContext","RULE_signing_event","Access_count_eventContext","RULE_access_count_event","Visit_increment_eventContext","RULE_visit_increment_event","Visit_eventContext","RULE_visit_event","Balance_eventContext","RULE_balance_event","Balance_greaterContext","RULE_balance_greater","Balance_smallerContext","RULE_balance_smaller","Settlement_eventContext","RULE_settlement_event","License_resource_idContext","RULE_license_resource_id","Account_idContext","RULE_account_id","UsersContext","RULE_users","User_groupsContext","RULE_user_groups","AndContext","RULE_and","View_unitContext","RULE_view_unit","Time_unitContext","RULE_time_unit","Start_hourContext","RULE_start_hour","End_hourContext","RULE_end_hour","serializedATN","ds","T__0","T__1","T__2","T__3","T__4","T__5","T__6","T__7","T__8","T__9","T__10","T__11","T__12","T__13","T__14","T__15","T__16","T__17","T__18","T__19","T__20","T__21","T__22","T__23","T__24","T__25","T__26","T__27","T__28","T__29","T__30","T__31","T__32","FOR","USERGROUPS","USERS","PROCEED","TO","IN","ON","ACCEPTING","SELF","LICENSE","PAYING","PER","VIEW","REQUIRE","NOTHING","WS","segment","_la","enterOuterAlt","_errHandler","match","re","reportError","recover","athorize_token_clause","audience_clause","state_clause","audience_individuals_clause","and","audience_groups_clause","user_groups","target_clause","accepting","and_event","period_event","specific_date_event","relative_date_event","pricing_agreement_event","transaction_event","guaranty_event","signing_event","access_count_event","balance_event","settlement_event","contract_guaranty","platform_guaranty","visit_increment_event","visit_event","balance_greater","balance_smaller","_alt","recoverInline","reportMatch","view_unit","start_hour","end_hour","NJ0E","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_d708ef40_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_index_vue__","NwDQ","presentable_policyLexer","LexerATNSimulator","channelNames","modeNames","grammarFileName","O+Ac","P8NL","PG49","loading","showPagination","Boolean","formatHandler","Function","paginationOptions","pageSizes","loader","load","pageInfo","dataList","totalItem","PYJw","QdQx","QtOE","RRo+","RuwF","AbstractPredicateTransition","HIT_PRED","getDecisionLookahead","look","lookBusy","_LOOK","r","lookContext","calledRuleStack","seeThruPreds","addEOF","removed","remove","MIN_USER_TOKEN_TYPE","complement","Smw7","T+Yw","intervals","addInterval","h","max","intervalslength","removeRange","len","x","elemsAreChar","toTokenString","toCharString","toIndexString","fromCharCode","elementName","TEvv","TokenFactory","CommonTokenFactory","copyText","createThin","TmV0","VIKC","_states","precedenceState","setPrecedenceDfa","DFAStatesSet","sortedStates","sort","b","toLexerString","VS1O","label_","makeLabel","ruleStart","Predicate","PrecedencePredicate","serializationNames","serializationTypes","minVocabSymbol","maxVocabSymbol","VgzD","TraceListener","DefaultErrorStrategy","_precedenceStack","_tracer","_parseListeners","_syntaxErrors","setInputStream","ErrorNode","enterEveryRule","visitTerminal","exitEveryRule","contructor","bypassAltsAtnCache","setTrace","matchWildcard","_buildParseTrees","getParseListeners","addParseListener","removeParseListener","removeParseListeners","triggerEnterRuleEvent","triggerExitRuleEvent","reverse","getTokenFactory","_factory","setTokenFactory","factory","getATNWithBypassAlts","serializedAtn","getSerializedATN","compileParseTreePattern","pattern","patternRuleIndex","ParseTreePatternMatcher","setTokenStream","syntaxError","hasListener","inErrorRecoveryMode","isErrorNode","visitErrorNode","addContextToParseTree","altNum","enterRecursionRule","pushNewRecursionContext","unrollRecursionContexts","retCtx","getInvokingContext","isExpectedToken","getExpectedTokensWithinCurrentRule","getRuleIndex","getDFAStrings","dumpDFA","seenOne","printer","println","print","sourceName","trace","VnEu","SyntaxTree","ParseTree","visit","isArray","getSymbol","W6Ef","Extend","that","offendingSymbol","WcIR","resetSimState","sim","SimState","DEFAULT_MODE","prevAccept","OrderedATNConfigSet","LexerATNConfig","MIN_DFA_EDGE","MAX_DFA_EDGE","match_calls","copyState","simulator","matchATN","old_mode","suppressEdge","predict","ds0","captureSimState","failOrAccept","getReachableConfigSet","skipAlt","currentAltReachedAcceptState","passedThroughNonGreedyDecision","charPos","MAX_CHAR_VALUE","speculative","evaluatePredicate","savedcolumn","savedLine","settings","tk","proposed","firstConfigWithRuleStopState","newState","getDFA","tt","WmJ1","getNodeText","escapeWhitespace","payload","getChildren","list","getAncestors","ancestors","findAllTokenNodes","findAllNodes","findAllRuleNodes","findTokens","nodes","_findAllNodes","descendants","Xd32","Xttn","YFoD","cache","EmptyPredictionContext","ArrayPredictionContext","parents","returnStates","merge","rootIsWildcard","mergeSingletons","mergeArrays","rootMerge","mergeRoot","spc","singleParent","payloads","apc","a_","mergedReturnStates","mergedParents","a_parent","b_parent","bothDollars","ax_ax","mergedParent","M","combineCommonParents","uniqueParents","q","getCachedPredictionContext","contextCache","visited","changed","updated","globalNodeCount","id","up","Ya8g","Zapo","a1Cn","aX82","_l","closable","disable-transitions","close","$event","ref","blur","nativeOn","keyup","_k","keyCode","aqfl","d","RESOURCE_STATUS","widget","image","audio","markdown","revealSlide","bCSO","bcvg","getCachedContext","bz+k","standardEqualsFunction","standardHashCodeFunction","escapeSpaces","titleCase","txt","charAt","seed","round","random","pow","remainder","bytes","h1","h1b","k1","bits","keys","hashKey","entry","oldValue","containsKey","getKeys","c45H","d7EF","_interopRequireDefault","_isIterable2","_isIterable3","_getIterator2","_getIterator3","sliceIterator","arr","_arr","_n","_d","_i","dVol","PRESENTABLE_STATUS_TIPS","dibs","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_3eb35d32_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_index_vue__","fZOM","$values","fxRn","g8Ux","anObject","getIterator","iterFn","gRE1","h0lj","_tokenFactorySourcePair","_token","_tokenStartCharIndex","_tokenStartLine","_tokenStartColumn","_hitEOF","_type","_modeStack","_mode","_text","HIDDEN","HIDDEN_CHANNEL","MIN_CHAR_VALUE","tokenStartMarker","emitEOF","continueOuter","notifyListeners","emit","emitToken","getCharIndex","cpos","lpos","eof","getAllTokens","getErrorDisplay","getErrorDisplayForChar","getCharErrorDisplay","hL6x","buf","getStateString","getEdgeLabel","baseStateStr","hVtP","step","rules","label-width","required","prop","placeholder","spellcheck","rows","validateLoading","submitLoading","hi6K","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_keys__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_keys___default","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_assign__","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_assign___default","__WEBPACK_IMPORTED_MODULE_3__views_node_presentable_steps_index_vue__","__WEBPACK_IMPORTED_MODULE_4__contract_detail_index_vue__","__WEBPACK_IMPORTED_MODULE_5__policy_index_vue__","__WEBPACK_IMPORTED_MODULE_6__tags_index_vue__","tags","PresentableContractDetail","PresentableTags","loadPresentableDetail","loadDetail","formatData","loadContractDetail","beautifySegmentText","originPresentable","userDefinedTags","userDefined","createUserPolicyHandler","updateContractDetail","hs4g","iUzR","presentable_policyParser","j/5l","EMPTY_SOURCE","getTokenSource","clone","j0Qz","INVALID_STATE_NUMBER","isNonGreedyExitState","k1zP","ErrorStrategy","errorRecoveryMode","lastErrorIndex","lastErrorStates","BailErrorStrategy","Errors","endErrorCondition","beginErrorCondition","reportNoViableAlternative","reportInputMismatch","reportFailedPredicate","getMessage","followSet","getErrorRecoverySet","consumeUntil","la","singleTokenDeletion","reportUnwantedToken","expecting","whatFollowsLoopIterationOrRule","escapeWSAndQuote","reportMissingToken","matchedSymbol","singleTokenInsertion","getMissingSymbol","currentSymbolType","nextTokenType","tokenText","currentSymbol","expectedTokenType","current","lookback","recoverSet","follow","k2M1","kIFb","CONTRACT_STATUS","CONTRACT_STATUS_TIPS","uncreated","initial","running","activated","userTerminated","sysTerminated","terminated","-1","1","2","3","4","5","6","kQ4V","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_afdd11ca_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_index_vue__","kQsE","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise___default","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_typeof__","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_typeof___default","__WEBPACK_IMPORTED_MODULE_3__components_TableView_index_vue__","__WEBPACK_IMPORTED_MODULE_4__config_index__","STATUS_TIPS","resourceList","TableView","queryHandler","_statusInfo","mergeResourceData","dataMap","resourceDetail","mergePersentableData","presentableDetail","loadContracts","loadResourceData","loadPresentables","responses","resourcesData","resIds","promiseList","response","handlePresentable","row","lISv","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_f9f08148_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_index_vue__","lL/Q","formatContractDetail","statusTip","partyOne","fsmState","policySegment","selectedContractEvent","desc","domProps","innerHTML","disabled","executeContractHandler","mbce","toIObject","isEnum","f","isEntries","mywV","o7dJ","ojA3","pHgc","pNox","pr/i","stringFromCharCode","highSurrogate","lowSurrogate","codeUnits","RangeError","qBNV","__WEBPACK_IMPORTED_MODULE_0_vuex__","__WEBPACK_IMPORTED_MODULE_1__views_node_presentable_steps_index_vue__","__WEBPACK_IMPORTED_MODULE_3__tags_index_vue__","headers","trigger","computed","session","Authorization","errorHandler","nextAction","formName","valid","qFmK","delegates","r5zv","rBJF","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_6983dd12_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_index_vue__","rQCC","rdLu","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","createReduce","dir","iterator","iteratee","memo","currentKey","optimizeCb","isArrayLike","createPredicateIndexFinder","array","cb","getLength","createIndexFinder","predicateFind","sortedIndex","isNaN","collectNonEnumProps","nonEnumIdx","nonEnumerableProps","proto","isFunction","ObjProto","has","root","previousUnderscore","ArrayProto","FuncProto","nativeIsArray","nativeKeys","nativeBind","nativeCreate","Ctor","_wrapped","VERSION","func","argCount","collection","accumulator","identity","matcher","property","Infinity","createAssigner","keysFunc","undefinedOnly","baseCreate","MAX_ARRAY_INDEX","collect","results","foldl","inject","reduceRight","foldr","find","detect","findIndex","findKey","filter","negate","every","any","includes","include","fromIndex","guard","invoke","method","args","isFunc","pluck","where","findWhere","lastComputed","shuffle","rand","shuffled","sample","sortBy","criteria","group","behavior","groupBy","indexBy","countBy","toArray","partition","pass","fail","head","take","last","rest","tail","drop","compact","flatten","shallow","strict","output","isArguments","without","difference","unique","isSorted","isBoolean","seen","union","intersection","argsLength","zip","unzip","findLastIndex","low","high","mid","lastIndexOf","ceil","executeBound","sourceFunc","boundFunc","callingContext","bound","partial","boundArgs","bindAll","memoize","hasher","address","delay","wait","setTimeout","defer","throttle","timeout","later","leading","now","remaining","clearTimeout","trailing","debounce","immediate","timestamp","callNow","wrap","wrapper","compose","after","times","before","once","hasEnumBug","propertyIsEnumerable","allKeys","mapObject","invert","functions","extend","extendOwn","assign","pick","oiteratee","omit","defaults","tap","interceptor","isMatch","eq","aStack","bStack","className","areArrays","aCtor","bCtor","isEqual","isString","isElement","nodeType","Int8Array","parseFloat","isNumber","isNull","isUndefined","noConflict","constant","noop","propertyOf","accum","Date","getTime","escapeMap","&","<",">","\"","'","`","unescapeMap","createEscaper","escaper","testRegexp","RegExp","replaceRegexp","test","escape","unescape","fallback","idCounter","uniqueId","prefix","templateSettings","interpolate","noMatch","escapes","\\","\r","\n"," "," ","escapeChar","template","oldSettings","variable","chain","_chain","mixin","valueOf","toJSON","sfob","__WEBPACK_IMPORTED_MODULE_1__config_index__","contractEventsMap","signing","contractGuaranty","period","arrivalDate","resolveContractEvents","stateTransitionMap","fsmDescription","corresponseEvents","pushEvent","eventFn","eventTest","eventId","szxE","slot","icon","align","scopedSlots","_u","fn","scope","tJvw","tdq/","show-icon","indexOuter","effect","placement","$index","change","uY8j","ucRY","uruK","us/S","wADU","wMEt","hashATNConfig","hashCodeForConfigSet","equalATNConfigs","equalsForConfigSet","configLookup","merged","getStates","getPredicates","preds","interpreter","addAll","coll","containsFast","clear","wQJ6","AND","operands","opnds","precedencePredicates","filterPrecedencePredicates","reduced","OR","compareTo","differs","evaluated","wThA","wf8X","fileName","xs1j","y2Ps","yEAX","checkParams","isCfg","checkContext","checkNonGreedyDecision","yyaC","z7tt"],"mappings":"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AC,GACA7wB,KAAAN,SACAM,KAAA6K,UAAAsT,EAAAgzB,eACAnxC,KAsDA,QAAAoxC,GAAA1xC,EAAAkxB,EAAAC,GAUA,WATAvR,KAAAsR,IACAA,EAAA,UAEAtR,KAAAuR,GAAA,OAAAA,IACAA,GAAA,GAEA0N,EAAAj9B,kBAAAvB,KAAAC,KAAA4wB,EAAAC,GACA7wB,KAAAN,SACAM,KAAA6K,UAAAsT,EAAAkzB,eACArxC,KAsDA,QAAAsxC,GAAA5xC,EAAAkxB,EAAAC,GAUA,WATAvR,KAAAsR,IACAA,EAAA,UAEAtR,KAAAuR,GAAA,OAAAA,IACAA,GAAA,GAEA0N,EAAAj9B,kBAAAvB,KAAAC,KAAA4wB,EAAAC,GACA7wB,KAAAN,SACAM,KAAA6K,UAAAsT,EAAAozB,gBACAvxC,KA6DA,QAAAwxC,GAAA9xC,EAAAkxB,EAAAC,GAUA,WATAvR,KAAAsR,IACAA,EAAA,UAEAtR,KAAAuR,GAAA,OAAAA,IACAA,GAAA,GAEA0N,EAAAj9B,kBAAAvB,KAAAC,KAAA4wB,EAAAC,GACA7wB,KAAAN,SACAM,KAAA6K,UAAAsT,EAAAszB,cACAzxC,KA98FA,GAAAu+B,GAAA/+B,EAAA,QACA0U,EAAA1U,EAAA,QAAA0U,eAGAw9B,GAAA,YACA,oBACA,oBACA,sCACA,yBACA,qBACA,oBACA,qBACA,oBACA,iCACA,yBACA,kBACA,oBACA,kBACA,iBACA,iBACA,qBACA,qBACA,mBACA,gBACA,mBACA,+BACA,4BACA,qCACA,wBACA,8BACA,uBACA,eACA,eACA,gBACA,eACA,eACA,mBACA,kBACA,gBACA,eACA,gBACA,eACA,yBACA,sBACA,sBACA,oBACA,iCACA,kBACA,gBACA,qBACA,eACA,eACA,eACA,eACA,eACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,iBACA,oBACA,kBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,0BACA,kBACA,wBACA,oBACA,oBACA,mBACA,kBACA,oBACA,oBACA,oBACA,mBACA,qBACA,eACA,eACA,gBACA,gBACA,gBACA,eACA,gBACA,eACA,kBACA,eACA,eACA,eACA,eACA,eACA,iBACA,gBACA,eACA,eACA,gBACA,gBACA,eACA,eACA,eACA,eACA,eACA,gBACA,gBACA,gBACA,eACA,eACA,eACA,eACA,eACA,eACA,kBACA,gBACA,kBACA,eACA,iBACA,gBACA,iBACA,iBACA,iBACA,gBACA,eACA,eACA,eACA,eACA,eACA,gBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,eACA,eACA,gBACA,gBACA,gBACA,eACA,eACA,gBACA,eACA,eACA,gBACA,iBACA,eACA,eACA,eACA,eACA,eACA,eACA,iBACA,eACA,iBACA,iBACA,eACA,gBACA,eACA,oBACA,iBACA,MAAA72B,KAAA,IAGAlb,GAAA,GAAA4+B,GAAA5+B,IAAAmjB,iBAAA2C,YAAAisB,GAEA3E,EAAAptC,EAAAiqB,gBAAA3U,IAAA,SAAA08B,EAAAluC,GAAmE,UAAA86B,GAAA76B,IAAA6zB,IAAAoa,EAAAluC,KAEnE5D,EAAA,GAAA0+B,GAAA1K,uBAEAhvB,GAAA,oEACA,mDACA,+DACA,6DACA,wDACA,+EACA,yDACA,gDACA,oDACA,uDACA,oDACA,qDAEAoM,GAAA,6CACA,6CACA,6CACA,sDACA,6CACA,iDACA,mDAEA9M,GAAA,wDACA,uDACA,sDACA,qEACA,oEACA,yDACA,6DACA,kEACA,sDACA,oDACA,wBAWAga,GAAA/b,UAAAC,OAAAC,OAAAi8B,EAAA5K,OAAAvxB,WACA+b,EAAA/b,UAAAG,YAAA4b,EAEA9b,OAAAyR,eAAAqK,EAAA/b,UAAA,OACAyP,IAAA,WACA,MAAAlS,MAIAwe,EAAAxX,IAAA43B,EAAAt9B,MAAA0F,IACAwX,EAAAyzB,KAAA,EACAzzB,EAAA0zB,KAAA,EACA1zB,EAAA2zB,KAAA,EACA3zB,EAAA4zB,KAAA,EACA5zB,EAAA6zB,KAAA,EACA7zB,EAAA8zB,KAAA,EACA9zB,EAAA+zB,KAAA,EACA/zB,EAAAg0B,KAAA,EACAh0B,EAAAi0B,KAAA,EAC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,KACA,SAAU/3C,EAAQ0b,EAAqBxb,GAE7C,YqD15WA,SAAAid,GAAAC,GACAld,EAAA,QrD05WA6C,OAAOyR,eAAekH,EAAqB,cAAgB5H,OAAO,GAC7C,IAAIuJ,GAAiHnd,EAAoB,QqD55W9J83C,EAAA93C,EAAA,QAGAqd,EAAArd,EAAA,QASAsd,EAAAL,EAKAM,EAAAF,EACAF,EAAA,EACA26B,EAAA,GATA,EAWAx6B,EAPA,kBAEA,KAUA9B,GAAA,QAAA+B,EAAA,SrDo6WMw6B,KACA,SAAUj4C,EAAQC,EAASC,GsDtlWjC,QAAAg4C,GAAAx0C,GAGA,MAFAu7B,GAAA7K,MAAA3zB,KAAAC,KAAAgD,GACAhD,KAAAye,QAAA,GAAA8f,GAAA5+B,IAAA83C,kBAAAz3C,KAAAL,EAAAotC,EAAA,GAAAxO,GAAA1K,wBACA7zB,KA1WA,GAAAu+B,GAAA/+B,EAAA,QAGAkyC,GAAA,YACA,oBACA,qBACA,iCACA,4BACA,qBACA,oBACA,qBACA,oBACA,4BACA,qCACA,mCACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,8BACA,8BACA,wBACA,qBACA,qBACA,qBACA,wBACA,8BACA,8BACA,8BACA,yBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,qBACA,sBACA,sBACA,yBACA,uBACA,qBACA,uBACA,uBACA,8BACA,yBACA,oBACA,yBACA,oBACA,uBACA,6CACA,wBACA,gBACA,gBACA,iBACA,eACA,eACA,eACA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,iBACA,gBACA,eACA,eACA,eACA,eACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,oBACA,uBACA,uBACA,sBACA,wBACA,uBACA,sBACA,oBACA,sBACA,oBACA,iBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,iBACA,kBACA,gBACA,gBACA,gBACA,iBACA,eACA,iBACA,gBACA,eACA,gBACA,gBACA,gBACA,iBACA,eACA,gBACA,gBACA,eACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,eACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,eACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,eACA,gBACA,gBACA,iBACA,eACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,eACA,iBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,iBACA,eACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,iBACA,eACA,iBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,eACA,eACA,gBACA,iBACA,gBACA,gBACA,gBACA,iBACA,gBACA,g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ACA,oBACA,mBACA,eACA,gBACA,eACA,kBACA,eACA,eACA,gBACA,kBACA,eACA,eACA,eACA,iBACA,eACA,gBACA,gBACA,eACA,eACA,eACA,kBACA,eACA,eACA,eACA,eACA,eACA,gBACA,gBACA,gBACA,eACA,eACA,eACA,eACA,eACA,eACA,kBACA,gBACA,gBACA,gBACA,eACA,kBACA,iBACA,eACA,eACA,gBACA,eACA,eACA,eACA,eACA,eACA,gBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,eACA,eACA,gBACA,gBACA,gBACA,eACA,eACA,gBACA,eACA,eACA,iBACA,gBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,iBACA,iBACA,iBACA,gBACA,iBACA,uBACA,eAAA72B,KAAA,IAGAlb,GAAA,GAAA4+B,GAAA5+B,IAAAmjB,iBAAA2C,YAAAisB,GAEA3E,EAAAptC,EAAAiqB,gBAAA3U,IAAA,SAAA08B,EAAAluC,GAAmE,UAAA86B,GAAA76B,IAAA6zB,IAAAoa,EAAAluC,KAEnE5D,EAAA,GAAA0+B,GAAA1K,uBAEAhvB,GAAA,4EACA,mDACA,+DACA,yDACA,kDACA,qEACA,qDACA,sDACA,oDACA,wDACA,0CAEAoM,GAAA,6CACA,6CACA,6CACA,+CACA,gDACA,iDACA,QAEA9M,GAAA,wDACA,uDACA,sDACA,qEACA,oEACA,yDACA,6DACA,kEACA,sDACA,oDACA,wBAWAmrD,GAAAltD,UAAAC,OAAAC,OAAAi8B,EAAA5K,OAAAvxB,WACAktD,EAAAltD,UAAAG,YAAA+sD,EAEAjtD,OAAAyR,eAAAw7C,EAAAltD,UAAA,OACAyP,IAAA,WACA,MAAAlS,MAIA2vD,EAAA3oD,IAAA43B,EAAAt9B,MAAA0F,IACA2oD,EAAA1d,KAAA,EACA0d,EAAAzd,KAAA,EACAyd,EAAAxd,KAAA,EACAwd,EAAAvd,KAAA,EACAud,EAAAtd,KAAA,EACAsd,EAAArd,KAAA,EACAqd,EAAApd,KAAA,EACAod,EAAAnd,KAAA,EACAmd,E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ACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,yBACA,8BACA,8BACA,8BACA,2BACA,qBACA,qBACA,qBACA,wBACA,8BACA,8BACA,8BACA,uBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,sBACA,qBACA,uBACA,uBACA,sBACA,sBACA,uBACA,yBACA,uBACA,uBACA,uBACA,0BACA,yBACA,4BACA,sBACA,sBACA,qBACA,sBACA,4CACA,mCACA,0BACA,eACA,gBACA,iBACA,eACA,eACA,eACA,eACA,eACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,eACA,iBACA,gBACA,eACA,eACA,eACA,eACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,oBACA,sBACA,sBACA,wBACA,uBACA,qBACA,gBACA,gBACA,gBACA,eACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,eACA,iBACA,gBACA,gBACA,gBACA,kBACA,iBACA,gBACA,gBACA,gBACA,eACA,iBACA,gBACA,gBACA,gBACA,eACA,gBACA,eACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,eACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,eACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,eACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,eACA,gBACA,iBACA,gBACA,gBACA,gBACA,eACA,gBACA,eACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,iBACA,eACA,iBACA,gBACA,gBACA,iBACA,eACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,iBACA,eACA,iBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,eACA,eACA,gBACA,iBACA,gBACA,gBACA,gBACA,iBACA,gBACA,iBACA,gBACA,iBACA,eACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,iBACA,eACA,eACA,iBACA,eACA,eACA,iBACA,eACA,eACA,gBACA,eACA,eACA,kBACA,iBACA,iBACA,mBACA,YAAA72B,KAAA,IAGAlb,GAAA,GAAA4+B,GAAA5+B,IAAAmjB,iBAAA2C,YAAAisB,GAEA3E,EAAAptC,EAAAiqB,gBAAA3U,IAAA,SAAA08B,EAAAluC,GAAmE,UAAA86B,GAAA76B,IAAA6zB,IAAAoa,EAAAluC,IAQnEya,GAAA9b,UAAAC,OAAAC,OAAAi8B,EAAA7K,MAAAtxB,WACA8b,EAAA9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","file":"static/js/2.ab65ceb6c07e0c15ee0b.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ \"+1pv\":\n/***/ (function(module, exports, __webpack_require__) {\n\n//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\n//\n// The embodiment of the adaptive LL(*), ALL(*), parsing strategy.\n//\n// <p>\n// The basic complexity of the adaptive strategy makes it harder to understand.\n// We begin with ATN simulation to build paths in a DFA. Subsequent prediction\n// requests go through the DFA first. If they reach a state without an edge for\n// the current symbol, the algorithm fails over to the ATN simulation to\n// complete the DFA path for the current input (until it finds a conflict state\n// or uniquely predicting state).</p>\n//\n// <p>\n// All of that is done without using the outer context because we want to create\n// a DFA that is not dependent upon the rule invocation stack when we do a\n// prediction. One DFA works in all contexts. We avoid using context not\n// necessarily because it's slower, although it can be, but because of the DFA\n// caching problem. The closure routine only considers the rule invocation stack\n// created during prediction beginning in the decision rule. For example, if\n// prediction occurs without invoking another rule's ATN, there are no context\n// stacks in the configurations. When lack of context leads to a conflict, we\n// don't know if it's an ambiguity or a weakness in the strong LL(*) parsing\n// strategy (versus full LL(*)).</p>\n//\n// <p>\n// When SLL yields a configuration set with conflict, we rewind the input and\n// retry the ATN simulation, this time using full outer context without adding\n// to the DFA. Configuration context stacks will be the full invocation stacks\n// from the start rule. If we get a conflict using full context, then we can\n// definitively say we have a true ambiguity for that input sequence. If we\n// don't get a conflict, it implies that the decision is sensitive to the outer\n// context. (It is not context-sensitive in the sense of context-sensitive\n// grammars.)</p>\n//\n// <p>\n// The next time we reach this DFA state with an SLL conflict, through DFA\n// simulation, we will again retry the ATN simulation using full context mode.\n// This is slow because we can't save the results and have to \"interpret\" the\n// ATN each time we get that input.</p>\n//\n// <p>\n// <strong>CACHING FULL CONTEXT PREDICTIONS</strong></p>\n//\n// <p>\n// We could cache results from full context to predicted alternative easily and\n// that saves a lot of time but doesn't work in presence of predicates. The set\n// of visible predicates from the ATN start state changes depending on the\n// context, because closure can fall off the end of a rule. I tried to cache\n// tuples (stack context, semantic context, predicted alt) but it was slower\n// than interpreting and much more complicated. Also required a huge amount of\n// memory. The goal is not to create the world's fastest parser anyway. I'd like\n// to keep this algorithm simple. By launching multiple threads, we can improve\n// the speed of parsing across a large number of files.</p>\n//\n// <p>\n// There is no strict ordering between the amount of input used by SLL vs LL,\n// which makes it really hard to build a cache for full context. Let's say that\n// we have input A B C that leads to an SLL conflict with full context X. That\n// implies that using X we might only use A B but we could also use A B C D to\n// resolve conflict. Input A B C D could predict alternative 1 in one position\n// in the input and A B C E could predict alternative 2 in another position in\n// input. The conflicting SLL configurations could still be non-unique in the\n// full context prediction, which would lead us to requiring more input than the\n// original A B C.\tTo make a\tprediction cache work, we have to track\tthe exact\n// input\tused during the previous prediction. That amounts to a cache that maps\n// X to a specific DFA for that context.</p>\n//\n// <p>\n// Something should be done for left-recursive expression predictions. They are\n// likely LL(1) + pred eval. Easier to do the whole SLL unless error and retry\n// with full LL thing Sam does.</p>\n//\n// <p>\n// <strong>AVOIDING FULL CONTEXT PREDICTION</strong></p>\n//\n// <p>\n// We avoid doing full context retry when the outer context is empty, we did not\n// dip into the outer context by falling off the end of the decision state rule,\n// or when we force SLL mode.</p>\n//\n// <p>\n// As an example of the not dip into outer context case, consider as super\n// constructor calls versus function calls. One grammar might look like\n// this:</p>\n//\n// <pre>\n// ctorBody\n//   : '{' superCall? stat* '}'\n//   ;\n// </pre>\n//\n// <p>\n// Or, you might see something like</p>\n//\n// <pre>\n// stat\n//   : superCall ';'\n//   | expression ';'\n//   | ...\n//   ;\n// </pre>\n//\n// <p>\n// In both cases I believe that no closure operations will dip into the outer\n// context. In the first case ctorBody in the worst case will stop at the '}'.\n// In the 2nd case it should stop at the ';'. Both cases should stay within the\n// entry rule and not dip into the outer context.</p>\n//\n// <p>\n// <strong>PREDICATES</strong></p>\n//\n// <p>\n// Predicates are always evaluated if present in either SLL or LL both. SLL and\n// LL simulation deals with predicates differently. SLL collects predicates as\n// it performs closure operations like ANTLR v3 did. It delays predicate\n// evaluation until it reaches and accept state. This allows us to cache the SLL\n// ATN simulation whereas, if we had evaluated predicates on-the-fly during\n// closure, the DFA state configuration sets would be different and we couldn't\n// build up a suitable DFA.</p>\n//\n// <p>\n// When building a DFA accept state during ATN simulation, we evaluate any\n// predicates and return the sole semantically valid alternative. If there is\n// more than 1 alternative, we report an ambiguity. If there are 0 alternatives,\n// we throw an exception. Alternatives without predicates act like they have\n// true predicates. The simple way to think about it is to strip away all\n// alternatives with false predicates and choose the minimum alternative that\n// remains.</p>\n//\n// <p>\n// When we start in the DFA and reach an accept state that's predicated, we test\n// those and return the minimum semantically viable alternative. If no\n// alternatives are viable, we throw an exception.</p>\n//\n// <p>\n// During full LL ATN simulation, closure always evaluates predicates and\n// on-the-fly. This is crucial to reducing the configuration set size during\n// closure. It hits a landmine when parsing with the Java grammar, for example,\n// without this on-the-fly evaluation.</p>\n//\n// <p>\n// <strong>SHARING DFA</strong></p>\n//\n// <p>\n// All instances of the same parser share the same decision DFAs through a\n// static field. Each instance gets its own ATN simulator but they share the\n// same {@link //decisionToDFA} field. They also share a\n// {@link PredictionContextCache} object that makes sure that all\n// {@link PredictionContext} objects are shared among the DFA states. This makes\n// a big size difference.</p>\n//\n// <p>\n// <strong>THREAD SAFETY</strong></p>\n//\n// <p>\n// The {@link ParserATNSimulator} locks on the {@link //decisionToDFA} field when\n// it adds a new DFA object to that array. {@link //addDFAEdge}\n// locks on the DFA for the current decision when setting the\n// {@link DFAState//edges} field. {@link //addDFAState} locks on\n// the DFA for the current decision when looking up a DFA state to see if it\n// already exists. We must make sure that all requests to add DFA states that\n// are equivalent result in the same shared DFA object. This is because lots of\n// threads will be trying to update the DFA at once. The\n// {@link //addDFAState} method also locks inside the DFA lock\n// but this time on the shared context cache when it rebuilds the\n// configurations' {@link PredictionContext} objects using cached\n// subgraphs/nodes. No other locking occurs, even during DFA simulation. This is\n// safe as long as we can guarantee that all threads referencing\n// {@code s.edge[t]} get the same physical target {@link DFAState}, or\n// {@code null}. Once into the DFA, the DFA simulation does not reference the\n// {@link DFA//states} map. It follows the {@link DFAState//edges} field to new\n// targets. The DFA simulator will either find {@link DFAState//edges} to be\n// {@code null}, to be non-{@code null} and {@code dfa.edges[t]} null, or\n// {@code dfa.edges[t]} to be non-null. The\n// {@link //addDFAEdge} method could be racing to set the field\n// but in either case the DFA simulator works; if {@code null}, and requests ATN\n// simulation. It could also race trying to get {@code dfa.edges[t]}, but either\n// way it will work because it's not doing a test and set operation.</p>\n//\n// <p>\n// <strong>Starting with SLL then failing to combined SLL/LL (Two-Stage\n// Parsing)</strong></p>\n//\n// <p>\n// Sam pointed out that if SLL does not give a syntax error, then there is no\n// point in doing full LL, which is slower. We only have to try LL if we get a\n// syntax error. For maximum speed, Sam starts the parser set to pure SLL\n// mode with the {@link BailErrorStrategy}:</p>\n//\n// <pre>\n// parser.{@link Parser//getInterpreter() getInterpreter()}.{@link //setPredictionMode setPredictionMode}{@code (}{@link PredictionMode//SLL}{@code )};\n// parser.{@link Parser//setErrorHandler setErrorHandler}(new {@link BailErrorStrategy}());\n// </pre>\n//\n// <p>\n// If it does not get a syntax error, then we're done. If it does get a syntax\n// error, we need to retry with the combined SLL/LL strategy.</p>\n//\n// <p>\n// The reason this works is as follows. If there are no SLL conflicts, then the\n// grammar is SLL (at least for that input set). If there is an SLL conflict,\n// the full LL analysis must yield a set of viable alternatives which is a\n// subset of the alternatives reported by SLL. If the LL set is a singleton,\n// then the grammar is LL but not SLL. If the LL set is the same size as the SLL\n// set, the decision is SLL. If the LL set has size &gt; 1, then that decision\n// is truly ambiguous on the current input. If the LL set is smaller, then the\n// SLL conflict resolution might choose an alternative that the full LL would\n// rule out as a possibility based upon better context information. If that's\n// the case, then the SLL parse will definitely get an error because the full LL\n// analysis says it's not viable. If SLL conflict resolution chooses an\n// alternative within the LL set, them both SLL and LL would choose the same\n// alternative because they both choose the minimum of multiple conflicting\n// alternatives.</p>\n//\n// <p>\n// Let's say we have a set of SLL conflicting alternatives {@code {1, 2, 3}} and\n// a smaller LL set called <em>s</em>. If <em>s</em> is {@code {2, 3}}, then SLL\n// parsing will get an error because SLL will pursue alternative 1. If\n// <em>s</em> is {@code {1, 2}} or {@code {1, 3}} then both SLL and LL will\n// choose the same alternative because alternative one is the minimum of either\n// set. If <em>s</em> is {@code {2}} or {@code {3}} then SLL will get a syntax\n// error. If <em>s</em> is {@code {1}} then SLL will succeed.</p>\n//\n// <p>\n// Of course, if the input is invalid, then we will get an error for sure in\n// both SLL and LL parsing. Erroneous input will therefore require 2 passes over\n// the input.</p>\n//\n\nvar Utils = __webpack_require__(\"bz+k\");\nvar Set = Utils.Set;\nvar BitSet = Utils.BitSet;\nvar DoubleDict = Utils.DoubleDict;\nvar ATN = __webpack_require__(\"7y1Z\").ATN;\nvar ATNState = __webpack_require__(\"j0Qz\").ATNState;\nvar ATNConfig = __webpack_require__(\"yEAX\").ATNConfig;\nvar ATNConfigSet = __webpack_require__(\"wMEt\").ATNConfigSet;\nvar Token = __webpack_require__(\"j/5l\").Token;\nvar DFAState = __webpack_require__(\"IUCG\").DFAState;\nvar PredPrediction = __webpack_require__(\"IUCG\").PredPrediction;\nvar ATNSimulator = __webpack_require__(\"bcvg\").ATNSimulator;\nvar PredictionMode = __webpack_require__(\"LYMb\").PredictionMode;\nvar RuleContext = __webpack_require__(\"6GCw\").RuleContext;\nvar ParserRuleContext = __webpack_require__(\"EesY\").ParserRuleContext;\nvar SemanticContext = __webpack_require__(\"wQJ6\").SemanticContext;\nvar StarLoopEntryState = __webpack_require__(\"j0Qz\").StarLoopEntryState;\nvar RuleStopState = __webpack_require__(\"j0Qz\").RuleStopState;\nvar PredictionContext = __webpack_require__(\"YFoD\").PredictionContext;\nvar Interval = __webpack_require__(\"T+Yw\").Interval;\nvar Transitions = __webpack_require__(\"VS1O\");\nvar Transition = Transitions.Transition;\nvar SetTransition = Transitions.SetTransition;\nvar NotSetTransition = Transitions.NotSetTransition;\nvar RuleTransition = Transitions.RuleTransition;\nvar ActionTransition = Transitions.ActionTransition;\nvar NoViableAltException = __webpack_require__(\"5d5Q\").NoViableAltException;\n\nvar SingletonPredictionContext = __webpack_require__(\"YFoD\").SingletonPredictionContext;\nvar predictionContextFromRuleContext = __webpack_require__(\"YFoD\").predictionContextFromRuleContext;\n\nfunction ParserATNSimulator(parser, atn, decisionToDFA, sharedContextCache) {\n\tATNSimulator.call(this, atn, sharedContextCache);\n    this.parser = parser;\n    this.decisionToDFA = decisionToDFA;\n    // SLL, LL, or LL + exact ambig detection?//\n    this.predictionMode = PredictionMode.LL;\n    // LAME globals to avoid parameters!!!!! I need these down deep in predTransition\n    this._input = null;\n    this._startIndex = 0;\n    this._outerContext = null;\n    this._dfa = null;\n    // Each prediction operation uses a cache for merge of prediction contexts.\n    //  Don't keep around as it wastes huge amounts of memory. DoubleKeyMap\n    //  isn't synchronized but we're ok since two threads shouldn't reuse same\n    //  parser/atnsim object because it can only handle one input at a time.\n    //  This maps graphs a and b to merged result c. (a,b)&rarr;c. We can avoid\n    //  the merge if we ever see a and b again.  Note that (b,a)&rarr;c should\n    //  also be examined during cache lookup.\n    //\n    this.mergeCache = null;\n    return this;\n}\n\nParserATNSimulator.prototype = Object.create(ATNSimulator.prototype);\nParserATNSimulator.prototype.constructor = ParserATNSimulator;\n\nParserATNSimulator.prototype.debug = false;\nParserATNSimulator.prototype.debug_closure = false;\nParserATNSimulator.prototype.debug_add = false;\nParserATNSimulator.prototype.debug_list_atn_decisions = false;\nParserATNSimulator.prototype.dfa_debug = false;\nParserATNSimulator.prototype.retry_debug = false;\n\n\nParserATNSimulator.prototype.reset = function() {\n};\n\nParserATNSimulator.prototype.adaptivePredict = function(input, decision, outerContext) {\n    if (this.debug || this.debug_list_atn_decisions) {\n        console.log(\"adaptivePredict decision \" + decision +\n                               \" exec LA(1)==\" + this.getLookaheadName(input) +\n                               \" line \" + input.LT(1).line + \":\" +\n                               input.LT(1).column);\n    }\n    this._input = input;\n    this._startIndex = input.index;\n    this._outerContext = outerContext;\n\n    var dfa = this.decisionToDFA[decision];\n    this._dfa = dfa;\n    var m = input.mark();\n    var index = input.index;\n\n    // Now we are certain to have a specific decision's DFA\n    // But, do we still need an initial state?\n    try {\n        var s0;\n        if (dfa.precedenceDfa) {\n            // the start state for a precedence DFA depends on the current\n            // parser precedence, and is provided by a DFA method.\n            s0 = dfa.getPrecedenceStartState(this.parser.getPrecedence());\n        } else {\n            // the start state for a \"regular\" DFA is just s0\n            s0 = dfa.s0;\n        }\n        if (s0===null) {\n            if (outerContext===null) {\n                outerContext = RuleContext.EMPTY;\n            }\n            if (this.debug || this.debug_list_atn_decisions) {\n                console.log(\"predictATN decision \" + dfa.decision +\n                                   \" exec LA(1)==\" + this.getLookaheadName(input) +\n                                   \", outerContext=\" + outerContext.toString(this.parser.ruleNames));\n            }\n\n            var fullCtx = false;\n            var s0_closure = this.computeStartState(dfa.atnStartState, RuleContext.EMPTY, fullCtx);\n\n            if( dfa.precedenceDfa) {\n                // If this is a precedence DFA, we use applyPrecedenceFilter\n                // to convert the computed start state to a precedence start\n                // state. We then use DFA.setPrecedenceStartState to set the\n                // appropriate start state for the precedence level rather\n                // than simply setting DFA.s0.\n                //\n                dfa.s0.configs = s0_closure; // not used for prediction but useful to know start configs anyway\n                s0_closure = this.applyPrecedenceFilter(s0_closure);\n                s0 = this.addDFAState(dfa, new DFAState(null, s0_closure));\n                dfa.setPrecedenceStartState(this.parser.getPrecedence(), s0);\n            } else {\n                s0 = this.addDFAState(dfa, new DFAState(null, s0_closure));\n                dfa.s0 = s0;\n            }\n        }\n        var alt = this.execATN(dfa, s0, input, index, outerContext);\n        if (this.debug) {\n            console.log(\"DFA after predictATN: \" + dfa.toString(this.parser.literalNames));\n        }\n        return alt;\n    } finally {\n        this._dfa = null;\n        this.mergeCache = null; // wack cache after each prediction\n        input.seek(index);\n        input.release(m);\n    }\n};\n// Performs ATN simulation to compute a predicted alternative based\n//  upon the remaining input, but also updates the DFA cache to avoid\n//  having to traverse the ATN again for the same input sequence.\n\n// There are some key conditions we're looking for after computing a new\n// set of ATN configs (proposed DFA state):\n      // if the set is empty, there is no viable alternative for current symbol\n      // does the state uniquely predict an alternative?\n      // does the state have a conflict that would prevent us from\n      //   putting it on the work list?\n\n// We also have some key operations to do:\n      // add an edge from previous DFA state to potentially new DFA state, D,\n      //   upon current symbol but only if adding to work list, which means in all\n      //   cases except no viable alternative (and possibly non-greedy decisions?)\n      // collecting predicates and adding semantic context to DFA accept states\n      // adding rule context to context-sensitive DFA accept states\n      // consuming an input symbol\n      // reporting a conflict\n      // reporting an ambiguity\n      // reporting a context sensitivity\n      // reporting insufficient predicates\n\n// cover these cases:\n//    dead end\n//    single alt\n//    single alt + preds\n//    conflict\n//    conflict + preds\n//\nParserATNSimulator.prototype.execATN = function(dfa, s0, input, startIndex, outerContext ) {\n    if (this.debug || this.debug_list_atn_decisions) {\n        console.log(\"execATN decision \" + dfa.decision +\n                \" exec LA(1)==\" + this.getLookaheadName(input) +\n                \" line \" + input.LT(1).line + \":\" + input.LT(1).column);\n    }\n    var alt;\n    var previousD = s0;\n\n    if (this.debug) {\n        console.log(\"s0 = \" + s0);\n    }\n    var t = input.LA(1);\n    while(true) { // while more work\n        var D = this.getExistingTargetState(previousD, t);\n        if(D===null) {\n            D = this.computeTargetState(dfa, previousD, t);\n        }\n        if(D===ATNSimulator.ERROR) {\n            // if any configs in previous dipped into outer context, that\n            // means that input up to t actually finished entry rule\n            // at least for SLL decision. Full LL doesn't dip into outer\n            // so don't need special case.\n            // We will get an error no matter what so delay until after\n            // decision; better error message. Also, no reachable target\n            // ATN states in SLL implies LL will also get nowhere.\n            // If conflict in states that dip out, choose min since we\n            // will get error no matter what.\n            var e = this.noViableAlt(input, outerContext, previousD.configs, startIndex);\n            input.seek(startIndex);\n            alt = this.getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(previousD.configs, outerContext);\n            if(alt!==ATN.INVALID_ALT_NUMBER) {\n                return alt;\n            } else {\n                throw e;\n            }\n        }\n        if(D.requiresFullContext && this.predictionMode !== PredictionMode.SLL) {\n            // IF PREDS, MIGHT RESOLVE TO SINGLE ALT => SLL (or syntax error)\n            var conflictingAlts = null;\n            if (D.predicates!==null) {\n                if (this.debug) {\n                    console.log(\"DFA state has preds in DFA sim LL failover\");\n                }\n                var conflictIndex = input.index;\n                if(conflictIndex !== startIndex) {\n                    input.seek(startIndex);\n                }\n                conflictingAlts = this.evalSemanticContext(D.predicates, outerContext, true);\n                if (conflictingAlts.length===1) {\n                    if(this.debug) {\n                        console.log(\"Full LL avoided\");\n                    }\n                    return conflictingAlts.minValue();\n                }\n                if (conflictIndex !== startIndex) {\n                    // restore the index so reporting the fallback to full\n                    // context occurs with the index at the correct spot\n                    input.seek(conflictIndex);\n                }\n            }\n            if (this.dfa_debug) {\n                console.log(\"ctx sensitive state \" + outerContext +\" in \" + D);\n            }\n            var fullCtx = true;\n            var s0_closure = this.computeStartState(dfa.atnStartState, outerContext, fullCtx);\n            this.reportAttemptingFullContext(dfa, conflictingAlts, D.configs, startIndex, input.index);\n            alt = this.execATNWithFullContext(dfa, D, s0_closure, input, startIndex, outerContext);\n            return alt;\n        }\n        if (D.isAcceptState) {\n            if (D.predicates===null) {\n                return D.prediction;\n            }\n            var stopIndex = input.index;\n            input.seek(startIndex);\n            var alts = this.evalSemanticContext(D.predicates, outerContext, true);\n            if (alts.length===0) {\n                throw this.noViableAlt(input, outerContext, D.configs, startIndex);\n            } else if (alts.length===1) {\n                return alts.minValue();\n            } else {\n                // report ambiguity after predicate evaluation to make sure the correct set of ambig alts is reported.\n                this.reportAmbiguity(dfa, D, startIndex, stopIndex, false, alts, D.configs);\n                return alts.minValue();\n            }\n        }\n        previousD = D;\n\n        if (t !== Token.EOF) {\n            input.consume();\n            t = input.LA(1);\n        }\n    }\n};\n//\n// Get an existing target state for an edge in the DFA. If the target state\n// for the edge has not yet been computed or is otherwise not available,\n// this method returns {@code null}.\n//\n// @param previousD The current DFA state\n// @param t The next input symbol\n// @return The existing target DFA state for the given input symbol\n// {@code t}, or {@code null} if the target state for this edge is not\n// already cached\n//\nParserATNSimulator.prototype.getExistingTargetState = function(previousD, t) {\n    var edges = previousD.edges;\n    if (edges===null) {\n        return null;\n    } else {\n        return edges[t + 1] || null;\n    }\n};\n//\n// Compute a target state for an edge in the DFA, and attempt to add the\n// computed state and corresponding edge to the DFA.\n//\n// @param dfa The DFA\n// @param previousD The current DFA state\n// @param t The next input symbol\n//\n// @return The computed target DFA state for the given input symbol\n// {@code t}. If {@code t} does not lead to a valid DFA state, this method\n// returns {@link //ERROR}.\n//\nParserATNSimulator.prototype.computeTargetState = function(dfa, previousD, t) {\n   var reach = this.computeReachSet(previousD.configs, t, false);\n    if(reach===null) {\n        this.addDFAEdge(dfa, previousD, t, ATNSimulator.ERROR);\n        return ATNSimulator.ERROR;\n    }\n    // create new target state; we'll add to DFA after it's complete\n    var D = new DFAState(null, reach);\n\n    var predictedAlt = this.getUniqueAlt(reach);\n\n    if (this.debug) {\n        var altSubSets = PredictionMode.getConflictingAltSubsets(reach);\n        console.log(\"SLL altSubSets=\" + Utils.arrayToString(altSubSets) +\n                    \", previous=\" + previousD.configs +\n                    \", configs=\" + reach +\n                    \", predict=\" + predictedAlt +\n                    \", allSubsetsConflict=\" +\n                    PredictionMode.allSubsetsConflict(altSubSets) + \", conflictingAlts=\" +\n                    this.getConflictingAlts(reach));\n    }\n    if (predictedAlt!==ATN.INVALID_ALT_NUMBER) {\n        // NO CONFLICT, UNIQUELY PREDICTED ALT\n        D.isAcceptState = true;\n        D.configs.uniqueAlt = predictedAlt;\n        D.prediction = predictedAlt;\n    } else if (PredictionMode.hasSLLConflictTerminatingPrediction(this.predictionMode, reach)) {\n        // MORE THAN ONE VIABLE ALTERNATIVE\n        D.configs.conflictingAlts = this.getConflictingAlts(reach);\n        D.requiresFullContext = true;\n        // in SLL-only mode, we will stop at this state and return the minimum alt\n        D.isAcceptState = true;\n        D.prediction = D.configs.conflictingAlts.minValue();\n    }\n    if (D.isAcceptState && D.configs.hasSemanticContext) {\n        this.predicateDFAState(D, this.atn.getDecisionState(dfa.decision));\n        if( D.predicates!==null) {\n            D.prediction = ATN.INVALID_ALT_NUMBER;\n        }\n    }\n    // all adds to dfa are done after we've created full D state\n    D = this.addDFAEdge(dfa, previousD, t, D);\n    return D;\n};\n\nParserATNSimulator.prototype.predicateDFAState = function(dfaState, decisionState) {\n    // We need to test all predicates, even in DFA states that\n    // uniquely predict alternative.\n    var nalts = decisionState.transitions.length;\n    // Update DFA so reach becomes accept state with (predicate,alt)\n    // pairs if preds found for conflicting alts\n    var altsToCollectPredsFrom = this.getConflictingAltsOrUniqueAlt(dfaState.configs);\n    var altToPred = this.getPredsForAmbigAlts(altsToCollectPredsFrom, dfaState.configs, nalts);\n    if (altToPred!==null) {\n        dfaState.predicates = this.getPredicatePredictions(altsToCollectPredsFrom, altToPred);\n        dfaState.prediction = ATN.INVALID_ALT_NUMBER; // make sure we use preds\n    } else {\n        // There are preds in configs but they might go away\n        // when OR'd together like {p}? || NONE == NONE. If neither\n        // alt has preds, resolve to min alt\n        dfaState.prediction = altsToCollectPredsFrom.minValue();\n    }\n};\n\n// comes back with reach.uniqueAlt set to a valid alt\nParserATNSimulator.prototype.execATNWithFullContext = function(dfa, D, // how far we got before failing over\n                                     s0,\n                                     input,\n                                     startIndex,\n                                     outerContext) {\n    if (this.debug || this.debug_list_atn_decisions) {\n        console.log(\"execATNWithFullContext \"+s0);\n    }\n    var fullCtx = true;\n    var foundExactAmbig = false;\n    var reach = null;\n    var previous = s0;\n    input.seek(startIndex);\n    var t = input.LA(1);\n    var predictedAlt = -1;\n    while (true) { // while more work\n        reach = this.computeReachSet(previous, t, fullCtx);\n        if (reach===null) {\n            // if any configs in previous dipped into outer context, that\n            // means that input up to t actually finished entry rule\n            // at least for LL decision. Full LL doesn't dip into outer\n            // so don't need special case.\n            // We will get an error no matter what so delay until after\n            // decision; better error message. Also, no reachable target\n            // ATN states in SLL implies LL will also get nowhere.\n            // If conflict in states that dip out, choose min since we\n            // will get error no matter what.\n            var e = this.noViableAlt(input, outerContext, previous, startIndex);\n            input.seek(startIndex);\n            var alt = this.getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(previous, outerContext);\n            if(alt!==ATN.INVALID_ALT_NUMBER) {\n                return alt;\n            } else {\n                throw e;\n            }\n        }\n        var altSubSets = PredictionMode.getConflictingAltSubsets(reach);\n        if(this.debug) {\n            console.log(\"LL altSubSets=\" + altSubSets + \", predict=\" +\n                  PredictionMode.getUniqueAlt(altSubSets) + \", resolvesToJustOneViableAlt=\" +\n                  PredictionMode.resolvesToJustOneViableAlt(altSubSets));\n        }\n        reach.uniqueAlt = this.getUniqueAlt(reach);\n        // unique prediction?\n        if(reach.uniqueAlt!==ATN.INVALID_ALT_NUMBER) {\n            predictedAlt = reach.uniqueAlt;\n            break;\n        } else if (this.predictionMode !== PredictionMode.LL_EXACT_AMBIG_DETECTION) {\n            predictedAlt = PredictionMode.resolvesToJustOneViableAlt(altSubSets);\n            if(predictedAlt !== ATN.INVALID_ALT_NUMBER) {\n                break;\n            }\n        } else {\n            // In exact ambiguity mode, we never try to terminate early.\n            // Just keeps scarfing until we know what the conflict is\n            if (PredictionMode.allSubsetsConflict(altSubSets) && PredictionMode.allSubsetsEqual(altSubSets)) {\n                foundExactAmbig = true;\n                predictedAlt = PredictionMode.getSingleViableAlt(altSubSets);\n                break;\n            }\n            // else there are multiple non-conflicting subsets or\n            // we're not sure what the ambiguity is yet.\n            // So, keep going.\n        }\n        previous = reach;\n        if( t !== Token.EOF) {\n            input.consume();\n            t = input.LA(1);\n        }\n    }\n    // If the configuration set uniquely predicts an alternative,\n    // without conflict, then we know that it's a full LL decision\n    // not SLL.\n    if (reach.uniqueAlt !== ATN.INVALID_ALT_NUMBER ) {\n        this.reportContextSensitivity(dfa, predictedAlt, reach, startIndex, input.index);\n        return predictedAlt;\n    }\n    // We do not check predicates here because we have checked them\n    // on-the-fly when doing full context prediction.\n\n    //\n    // In non-exact ambiguity detection mode, we might\tactually be able to\n    // detect an exact ambiguity, but I'm not going to spend the cycles\n    // needed to check. We only emit ambiguity warnings in exact ambiguity\n    // mode.\n    //\n    // For example, we might know that we have conflicting configurations.\n    // But, that does not mean that there is no way forward without a\n    // conflict. It's possible to have nonconflicting alt subsets as in:\n\n    // altSubSets=[{1, 2}, {1, 2}, {1}, {1, 2}]\n\n    // from\n    //\n    //    [(17,1,[5 $]), (13,1,[5 10 $]), (21,1,[5 10 $]), (11,1,[$]),\n    //     (13,2,[5 10 $]), (21,2,[5 10 $]), (11,2,[$])]\n    //\n    // In this case, (17,1,[5 $]) indicates there is some next sequence that\n    // would resolve this without conflict to alternative 1. Any other viable\n    // next sequence, however, is associated with a conflict.  We stop\n    // looking for input because no amount of further lookahead will alter\n    // the fact that we should predict alternative 1.  We just can't say for\n    // sure that there is an ambiguity without looking further.\n\n    this.reportAmbiguity(dfa, D, startIndex, input.index, foundExactAmbig, null, reach);\n\n    return predictedAlt;\n};\n\nParserATNSimulator.prototype.computeReachSet = function(closure, t, fullCtx) {\n    if (this.debug) {\n        console.log(\"in computeReachSet, starting closure: \" + closure);\n    }\n    if( this.mergeCache===null) {\n        this.mergeCache = new DoubleDict();\n    }\n    var intermediate = new ATNConfigSet(fullCtx);\n\n    // Configurations already in a rule stop state indicate reaching the end\n    // of the decision rule (local context) or end of the start rule (full\n    // context). Once reached, these configurations are never updated by a\n    // closure operation, so they are handled separately for the performance\n    // advantage of having a smaller intermediate set when calling closure.\n    //\n    // For full-context reach operations, separate handling is required to\n    // ensure that the alternative matching the longest overall sequence is\n    // chosen when multiple such configurations can match the input.\n\n    var skippedStopStates = null;\n\n    // First figure out where we can reach on input t\n    for (var i=0; i<closure.items.length;i++) {\n        var c = closure.items[i];\n        if(this.debug_add) {\n            console.log(\"testing \" + this.getTokenName(t) + \" at \" + c);\n        }\n        if (c.state instanceof RuleStopState) {\n            if (fullCtx || t === Token.EOF) {\n                if (skippedStopStates===null) {\n                    skippedStopStates = [];\n                }\n                skippedStopStates.push(c);\n                if(this.debug_add) {\n                    console.log(\"added \" + c + \" to skippedStopStates\");\n                }\n            }\n            continue;\n        }\n        for(var j=0;j<c.state.transitions.length;j++) {\n            var trans = c.state.transitions[j];\n            var target = this.getReachableTarget(trans, t);\n            if (target!==null) {\n                var cfg = new ATNConfig({state:target}, c);\n                intermediate.add(cfg, this.mergeCache);\n                if(this.debug_add) {\n                    console.log(\"added \" + cfg + \" to intermediate\");\n                }\n            }\n        }\n    }\n    // Now figure out where the reach operation can take us...\n    var reach = null;\n\n    // This block optimizes the reach operation for intermediate sets which\n    // trivially indicate a termination state for the overall\n    // adaptivePredict operation.\n    //\n    // The conditions assume that intermediate\n    // contains all configurations relevant to the reach set, but this\n    // condition is not true when one or more configurations have been\n    // withheld in skippedStopStates, or when the current symbol is EOF.\n    //\n    if (skippedStopStates===null && t!==Token.EOF) {\n        if (intermediate.items.length===1) {\n            // Don't pursue the closure if there is just one state.\n            // It can only have one alternative; just add to result\n            // Also don't pursue the closure if there is unique alternative\n            // among the configurations.\n            reach = intermediate;\n        } else if (this.getUniqueAlt(intermediate)!==ATN.INVALID_ALT_NUMBER) {\n            // Also don't pursue the closure if there is unique alternative\n            // among the configurations.\n            reach = intermediate;\n        }\n    }\n    // If the reach set could not be trivially determined, perform a closure\n    // operation on the intermediate set to compute its initial value.\n    //\n    if (reach===null) {\n        reach = new ATNConfigSet(fullCtx);\n        var closureBusy = new Set();\n        var treatEofAsEpsilon = t === Token.EOF;\n        for (var k=0; k<intermediate.items.length;k++) {\n            this.closure(intermediate.items[k], reach, closureBusy, false, fullCtx, treatEofAsEpsilon);\n        }\n    }\n    if (t === Token.EOF) {\n        // After consuming EOF no additional input is possible, so we are\n        // only interested in configurations which reached the end of the\n        // decision rule (local context) or end of the start rule (full\n        // context). Update reach to contain only these configurations. This\n        // handles both explicit EOF transitions in the grammar and implicit\n        // EOF transitions following the end of the decision or start rule.\n        //\n        // When reach==intermediate, no closure operation was performed. In\n        // this case, removeAllConfigsNotInRuleStopState needs to check for\n        // reachable rule stop states as well as configurations already in\n        // a rule stop state.\n        //\n        // This is handled before the configurations in skippedStopStates,\n        // because any configurations potentially added from that list are\n        // already guaranteed to meet this condition whether or not it's\n        // required.\n        //\n        reach = this.removeAllConfigsNotInRuleStopState(reach, reach === intermediate);\n    }\n    // If skippedStopStates!==null, then it contains at least one\n    // configuration. For full-context reach operations, these\n    // configurations reached the end of the start rule, in which case we\n    // only add them back to reach if no configuration during the current\n    // closure operation reached such a state. This ensures adaptivePredict\n    // chooses an alternative matching the longest overall sequence when\n    // multiple alternatives are viable.\n    //\n    if (skippedStopStates!==null && ( (! fullCtx) || (! PredictionMode.hasConfigInRuleStopState(reach)))) {\n        for (var l=0; l<skippedStopStates.length;l++) {\n            reach.add(skippedStopStates[l], this.mergeCache);\n        }\n    }\n    if (reach.items.length===0) {\n        return null;\n    } else {\n        return reach;\n    }\n};\n//\n// Return a configuration set containing only the configurations from\n// {@code configs} which are in a {@link RuleStopState}. If all\n// configurations in {@code configs} are already in a rule stop state, this\n// method simply returns {@code configs}.\n//\n// <p>When {@code lookToEndOfRule} is true, this method uses\n// {@link ATN//nextTokens} for each configuration in {@code configs} which is\n// not already in a rule stop state to see if a rule stop state is reachable\n// from the configuration via epsilon-only transitions.</p>\n//\n// @param configs the configuration set to update\n// @param lookToEndOfRule when true, this method checks for rule stop states\n// reachable by epsilon-only transitions from each configuration in\n// {@code configs}.\n//\n// @return {@code configs} if all configurations in {@code configs} are in a\n// rule stop state, otherwise return a new configuration set containing only\n// the configurations from {@code configs} which are in a rule stop state\n//\nParserATNSimulator.prototype.removeAllConfigsNotInRuleStopState = function(configs, lookToEndOfRule) {\n    if (PredictionMode.allConfigsInRuleStopStates(configs)) {\n        return configs;\n    }\n    var result = new ATNConfigSet(configs.fullCtx);\n    for(var i=0; i<configs.items.length;i++) {\n        var config = configs.items[i];\n        if (config.state instanceof RuleStopState) {\n            result.add(config, this.mergeCache);\n            continue;\n        }\n        if (lookToEndOfRule && config.state.epsilonOnlyTransitions) {\n            var nextTokens = this.atn.nextTokens(config.state);\n            if (nextTokens.contains(Token.EPSILON)) {\n                var endOfRuleState = this.atn.ruleToStopState[config.state.ruleIndex];\n                result.add(new ATNConfig({state:endOfRuleState}, config), this.mergeCache);\n            }\n        }\n    }\n    return result;\n};\n\nParserATNSimulator.prototype.computeStartState = function(p, ctx, fullCtx) {\n    // always at least the implicit call to start rule\n    var initialContext = predictionContextFromRuleContext(this.atn, ctx);\n    var configs = new ATNConfigSet(fullCtx);\n    for(var i=0;i<p.transitions.length;i++) {\n        var target = p.transitions[i].target;\n        var c = new ATNConfig({ state:target, alt:i+1, context:initialContext }, null);\n        var closureBusy = new Set();\n        this.closure(c, configs, closureBusy, true, fullCtx, false);\n    }\n    return configs;\n};\n\n//\n// This method transforms the start state computed by\n// {@link //computeStartState} to the special start state used by a\n// precedence DFA for a particular precedence value. The transformation\n// process applies the following changes to the start state's configuration\n// set.\n//\n// <ol>\n// <li>Evaluate the precedence predicates for each configuration using\n// {@link SemanticContext//evalPrecedence}.</li>\n// <li>Remove all configurations which predict an alternative greater than\n// 1, for which another configuration that predicts alternative 1 is in the\n// same ATN state with the same prediction context. This transformation is\n// valid for the following reasons:\n// <ul>\n// <li>The closure block cannot contain any epsilon transitions which bypass\n// the body of the closure, so all states reachable via alternative 1 are\n// part of the precedence alternatives of the transformed left-recursive\n// rule.</li>\n// <li>The \"primary\" portion of a left recursive rule cannot contain an\n// epsilon transition, so the only way an alternative other than 1 can exist\n// in a state that is also reachable via alternative 1 is by nesting calls\n// to the left-recursive rule, with the outer calls not being at the\n// preferred precedence level.</li>\n// </ul>\n// </li>\n// </ol>\n//\n// <p>\n// The prediction context must be considered by this filter to address\n// situations like the following.\n// </p>\n// <code>\n// <pre>\n// grammar TA;\n// prog: statement* EOF;\n// statement: letterA | statement letterA 'b' ;\n// letterA: 'a';\n// </pre>\n// </code>\n// <p>\n// If the above grammar, the ATN state immediately before the token\n// reference {@code 'a'} in {@code letterA} is reachable from the left edge\n// of both the primary and closure blocks of the left-recursive rule\n// {@code statement}. The prediction context associated with each of these\n// configurations distinguishes between them, and prevents the alternative\n// which stepped out to {@code prog} (and then back in to {@code statement}\n// from being eliminated by the filter.\n// </p>\n//\n// @param configs The configuration set computed by\n// {@link //computeStartState} as the start state for the DFA.\n// @return The transformed configuration set representing the start state\n// for a precedence DFA at a particular precedence level (determined by\n// calling {@link Parser//getPrecedence}).\n//\nParserATNSimulator.prototype.applyPrecedenceFilter = function(configs) {\n\tvar config;\n\tvar statesFromAlt1 = [];\n    var configSet = new ATNConfigSet(configs.fullCtx);\n    for(var i=0; i<configs.items.length; i++) {\n        config = configs.items[i];\n        // handle alt 1 first\n        if (config.alt !== 1) {\n            continue;\n        }\n        var updatedContext = config.semanticContext.evalPrecedence(this.parser, this._outerContext);\n        if (updatedContext===null) {\n            // the configuration was eliminated\n            continue;\n        }\n        statesFromAlt1[config.state.stateNumber] = config.context;\n        if (updatedContext !== config.semanticContext) {\n            configSet.add(new ATNConfig({semanticContext:updatedContext}, config), this.mergeCache);\n        } else {\n            configSet.add(config, this.mergeCache);\n        }\n    }\n    for(i=0; i<configs.items.length; i++) {\n        config = configs.items[i];\n        if (config.alt === 1) {\n            // already handled\n            continue;\n        }\n        // In the future, this elimination step could be updated to also\n        // filter the prediction context for alternatives predicting alt>1\n        // (basically a graph subtraction algorithm).\n\t\tif (!config.precedenceFilterSuppressed) {\n            var context = statesFromAlt1[config.state.stateNumber] || null;\n            if (context!==null && context.equals(config.context)) {\n                // eliminated\n                continue;\n            }\n\t\t}\n        configSet.add(config, this.mergeCache);\n    }\n    return configSet;\n};\n\nParserATNSimulator.prototype.getReachableTarget = function(trans, ttype) {\n    if (trans.matches(ttype, 0, this.atn.maxTokenType)) {\n        return trans.target;\n    } else {\n        return null;\n    }\n};\n\nParserATNSimulator.prototype.getPredsForAmbigAlts = function(ambigAlts, configs, nalts) {\n    // REACH=[1|1|[]|0:0, 1|2|[]|0:1]\n    // altToPred starts as an array of all null contexts. The entry at index i\n    // corresponds to alternative i. altToPred[i] may have one of three values:\n    //   1. null: no ATNConfig c is found such that c.alt==i\n    //   2. SemanticContext.NONE: At least one ATNConfig c exists such that\n    //      c.alt==i and c.semanticContext==SemanticContext.NONE. In other words,\n    //      alt i has at least one unpredicated config.\n    //   3. Non-NONE Semantic Context: There exists at least one, and for all\n    //      ATNConfig c such that c.alt==i, c.semanticContext!=SemanticContext.NONE.\n    //\n    // From this, it is clear that NONE||anything==NONE.\n    //\n    var altToPred = [];\n    for(var i=0;i<configs.items.length;i++) {\n        var c = configs.items[i];\n        if(ambigAlts.contains( c.alt )) {\n            altToPred[c.alt] = SemanticContext.orContext(altToPred[c.alt] || null, c.semanticContext);\n        }\n    }\n    var nPredAlts = 0;\n    for (i =1;i< nalts+1;i++) {\n        var pred = altToPred[i] || null;\n        if (pred===null) {\n            altToPred[i] = SemanticContext.NONE;\n        } else if (pred !== SemanticContext.NONE) {\n            nPredAlts += 1;\n        }\n    }\n    // nonambig alts are null in altToPred\n    if (nPredAlts===0) {\n        altToPred = null;\n    }\n    if (this.debug) {\n        console.log(\"getPredsForAmbigAlts result \" + Utils.arrayToString(altToPred));\n    }\n    return altToPred;\n};\n\nParserATNSimulator.prototype.getPredicatePredictions = function(ambigAlts, altToPred) {\n    var pairs = [];\n    var containsPredicate = false;\n    for (var i=1; i<altToPred.length;i++) {\n        var pred = altToPred[i];\n        // unpredicated is indicated by SemanticContext.NONE\n        if( ambigAlts!==null && ambigAlts.contains( i )) {\n            pairs.push(new PredPrediction(pred, i));\n        }\n        if (pred !== SemanticContext.NONE) {\n            containsPredicate = true;\n        }\n    }\n    if (! containsPredicate) {\n        return null;\n    }\n    return pairs;\n};\n\n//\n// This method is used to improve the localization of error messages by\n// choosing an alternative rather than throwing a\n// {@link NoViableAltException} in particular prediction scenarios where the\n// {@link //ERROR} state was reached during ATN simulation.\n//\n// <p>\n// The default implementation of this method uses the following\n// algorithm to identify an ATN configuration which successfully parsed the\n// decision entry rule. Choosing such an alternative ensures that the\n// {@link ParserRuleContext} returned by the calling rule will be complete\n// and valid, and the syntax error will be reported later at a more\n// localized location.</p>\n//\n// <ul>\n// <li>If a syntactically valid path or paths reach the end of the decision rule and\n// they are semantically valid if predicated, return the min associated alt.</li>\n// <li>Else, if a semantically invalid but syntactically valid path exist\n// or paths exist, return the minimum associated alt.\n// </li>\n// <li>Otherwise, return {@link ATN//INVALID_ALT_NUMBER}.</li>\n// </ul>\n//\n// <p>\n// In some scenarios, the algorithm described above could predict an\n// alternative which will result in a {@link FailedPredicateException} in\n// the parser. Specifically, this could occur if the <em>only</em> configuration\n// capable of successfully parsing to the end of the decision rule is\n// blocked by a semantic predicate. By choosing this alternative within\n// {@link //adaptivePredict} instead of throwing a\n// {@link NoViableAltException}, the resulting\n// {@link FailedPredicateException} in the parser will identify the specific\n// predicate which is preventing the parser from successfully parsing the\n// decision rule, which helps developers identify and correct logic errors\n// in semantic predicates.\n// </p>\n//\n// @param configs The ATN configurations which were valid immediately before\n// the {@link //ERROR} state was reached\n// @param outerContext The is the \\gamma_0 initial parser context from the paper\n// or the parser stack at the instant before prediction commences.\n//\n// @return The value to return from {@link //adaptivePredict}, or\n// {@link ATN//INVALID_ALT_NUMBER} if a suitable alternative was not\n// identified and {@link //adaptivePredict} should report an error instead.\n//\nParserATNSimulator.prototype.getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule = function(configs, outerContext) {\n    var cfgs = this.splitAccordingToSemanticValidity(configs, outerContext);\n    var semValidConfigs = cfgs[0];\n    var semInvalidConfigs = cfgs[1];\n    var alt = this.getAltThatFinishedDecisionEntryRule(semValidConfigs);\n    if (alt!==ATN.INVALID_ALT_NUMBER) { // semantically/syntactically viable path exists\n        return alt;\n    }\n    // Is there a syntactically valid path with a failed pred?\n    if (semInvalidConfigs.items.length>0) {\n        alt = this.getAltThatFinishedDecisionEntryRule(semInvalidConfigs);\n        if (alt!==ATN.INVALID_ALT_NUMBER) { // syntactically viable path exists\n            return alt;\n        }\n    }\n    return ATN.INVALID_ALT_NUMBER;\n};\n\nParserATNSimulator.prototype.getAltThatFinishedDecisionEntryRule = function(configs) {\n    var alts = [];\n    for(var i=0;i<configs.items.length; i++) {\n        var c = configs.items[i];\n        if (c.reachesIntoOuterContext>0 || ((c.state instanceof RuleStopState) && c.context.hasEmptyPath())) {\n            if(alts.indexOf(c.alt)<0) {\n                alts.push(c.alt);\n            }\n        }\n    }\n    if (alts.length===0) {\n        return ATN.INVALID_ALT_NUMBER;\n    } else {\n        return Math.min.apply(null, alts);\n    }\n};\n// Walk the list of configurations and split them according to\n//  those that have preds evaluating to true/false.  If no pred, assume\n//  true pred and include in succeeded set.  Returns Pair of sets.\n//\n//  Create a new set so as not to alter the incoming parameter.\n//\n//  Assumption: the input stream has been restored to the starting point\n//  prediction, which is where predicates need to evaluate.\n//\nParserATNSimulator.prototype.splitAccordingToSemanticValidity = function( configs, outerContext) {\n    var succeeded = new ATNConfigSet(configs.fullCtx);\n    var failed = new ATNConfigSet(configs.fullCtx);\n    for(var i=0;i<configs.items.length; i++) {\n        var c = configs.items[i];\n        if (c.semanticContext !== SemanticContext.NONE) {\n            var predicateEvaluationResult = c.semanticContext.evaluate(this.parser, outerContext);\n            if (predicateEvaluationResult) {\n                succeeded.add(c);\n            } else {\n                failed.add(c);\n            }\n        } else {\n            succeeded.add(c);\n        }\n    }\n    return [succeeded, failed];\n};\n\n// Look through a list of predicate/alt pairs, returning alts for the\n//  pairs that win. A {@code NONE} predicate indicates an alt containing an\n//  unpredicated config which behaves as \"always true.\" If !complete\n//  then we stop at the first predicate that evaluates to true. This\n//  includes pairs with null predicates.\n//\nParserATNSimulator.prototype.evalSemanticContext = function(predPredictions, outerContext, complete) {\n    var predictions = new BitSet();\n    for(var i=0;i<predPredictions.length;i++) {\n    \tvar pair = predPredictions[i];\n        if (pair.pred === SemanticContext.NONE) {\n            predictions.add(pair.alt);\n            if (! complete) {\n                break;\n            }\n            continue;\n        }\n        var predicateEvaluationResult = pair.pred.evaluate(this.parser, outerContext);\n        if (this.debug || this.dfa_debug) {\n            console.log(\"eval pred \" + pair + \"=\" + predicateEvaluationResult);\n        }\n        if (predicateEvaluationResult) {\n            if (this.debug || this.dfa_debug) {\n                console.log(\"PREDICT \" + pair.alt);\n            }\n            predictions.add(pair.alt);\n            if (! complete) {\n                break;\n            }\n        }\n    }\n    return predictions;\n};\n\n// TODO: If we are doing predicates, there is no point in pursuing\n//     closure operations if we reach a DFA state that uniquely predicts\n//     alternative. We will not be caching that DFA state and it is a\n//     waste to pursue the closure. Might have to advance when we do\n//     ambig detection thought :(\n//\n\nParserATNSimulator.prototype.closure = function(config, configs, closureBusy, collectPredicates, fullCtx, treatEofAsEpsilon) {\n    var initialDepth = 0;\n    this.closureCheckingStopState(config, configs, closureBusy, collectPredicates,\n                             fullCtx, initialDepth, treatEofAsEpsilon);\n};\n\n\nParserATNSimulator.prototype.closureCheckingStopState = function(config, configs, closureBusy, collectPredicates, fullCtx, depth, treatEofAsEpsilon) {\n    if (this.debug || this.debug_closure) {\n        console.log(\"closure(\" + config.toString(this.parser,true) + \")\");\n        // console.log(\"configs(\" + configs.toString() + \")\");\n        if(config.reachesIntoOuterContext>50) {\n            throw \"problem\";\n        }\n    }\n    if (config.state instanceof RuleStopState) {\n        // We hit rule end. If we have context info, use it\n        // run thru all possible stack tops in ctx\n        if (! config.context.isEmpty()) {\n            for ( var i =0; i<config.context.length; i++) {\n                if (config.context.getReturnState(i) === PredictionContext.EMPTY_RETURN_STATE) {\n                    if (fullCtx) {\n                        configs.add(new ATNConfig({state:config.state, context:PredictionContext.EMPTY}, config), this.mergeCache);\n                        continue;\n                    } else {\n                        // we have no context info, just chase follow links (if greedy)\n                        if (this.debug) {\n                            console.log(\"FALLING off rule \" + this.getRuleName(config.state.ruleIndex));\n                        }\n                        this.closure_(config, configs, closureBusy, collectPredicates,\n                                 fullCtx, depth, treatEofAsEpsilon);\n                    }\n                    continue;\n                }\n                var returnState = this.atn.states[config.context.getReturnState(i)];\n                var newContext = config.context.getParent(i); // \"pop\" return state\n                var parms = {state:returnState, alt:config.alt, context:newContext, semanticContext:config.semanticContext};\n                var c = new ATNConfig(parms, null);\n                // While we have context to pop back from, we may have\n                // gotten that context AFTER having falling off a rule.\n                // Make sure we track that we are now out of context.\n                c.reachesIntoOuterContext = config.reachesIntoOuterContext;\n                this.closureCheckingStopState(c, configs, closureBusy, collectPredicates, fullCtx, depth - 1, treatEofAsEpsilon);\n            }\n            return;\n        } else if( fullCtx) {\n            // reached end of start rule\n            configs.add(config, this.mergeCache);\n            return;\n        } else {\n            // else if we have no context info, just chase follow links (if greedy)\n            if (this.debug) {\n                console.log(\"FALLING off rule \" + this.getRuleName(config.state.ruleIndex));\n            }\n        }\n    }\n    this.closure_(config, configs, closureBusy, collectPredicates, fullCtx, depth, treatEofAsEpsilon);\n};\n\n\n// Do the actual work of walking epsilon edges//\nParserATNSimulator.prototype.closure_ = function(config, configs, closureBusy, collectPredicates, fullCtx, depth, treatEofAsEpsilon) {\n    var p = config.state;\n    // optimization\n    if (! p.epsilonOnlyTransitions) {\n        configs.add(config, this.mergeCache);\n        // make sure to not return here, because EOF transitions can act as\n        // both epsilon transitions and non-epsilon transitions.\n    }\n    for(var i = 0;i<p.transitions.length; i++) {\n        if(i==0 && this.canDropLoopEntryEdgeInLeftRecursiveRule(config))\n            continue;\n\n        var t = p.transitions[i];\n        var continueCollecting = collectPredicates && !(t instanceof ActionTransition);\n        var c = this.getEpsilonTarget(config, t, continueCollecting, depth === 0, fullCtx, treatEofAsEpsilon);\n        if (c!==null) {\n\t\t\tif (!t.isEpsilon && closureBusy.add(c)!==c){\n\t\t\t\t// avoid infinite recursion for EOF* and EOF+\n\t\t\t\tcontinue;\n\t\t\t}\n            var newDepth = depth;\n            if ( config.state instanceof RuleStopState) {\n                // target fell off end of rule; mark resulting c as having dipped into outer context\n                // We can't get here if incoming config was rule stop and we had context\n                // track how far we dip into outer context.  Might\n                // come in handy and we avoid evaluating context dependent\n                // preds if this is > 0.\n\n                if (closureBusy.add(c)!==c) {\n                    // avoid infinite recursion for right-recursive rules\n                    continue;\n                }\n\n\t\t\t\tif (this._dfa !== null && this._dfa.precedenceDfa) {\n\t\t\t\t\tif (t.outermostPrecedenceReturn === this._dfa.atnStartState.ruleIndex) {\n\t\t\t\t\t\tc.precedenceFilterSuppressed = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n                c.reachesIntoOuterContext += 1;\n                configs.dipsIntoOuterContext = true; // TODO: can remove? only care when we add to set per middle of this method\n                newDepth -= 1;\n                if (this.debug) {\n                    console.log(\"dips into outer ctx: \" + c);\n                }\n            } else if (t instanceof RuleTransition) {\n                // latch when newDepth goes negative - once we step out of the entry context we can't return\n                if (newDepth >= 0) {\n                    newDepth += 1;\n                }\n            }\n            this.closureCheckingStopState(c, configs, closureBusy, continueCollecting, fullCtx, newDepth, treatEofAsEpsilon);\n        }\n    }\n};\n\n\nParserATNSimulator.prototype.canDropLoopEntryEdgeInLeftRecursiveRule = function(config) {\n    // return False\n    var p = config.state;\n    // First check to see if we are in StarLoopEntryState generated during\n    // left-recursion elimination. For efficiency, also check if\n    // the context has an empty stack case. If so, it would mean\n    // global FOLLOW so we can't perform optimization\n    // Are we the special loop entry/exit state? or SLL wildcard\n    if(p.stateType != ATNState.STAR_LOOP_ENTRY)\n        return false;\n    if(p.stateType != ATNState.STAR_LOOP_ENTRY || !p.isPrecedenceDecision ||\n           config.context.isEmpty() || config.context.hasEmptyPath())\n        return false;\n\n    // Require all return states to return back to the same rule that p is in.\n    var numCtxs = config.context.length;\n    for(var i=0; i<numCtxs; i++) { // for each stack context\n        var returnState = this.atn.states[config.context.getReturnState(i)];\n        if (returnState.ruleIndex != p.ruleIndex)\n            return false;\n    }\n\n    var decisionStartState = p.transitions[0].target;\n    var blockEndStateNum = decisionStartState.endState.stateNumber;\n    var blockEndState = this.atn.states[blockEndStateNum];\n\n    // Verify that the top of each stack context leads to loop entry/exit\n    // state through epsilon edges and w/o leaving rule.\n    for(var i=0; i<numCtxs; i++) { // for each stack context\n        var returnStateNumber = config.context.getReturnState(i);\n        var returnState = this.atn.states[returnStateNumber];\n        // all states must have single outgoing epsilon edge\n        if (returnState.transitions.length != 1 || !returnState.transitions[0].isEpsilon)\n            return false;\n\n        // Look for prefix op case like 'not expr', (' type ')' expr\n        var returnStateTarget = returnState.transitions[0].target;\n        if ( returnState.stateType == ATNState.BLOCK_END && returnStateTarget == p )\n            continue;\n\n        // Look for 'expr op expr' or case where expr's return state is block end\n        // of (...)* internal block; the block end points to loop back\n        // which points to p but we don't need to check that\n        if ( returnState == blockEndState )\n            continue;\n\n        // Look for ternary expr ? expr : expr. The return state points at block end,\n        // which points at loop entry state\n        if ( returnStateTarget == blockEndState )\n            continue;\n\n        // Look for complex prefix 'between expr and expr' case where 2nd expr's\n        // return state points at block end state of (...)* internal block\n        if (returnStateTarget.stateType == ATNState.BLOCK_END && returnStateTarget.transitions.length == 1\n                && returnStateTarget.transitions[0].isEpsilon && returnStateTarget.transitions[0].target == p)\n            continue;\n\n        // anything else ain't conforming\n        return false;\n    }\n    return true;\n};\n\n\nParserATNSimulator.prototype.getRuleName = function( index) {\n    if (this.parser!==null && index>=0) {\n        return this.parser.ruleNames[index];\n    } else {\n        return \"<rule \" + index + \">\";\n    }\n};\n\nParserATNSimulator.prototype.getEpsilonTarget = function(config, t, collectPredicates, inContext, fullCtx, treatEofAsEpsilon) {\n    switch(t.serializationType) {\n    case Transition.RULE:\n        return this.ruleTransition(config, t);\n    case Transition.PRECEDENCE:\n        return this.precedenceTransition(config, t, collectPredicates, inContext, fullCtx);\n    case Transition.PREDICATE:\n        return this.predTransition(config, t, collectPredicates, inContext, fullCtx);\n    case Transition.ACTION:\n        return this.actionTransition(config, t);\n    case Transition.EPSILON:\n        return new ATNConfig({state:t.target}, config);\n    case Transition.ATOM:\n    case Transition.RANGE:\n    case Transition.SET:\n        // EOF transitions act like epsilon transitions after the first EOF\n        // transition is traversed\n        if (treatEofAsEpsilon) {\n            if (t.matches(Token.EOF, 0, 1)) {\n                return new ATNConfig({state: t.target}, config);\n            }\n        }\n        return null;\n    default:\n    \treturn null;\n    }\n};\n\nParserATNSimulator.prototype.actionTransition = function(config, t) {\n    if (this.debug) {\n        var index = t.actionIndex==-1 ? 65535 : t.actionIndex;\n        console.log(\"ACTION edge \" + t.ruleIndex + \":\" + index);\n    }\n    return new ATNConfig({state:t.target}, config);\n};\n\nParserATNSimulator.prototype.precedenceTransition = function(config, pt,  collectPredicates, inContext, fullCtx) {\n    if (this.debug) {\n        console.log(\"PRED (collectPredicates=\" + collectPredicates + \") \" +\n                pt.precedence + \">=_p, ctx dependent=true\");\n        if (this.parser!==null) {\n        \tconsole.log(\"context surrounding pred is \" + Utils.arrayToString(this.parser.getRuleInvocationStack()));\n        }\n    }\n    var c = null;\n    if (collectPredicates && inContext) {\n        if (fullCtx) {\n            // In full context mode, we can evaluate predicates on-the-fly\n            // during closure, which dramatically reduces the size of\n            // the config sets. It also obviates the need to test predicates\n            // later during conflict resolution.\n            var currentPosition = this._input.index;\n            this._input.seek(this._startIndex);\n            var predSucceeds = pt.getPredicate().evaluate(this.parser, this._outerContext);\n            this._input.seek(currentPosition);\n            if (predSucceeds) {\n                c = new ATNConfig({state:pt.target}, config); // no pred context\n            }\n        } else {\n            var newSemCtx = SemanticContext.andContext(config.semanticContext, pt.getPredicate());\n            c = new ATNConfig({state:pt.target, semanticContext:newSemCtx}, config);\n        }\n    } else {\n        c = new ATNConfig({state:pt.target}, config);\n    }\n    if (this.debug) {\n        console.log(\"config from pred transition=\" + c);\n    }\n    return c;\n};\n\nParserATNSimulator.prototype.predTransition = function(config, pt, collectPredicates, inContext, fullCtx) {\n    if (this.debug) {\n        console.log(\"PRED (collectPredicates=\" + collectPredicates + \") \" + pt.ruleIndex +\n                \":\" + pt.predIndex + \", ctx dependent=\" + pt.isCtxDependent);\n        if (this.parser!==null) {\n            console.log(\"context surrounding pred is \" + Utils.arrayToString(this.parser.getRuleInvocationStack()));\n        }\n    }\n    var c = null;\n    if (collectPredicates && ((pt.isCtxDependent && inContext) || ! pt.isCtxDependent)) {\n        if (fullCtx) {\n            // In full context mode, we can evaluate predicates on-the-fly\n            // during closure, which dramatically reduces the size of\n            // the config sets. It also obviates the need to test predicates\n            // later during conflict resolution.\n            var currentPosition = this._input.index;\n            this._input.seek(this._startIndex);\n            var predSucceeds = pt.getPredicate().evaluate(this.parser, this._outerContext);\n            this._input.seek(currentPosition);\n            if (predSucceeds) {\n                c = new ATNConfig({state:pt.target}, config); // no pred context\n            }\n        } else {\n            var newSemCtx = SemanticContext.andContext(config.semanticContext, pt.getPredicate());\n            c = new ATNConfig({state:pt.target, semanticContext:newSemCtx}, config);\n        }\n    } else {\n        c = new ATNConfig({state:pt.target}, config);\n    }\n    if (this.debug) {\n        console.log(\"config from pred transition=\" + c);\n    }\n    return c;\n};\n\nParserATNSimulator.prototype.ruleTransition = function(config, t) {\n    if (this.debug) {\n        console.log(\"CALL rule \" + this.getRuleName(t.target.ruleIndex) + \", ctx=\" + config.context);\n    }\n    var returnState = t.followState;\n    var newContext = SingletonPredictionContext.create(config.context, returnState.stateNumber);\n    return new ATNConfig({state:t.target, context:newContext}, config );\n};\n\nParserATNSimulator.prototype.getConflictingAlts = function(configs) {\n    var altsets = PredictionMode.getConflictingAltSubsets(configs);\n    return PredictionMode.getAlts(altsets);\n};\n\n // Sam pointed out a problem with the previous definition, v3, of\n // ambiguous states. If we have another state associated with conflicting\n // alternatives, we should keep going. For example, the following grammar\n //\n // s : (ID | ID ID?) ';' ;\n //\n // When the ATN simulation reaches the state before ';', it has a DFA\n // state that looks like: [12|1|[], 6|2|[], 12|2|[]]. Naturally\n // 12|1|[] and 12|2|[] conflict, but we cannot stop processing this node\n // because alternative to has another way to continue, via [6|2|[]].\n // The key is that we have a single state that has config's only associated\n // with a single alternative, 2, and crucially the state transitions\n // among the configurations are all non-epsilon transitions. That means\n // we don't consider any conflicts that include alternative 2. So, we\n // ignore the conflict between alts 1 and 2. We ignore a set of\n // conflicting alts when there is an intersection with an alternative\n // associated with a single alt state in the state&rarr;config-list map.\n //\n // It's also the case that we might have two conflicting configurations but\n // also a 3rd nonconflicting configuration for a different alternative:\n // [1|1|[], 1|2|[], 8|3|[]]. This can come about from grammar:\n //\n // a : A | A | A B ;\n //\n // After matching input A, we reach the stop state for rule A, state 1.\n // State 8 is the state right before B. Clearly alternatives 1 and 2\n // conflict and no amount of further lookahead will separate the two.\n // However, alternative 3 will be able to continue and so we do not\n // stop working on this state. In the previous example, we're concerned\n // with states associated with the conflicting alternatives. Here alt\n // 3 is not associated with the conflicting configs, but since we can continue\n // looking for input reasonably, I don't declare the state done. We\n // ignore a set of conflicting alts when we have an alternative\n // that we still need to pursue.\n//\n\nParserATNSimulator.prototype.getConflictingAltsOrUniqueAlt = function(configs) {\n    var conflictingAlts = null;\n    if (configs.uniqueAlt!== ATN.INVALID_ALT_NUMBER) {\n        conflictingAlts = new BitSet();\n        conflictingAlts.add(configs.uniqueAlt);\n    } else {\n        conflictingAlts = configs.conflictingAlts;\n    }\n    return conflictingAlts;\n};\n\nParserATNSimulator.prototype.getTokenName = function( t) {\n    if (t===Token.EOF) {\n        return \"EOF\";\n    }\n    if( this.parser!==null && this.parser.literalNames!==null) {\n        if (t >= this.parser.literalNames.length && t >= this.parser.symbolicNames.length) {\n            console.log(\"\" + t + \" ttype out of range: \" + this.parser.literalNames);\n            console.log(\"\" + this.parser.getInputStream().getTokens());\n        } else {\n            var name = this.parser.literalNames[t] || this.parser.symbolicNames[t];\n            return name + \"<\" + t + \">\";\n        }\n    }\n    return \"\" + t;\n};\n\nParserATNSimulator.prototype.getLookaheadName = function(input) {\n    return this.getTokenName(input.LA(1));\n};\n\n// Used for debugging in adaptivePredict around execATN but I cut\n//  it out for clarity now that alg. works well. We can leave this\n//  \"dead\" code for a bit.\n//\nParserATNSimulator.prototype.dumpDeadEndConfigs = function(nvae) {\n    console.log(\"dead end configs: \");\n    var decs = nvae.getDeadEndConfigs();\n    for(var i=0; i<decs.length; i++) {\n    \tvar c = decs[i];\n        var trans = \"no edges\";\n        if (c.state.transitions.length>0) {\n            var t = c.state.transitions[0];\n            if (t instanceof AtomTransition) {\n                trans = \"Atom \"+ this.getTokenName(t.label);\n            } else if (t instanceof SetTransition) {\n                var neg = (t instanceof NotSetTransition);\n                trans = (neg ? \"~\" : \"\") + \"Set \" + t.set;\n            }\n        }\n        console.error(c.toString(this.parser, true) + \":\" + trans);\n    }\n};\n\nParserATNSimulator.prototype.noViableAlt = function(input, outerContext, configs, startIndex) {\n    return new NoViableAltException(this.parser, input, input.get(startIndex), input.LT(1), configs, outerContext);\n};\n\nParserATNSimulator.prototype.getUniqueAlt = function(configs) {\n    var alt = ATN.INVALID_ALT_NUMBER;\n    for(var i=0;i<configs.items.length;i++) {\n    \tvar c = configs.items[i];\n        if (alt === ATN.INVALID_ALT_NUMBER) {\n            alt = c.alt // found first alt\n        } else if( c.alt!==alt) {\n            return ATN.INVALID_ALT_NUMBER;\n        }\n    }\n    return alt;\n};\n\n//\n// Add an edge to the DFA, if possible. This method calls\n// {@link //addDFAState} to ensure the {@code to} state is present in the\n// DFA. If {@code from} is {@code null}, or if {@code t} is outside the\n// range of edges that can be represented in the DFA tables, this method\n// returns without adding the edge to the DFA.\n//\n// <p>If {@code to} is {@code null}, this method returns {@code null}.\n// Otherwise, this method returns the {@link DFAState} returned by calling\n// {@link //addDFAState} for the {@code to} state.</p>\n//\n// @param dfa The DFA\n// @param from The source state for the edge\n// @param t The input symbol\n// @param to The target state for the edge\n//\n// @return If {@code to} is {@code null}, this method returns {@code null};\n// otherwise this method returns the result of calling {@link //addDFAState}\n// on {@code to}\n//\nParserATNSimulator.prototype.addDFAEdge = function(dfa, from_, t, to) {\n    if( this.debug) {\n        console.log(\"EDGE \" + from_ + \" -> \" + to + \" upon \" + this.getTokenName(t));\n    }\n    if (to===null) {\n        return null;\n    }\n    to = this.addDFAState(dfa, to); // used existing if possible not incoming\n    if (from_===null || t < -1 || t > this.atn.maxTokenType) {\n        return to;\n    }\n    if (from_.edges===null) {\n        from_.edges = [];\n    }\n    from_.edges[t+1] = to; // connect\n\n    if (this.debug) {\n        var literalNames = this.parser===null ? null : this.parser.literalNames;\n        var symbolicNames = this.parser===null ? null : this.parser.symbolicNames;\n        console.log(\"DFA=\\n\" + dfa.toString(literalNames, symbolicNames));\n    }\n    return to;\n};\n//\n// Add state {@code D} to the DFA if it is not already present, and return\n// the actual instance stored in the DFA. If a state equivalent to {@code D}\n// is already in the DFA, the existing state is returned. Otherwise this\n// method returns {@code D} after adding it to the DFA.\n//\n// <p>If {@code D} is {@link //ERROR}, this method returns {@link //ERROR} and\n// does not change the DFA.</p>\n//\n// @param dfa The dfa\n// @param D The DFA state to add\n// @return The state stored in the DFA. This will be either the existing\n// state if {@code D} is already in the DFA, or {@code D} itself if the\n// state was not already present.\n//\nParserATNSimulator.prototype.addDFAState = function(dfa, D) {\n    if (D == ATNSimulator.ERROR) {\n        return D;\n    }\n    var existing = dfa.states.get(D);\n    if(existing!==null) {\n        return existing;\n    }\n    D.stateNumber = dfa.states.length;\n    if (! D.configs.readOnly) {\n        D.configs.optimizeConfigs(this);\n        D.configs.setReadonly(true);\n    }\n    dfa.states.add(D);\n    if (this.debug) {\n        console.log(\"adding new DFA state: \" + D);\n    }\n    return D;\n};\n\nParserATNSimulator.prototype.reportAttemptingFullContext = function(dfa, conflictingAlts, configs, startIndex, stopIndex) {\n    if (this.debug || this.retry_debug) {\n        var interval = new Interval(startIndex, stopIndex + 1);\n        console.log(\"reportAttemptingFullContext decision=\" + dfa.decision + \":\" + configs +\n                           \", input=\" + this.parser.getTokenStream().getText(interval));\n    }\n    if (this.parser!==null) {\n        this.parser.getErrorListenerDispatch().reportAttemptingFullContext(this.parser, dfa, startIndex, stopIndex, conflictingAlts, configs);\n    }\n};\n\nParserATNSimulator.prototype.reportContextSensitivity = function(dfa, prediction, configs, startIndex, stopIndex) {\n    if (this.debug || this.retry_debug) {\n        var interval = new Interval(startIndex, stopIndex + 1);\n        console.log(\"reportContextSensitivity decision=\" + dfa.decision + \":\" + configs +\n                           \", input=\" + this.parser.getTokenStream().getText(interval));\n    }\n    if (this.parser!==null) {\n        this.parser.getErrorListenerDispatch().reportContextSensitivity(this.parser, dfa, startIndex, stopIndex, prediction, configs);\n    }\n};\n\n// If context sensitive parsing, we know it's ambiguity not conflict//\nParserATNSimulator.prototype.reportAmbiguity = function(dfa, D, startIndex, stopIndex,\n                               exact, ambigAlts, configs ) {\n    if (this.debug || this.retry_debug) {\n        var interval = new Interval(startIndex, stopIndex + 1);\n        console.log(\"reportAmbiguity \" + ambigAlts + \":\" + configs +\n                           \", input=\" + this.parser.getTokenStream().getText(interval));\n    }\n    if (this.parser!==null) {\n        this.parser.getErrorListenerDispatch().reportAmbiguity(this.parser, dfa, startIndex, stopIndex, exact, ambigAlts, configs);\n    }\n};\n\nexports.ParserATNSimulator = ParserATNSimulator;\n\n/***/ }),\n\n/***/ \"/CDt\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar policyListener = __webpack_require__(\"1sgP\").policyListener;\nvar _ = __webpack_require__(\"rdLu\");\nvar indentLevel = 2;\n\nvar Beautify = function (_policyListener) {\n  _inherits(Beautify, _policyListener);\n\n  function Beautify() {\n    _classCallCheck(this, Beautify);\n\n    var _this = _possibleConstructorReturn(this, (Beautify.__proto__ || Object.getPrototypeOf(Beautify)).call(this));\n\n    _this.errorMsg = null;\n    _this.stringArray = [];\n    _this._nextIndent = ' ';\n    return _this;\n  }\n\n  _createClass(Beautify, [{\n    key: 'addIndent',\n    value: function addIndent() {\n      var _this2 = this;\n\n      _.each(_.range(indentLevel), function () {\n        _this2._nextIndent += \" \";\n      });\n    }\n  }, {\n    key: 'deleteIndent',\n    value: function deleteIndent() {\n      this._nextIndent = this._nextIndent.slice(0, Number('-' + indentLevel));\n    }\n  }, {\n    key: 'enterSegment',\n    value: function enterSegment(ctx) {\n      this.stringArray.push('\\n');\n      this.stringArray.push('For');\n    }\n  }, {\n    key: 'exitSegment',\n    value: function exitSegment(ctx) {\n      this.deleteIndent();\n    }\n  }, {\n    key: 'enterAudience_clause',\n    value: function enterAudience_clause(ctx) {\n      _.map(ctx.children, function (child) {\n        // this.stringArray.push(child.getText());\n        // console.log(child.getText());\n      });\n    }\n  }, {\n    key: 'enterAnd',\n    value: function enterAnd(ctx) {\n      this.stringArray.push('and');\n    }\n  }, {\n    key: 'exitAudience_clause',\n    value: function exitAudience_clause(ctx) {\n      this.stringArray.push('in the following states:');\n      this.addIndent();\n      this.stringArray.push(this._nextIndent);\n    }\n  }, {\n    key: 'enterState_clause',\n    value: function enterState_clause(ctx) {\n      this.stringArray.push('\\n');\n      this.stringArray.push(this._nextIndent);\n    }\n  }, {\n    key: 'enterCurrent_state_clause',\n    value: function enterCurrent_state_clause(ctx) {\n      var _this3 = this;\n\n      _.map(ctx.children, function (child) {\n        _this3.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterTarget_clause',\n    value: function enterTarget_clause(ctx) {\n      this.stringArray.push('\\n');\n      this.addIndent();\n      this.stringArray.push(this._nextIndent);\n      this.stringArray = this.stringArray.concat(['proceed to', ctx.ID().getText(), 'on']);\n    }\n  }, {\n    key: 'exitTarget_clause',\n    value: function exitTarget_clause() {\n      this.deleteIndent();\n    }\n  }, {\n    key: 'enterAccepting',\n    value: function enterAccepting(ctx) {\n      this.stringArray.push('accepting');\n    }\n  }, {\n    key: 'enterAnd_event',\n    value: function enterAnd_event(ctx) {\n      this.stringArray.push('and on');\n    }\n  }, {\n    key: 'enterPeriod_event',\n    value: function enterPeriod_event(ctx) {\n      var _this4 = this;\n\n      _.map(ctx.children, function (child) {\n        _this4.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterSpecific_date_event',\n    value: function enterSpecific_date_event(ctx) {\n      var _this5 = this;\n\n      _.map(ctx.children, function (child) {\n        _this5.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterRelative_date_event',\n    value: function enterRelative_date_event(ctx) {\n      var _this6 = this;\n\n      _.map(ctx.children, function (child) {\n        _this6.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterPricing_agreement_event',\n    value: function enterPricing_agreement_event(ctx) {\n      var _this7 = this;\n\n      _.map(ctx.children, function (child) {\n        _this7.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterTransaction_event',\n    value: function enterTransaction_event(ctx) {\n      var _this8 = this;\n\n      _.map(ctx.children, function (child) {\n        _this8.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterContract_guaranty',\n    value: function enterContract_guaranty(ctx) {\n      var _this9 = this;\n\n      _.map(ctx.children, function (child) {\n        _this9.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterPlatform_guaranty',\n    value: function enterPlatform_guaranty(ctx) {\n      var _this10 = this;\n\n      _.map(ctx.children, function (child) {\n        _this10.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterSigning_event',\n    value: function enterSigning_event(ctx) {\n      var _this11 = this;\n\n      _.map(ctx.children, function (child) {\n        _this11.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterSettlement_event',\n    value: function enterSettlement_event(ctx) {\n      var _this12 = this;\n\n      _.map(ctx.children, function (child) {\n        _this12.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterVisit_increment_event',\n    value: function enterVisit_increment_event(ctx) {\n      var _this13 = this;\n\n      _.map(ctx.children, function (child) {\n        _this13.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterVisit_event',\n    value: function enterVisit_event(ctx) {\n      var _this14 = this;\n\n      _.map(ctx.children, function (child) {\n        _this14.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterBalance_greater',\n    value: function enterBalance_greater(ctx) {\n      var _this15 = this;\n\n      _.map(ctx.children, function (child) {\n        _this15.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterBalance_smaller',\n    value: function enterBalance_smaller(ctx) {\n      var _this16 = this;\n\n      _.map(ctx.children, function (child) {\n        _this16.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterUsers',\n    value: function enterUsers(ctx) {\n      this.stringArray.push(ctx.getText());\n      // for (var i = 0; i < ctx.getChildCount(); i++) {\n      //   this.stringArray.push(ctx.getChild(i).getText());\n      // }\n    }\n  }, {\n    key: 'enterUser_groups',\n    value: function enterUser_groups(ctx) {\n      this.stringArray.push('users in');\n      for (var i = 0; i < ctx.getChildCount(); i++) {\n        this.stringArray.push(ctx.getChild(i).getText());\n      }\n    }\n  }, {\n    key: 'enterAthorize_token_clause',\n    value: function enterAthorize_token_clause(ctx) {\n      var _this17 = this;\n\n      this.stringArray.push('\\n');\n      this.stringArray.push(this._nextIndent);\n      _.map(ctx.children, function (child) {\n        _this17.stringArray.push(child.getText());\n      });\n    }\n  }]);\n\n  return Beautify;\n}(policyListener);\n\n;\n\nmodule.exports = Beautify;\n\n\n/***/ }),\n\n/***/ \"/Z+8\":\n/***/ (function(module, exports, __webpack_require__) {\n\n//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\n// Represents an executor for a sequence of lexer actions which traversed during\n// the matching operation of a lexer rule (token).\n//\n// <p>The executor tracks position information for position-dependent lexer actions\n// efficiently, ensuring that actions appearing only at the end of the rule do\n// not cause bloating of the {@link DFA} created for the lexer.</p>\n\nvar hashStuff = __webpack_require__(\"bz+k\").hashStuff;\nvar LexerIndexedCustomAction = __webpack_require__(\"J8R0\").LexerIndexedCustomAction;\n\nfunction LexerActionExecutor(lexerActions) {\n\tthis.lexerActions = lexerActions === null ? [] : lexerActions;\n\t// Caches the result of {@link //hashCode} since the hash code is an element\n\t// of the performance-critical {@link LexerATNConfig//hashCode} operation.\n\tthis.cachedHashCode = hashStuff(lexerActions); // \"\".join([str(la) for la in\n\t// lexerActions]))\n\treturn this;\n}\n\n// Creates a {@link LexerActionExecutor} which executes the actions for\n// the input {@code lexerActionExecutor} followed by a specified\n// {@code lexerAction}.\n//\n// @param lexerActionExecutor The executor for actions already traversed by\n// the lexer while matching a token within a particular\n// {@link LexerATNConfig}. If this is {@code null}, the method behaves as\n// though it were an empty executor.\n// @param lexerAction The lexer action to execute after the actions\n// specified in {@code lexerActionExecutor}.\n//\n// @return A {@link LexerActionExecutor} for executing the combine actions\n// of {@code lexerActionExecutor} and {@code lexerAction}.\nLexerActionExecutor.append = function(lexerActionExecutor, lexerAction) {\n\tif (lexerActionExecutor === null) {\n\t\treturn new LexerActionExecutor([ lexerAction ]);\n\t}\n\tvar lexerActions = lexerActionExecutor.lexerActions.concat([ lexerAction ]);\n\treturn new LexerActionExecutor(lexerActions);\n};\n\n// Creates a {@link LexerActionExecutor} which encodes the current offset\n// for position-dependent lexer actions.\n//\n// <p>Normally, when the executor encounters lexer actions where\n// {@link LexerAction//isPositionDependent} returns {@code true}, it calls\n// {@link IntStream//seek} on the input {@link CharStream} to set the input\n// position to the <em>end</em> of the current token. This behavior provides\n// for efficient DFA representation of lexer actions which appear at the end\n// of a lexer rule, even when the lexer rule matches a variable number of\n// characters.</p>\n//\n// <p>Prior to traversing a match transition in the ATN, the current offset\n// from the token start index is assigned to all position-dependent lexer\n// actions which have not already been assigned a fixed offset. By storing\n// the offsets relative to the token start index, the DFA representation of\n// lexer actions which appear in the middle of tokens remains efficient due\n// to sharing among tokens of the same length, regardless of their absolute\n// position in the input stream.</p>\n//\n// <p>If the current executor already has offsets assigned to all\n// position-dependent lexer actions, the method returns {@code this}.</p>\n//\n// @param offset The current offset to assign to all position-dependent\n// lexer actions which do not already have offsets assigned.\n//\n// @return A {@link LexerActionExecutor} which stores input stream offsets\n// for all position-dependent lexer actions.\n// /\nLexerActionExecutor.prototype.fixOffsetBeforeMatch = function(offset) {\n\tvar updatedLexerActions = null;\n\tfor (var i = 0; i < this.lexerActions.length; i++) {\n\t\tif (this.lexerActions[i].isPositionDependent &&\n\t\t\t\t!(this.lexerActions[i] instanceof LexerIndexedCustomAction)) {\n\t\t\tif (updatedLexerActions === null) {\n\t\t\t\tupdatedLexerActions = this.lexerActions.concat([]);\n\t\t\t}\n\t\t\tupdatedLexerActions[i] = new LexerIndexedCustomAction(offset,\n\t\t\t\t\tthis.lexerActions[i]);\n\t\t}\n\t}\n\tif (updatedLexerActions === null) {\n\t\treturn this;\n\t} else {\n\t\treturn new LexerActionExecutor(updatedLexerActions);\n\t}\n};\n\n// Execute the actions encapsulated by this executor within the context of a\n// particular {@link Lexer}.\n//\n// <p>This method calls {@link IntStream//seek} to set the position of the\n// {@code input} {@link CharStream} prior to calling\n// {@link LexerAction//execute} on a position-dependent action. Before the\n// method returns, the input position will be restored to the same position\n// it was in when the method was invoked.</p>\n//\n// @param lexer The lexer instance.\n// @param input The input stream which is the source for the current token.\n// When this method is called, the current {@link IntStream//index} for\n// {@code input} should be the start of the following token, i.e. 1\n// character past the end of the current token.\n// @param startIndex The token start index. This value may be passed to\n// {@link IntStream//seek} to set the {@code input} position to the beginning\n// of the token.\n// /\nLexerActionExecutor.prototype.execute = function(lexer, input, startIndex) {\n\tvar requiresSeek = false;\n\tvar stopIndex = input.index;\n\ttry {\n\t\tfor (var i = 0; i < this.lexerActions.length; i++) {\n\t\t\tvar lexerAction = this.lexerActions[i];\n\t\t\tif (lexerAction instanceof LexerIndexedCustomAction) {\n\t\t\t\tvar offset = lexerAction.offset;\n\t\t\t\tinput.seek(startIndex + offset);\n\t\t\t\tlexerAction = lexerAction.action;\n\t\t\t\trequiresSeek = (startIndex + offset) !== stopIndex;\n\t\t\t} else if (lexerAction.isPositionDependent) {\n\t\t\t\tinput.seek(stopIndex);\n\t\t\t\trequiresSeek = false;\n\t\t\t}\n\t\t\tlexerAction.execute(lexer);\n\t\t}\n\t} finally {\n\t\tif (requiresSeek) {\n\t\t\tinput.seek(stopIndex);\n\t\t}\n\t}\n};\n\nLexerActionExecutor.prototype.hashCode = function() {\n\treturn this.cachedHashCode;\n};\n\nLexerActionExecutor.prototype.updateHashCode = function(hash) {\n    hash.update(this.cachedHashCode);\n};\n\n\nLexerActionExecutor.prototype.equals = function(other) {\n\tif (this === other) {\n\t\treturn true;\n\t} else if (!(other instanceof LexerActionExecutor)) {\n\t\treturn false;\n\t} else if (this.cachedHashCode != other.cachedHashCode) {\n\t\treturn false;\n\t} else if (this.lexerActions.length != other.lexerActions.length) {\n\t\treturn false;\n\t} else {\n\t\tvar numActions = this.lexerActions.length\n\t\tfor (var idx = 0; idx < numActions; ++idx) {\n\t\t\tif (!this.lexerActions[idx].equals(other.lexerActions[idx])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n};\n\nexports.LexerActionExecutor = LexerActionExecutor;\n\n\n/***/ }),\n\n/***/ \"/qG2\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar policy = __webpack_require__(\"k2M1\");\nvar policyListener = policy.policyListener;\nvar underscore = __webpack_require__(\"rdLu\");\n\n//排列\npermute.permArr = [];\npermute.usedChars = [];\nfunction permute(input) {\n  var i = void 0,\n    ch = void 0;\n  for (i = 0; i < input.length; i++) {\n    ch = input.splice(i, 1)[0];\n    permute.usedChars.push(ch);\n    if (input.length == 0) {\n      permute.permArr.push(permute.usedChars.slice());\n    }\n    permute(input);\n    input.splice(i, 0, ch);\n    permute.usedChars.pop();\n  }\n  return permute.permArr;\n};\n//随机的中间态名称\nfunction genRandomStateName(evt1, evt2, evtName) {\n  return 'autoGenratedState_' + evt1 + '_' + evt2 + '_' + evtName + '_' + (new Date() * Math.random()).toString(36).substring(0, 4);\n};\n\nvar JSONGeneratorExtentionClass = function (_policyListener) {\n  _inherits(JSONGeneratorExtentionClass, _policyListener);\n\n  function JSONGeneratorExtentionClass() {\n    _classCallCheck(this, JSONGeneratorExtentionClass);\n\n    var _this = _possibleConstructorReturn(this, (JSONGeneratorExtentionClass.__proto__ || Object.getPrototypeOf(JSONGeneratorExtentionClass)).call(this));\n\n    _this.errorMsg = null;\n    _this.policy_segments = [];\n    return _this;\n  }\n\n  _createClass(JSONGeneratorExtentionClass, [{\n    key: 'enterP',\n    value: function enterP(ctx) {}\n  }, {\n    key: 'exitP',\n    value: function exitP(ctx) {}\n  }, {\n    key: 'enterStart_hour',\n    value: function enterStart_hour(ctx) {}\n  }, {\n    key: 'exitStart_hour',\n    value: function exitStart_hour(ctx) {}\n  }, {\n    key: 'enterEnd_hour',\n    value: function enterEnd_hour(ctx) {}\n  }, {\n    key: 'exitEnd_hour',\n    value: function exitEnd_hour(ctx) {}\n  }, {\n    key: 'enterSegment',\n    value: function enterSegment(ctx) {\n      //对应一个segment\n      ctx.segment_block = {\n        initialState: 'initial',\n        teminateState: 'terminate',\n        users: [], //暂时只有两种user，个人的和组的\n        states: [],\n        all_occured_states: [],\n        state_transition_table: []\n      };\n    }\n  }, {\n    key: 'exitSegment',\n    value: function exitSegment(ctx) {\n      // this.policy_segments.push(ctx.segment_block);\n    }\n  }, {\n    key: 'enterAudience_clause',\n\n    // 留给下简化版\n    // enterSettlement_clause (ctx) {};\n    // exitSettlement_clause (ctx) {\n    //   //settlement事件\n    //   let settlementForward = {\n    //     type: 'settlementForward',\n    //     params: [3, 'day'],\n    //     eventName: 'settlementForward_3_day'\n    //   };\n    //   let accountSettled = {\n    //     type: 'accountSettled',\n    //     params: [],\n    //     eventName: 'accountSettled'\n    //   };\n    //   //列出所有token states\n    //   let tokenStates = _.reduce( ctx.ID(), (x, y)=> {\n    //     return x.concat(y.getText())\n    //   }, []);\n    //   //获取对应的segment\n    //   let segment = this.policy_segments[this.policy_segments.length-1];\n    //   //检查tokens staets 是否已经出现,并且暂存一起来，如果pass验证，那么就concat进去了\n    //   let tempStates = [];\n    //   let statesOccured = _.every(tokenStates, (el)=> {\n    //     tempStates.push({\n    //       currentState: el,\n    //       event: settlementForward,\n    //       nextState: 'settlement'\n    //     });\n    //     tempStates.push({\n    //       currentState: 'settlement',\n    //       event: accountSettled,\n    //       nextState: el\n    //     });\n    //     return _.contains(segment.all_occured_states, el);\n    //   });\n    //   // //针对当前segment加入结算事件\n    //   if ( statesOccured ) {\n    //     Array.prototype.push.apply(this.policy_segments[this.policy_segments.length-1].state_transition_table, tempStates);\n    //   }\n    // };\n    value: function enterAudience_clause(ctx) {\n      ctx.segment_block = ctx.parentCtx.segment_block;\n    }\n  }, {\n    key: 'exitAudience_clause',\n    value: function exitAudience_clause(ctx) {\n      ctx.parentCtx.segment_block = ctx.segment_block;\n    }\n  }, {\n    key: 'enterAthorize_token_clause',\n    value: function enterAthorize_token_clause(ctx) {\n      ctx.segment_block = ctx.parentCtx.segment_block;\n      ctx.segment_block.activatedStates = [];\n      underscore.each(ctx.ID(), function (state) {\n        ctx.segment_block.activatedStates.push(state.getText());\n      });\n    }\n  }, {\n    key: 'exitAthorize_token_clause',\n    value: function exitAthorize_token_clause(ctx) {\n      this.policy_segments.push(ctx.segment_block);\n    }\n  }, {\n    key: 'enterAudience_individuals_clause',\n    value: function enterAudience_individuals_clause(ctx) {\n      ctx.segment_block = ctx.parentCtx.segment_block;\n      ctx.userObj = {};\n      ctx.userObj.userType = 'individuals';\n    }\n  }, {\n    key: 'exitAudience_individuals_clause',\n    value: function exitAudience_individuals_clause(ctx) {\n      ctx.segment_block.users.push(ctx.userObj);\n      ctx.parentCtx.segment_block = ctx.segment_block;\n    }\n  }, {\n    key: 'enterAudience_groups_clause',\n    value: function enterAudience_groups_clause(ctx) {\n      ctx.segment_block = ctx.parentCtx.segment_block;\n      ctx.userObj = {};\n      ctx.userObj.userType = 'groups';\n    }\n  }, {\n    key: 'exitAudience_groups_clause',\n    value: function exitAudience_groups_clause(ctx) {\n      ctx.segment_block.users.push(ctx.userObj);\n      ctx.parentCtx.segment_block = ctx.segment_block;\n    }\n  }, {\n    key: 'enterState_clause',\n    value: function enterState_clause(ctx) {\n      ctx.segment_block = ctx.parentCtx.segment_block;\n    }\n  }, {\n    key: 'exitState_clause',\n    value: function exitState_clause(ctx) {\n      ctx.parentCtx.segment_block = ctx.segment_block;\n    }\n  }, {\n    key: 'enterCurrent_state_clause',\n    value: function enterCurrent_state_clause(ctx) {\n      ctx.segment_block = ctx.parentCtx.segment_block;\n      ctx.segment_block.states.push(ctx.ID().getText());\n      ctx.segment_block.all_occured_states.push(ctx.ID().getText());\n      ctx.segment_block.all_occured_states = underscore.uniq(ctx.segment_block.all_occured_states);\n    }\n  }, {\n    key: 'exitCurrent_state_clause',\n    value: function exitCurrent_state_clause(ctx) {\n      ctx.parentCtx.segment_block = ctx.segment_block;\n    }\n  }, {\n    key: 'enterTarget_clause',\n    value: function enterTarget_clause(ctx) {\n      ctx.segment_block = ctx.parentCtx.segment_block;\n      //重置state\n      ctx.current_state = ctx.parentCtx.current_state_clause().ID().getText();\n      //next_state\n      ctx.next_state = ctx.ID().getText();\n      //重置event\n      ctx.events = [];\n    }\n  }, {\n    key: 'exitTarget_clause',\n\n\n    // Exit a parse tree produced by policyParser#target_clause.\n    value: function exitTarget_clause(ctx) {\n      var state_transition = void 0;\n      if (ctx.events.length > 1) {\n        state_transition = {\n          currentState: ctx.current_state,\n          event: {\n            type: 'compoundEvents',\n            params: ctx.events\n          },\n          nextState: ctx.next_state\n        };\n      } else {\n        state_transition = {\n          currentState: ctx.current_state,\n          event: ctx.events[0],\n          nextState: ctx.next_state\n        };\n      }\n      ctx.segment_block.state_transition_table.push(state_transition);\n      // //生成中间状态\n      // let tempCurrent = ctx.current_state;\n      // //permute当前events\n      // _.each(permute(ctx.events), (orderedEvts) => {\n      //   tempCurrent = ctx.current_state;\n      //   let path = [];\n      //   while (orderedEvts.length != 0) {\n      //     let event = orderedEvts.pop();\n      //     path.push(event.type);\n      //     let randomStateName = genRandomStateName(ctx.current_state, ctx.next_state,path.join('-'));\n      //     let state_transition = {\n      //       currentState: tempCurrent,\n      //       event: event,\n      //       nextState: ctx.next_state\n      //     };\n      //     if (orderedEvts.length != 0) {\n      //       state_transition.nextState = randomStateName;\n      //       tempCurrent = randomStateName;\n      //       ctx.segment_block.all_occured_states.push(randomStateName); //记录同一个起始state下面所有的target state及中间state\n      //     }\n      //     ctx.segment_block.state_transition_table.push(state_transition);\n      //   }\n      // });\n      //记录同一个curren_state 下的多个target\n      ctx.segment_block.all_occured_states.push(ctx.next_state);\n      ctx.segment_block.all_occured_states = underscore.uniq(ctx.segment_block.all_occured_states);\n      //回传\n      ctx.parentCtx.segment_block = ctx.segment_block;\n    }\n  }, {\n    key: 'enterEvent',\n    value: function enterEvent(ctx) {\n      ctx.events = ctx.parentCtx.events;\n    }\n  }, {\n    key: 'exitEvent',\n    value: function exitEvent(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterAnd_event',\n    value: function enterAnd_event(ctx) {\n      ctx.events = ctx.parentCtx.events;\n    }\n  }, {\n    key: 'exitAnd_event',\n    value: function exitAnd_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterPeriod_event',\n    value: function enterPeriod_event(ctx) {\n      var timeUnit = ctx.time_unit().getText();\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({\n        type: 'period',\n        params: [timeUnit],\n        eventName: 'period_' + timeUnit + '_event'\n      });\n    }\n  }, {\n    key: 'exitPeriod_event',\n    value: function exitPeriod_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterSpecific_date_event',\n    value: function enterSpecific_date_event(ctx) {\n      var date = ctx.DATE().getText();\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({\n        type: 'arrivalDate',\n        params: [1, date],\n        eventName: 'arrivalDate_1_' + date + '_event'\n      });\n    }\n  }, {\n    key: 'exitSpecific_date_event',\n    value: function exitSpecific_date_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterRelative_date_event',\n    value: function enterRelative_date_event(ctx) {\n      var day = Number(ctx.INT().getText());\n      var unit = ctx.time_unit().getText();\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({\n        type: 'arrivalDate',\n        params: [0, day, unit],\n        eventName: 'arrivalDate_0_' + day + '_' + unit + '_event'\n      });\n    }\n  }, {\n    key: 'exitRelative_date_event',\n    value: function exitRelative_date_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterPricing_agreement_event',\n    value: function enterPricing_agreement_event(ctx) {\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({\n        type: 'pricingAgreement',\n        params: [tbd],\n        eventName: 'pricingAgreement'\n      });\n    }\n  }, {\n    key: 'exitPricing_agreement_event',\n    value: function exitPricing_agreement_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterTransaction_event',\n    value: function enterTransaction_event(ctx) {\n      var transactionAmount = Number(ctx.INT().getText());\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({\n        type: 'transaction',\n        params: ['userId', transactionAmount],\n        eventName: 'transaction_userid_' + transactionAmount\n      });\n    }\n  }, {\n    key: 'exitTransaction_event',\n    value: function exitTransaction_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterSigning_event',\n    value: function enterSigning_event(ctx) {\n      ctx.events = ctx.parentCtx.events;\n      var tempLicenseIds = [];\n      underscore.each(ctx.license_resource_id(), function (licensId) {\n        tempLicenseIds.push(licensId.getText());\n      });\n      ctx.events.push({\n        type: 'signing',\n        params: tempLicenseIds,\n        eventName: 'signing_' + tempLicenseIds.join('_')\n      });\n    }\n  }, {\n    key: 'exitSigning_event',\n    value: function exitSigning_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterGuaranty_event',\n    value: function enterGuaranty_event(ctx) {\n      ctx.events = ctx.parentCtx.events;\n    }\n  }, {\n    key: 'exitGuaranty_event',\n    value: function exitGuaranty_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterContract_guaranty',\n    value: function enterContract_guaranty(ctx) {\n      var amount = ctx.INT()[0].getText();\n      var day = ctx.INT()[1].getText();\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({\n        type: 'contractGuaranty',\n        params: [amount, day, 'day'],\n        eventName: 'contractGuaranty_' + amount + '_' + day + '_event'\n      });\n    }\n  }, {\n    key: 'exitContract_guaranty',\n    value: function exitContract_guaranty(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterPlatform_guaranty',\n    value: function enterPlatform_guaranty(ctx) {\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({\n        type: 'platformGuaranty',\n        params: [Number(ctx.INT().getText())],\n        eventName: 'platformGuaranty'\n      });\n    }\n  }, {\n    key: 'exitPlatform_guaranty',\n    value: function exitPlatform_guaranty(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterSettlement_event',\n    value: function enterSettlement_event(ctx) {\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({\n        type: 'accountSettled',\n        params: []\n      });\n    }\n  }, {\n    key: 'exitSettlement_event',\n    value: function exitSettlement_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterAccess_count_event',\n    value: function enterAccess_count_event(ctx) {\n      ctx.events = ctx.parentCtx.events;\n    }\n  }, {\n    key: 'exitAccess_count_event',\n    value: function exitAccess_count_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterVisit_increment_event',\n    value: function enterVisit_increment_event(ctx) {\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({\n        type: 'accessCountIncrement',\n        params: [Number(ctx.INT().getText())]\n      });\n    }\n  }, {\n    key: 'exitVisit_increment_event',\n\n\n    // Exit a parse tree produced by policyParser#visit_increment_event.\n    value: function exitVisit_increment_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterVisit_event',\n    value: function enterVisit_event(ctx) {\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({\n        type: 'accessCount',\n        params: [Number(ctx.INT().getText())]\n      });\n    }\n  }, {\n    key: 'exitVisit_event',\n    value: function exitVisit_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterBalance_event',\n    value: function enterBalance_event(ctx) {\n      ctx.events = ctx.parentCtx.events;\n    }\n  }, {\n    key: 'exitBalance_event',\n    value: function exitBalance_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterBalance_greater',\n\n\n    // Enter a parse tree produced by policyParser#balance_greater.\n    value: function enterBalance_greater(ctx) {\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({ type: 'balance_smaller_event', params: ctx.getText() });\n    }\n  }, {\n    key: 'exitBalance_greater',\n    value: function exitBalance_greater(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterBalance_smaller',\n    value: function enterBalance_smaller(ctx) {\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({ type: 'balance_greater_event', params: ctx.getText() });\n    }\n  }, {\n    key: 'exitBalance_smaller',\n    value: function exitBalance_smaller(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterTime_unit',\n    value: function enterTime_unit(ctx) {}\n  }, {\n    key: 'exitTime_unit',\n    value: function exitTime_unit(ctx) {}\n  }, {\n    key: 'enterState',\n    value: function enterState(ctx) {}\n  }, {\n    key: 'exitState',\n    value: function exitState(ctx) {}\n  }, {\n    key: 'enterLicense_resource_id',\n    value: function enterLicense_resource_id(ctx) {}\n  }, {\n    key: 'exitLicense_resource_id',\n    value: function exitLicense_resource_id(ctx) {}\n  }, {\n    key: 'enterUsers',\n    value: function enterUsers(ctx) {\n      //继承\n      ctx.userObj = ctx.parentCtx.userObj;\n      //新增users\n      ctx.userObj.users = ctx.userObj.users || [];\n      for (var i = 0; i < ctx.getChildCount(); i++) {\n        if (ctx.getChild(i).getText() != ',') {\n          //修改\n          ctx.userObj.users.push(ctx.getChild(i).getText());\n        }\n      }\n    }\n  }, {\n    key: 'exitUsers',\n    value: function exitUsers(ctx) {\n      //回传\n      ctx.parentCtx.userObj = ctx.userObj;\n    }\n  }, {\n    key: 'enterUser_groups',\n    value: function enterUser_groups(ctx) {\n      //继承\n      ctx.userObj = ctx.parentCtx.userObj;\n      //新增users\n      ctx.userObj.users = ctx.userObj.users || [];\n      for (var i = 0; i < ctx.getChildCount(); i++) {\n        if (ctx.getChild(i).getText() != ',') {\n          ctx.userObj.users.push(ctx.getChild(i).getText());\n        }\n      }\n    }\n  }, {\n    key: 'exitUser_groups',\n    value: function exitUser_groups(ctx) {\n      //回传\n      ctx.parentCtx.userObj = ctx.userObj;\n    }\n  }]);\n\n  return JSONGeneratorExtentionClass;\n}(policyListener);\n\n;\n\nmodule.exports = JSONGeneratorExtentionClass;\n\n\n/***/ }),\n\n/***/ \"/qoj\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"presentable-steps\"},[_c('el-steps',{attrs:{\"space\":300,\"active\":_vm.active,\"process-status\":_vm.processStatus,\"finish-status\":_vm.finishStatus,\"align-center\":\"\"}},[_c('el-step',{attrs:{\"title\":\"创建合同\",\"description\":\"与资源作者签订资源使用策略\"}}),_vm._v(\" \"),_c('el-step',{attrs:{\"title\":\"创建user policy\",\"description\":\"制定用户查看Presentable的策略\"}}),_vm._v(\" \"),_c('el-step',{attrs:{\"title\":\"完成\",\"description\":\"成功创建Presentable\"}})],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ \"/tJ5\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(\"pNox\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(\"rjj0\")(\"61d84127\", content, true);\n\n/***/ }),\n\n/***/ \"0AMZ\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_index_vue__ = __webpack_require__(\"Zapo\");\n/* unused harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_b9e66b48_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_index_vue__ = __webpack_require__(\"/qoj\");\nfunction injectStyle (ssrContext) {\n  __webpack_require__(\"xs1j\")\n}\nvar normalizeComponent = __webpack_require__(\"VU/8\")\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-b9e66b48\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_index_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_b9e66b48_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_index_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ \"13lD\":\n/***/ (function(module, exports) {\n\n/*! https://mths.be/codepointat v0.2.0 by @mathias */\nif (!String.prototype.codePointAt) {\n\t(function() {\n\t\t'use strict'; // needed to support `apply`/`call` with `undefined`/`null`\n\t\tvar defineProperty = (function() {\n\t\t\t// IE 8 only supports `Object.defineProperty` on DOM elements\n\t\t\ttry {\n\t\t\t\tvar object = {};\n\t\t\t\tvar $defineProperty = Object.defineProperty;\n\t\t\t\tvar result = $defineProperty(object, object, object) && $defineProperty;\n\t\t\t} catch(error) {}\n\t\t\treturn result;\n\t\t}());\n\t\tvar codePointAt = function(position) {\n\t\t\tif (this == null) {\n\t\t\t\tthrow TypeError();\n\t\t\t}\n\t\t\tvar string = String(this);\n\t\t\tvar size = string.length;\n\t\t\t// `ToInteger`\n\t\t\tvar index = position ? Number(position) : 0;\n\t\t\tif (index != index) { // better `isNaN`\n\t\t\t\tindex = 0;\n\t\t\t}\n\t\t\t// Account for out-of-bounds indices:\n\t\t\tif (index < 0 || index >= size) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\t// Get the first code unit\n\t\t\tvar first = string.charCodeAt(index);\n\t\t\tvar second;\n\t\t\tif ( // check if it’s the start of a surrogate pair\n\t\t\t\tfirst >= 0xD800 && first <= 0xDBFF && // high surrogate\n\t\t\t\tsize > index + 1 // there is a next code unit\n\t\t\t) {\n\t\t\t\tsecond = string.charCodeAt(index + 1);\n\t\t\t\tif (second >= 0xDC00 && second <= 0xDFFF) { // low surrogate\n\t\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\t\treturn (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn first;\n\t\t};\n\t\tif (defineProperty) {\n\t\t\tdefineProperty(String.prototype, 'codePointAt', {\n\t\t\t\t'value': codePointAt,\n\t\t\t\t'configurable': true,\n\t\t\t\t'writable': true\n\t\t\t});\n\t\t} else {\n\t\t\tString.prototype.codePointAt = codePointAt;\n\t\t}\n\t}());\n}\n\n\n/***/ }),\n\n/***/ \"1G+u\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_index_vue__ = __webpack_require__(\"rQCC\");\n/* unused harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_361849fa_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_index_vue__ = __webpack_require__(\"5b3W\");\nfunction injectStyle (ssrContext) {\n  __webpack_require__(\"LoYW\")\n}\nvar normalizeComponent = __webpack_require__(\"VU/8\")\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-361849fa\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_index_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_361849fa_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_index_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ \"1alW\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// 20.1.2.3 Number.isInteger(number)\nvar $export = __webpack_require__(\"kM2E\");\n\n$export($export.S, 'Number', { isInteger: __webpack_require__(\"AKgy\") });\n\n\n/***/ }),\n\n/***/ \"1sgP\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports.policyLexer = __webpack_require__(\"ucRY\").policyLexer;\r\nexports.policyParser = __webpack_require__(\"Lrau\").policyParser;\r\nexports.policyListener = __webpack_require__(\"Smw7\").policyListener\r\n\n\n/***/ }),\n\n/***/ \"2EdO\":\n/***/ (function(module, exports, __webpack_require__) {\n\n//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\nvar Token = __webpack_require__(\"j/5l\").Token;\nvar ConsoleErrorListener = __webpack_require__(\"qFmK\").ConsoleErrorListener;\nvar ProxyErrorListener = __webpack_require__(\"qFmK\").ProxyErrorListener;\n\nfunction Recognizer() {\n    this._listeners = [ ConsoleErrorListener.INSTANCE ];\n    this._interp = null;\n    this._stateNumber = -1;\n    return this;\n}\n\nRecognizer.tokenTypeMapCache = {};\nRecognizer.ruleIndexMapCache = {};\n\n\nRecognizer.prototype.checkVersion = function(toolVersion) {\n    var runtimeVersion = \"4.7.1\";\n    if (runtimeVersion!==toolVersion) {\n        console.log(\"ANTLR runtime and generated code versions disagree: \"+runtimeVersion+\"!=\"+toolVersion);\n    }\n};\n\nRecognizer.prototype.addErrorListener = function(listener) {\n    this._listeners.push(listener);\n};\n\nRecognizer.prototype.removeErrorListeners = function() {\n    this._listeners = [];\n};\n\nRecognizer.prototype.getTokenTypeMap = function() {\n    var tokenNames = this.getTokenNames();\n    if (tokenNames===null) {\n        throw(\"The current recognizer does not provide a list of token names.\");\n    }\n    var result = this.tokenTypeMapCache[tokenNames];\n    if(result===undefined) {\n        result = tokenNames.reduce(function(o, k, i) { o[k] = i; });\n        result.EOF = Token.EOF;\n        this.tokenTypeMapCache[tokenNames] = result;\n    }\n    return result;\n};\n\n// Get a map from rule names to rule indexes.\n//\n// <p>Used for XPath and tree pattern compilation.</p>\n//\nRecognizer.prototype.getRuleIndexMap = function() {\n    var ruleNames = this.ruleNames;\n    if (ruleNames===null) {\n        throw(\"The current recognizer does not provide a list of rule names.\");\n    }\n    var result = this.ruleIndexMapCache[ruleNames];\n    if(result===undefined) {\n        result = ruleNames.reduce(function(o, k, i) { o[k] = i; });\n        this.ruleIndexMapCache[ruleNames] = result;\n    }\n    return result;\n};\n\nRecognizer.prototype.getTokenType = function(tokenName) {\n    var ttype = this.getTokenTypeMap()[tokenName];\n    if (ttype !==undefined) {\n        return ttype;\n    } else {\n        return Token.INVALID_TYPE;\n    }\n};\n\n\n// What is the error header, normally line/character position information?//\nRecognizer.prototype.getErrorHeader = function(e) {\n    var line = e.getOffendingToken().line;\n    var column = e.getOffendingToken().column;\n    return \"line \" + line + \":\" + column;\n};\n\n\n// How should a token be displayed in an error message? The default\n//  is to display just the text, but during development you might\n//  want to have a lot of information spit out.  Override in that case\n//  to use t.toString() (which, for CommonToken, dumps everything about\n//  the token). This is better than forcing you to override a method in\n//  your token objects because you don't have to go modify your lexer\n//  so that it creates a new Java type.\n//\n// @deprecated This method is not called by the ANTLR 4 Runtime. Specific\n// implementations of {@link ANTLRErrorStrategy} may provide a similar\n// feature when necessary. For example, see\n// {@link DefaultErrorStrategy//getTokenErrorDisplay}.\n//\nRecognizer.prototype.getTokenErrorDisplay = function(t) {\n    if (t===null) {\n        return \"<no token>\";\n    }\n    var s = t.text;\n    if (s===null) {\n        if (t.type===Token.EOF) {\n            s = \"<EOF>\";\n        } else {\n            s = \"<\" + t.type + \">\";\n        }\n    }\n    s = s.replace(\"\\n\",\"\\\\n\").replace(\"\\r\",\"\\\\r\").replace(\"\\t\",\"\\\\t\");\n    return \"'\" + s + \"'\";\n};\n\nRecognizer.prototype.getErrorListenerDispatch = function() {\n    return new ProxyErrorListener(this._listeners);\n};\n\n// subclass needs to override these if there are sempreds or actions\n// that the ATN interp needs to execute\nRecognizer.prototype.sempred = function(localctx, ruleIndex, actionIndex) {\n    return true;\n};\n\nRecognizer.prototype.precpred = function(localctx , precedence) {\n    return true;\n};\n\n//Indicate that the recognizer has changed internal state that is\n//consistent with the ATN state passed in.  This way we always know\n//where we are in the ATN as the parser goes along. The rule\n//context objects form a stack that lets us see the stack of\n//invoking rules. Combine this and we have complete ATN\n//configuration information.\n\nObject.defineProperty(Recognizer.prototype, \"state\", {\n\tget : function() {\n\t\treturn this._stateNumber;\n\t},\n\tset : function(state) {\n\t\tthis._stateNumber = state;\n\t}\n});\n\n\nexports.Recognizer = Recognizer;\n\n\n/***/ }),\n\n/***/ \"2LyA\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[(!_vm.detail.presentableId)?_c('presentable-steps',{staticClass:\"presentable-steps\",attrs:{\"active\":1}}):_vm._e(),_vm._v(\" \"),_c('el-tabs',{attrs:{\"tab-position\":_vm.tabPosition},model:{value:(_vm.activeTabName),callback:function ($$v) {_vm.activeTabName=$$v},expression:\"activeTabName\"}},[_c('el-tab-pane',{attrs:{\"label\":\"资源详情\",\"name\":\"resource\"}},[(_vm.detail._resourceDetail)?_c('ul',{staticClass:\"p-detail\"},[_c('li',[_c('label',{staticClass:\"item-title\"},[_vm._v(\"resource Id\")]),_vm._v(\" \"),_c('span',{staticClass:\"item-detail\"},[_vm._v(_vm._s(_vm.detail._resourceDetail.resourceId))])]),_vm._v(\" \"),_c('li',[_c('label',{staticClass:\"item-title\"},[_vm._v(\"resource name\")]),_vm._v(\" \"),_c('span',{staticClass:\"item-detail\"},[_vm._v(_vm._s(_vm.detail._resourceDetail.resourceName))])]),_vm._v(\" \"),_c('li',[_c('label',{staticClass:\"item-title\"},[_vm._v(\"resource type\")]),_vm._v(\" \"),_c('span',{staticClass:\"item-detail\"},[_vm._v(_vm._s(_vm.detail._resourceDetail.resourceType))])]),_vm._v(\" \"),_c('li',[_c('label',{staticClass:\"item-title\"},[_vm._v(\"status\")]),_vm._v(\" \"),_c('span',{staticClass:\"item-detail\"},[_vm._v(_vm._s(_vm.detail._resourceDetail.status))])]),_vm._v(\" \"),_c('li',[_c('label',{staticClass:\"item-title\"},[_vm._v(\"author\")]),_vm._v(\" \"),_c('span',{staticClass:\"item-detail\"},[_vm._v(_vm._s(_vm.detail._resourceDetail.userId))])]),_vm._v(\" \"),_c('li',[_c('label',{staticClass:\"item-title\"},[_vm._v(\"create date\")]),_vm._v(\" \"),_c('span',{staticClass:\"item-detail\"},[_vm._v(_vm._s(_vm._f(\"fmtDate\")(_vm.detail._resourceDetail.createDate)))])])]):_vm._e()]),_vm._v(\" \"),_c('el-tab-pane',{attrs:{\"label\":\"presentable 详情\",\"name\":\"presentable\"}},[(_vm.detail.presentableId)?_c('div',[_c('ul',{staticClass:\"p-detail\"},[_c('li',[_c('label',{staticClass:\"item-title\"},[_vm._v(\"presentable Id\")]),_vm._v(\" \"),_c('span',{staticClass:\"item-detail\"},[_vm._v(_vm._s(_vm.detail.presentableId))])]),_vm._v(\" \"),_c('li',[_c('label',{staticClass:\"item-title\"},[_vm._v(\"create date\")]),_vm._v(\" \"),_c('span',{staticClass:\"item-detail\"},[_vm._v(_vm._s(_vm._f(\"fmtDate\")(_vm.detail.createDate)))])]),_vm._v(\" \"),_c('li',[_c('label',{staticClass:\"item-title\"},[_vm._v(\"presentable name\")]),_vm._v(\" \"),_c('span',{staticClass:\"item-detail\"},[_c('el-input',{model:{value:(_vm.detail.name),callback:function ($$v) {_vm.$set(_vm.detail, \"name\", $$v)},expression:\"detail.name\"}})],1)]),_vm._v(\" \"),_c('li',[_c('label',{staticClass:\"item-title\"},[_vm._v(\"tags\")]),_vm._v(\" \"),_c('div',{staticClass:\"item-detail\"},[_c('presentable-tags',{model:{value:(_vm.detail.tagInfo.userDefined),callback:function ($$v) {_vm.$set(_vm.detail.tagInfo, \"userDefined\", $$v)},expression:\"detail.tagInfo.userDefined\"}})],1)]),_vm._v(\" \"),_c('li',[_c('label',{staticClass:\"item-title\"},[_vm._v(\"use policy\")]),_vm._v(\" \"),_c('div',{staticClass:\"item-detail\",staticStyle:{\"width\":\"500px\"}},[_c('presentable-policy',{model:{value:(_vm.detail._formatSegmentText),callback:function ($$v) {_vm.$set(_vm.detail, \"_formatSegmentText\", $$v)},expression:\"detail._formatSegmentText\"}})],1)]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.updatePresentableHandler}},[_vm._v(\"更新presentable\")])],1)]):_c('div',{staticClass:\"uncreated-policy-tip\"},[_vm._v(\"\\n        还未创建user policy\\n        \"),_c('el-button',{on:{\"click\":_vm.updatePresentableHandler}},[_vm._v(\"创建\")])],1)]),_vm._v(\" \"),_c('el-tab-pane',{attrs:{\"label\":\"合同详情\",\"name\":\"contract\"}},[_c('presentable-contract-detail',{attrs:{\"contractDetail\":_vm.detail._contractDetail}})],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ \"2uFj\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__ = __webpack_require__(\"Dd8w\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__contract__ = __webpack_require__(\"kIFb\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__resource__ = __webpack_require__(\"aqfl\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__presentable__ = __webpack_require__(\"dVol\");\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default()({}, __WEBPACK_IMPORTED_MODULE_1__contract__, __WEBPACK_IMPORTED_MODULE_2__resource__, __WEBPACK_IMPORTED_MODULE_3__presentable__));\n\n/***/ }),\n\n/***/ \"3Rtt\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nvar Token = __webpack_require__(\"j/5l\").Token;\nvar ATN = __webpack_require__(\"7y1Z\").ATN;\nvar ATNType = __webpack_require__(\"8Teg\").ATNType;\nvar ATNStates = __webpack_require__(\"j0Qz\");\nvar ATNState = ATNStates.ATNState;\nvar BasicState = ATNStates.BasicState;\nvar DecisionState = ATNStates.DecisionState;\nvar BlockStartState = ATNStates.BlockStartState;\nvar BlockEndState = ATNStates.BlockEndState;\nvar LoopEndState = ATNStates.LoopEndState;\nvar RuleStartState = ATNStates.RuleStartState;\nvar RuleStopState = ATNStates.RuleStopState;\nvar TokensStartState = ATNStates.TokensStartState;\nvar PlusLoopbackState = ATNStates.PlusLoopbackState;\nvar StarLoopbackState = ATNStates.StarLoopbackState;\nvar StarLoopEntryState = ATNStates.StarLoopEntryState;\nvar PlusBlockStartState = ATNStates.PlusBlockStartState;\nvar StarBlockStartState = ATNStates.StarBlockStartState;\nvar BasicBlockStartState = ATNStates.BasicBlockStartState;\nvar Transitions = __webpack_require__(\"VS1O\");\nvar Transition = Transitions.Transition;\nvar AtomTransition = Transitions.AtomTransition;\nvar SetTransition = Transitions.SetTransition;\nvar NotSetTransition = Transitions.NotSetTransition;\nvar RuleTransition = Transitions.RuleTransition;\nvar RangeTransition = Transitions.RangeTransition;\nvar ActionTransition = Transitions.ActionTransition;\nvar EpsilonTransition = Transitions.EpsilonTransition;\nvar WildcardTransition = Transitions.WildcardTransition;\nvar PredicateTransition = Transitions.PredicateTransition;\nvar PrecedencePredicateTransition = Transitions.PrecedencePredicateTransition;\nvar IntervalSet = __webpack_require__(\"T+Yw\").IntervalSet;\nvar Interval = __webpack_require__(\"T+Yw\").Interval;\nvar ATNDeserializationOptions = __webpack_require__(\"hs4g\").ATNDeserializationOptions;\nvar LexerActions = __webpack_require__(\"J8R0\");\nvar LexerActionType = LexerActions.LexerActionType;\nvar LexerSkipAction = LexerActions.LexerSkipAction;\nvar LexerChannelAction = LexerActions.LexerChannelAction;\nvar LexerCustomAction = LexerActions.LexerCustomAction;\nvar LexerMoreAction = LexerActions.LexerMoreAction;\nvar LexerTypeAction = LexerActions.LexerTypeAction;\nvar LexerPushModeAction = LexerActions.LexerPushModeAction;\nvar LexerPopModeAction = LexerActions.LexerPopModeAction;\nvar LexerModeAction = LexerActions.LexerModeAction;\n// This is the earliest supported serialized UUID.\n// stick to serialized version for now, we don't need a UUID instance\nvar BASE_SERIALIZED_UUID = \"AADB8D7E-AEEF-4415-AD2B-8204D6CF042E\";\n\n//\n// This UUID indicates the serialized ATN contains two sets of\n// IntervalSets, where the second set's values are encoded as\n// 32-bit integers to support the full Unicode SMP range up to U+10FFFF.\n//\nvar ADDED_UNICODE_SMP = \"59627784-3BE5-417A-B9EB-8131A7286089\";\n\n// This list contains all of the currently supported UUIDs, ordered by when\n// the feature first appeared in this branch.\nvar SUPPORTED_UUIDS = [ BASE_SERIALIZED_UUID, ADDED_UNICODE_SMP ];\n\nvar SERIALIZED_VERSION = 3;\n\n// This is the current serialized UUID.\nvar SERIALIZED_UUID = ADDED_UNICODE_SMP;\n\nfunction initArray( length, value) {\n\tvar tmp = [];\n\ttmp[length-1] = value;\n\treturn tmp.map(function(i) {return value;});\n}\n\nfunction ATNDeserializer (options) {\n\n    if ( options=== undefined || options === null ) {\n        options = ATNDeserializationOptions.defaultOptions;\n    }\n    this.deserializationOptions = options;\n    this.stateFactories = null;\n    this.actionFactories = null;\n\n    return this;\n}\n\n// Determines if a particular serialized representation of an ATN supports\n// a particular feature, identified by the {@link UUID} used for serializing\n// the ATN at the time the feature was first introduced.\n//\n// @param feature The {@link UUID} marking the first time the feature was\n// supported in the serialized ATN.\n// @param actualUuid The {@link UUID} of the actual serialized ATN which is\n// currently being deserialized.\n// @return {@code true} if the {@code actualUuid} value represents a\n// serialized ATN at or after the feature identified by {@code feature} was\n// introduced; otherwise, {@code false}.\n\nATNDeserializer.prototype.isFeatureSupported = function(feature, actualUuid) {\n    var idx1 = SUPPORTED_UUIDS.indexOf(feature);\n    if (idx1<0) {\n        return false;\n    }\n    var idx2 = SUPPORTED_UUIDS.indexOf(actualUuid);\n    return idx2 >= idx1;\n};\n\nATNDeserializer.prototype.deserialize = function(data) {\n    this.reset(data);\n    this.checkVersion();\n    this.checkUUID();\n    var atn = this.readATN();\n    this.readStates(atn);\n    this.readRules(atn);\n    this.readModes(atn);\n    var sets = [];\n    // First, deserialize sets with 16-bit arguments <= U+FFFF.\n    this.readSets(atn, sets, this.readInt.bind(this));\n    // Next, if the ATN was serialized with the Unicode SMP feature,\n    // deserialize sets with 32-bit arguments <= U+10FFFF.\n    if (this.isFeatureSupported(ADDED_UNICODE_SMP, this.uuid)) {\n        this.readSets(atn, sets, this.readInt32.bind(this));\n    }\n    this.readEdges(atn, sets);\n    this.readDecisions(atn);\n    this.readLexerActions(atn);\n    this.markPrecedenceDecisions(atn);\n    this.verifyATN(atn);\n    if (this.deserializationOptions.generateRuleBypassTransitions && atn.grammarType === ATNType.PARSER ) {\n        this.generateRuleBypassTransitions(atn);\n        // re-verify after modification\n        this.verifyATN(atn);\n    }\n    return atn;\n};\n\nATNDeserializer.prototype.reset = function(data) {\n\tvar adjust = function(c) {\n        var v = c.charCodeAt(0);\n        return v>1  ? v-2 : v + 65533;\n\t};\n    var temp = data.split(\"\").map(adjust);\n    // don't adjust the first value since that's the version number\n    temp[0] = data.charCodeAt(0);\n    this.data = temp;\n    this.pos = 0;\n};\n\nATNDeserializer.prototype.checkVersion = function() {\n    var version = this.readInt();\n    if ( version !== SERIALIZED_VERSION ) {\n        throw (\"Could not deserialize ATN with version \" + version + \" (expected \" + SERIALIZED_VERSION + \").\");\n    }\n};\n\nATNDeserializer.prototype.checkUUID = function() {\n    var uuid = this.readUUID();\n    if (SUPPORTED_UUIDS.indexOf(uuid)<0) {\n        throw (\"Could not deserialize ATN with UUID: \" + uuid +\n                        \" (expected \" + SERIALIZED_UUID + \" or a legacy UUID).\", uuid, SERIALIZED_UUID);\n    }\n    this.uuid = uuid;\n};\n\nATNDeserializer.prototype.readATN = function() {\n    var grammarType = this.readInt();\n    var maxTokenType = this.readInt();\n    return new ATN(grammarType, maxTokenType);\n};\n\nATNDeserializer.prototype.readStates = function(atn) {\n\tvar j, pair, stateNumber;\n    var loopBackStateNumbers = [];\n    var endStateNumbers = [];\n    var nstates = this.readInt();\n    for(var i=0; i<nstates; i++) {\n        var stype = this.readInt();\n        // ignore bad type of states\n        if (stype===ATNState.INVALID_TYPE) {\n            atn.addState(null);\n            continue;\n        }\n        var ruleIndex = this.readInt();\n        if (ruleIndex === 0xFFFF) {\n            ruleIndex = -1;\n        }\n        var s = this.stateFactory(stype, ruleIndex);\n        if (stype === ATNState.LOOP_END) { // special case\n            var loopBackStateNumber = this.readInt();\n            loopBackStateNumbers.push([s, loopBackStateNumber]);\n        } else if(s instanceof BlockStartState) {\n            var endStateNumber = this.readInt();\n            endStateNumbers.push([s, endStateNumber]);\n        }\n        atn.addState(s);\n    }\n    // delay the assignment of loop back and end states until we know all the\n\t// state instances have been initialized\n    for (j=0; j<loopBackStateNumbers.length; j++) {\n        pair = loopBackStateNumbers[j];\n        pair[0].loopBackState = atn.states[pair[1]];\n    }\n\n    for (j=0; j<endStateNumbers.length; j++) {\n        pair = endStateNumbers[j];\n        pair[0].endState = atn.states[pair[1]];\n    }\n\n    var numNonGreedyStates = this.readInt();\n    for (j=0; j<numNonGreedyStates; j++) {\n        stateNumber = this.readInt();\n        atn.states[stateNumber].nonGreedy = true;\n    }\n\n    var numPrecedenceStates = this.readInt();\n    for (j=0; j<numPrecedenceStates; j++) {\n        stateNumber = this.readInt();\n        atn.states[stateNumber].isPrecedenceRule = true;\n    }\n};\n\nATNDeserializer.prototype.readRules = function(atn) {\n    var i;\n    var nrules = this.readInt();\n    if (atn.grammarType === ATNType.LEXER ) {\n        atn.ruleToTokenType = initArray(nrules, 0);\n    }\n    atn.ruleToStartState = initArray(nrules, 0);\n    for (i=0; i<nrules; i++) {\n        var s = this.readInt();\n        var startState = atn.states[s];\n        atn.ruleToStartState[i] = startState;\n        if ( atn.grammarType === ATNType.LEXER ) {\n            var tokenType = this.readInt();\n            if (tokenType === 0xFFFF) {\n                tokenType = Token.EOF;\n            }\n            atn.ruleToTokenType[i] = tokenType;\n        }\n    }\n    atn.ruleToStopState = initArray(nrules, 0);\n    for (i=0; i<atn.states.length; i++) {\n        var state = atn.states[i];\n        if (!(state instanceof RuleStopState)) {\n            continue;\n        }\n        atn.ruleToStopState[state.ruleIndex] = state;\n        atn.ruleToStartState[state.ruleIndex].stopState = state;\n    }\n};\n\nATNDeserializer.prototype.readModes = function(atn) {\n    var nmodes = this.readInt();\n    for (var i=0; i<nmodes; i++) {\n        var s = this.readInt();\n        atn.modeToStartState.push(atn.states[s]);\n    }\n};\n\nATNDeserializer.prototype.readSets = function(atn, sets, readUnicode) {\n    var m = this.readInt();\n    for (var i=0; i<m; i++) {\n        var iset = new IntervalSet();\n        sets.push(iset);\n        var n = this.readInt();\n        var containsEof = this.readInt();\n        if (containsEof!==0) {\n            iset.addOne(-1);\n        }\n        for (var j=0; j<n; j++) {\n            var i1 = readUnicode();\n            var i2 = readUnicode();\n            iset.addRange(i1, i2);\n        }\n    }\n};\n\nATNDeserializer.prototype.readEdges = function(atn, sets) {\n\tvar i, j, state, trans, target;\n    var nedges = this.readInt();\n    for (i=0; i<nedges; i++) {\n        var src = this.readInt();\n        var trg = this.readInt();\n        var ttype = this.readInt();\n        var arg1 = this.readInt();\n        var arg2 = this.readInt();\n        var arg3 = this.readInt();\n        trans = this.edgeFactory(atn, ttype, src, trg, arg1, arg2, arg3, sets);\n        var srcState = atn.states[src];\n        srcState.addTransition(trans);\n    }\n    // edges for rule stop states can be derived, so they aren't serialized\n    for (i=0; i<atn.states.length; i++) {\n        state = atn.states[i];\n        for (j=0; j<state.transitions.length; j++) {\n            var t = state.transitions[j];\n            if (!(t instanceof RuleTransition)) {\n                continue;\n            }\n\t\t\tvar outermostPrecedenceReturn = -1;\n\t\t\tif (atn.ruleToStartState[t.target.ruleIndex].isPrecedenceRule) {\n\t\t\t\tif (t.precedence === 0) {\n\t\t\t\t\toutermostPrecedenceReturn = t.target.ruleIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttrans = new EpsilonTransition(t.followState, outermostPrecedenceReturn);\n            atn.ruleToStopState[t.target.ruleIndex].addTransition(trans);\n        }\n    }\n\n    for (i=0; i<atn.states.length; i++) {\n        state = atn.states[i];\n        if (state instanceof BlockStartState) {\n            // we need to know the end state to set its start state\n            if (state.endState === null) {\n                throw (\"IllegalState\");\n            }\n            // block end states can only be associated to a single block start\n\t\t\t// state\n            if ( state.endState.startState !== null) {\n                throw (\"IllegalState\");\n            }\n            state.endState.startState = state;\n        }\n        if (state instanceof PlusLoopbackState) {\n            for (j=0; j<state.transitions.length; j++) {\n                target = state.transitions[j].target;\n                if (target instanceof PlusBlockStartState) {\n                    target.loopBackState = state;\n                }\n            }\n        } else if (state instanceof StarLoopbackState) {\n            for (j=0; j<state.transitions.length; j++) {\n                target = state.transitions[j].target;\n                if (target instanceof StarLoopEntryState) {\n                    target.loopBackState = state;\n                }\n            }\n        }\n    }\n};\n\nATNDeserializer.prototype.readDecisions = function(atn) {\n    var ndecisions = this.readInt();\n    for (var i=0; i<ndecisions; i++) {\n        var s = this.readInt();\n        var decState = atn.states[s];\n        atn.decisionToState.push(decState);\n        decState.decision = i;\n    }\n};\n\nATNDeserializer.prototype.readLexerActions = function(atn) {\n    if (atn.grammarType === ATNType.LEXER) {\n        var count = this.readInt();\n        atn.lexerActions = initArray(count, null);\n        for (var i=0; i<count; i++) {\n            var actionType = this.readInt();\n            var data1 = this.readInt();\n            if (data1 === 0xFFFF) {\n                data1 = -1;\n            }\n            var data2 = this.readInt();\n            if (data2 === 0xFFFF) {\n                data2 = -1;\n            }\n            var lexerAction = this.lexerActionFactory(actionType, data1, data2);\n            atn.lexerActions[i] = lexerAction;\n        }\n    }\n};\n\nATNDeserializer.prototype.generateRuleBypassTransitions = function(atn) {\n\tvar i;\n    var count = atn.ruleToStartState.length;\n    for(i=0; i<count; i++) {\n        atn.ruleToTokenType[i] = atn.maxTokenType + i + 1;\n    }\n    for(i=0; i<count; i++) {\n        this.generateRuleBypassTransition(atn, i);\n    }\n};\n\nATNDeserializer.prototype.generateRuleBypassTransition = function(atn, idx) {\n\tvar i, state;\n    var bypassStart = new BasicBlockStartState();\n    bypassStart.ruleIndex = idx;\n    atn.addState(bypassStart);\n\n    var bypassStop = new BlockEndState();\n    bypassStop.ruleIndex = idx;\n    atn.addState(bypassStop);\n\n    bypassStart.endState = bypassStop;\n    atn.defineDecisionState(bypassStart);\n\n    bypassStop.startState = bypassStart;\n\n    var excludeTransition = null;\n    var endState = null;\n\n    if (atn.ruleToStartState[idx].isPrecedenceRule) {\n        // wrap from the beginning of the rule to the StarLoopEntryState\n        endState = null;\n        for(i=0; i<atn.states.length; i++) {\n            state = atn.states[i];\n            if (this.stateIsEndStateFor(state, idx)) {\n                endState = state;\n                excludeTransition = state.loopBackState.transitions[0];\n                break;\n            }\n        }\n        if (excludeTransition === null) {\n            throw (\"Couldn't identify final state of the precedence rule prefix section.\");\n        }\n    } else {\n        endState = atn.ruleToStopState[idx];\n    }\n\n    // all non-excluded transitions that currently target end state need to\n\t// target blockEnd instead\n    for(i=0; i<atn.states.length; i++) {\n        state = atn.states[i];\n        for(var j=0; j<state.transitions.length; j++) {\n            var transition = state.transitions[j];\n            if (transition === excludeTransition) {\n                continue;\n            }\n            if (transition.target === endState) {\n                transition.target = bypassStop;\n            }\n        }\n    }\n\n    // all transitions leaving the rule start state need to leave blockStart\n\t// instead\n    var ruleToStartState = atn.ruleToStartState[idx];\n    var count = ruleToStartState.transitions.length;\n    while ( count > 0) {\n        bypassStart.addTransition(ruleToStartState.transitions[count-1]);\n        ruleToStartState.transitions = ruleToStartState.transitions.slice(-1);\n    }\n    // link the new states\n    atn.ruleToStartState[idx].addTransition(new EpsilonTransition(bypassStart));\n    bypassStop.addTransition(new EpsilonTransition(endState));\n\n    var matchState = new BasicState();\n    atn.addState(matchState);\n    matchState.addTransition(new AtomTransition(bypassStop, atn.ruleToTokenType[idx]));\n    bypassStart.addTransition(new EpsilonTransition(matchState));\n};\n\nATNDeserializer.prototype.stateIsEndStateFor = function(state, idx) {\n    if ( state.ruleIndex !== idx) {\n        return null;\n    }\n    if (!( state instanceof StarLoopEntryState)) {\n        return null;\n    }\n    var maybeLoopEndState = state.transitions[state.transitions.length - 1].target;\n    if (!( maybeLoopEndState instanceof LoopEndState)) {\n        return null;\n    }\n    if (maybeLoopEndState.epsilonOnlyTransitions &&\n        (maybeLoopEndState.transitions[0].target instanceof RuleStopState)) {\n        return state;\n    } else {\n        return null;\n    }\n};\n\n//\n// Analyze the {@link StarLoopEntryState} states in the specified ATN to set\n// the {@link StarLoopEntryState//isPrecedenceDecision} field to the\n// correct value.\n//\n// @param atn The ATN.\n//\nATNDeserializer.prototype.markPrecedenceDecisions = function(atn) {\n\tfor(var i=0; i<atn.states.length; i++) {\n\t\tvar state = atn.states[i];\n\t\tif (!( state instanceof StarLoopEntryState)) {\n            continue;\n        }\n        // We analyze the ATN to determine if this ATN decision state is the\n        // decision for the closure block that determines whether a\n        // precedence rule should continue or complete.\n        //\n        if ( atn.ruleToStartState[state.ruleIndex].isPrecedenceRule) {\n            var maybeLoopEndState = state.transitions[state.transitions.length - 1].target;\n            if (maybeLoopEndState instanceof LoopEndState) {\n                if ( maybeLoopEndState.epsilonOnlyTransitions &&\n                        (maybeLoopEndState.transitions[0].target instanceof RuleStopState)) {\n                    state.isPrecedenceDecision = true;\n                }\n            }\n        }\n\t}\n};\n\nATNDeserializer.prototype.verifyATN = function(atn) {\n    if (!this.deserializationOptions.verifyATN) {\n        return;\n    }\n    // verify assumptions\n\tfor(var i=0; i<atn.states.length; i++) {\n        var state = atn.states[i];\n        if (state === null) {\n            continue;\n        }\n        this.checkCondition(state.epsilonOnlyTransitions || state.transitions.length <= 1);\n        if (state instanceof PlusBlockStartState) {\n            this.checkCondition(state.loopBackState !== null);\n        } else  if (state instanceof StarLoopEntryState) {\n            this.checkCondition(state.loopBackState !== null);\n            this.checkCondition(state.transitions.length === 2);\n            if (state.transitions[0].target instanceof StarBlockStartState) {\n                this.checkCondition(state.transitions[1].target instanceof LoopEndState);\n                this.checkCondition(!state.nonGreedy);\n            } else if (state.transitions[0].target instanceof LoopEndState) {\n                this.checkCondition(state.transitions[1].target instanceof StarBlockStartState);\n                this.checkCondition(state.nonGreedy);\n            } else {\n                throw(\"IllegalState\");\n            }\n        } else if (state instanceof StarLoopbackState) {\n            this.checkCondition(state.transitions.length === 1);\n            this.checkCondition(state.transitions[0].target instanceof StarLoopEntryState);\n        } else if (state instanceof LoopEndState) {\n            this.checkCondition(state.loopBackState !== null);\n        } else if (state instanceof RuleStartState) {\n            this.checkCondition(state.stopState !== null);\n        } else if (state instanceof BlockStartState) {\n            this.checkCondition(state.endState !== null);\n        } else if (state instanceof BlockEndState) {\n            this.checkCondition(state.startState !== null);\n        } else if (state instanceof DecisionState) {\n            this.checkCondition(state.transitions.length <= 1 || state.decision >= 0);\n        } else {\n            this.checkCondition(state.transitions.length <= 1 || (state instanceof RuleStopState));\n        }\n\t}\n};\n\nATNDeserializer.prototype.checkCondition = function(condition, message) {\n    if (!condition) {\n        if (message === undefined || message===null) {\n            message = \"IllegalState\";\n        }\n        throw (message);\n    }\n};\n\nATNDeserializer.prototype.readInt = function() {\n    return this.data[this.pos++];\n};\n\nATNDeserializer.prototype.readInt32 = function() {\n    var low = this.readInt();\n    var high = this.readInt();\n    return low | (high << 16);\n};\n\nATNDeserializer.prototype.readLong = function() {\n    var low = this.readInt32();\n    var high = this.readInt32();\n    return (low & 0x00000000FFFFFFFF) | (high << 32);\n};\n\nfunction createByteToHex() {\n\tvar bth = [];\n\tfor (var i = 0; i < 256; i++) {\n\t\tbth[i] = (i + 0x100).toString(16).substr(1).toUpperCase();\n\t}\n\treturn bth;\n}\n\nvar byteToHex = createByteToHex();\n\nATNDeserializer.prototype.readUUID = function() {\n\tvar bb = [];\n\tfor(var i=7;i>=0;i--) {\n\t\tvar int = this.readInt();\n\t\t/* jshint bitwise: false */\n\t\tbb[(2*i)+1] = int & 0xFF;\n\t\tbb[2*i] = (int >> 8) & 0xFF;\n\t}\n    return byteToHex[bb[0]] + byteToHex[bb[1]] +\n    byteToHex[bb[2]] + byteToHex[bb[3]] + '-' +\n    byteToHex[bb[4]] + byteToHex[bb[5]] + '-' +\n    byteToHex[bb[6]] + byteToHex[bb[7]] + '-' +\n    byteToHex[bb[8]] + byteToHex[bb[9]] + '-' +\n    byteToHex[bb[10]] + byteToHex[bb[11]] +\n    byteToHex[bb[12]] + byteToHex[bb[13]] +\n    byteToHex[bb[14]] + byteToHex[bb[15]];\n};\n\nATNDeserializer.prototype.edgeFactory = function(atn, type, src, trg, arg1, arg2, arg3, sets) {\n    var target = atn.states[trg];\n    switch(type) {\n    case Transition.EPSILON:\n        return new EpsilonTransition(target);\n    case Transition.RANGE:\n        return arg3 !== 0 ? new RangeTransition(target, Token.EOF, arg2) : new RangeTransition(target, arg1, arg2);\n    case Transition.RULE:\n        return new RuleTransition(atn.states[arg1], arg2, arg3, target);\n    case Transition.PREDICATE:\n        return new PredicateTransition(target, arg1, arg2, arg3 !== 0);\n    case Transition.PRECEDENCE:\n        return new PrecedencePredicateTransition(target, arg1);\n    case Transition.ATOM:\n        return arg3 !== 0 ? new AtomTransition(target, Token.EOF) : new AtomTransition(target, arg1);\n    case Transition.ACTION:\n        return new ActionTransition(target, arg1, arg2, arg3 !== 0);\n    case Transition.SET:\n        return new SetTransition(target, sets[arg1]);\n    case Transition.NOT_SET:\n        return new NotSetTransition(target, sets[arg1]);\n    case Transition.WILDCARD:\n        return new WildcardTransition(target);\n    default:\n        throw \"The specified transition type: \" + type + \" is not valid.\";\n    }\n};\n\nATNDeserializer.prototype.stateFactory = function(type, ruleIndex) {\n    if (this.stateFactories === null) {\n        var sf = [];\n        sf[ATNState.INVALID_TYPE] = null;\n        sf[ATNState.BASIC] = function() { return new BasicState(); };\n        sf[ATNState.RULE_START] = function() { return new RuleStartState(); };\n        sf[ATNState.BLOCK_START] = function() { return new BasicBlockStartState(); };\n        sf[ATNState.PLUS_BLOCK_START] = function() { return new PlusBlockStartState(); };\n        sf[ATNState.STAR_BLOCK_START] = function() { return new StarBlockStartState(); };\n        sf[ATNState.TOKEN_START] = function() { return new TokensStartState(); };\n        sf[ATNState.RULE_STOP] = function() { return new RuleStopState(); };\n        sf[ATNState.BLOCK_END] = function() { return new BlockEndState(); };\n        sf[ATNState.STAR_LOOP_BACK] = function() { return new StarLoopbackState(); };\n        sf[ATNState.STAR_LOOP_ENTRY] = function() { return new StarLoopEntryState(); };\n        sf[ATNState.PLUS_LOOP_BACK] = function() { return new PlusLoopbackState(); };\n        sf[ATNState.LOOP_END] = function() { return new LoopEndState(); };\n        this.stateFactories = sf;\n    }\n    if (type>this.stateFactories.length || this.stateFactories[type] === null) {\n        throw(\"The specified state type \" + type + \" is not valid.\");\n    } else {\n        var s = this.stateFactories[type]();\n        if (s!==null) {\n            s.ruleIndex = ruleIndex;\n            return s;\n        }\n    }\n};\n\nATNDeserializer.prototype.lexerActionFactory = function(type, data1, data2) {\n    if (this.actionFactories === null) {\n        var af = [];\n        af[LexerActionType.CHANNEL] = function(data1, data2) { return new LexerChannelAction(data1); };\n        af[LexerActionType.CUSTOM] = function(data1, data2) { return new LexerCustomAction(data1, data2); };\n        af[LexerActionType.MODE] = function(data1, data2) { return new LexerModeAction(data1); };\n        af[LexerActionType.MORE] = function(data1, data2) { return LexerMoreAction.INSTANCE; };\n        af[LexerActionType.POP_MODE] = function(data1, data2) { return LexerPopModeAction.INSTANCE; };\n        af[LexerActionType.PUSH_MODE] = function(data1, data2) { return new LexerPushModeAction(data1); };\n        af[LexerActionType.SKIP] = function(data1, data2) { return LexerSkipAction.INSTANCE; };\n        af[LexerActionType.TYPE] = function(data1, data2) { return new LexerTypeAction(data1); };\n        this.actionFactories = af;\n    }\n    if (type>this.actionFactories.length || this.actionFactories[type] === null) {\n        throw(\"The specified lexer action type \" + type + \" is not valid.\");\n    } else {\n        return this.actionFactories[type](data1, data2);\n    }\n};\n\n\nexports.ATNDeserializer = ATNDeserializer;\n\n/***/ }),\n\n/***/ \"4iSB\":\n/***/ (function(module, exports, __webpack_require__) {\n\n//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\nvar Token = __webpack_require__(\"j/5l\").Token;\n__webpack_require__(\"13lD\");\n__webpack_require__(\"pr/i\");\n\n// Vacuum all input from a string and then treat it like a buffer.\n\nfunction _loadString(stream, decodeToUnicodeCodePoints) {\n\tstream._index = 0;\n\tstream.data = [];\n\tif (stream.decodeToUnicodeCodePoints) {\n\t\tfor (var i = 0; i < stream.strdata.length; ) {\n\t\t\tvar codePoint = stream.strdata.codePointAt(i);\n\t\t\tstream.data.push(codePoint);\n\t\t\ti += codePoint <= 0xFFFF ? 1 : 2;\n\t\t}\n\t} else {\n\t\tfor (var i = 0; i < stream.strdata.length; i++) {\n\t\t\tvar codeUnit = stream.strdata.charCodeAt(i);\n\t\t\tstream.data.push(codeUnit);\n\t\t}\n\t}\n\tstream._size = stream.data.length;\n}\n\n// If decodeToUnicodeCodePoints is true, the input is treated\n// as a series of Unicode code points.\n//\n// Otherwise, the input is treated as a series of 16-bit UTF-16 code\n// units.\nfunction InputStream(data, decodeToUnicodeCodePoints) {\n\tthis.name = \"<empty>\";\n\tthis.strdata = data;\n\tthis.decodeToUnicodeCodePoints = decodeToUnicodeCodePoints || false;\n\t_loadString(this);\n\treturn this;\n}\n\nObject.defineProperty(InputStream.prototype, \"index\", {\n\tget : function() {\n\t\treturn this._index;\n\t}\n});\n\nObject.defineProperty(InputStream.prototype, \"size\", {\n\tget : function() {\n\t\treturn this._size;\n\t}\n});\n\n// Reset the stream so that it's in the same state it was\n// when the object was created *except* the data array is not\n// touched.\n//\nInputStream.prototype.reset = function() {\n\tthis._index = 0;\n};\n\nInputStream.prototype.consume = function() {\n\tif (this._index >= this._size) {\n\t\t// assert this.LA(1) == Token.EOF\n\t\tthrow (\"cannot consume EOF\");\n\t}\n\tthis._index += 1;\n};\n\nInputStream.prototype.LA = function(offset) {\n\tif (offset === 0) {\n\t\treturn 0; // undefined\n\t}\n\tif (offset < 0) {\n\t\toffset += 1; // e.g., translate LA(-1) to use offset=0\n\t}\n\tvar pos = this._index + offset - 1;\n\tif (pos < 0 || pos >= this._size) { // invalid\n\t\treturn Token.EOF;\n\t}\n\treturn this.data[pos];\n};\n\nInputStream.prototype.LT = function(offset) {\n\treturn this.LA(offset);\n};\n\n// mark/release do nothing; we have entire buffer\nInputStream.prototype.mark = function() {\n\treturn -1;\n};\n\nInputStream.prototype.release = function(marker) {\n};\n\n// consume() ahead until p==_index; can't just set p=_index as we must\n// update line and column. If we seek backwards, just set p\n//\nInputStream.prototype.seek = function(_index) {\n\tif (_index <= this._index) {\n\t\tthis._index = _index; // just jump; don't update stream state (line,\n\t\t\t\t\t\t\t\t// ...)\n\t\treturn;\n\t}\n\t// seek forward\n\tthis._index = Math.min(_index, this._size);\n};\n\nInputStream.prototype.getText = function(start, stop) {\n\tif (stop >= this._size) {\n\t\tstop = this._size - 1;\n\t}\n\tif (start >= this._size) {\n\t\treturn \"\";\n\t} else {\n\t\tif (this.decodeToUnicodeCodePoints) {\n\t\t\tvar result = \"\";\n\t\t\tfor (var i = start; i <= stop; i++) {\n\t\t\t\tresult += String.fromCodePoint(this.data[i]);\n\t\t\t}\n\t\t\treturn result;\n\t\t} else {\n\t\t\treturn this.strdata.slice(start, stop + 1);\n\t\t}\n\t}\n};\n\nInputStream.prototype.toString = function() {\n\treturn this.strdata;\n};\n\nexports.InputStream = InputStream;\n\n\n/***/ }),\n\n/***/ \"5PlU\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar classof = __webpack_require__(\"RY/4\");\nvar ITERATOR = __webpack_require__(\"dSzd\")('iterator');\nvar Iterators = __webpack_require__(\"/bQp\");\nmodule.exports = __webpack_require__(\"FeBl\").isIterable = function (it) {\n  var O = Object(it);\n  return O[ITERATOR] !== undefined\n    || '@@iterator' in O\n    // eslint-disable-next-line no-prototype-builtins\n    || Iterators.hasOwnProperty(classof(O));\n};\n\n\n/***/ }),\n\n/***/ \"5b3W\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:\"loading\",rawName:\"v-loading.body\",value:(_vm.loading),expression:\"loading\",modifiers:{\"body\":true}}],staticClass:\"table-view-wrapper\"},[_c('el-table',{staticClass:\"table\",attrs:{\"data\":_vm.tableData,\"stripe\":\"\",\"border\":\"\"}},[_vm._t(\"default\")],2),_vm._v(\" \"),_c('el-pagination',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showPagination),expression:\"showPagination\"}],staticClass:\"pagination\",attrs:{\"background\":true,\"current-page\":_vm.pageMeta.page,\"page-sizes\":[10, 20, 30, 50],\"page-size\":_vm.pageMeta.pageSize,\"layout\":\"total, sizes, prev, pager, next, jumper\",\"total\":_vm.total},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ \"5d5Q\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n// The root of the ANTLR exception hierarchy. In general, ANTLR tracks just\n//  3 kinds of errors: prediction errors, failed predicate errors, and\n//  mismatched input errors. In each case, the parser knows where it is\n//  in the input, where it is in the ATN, the rule invocation stack,\n//  and what kind of problem occurred.\n\nvar PredicateTransition = __webpack_require__(\"VS1O\").PredicateTransition;\n\nfunction RecognitionException(params) {\n\tError.call(this);\n\tif (!!Error.captureStackTrace) {\n        Error.captureStackTrace(this, RecognitionException);\n\t} else {\n\t\tvar stack = new Error().stack;\n\t}\n\tthis.message = params.message;\n    this.recognizer = params.recognizer;\n    this.input = params.input;\n    this.ctx = params.ctx;\n    // The current {@link Token} when an error occurred. Since not all streams\n    // support accessing symbols by index, we have to track the {@link Token}\n    // instance itself.\n    this.offendingToken = null;\n    // Get the ATN state number the parser was in at the time the error\n    // occurred. For {@link NoViableAltException} and\n    // {@link LexerNoViableAltException} exceptions, this is the\n    // {@link DecisionState} number. For others, it is the state whose outgoing\n    // edge we couldn't match.\n    this.offendingState = -1;\n    if (this.recognizer!==null) {\n        this.offendingState = this.recognizer.state;\n    }\n    return this;\n}\n\nRecognitionException.prototype = Object.create(Error.prototype);\nRecognitionException.prototype.constructor = RecognitionException;\n\n// <p>If the state number is not known, this method returns -1.</p>\n\n//\n// Gets the set of input symbols which could potentially follow the\n// previously matched symbol at the time this exception was thrown.\n//\n// <p>If the set of expected tokens is not known and could not be computed,\n// this method returns {@code null}.</p>\n//\n// @return The set of token types that could potentially follow the current\n// state in the ATN, or {@code null} if the information is not available.\n// /\nRecognitionException.prototype.getExpectedTokens = function() {\n    if (this.recognizer!==null) {\n        return this.recognizer.atn.getExpectedTokens(this.offendingState, this.ctx);\n    } else {\n        return null;\n    }\n};\n\nRecognitionException.prototype.toString = function() {\n    return this.message;\n};\n\nfunction LexerNoViableAltException(lexer, input, startIndex, deadEndConfigs) {\n\tRecognitionException.call(this, {message:\"\", recognizer:lexer, input:input, ctx:null});\n    this.startIndex = startIndex;\n    this.deadEndConfigs = deadEndConfigs;\n    return this;\n}\n\nLexerNoViableAltException.prototype = Object.create(RecognitionException.prototype);\nLexerNoViableAltException.prototype.constructor = LexerNoViableAltException;\n\nLexerNoViableAltException.prototype.toString = function() {\n    var symbol = \"\";\n    if (this.startIndex >= 0 && this.startIndex < this.input.size) {\n        symbol = this.input.getText((this.startIndex,this.startIndex));\n    }\n    return \"LexerNoViableAltException\" + symbol;\n};\n\n// Indicates that the parser could not decide which of two or more paths\n// to take based upon the remaining input. It tracks the starting token\n// of the offending input and also knows where the parser was\n// in the various paths when the error. Reported by reportNoViableAlternative()\n//\nfunction NoViableAltException(recognizer, input, startToken, offendingToken, deadEndConfigs, ctx) {\n\tctx = ctx || recognizer._ctx;\n\toffendingToken = offendingToken || recognizer.getCurrentToken();\n\tstartToken = startToken || recognizer.getCurrentToken();\n\tinput = input || recognizer.getInputStream();\n\tRecognitionException.call(this, {message:\"\", recognizer:recognizer, input:input, ctx:ctx});\n    // Which configurations did we try at input.index() that couldn't match\n\t// input.LT(1)?//\n    this.deadEndConfigs = deadEndConfigs;\n    // The token object at the start index; the input stream might\n    // not be buffering tokens so get a reference to it. (At the\n    // time the error occurred, of course the stream needs to keep a\n    // buffer all of the tokens but later we might not have access to those.)\n    this.startToken = startToken;\n    this.offendingToken = offendingToken;\n}\n\nNoViableAltException.prototype = Object.create(RecognitionException.prototype);\nNoViableAltException.prototype.constructor = NoViableAltException;\n\n// This signifies any kind of mismatched input exceptions such as\n// when the current input does not match the expected token.\n//\nfunction InputMismatchException(recognizer) {\n\tRecognitionException.call(this, {message:\"\", recognizer:recognizer, input:recognizer.getInputStream(), ctx:recognizer._ctx});\n    this.offendingToken = recognizer.getCurrentToken();\n}\n\nInputMismatchException.prototype = Object.create(RecognitionException.prototype);\nInputMismatchException.prototype.constructor = InputMismatchException;\n\n// A semantic predicate failed during validation. Validation of predicates\n// occurs when normally parsing the alternative just like matching a token.\n// Disambiguating predicate evaluation occurs when we test a predicate during\n// prediction.\n\nfunction FailedPredicateException(recognizer, predicate, message) {\n\tRecognitionException.call(this, {message:this.formatMessage(predicate,message || null), recognizer:recognizer,\n                         input:recognizer.getInputStream(), ctx:recognizer._ctx});\n    var s = recognizer._interp.atn.states[recognizer.state];\n    var trans = s.transitions[0];\n    if (trans instanceof PredicateTransition) {\n        this.ruleIndex = trans.ruleIndex;\n        this.predicateIndex = trans.predIndex;\n    } else {\n        this.ruleIndex = 0;\n        this.predicateIndex = 0;\n    }\n    this.predicate = predicate;\n    this.offendingToken = recognizer.getCurrentToken();\n    return this;\n}\n\nFailedPredicateException.prototype = Object.create(RecognitionException.prototype);\nFailedPredicateException.prototype.constructor = FailedPredicateException;\n\nFailedPredicateException.prototype.formatMessage = function(predicate, message) {\n    if (message !==null) {\n        return message;\n    } else {\n        return \"failed predicate: {\" + predicate + \"}?\";\n    }\n};\n\nfunction ParseCancellationException() {\n\tError.call(this);\n\tError.captureStackTrace(this, ParseCancellationException);\n\treturn this;\n}\n\nParseCancellationException.prototype = Object.create(Error.prototype);\nParseCancellationException.prototype.constructor = ParseCancellationException;\n\nexports.RecognitionException = RecognitionException;\nexports.NoViableAltException = NoViableAltException;\nexports.LexerNoViableAltException = LexerNoViableAltException;\nexports.InputMismatchException = InputMismatchException;\nexports.FailedPredicateException = FailedPredicateException;\nexports.ParseCancellationException = ParseCancellationException;\n\n\n/***/ }),\n\n/***/ \"6GCw\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\n//  A rule context is a record of a single rule invocation. It knows\n//  which context invoked it, if any. If there is no parent context, then\n//  naturally the invoking state is not valid.  The parent link\n//  provides a chain upwards from the current rule invocation to the root\n//  of the invocation tree, forming a stack. We actually carry no\n//  information about the rule associated with this context (except\n//  when parsing). We keep only the state number of the invoking state from\n//  the ATN submachine that invoked this. Contrast this with the s\n//  pointer inside ParserRuleContext that tracks the current state\n//  being \"executed\" for the current rule.\n//\n//  The parent contexts are useful for computing lookahead sets and\n//  getting error information.\n//\n//  These objects are used during parsing and prediction.\n//  For the special case of parsers, we use the subclass\n//  ParserRuleContext.\n//\n//  @see ParserRuleContext\n///\n\nvar RuleNode = __webpack_require__(\"VnEu\").RuleNode;\nvar INVALID_INTERVAL = __webpack_require__(\"VnEu\").INVALID_INTERVAL;\nvar INVALID_ALT_NUMBER = __webpack_require__(\"7y1Z\").INVALID_ALT_NUMBER;\n\nfunction RuleContext(parent, invokingState) {\n\tRuleNode.call(this);\n\t// What context invoked this rule?\n\tthis.parentCtx = parent || null;\n\t// What state invoked the rule associated with this context?\n\t// The \"return address\" is the followState of invokingState\n\t// If parent is null, this should be -1.\n\tthis.invokingState = invokingState || -1;\n\treturn this;\n}\n\nRuleContext.prototype = Object.create(RuleNode.prototype);\nRuleContext.prototype.constructor = RuleContext;\n\nRuleContext.prototype.depth = function() {\n\tvar n = 0;\n\tvar p = this;\n\twhile (p !== null) {\n\t\tp = p.parentCtx;\n\t\tn += 1;\n\t}\n\treturn n;\n};\n\n// A context is empty if there is no invoking state; meaning nobody call\n// current context.\nRuleContext.prototype.isEmpty = function() {\n\treturn this.invokingState === -1;\n};\n\n// satisfy the ParseTree / SyntaxTree interface\n\nRuleContext.prototype.getSourceInterval = function() {\n\treturn INVALID_INTERVAL;\n};\n\nRuleContext.prototype.getRuleContext = function() {\n\treturn this;\n};\n\nRuleContext.prototype.getPayload = function() {\n\treturn this;\n};\n\n// Return the combined text of all child nodes. This method only considers\n// tokens which have been added to the parse tree.\n// <p>\n// Since tokens on hidden channels (e.g. whitespace or comments) are not\n// added to the parse trees, they will not appear in the output of this\n// method.\n// /\nRuleContext.prototype.getText = function() {\n\tif (this.getChildCount() === 0) {\n\t\treturn \"\";\n\t} else {\n\t\treturn this.children.map(function(child) {\n\t\t\treturn child.getText();\n\t\t}).join(\"\");\n\t}\n};\n\n// For rule associated with this parse tree internal node, return\n// the outer alternative number used to match the input. Default\n// implementation does not compute nor store this alt num. Create\n// a subclass of ParserRuleContext with backing field and set\n// option contextSuperClass.\n// to set it.\nRuleContext.prototype.getAltNumber = function() { return INVALID_ALT_NUMBER; }\n\n// Set the outer alternative number for this context node. Default\n// implementation does nothing to avoid backing field overhead for\n// trees that don't need it.  Create\n// a subclass of ParserRuleContext with backing field and set\n// option contextSuperClass.\nRuleContext.prototype.setAltNumber = function(altNumber) { }\n\nRuleContext.prototype.getChild = function(i) {\n\treturn null;\n};\n\nRuleContext.prototype.getChildCount = function() {\n\treturn 0;\n};\n\nRuleContext.prototype.accept = function(visitor) {\n\treturn visitor.visitChildren(this);\n};\n\n//need to manage circular dependencies, so export now\nexports.RuleContext = RuleContext;\nvar Trees = __webpack_require__(\"WmJ1\").Trees;\n\n\n// Print out a whole tree, not just a node, in LISP format\n// (root child1 .. childN). Print just a node if this is a leaf.\n//\n\nRuleContext.prototype.toStringTree = function(ruleNames, recog) {\n\treturn Trees.toStringTree(this, ruleNames, recog);\n};\n\nRuleContext.prototype.toString = function(ruleNames, stop) {\n\truleNames = ruleNames || null;\n\tstop = stop || null;\n\tvar p = this;\n\tvar s = \"[\";\n\twhile (p !== null && p !== stop) {\n\t\tif (ruleNames === null) {\n\t\t\tif (!p.isEmpty()) {\n\t\t\t\ts += p.invokingState;\n\t\t\t}\n\t\t} else {\n\t\t\tvar ri = p.ruleIndex;\n\t\t\tvar ruleName = (ri >= 0 && ri < ruleNames.length) ? ruleNames[ri]\n\t\t\t\t\t: \"\" + ri;\n\t\t\ts += ruleName;\n\t\t}\n\t\tif (p.parentCtx !== null && (ruleNames !== null || !p.parentCtx.isEmpty())) {\n\t\t\ts += \" \";\n\t\t}\n\t\tp = p.parentCtx;\n\t}\n\ts += \"]\";\n\treturn s;\n};\n\n\n\n/***/ }),\n\n/***/ \"6S+M\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__index__ = __webpack_require__(\"kQsE\");\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__index__[\"a\" /* default */]);\n\n/***/ }),\n\n/***/ \"7AHu\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'presentable-steps',\n  data: function data() {\n    return {};\n  },\n\n  props: {\n    active: {\n      type: Number,\n      default: function _default() {\n        return 0;\n      }\n    },\n    processStatus: {\n      type: String,\n      default: function _default() {\n        return 'finish';\n      }\n    },\n    finishStatus: {\n      type: String,\n      default: function _default() {\n        return 'success';\n      }\n    }\n  },\n\n  mounted: function mounted() {}\n});\n\n/***/ }),\n\n/***/ \"7Ae7\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__index__ = __webpack_require__(\"sfob\");\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__index__[\"a\" /* default */]);\n\n/***/ }),\n\n/***/ \"7y1Z\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nvar LL1Analyzer = __webpack_require__(\"RuwF\").LL1Analyzer;\nvar IntervalSet = __webpack_require__(\"T+Yw\").IntervalSet;\n\nfunction ATN(grammarType , maxTokenType) {\n\n    // Used for runtime deserialization of ATNs from strings///\n    // The type of the ATN.\n    this.grammarType = grammarType;\n    // The maximum value for any symbol recognized by a transition in the ATN.\n    this.maxTokenType = maxTokenType;\n    this.states = [];\n    // Each subrule/rule is a decision point and we must track them so we\n    //  can go back later and build DFA predictors for them.  This includes\n    //  all the rules, subrules, optional blocks, ()+, ()* etc...\n    this.decisionToState = [];\n    // Maps from rule index to starting state number.\n    this.ruleToStartState = [];\n    // Maps from rule index to stop state number.\n    this.ruleToStopState = null;\n    this.modeNameToStartState = {};\n    // For lexer ATNs, this maps the rule index to the resulting token type.\n    // For parser ATNs, this maps the rule index to the generated bypass token\n    // type if the\n    // {@link ATNDeserializationOptions//isGenerateRuleBypassTransitions}\n    // deserialization option was specified; otherwise, this is {@code null}.\n    this.ruleToTokenType = null;\n    // For lexer ATNs, this is an array of {@link LexerAction} objects which may\n    // be referenced by action transitions in the ATN.\n    this.lexerActions = null;\n    this.modeToStartState = [];\n\n    return this;\n}\n\n// Compute the set of valid tokens that can occur starting in state {@code s}.\n//  If {@code ctx} is null, the set of tokens will not include what can follow\n//  the rule surrounding {@code s}. In other words, the set will be\n//  restricted to tokens reachable staying within {@code s}'s rule.\nATN.prototype.nextTokensInContext = function(s, ctx) {\n    var anal = new LL1Analyzer(this);\n    return anal.LOOK(s, null, ctx);\n};\n\n// Compute the set of valid tokens that can occur starting in {@code s} and\n// staying in same rule. {@link Token//EPSILON} is in set if we reach end of\n// rule.\nATN.prototype.nextTokensNoContext = function(s) {\n    if (s.nextTokenWithinRule !== null ) {\n        return s.nextTokenWithinRule;\n    }\n    s.nextTokenWithinRule = this.nextTokensInContext(s, null);\n    s.nextTokenWithinRule.readOnly = true;\n    return s.nextTokenWithinRule;\n};\n\nATN.prototype.nextTokens = function(s, ctx) {\n    if ( ctx===undefined ) {\n        return this.nextTokensNoContext(s);\n    } else {\n        return this.nextTokensInContext(s, ctx);\n    }\n};\n\nATN.prototype.addState = function( state) {\n    if ( state !== null ) {\n        state.atn = this;\n        state.stateNumber = this.states.length;\n    }\n    this.states.push(state);\n};\n\nATN.prototype.removeState = function( state) {\n    this.states[state.stateNumber] = null; // just free mem, don't shift states in list\n};\n\nATN.prototype.defineDecisionState = function( s) {\n    this.decisionToState.push(s);\n    s.decision = this.decisionToState.length-1;\n    return s.decision;\n};\n\nATN.prototype.getDecisionState = function( decision) {\n    if (this.decisionToState.length===0) {\n        return null;\n    } else {\n        return this.decisionToState[decision];\n    }\n};\n\n// Computes the set of input symbols which could follow ATN state number\n// {@code stateNumber} in the specified full {@code context}. This method\n// considers the complete parser context, but does not evaluate semantic\n// predicates (i.e. all predicates encountered during the calculation are\n// assumed true). If a path in the ATN exists from the starting state to the\n// {@link RuleStopState} of the outermost context without matching any\n// symbols, {@link Token//EOF} is added to the returned set.\n//\n// <p>If {@code context} is {@code null}, it is treated as\n// {@link ParserRuleContext//EMPTY}.</p>\n//\n// @param stateNumber the ATN state number\n// @param context the full parse context\n// @return The set of potentially valid input symbols which could follow the\n// specified state in the specified context.\n// @throws IllegalArgumentException if the ATN does not contain a state with\n// number {@code stateNumber}\nvar Token = __webpack_require__(\"j/5l\").Token;\n\nATN.prototype.getExpectedTokens = function( stateNumber, ctx ) {\n    if ( stateNumber < 0 || stateNumber >= this.states.length ) {\n        throw(\"Invalid state number.\");\n    }\n    var s = this.states[stateNumber];\n    var following = this.nextTokens(s);\n    if (!following.contains(Token.EPSILON)) {\n        return following;\n    }\n    var expected = new IntervalSet();\n    expected.addSet(following);\n    expected.removeOne(Token.EPSILON);\n    while (ctx !== null && ctx.invokingState >= 0 && following.contains(Token.EPSILON)) {\n        var invokingState = this.states[ctx.invokingState];\n        var rt = invokingState.transitions[0];\n        following = this.nextTokens(rt.followState);\n        expected.addSet(following);\n        expected.removeOne(Token.EPSILON);\n        ctx = ctx.parentCtx;\n    }\n    if (following.contains(Token.EPSILON)) {\n        expected.addOne(Token.EOF);\n    }\n    return expected;\n};\n\nATN.INVALID_ALT_NUMBER = 0;\n\nexports.ATN = ATN;\n\n/***/ }),\n\n/***/ \"803e\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__index__ = __webpack_require__(\"JMs1\");\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__index__[\"a\" /* default */]);\n\n/***/ }),\n\n/***/ \"8Teg\":\n/***/ (function(module, exports) {\n\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\n// Represents the type of recognizer an ATN applies to.\n\nfunction ATNType() {\n\n}\n\nATNType.LEXER = 0;\nATNType.PARSER = 1;\n\nexports.ATNType = ATNType;\n\n\n\n/***/ }),\n\n/***/ \"9C8F\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nexports.atn = __webpack_require__(\"pHgc\");\nexports.codepointat = __webpack_require__(\"13lD\");\nexports.dfa = __webpack_require__(\"CF8A\");\nexports.fromcodepoint = __webpack_require__(\"pr/i\");\nexports.tree = __webpack_require__(\"CLgU\");\nexports.error = __webpack_require__(\"y2Ps\");\nexports.Token = __webpack_require__(\"j/5l\").Token;\nexports.CharStreams = __webpack_require__(\"HNBV\").CharStreams;\nexports.CommonToken = __webpack_require__(\"j/5l\").CommonToken;\nexports.InputStream = __webpack_require__(\"4iSB\").InputStream;\nexports.FileStream = __webpack_require__(\"wf8X\").FileStream;\nexports.CommonTokenStream = __webpack_require__(\"Fzuw\").CommonTokenStream;\nexports.Lexer = __webpack_require__(\"h0lj\").Lexer;\nexports.Parser = __webpack_require__(\"VgzD\").Parser;\nvar pc = __webpack_require__(\"YFoD\");\nexports.PredictionContextCache = pc.PredictionContextCache;\nexports.ParserRuleContext = __webpack_require__(\"EesY\").ParserRuleContext;\nexports.Interval = __webpack_require__(\"T+Yw\").Interval;\nexports.Utils = __webpack_require__(\"bz+k\");\n\n\n/***/ }),\n\n/***/ \"9e1m\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_index_vue__ = __webpack_require__(\"yyaC\");\n/* unused harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_41f78b08_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_index_vue__ = __webpack_require__(\"z7tt\");\nfunction injectStyle (ssrContext) {\n  __webpack_require__(\"QdQx\")\n}\nvar normalizeComponent = __webpack_require__(\"VU/8\")\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-41f78b08\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_index_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_41f78b08_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_index_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ \"9eSa\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(\"P8NL\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(\"rjj0\")(\"2ca78a95\", content, true);\n\n/***/ }),\n\n/***/ \"AEih\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_assign__ = __webpack_require__(\"woOf\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_assign___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_assign__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__views_node_presentable_steps_index_vue__ = __webpack_require__(\"0AMZ\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_presentable_policy_compiler__ = __webpack_require__(\"I+6F\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_presentable_policy_compiler___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_presentable_policy_compiler__);\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'presentable-policy',\n  data: function data() {\n    return {\n      policyText: 'For userAuserB in the following states:\\n    in initial :\\n      proceed to activate on accepting license licenseA\\n    in activate :\\n      proceed to suspend on visit of 20000\\n        I agree to authorize token in activate'\n    };\n  },\n\n  props: {\n    value: String\n  },\n  watch: {\n    value: function value() {\n      this.policyText = this.value;\n    }\n  },\n  mounted: function mounted() {},\n\n  methods: {\n    textChange: function textChange() {\n      this.$emit('input', this.policyText);\n    },\n    validate: function validate() {\n      var myBeautify = __WEBPACK_IMPORTED_MODULE_2_presentable_policy_compiler___default.a.compile(this.policyText, 'beautify');\n      if (!myBeautify.errorMsg) {\n        this.policyText = myBeautify.stringArray.splice(1).join(' ').replace(/\\n\\s/g, '\\n');\n      } else {\n        this.$message.error(myBeautify.errorMsg);\n      }\n    },\n    submit: function submit(data) {\n      var _this = this;\n\n      if (!this.$route.query.contractId) {\n        this.$message.error('没有资源Id, 请重新选择');\n      }\n\n      var nodeId = parseInt(this.$route.params.nodeId);\n\n      __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_assign___default()({\n        name: this.formData.presentableName,\n        nodeId: nodeId,\n        contractId: this.$route.query.contractId,\n        policyText: btoa(this.policyText),\n        languageType: 'freelog_policy_lang'\n      }, data);\n\n      this.$services.presentables.post(data).then(function (res) {\n        var data = res.getData();\n        if (!data) {\n          _this.$message.error(res.data.msg);\n        } else {\n          _this.$message.success('presentable创建成功');\n          _this.$router.push({\n            path: '/node/' + nodeId + '/presentable/detail#presentable',\n            query: { presentableId: data.presentableId }\n          });\n        }\n      }).catch(this.$error.showErrorMessage);\n    }\n  }\n});\n\n/***/ }),\n\n/***/ \"AKgy\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// 20.1.2.3 Number.isInteger(number)\nvar isObject = __webpack_require__(\"EqjI\");\nvar floor = Math.floor;\nmodule.exports = function isInteger(it) {\n  return !isObject(it) && isFinite(it) && floor(it) === it;\n};\n\n\n/***/ }),\n\n/***/ \"B0bK\":\n/***/ (function(module, exports, __webpack_require__) {\n\n//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\n//\n// This implementation of {@link ANTLRErrorListener} can be used to identify\n// certain potential correctness and performance problems in grammars. \"Reports\"\n// are made by calling {@link Parser//notifyErrorListeners} with the appropriate\n// message.\n//\n// <ul>\n// <li><b>Ambiguities</b>: These are cases where more than one path through the\n// grammar can match the input.</li>\n// <li><b>Weak context sensitivity</b>: These are cases where full-context\n// prediction resolved an SLL conflict to a unique alternative which equaled the\n// minimum alternative of the SLL conflict.</li>\n// <li><b>Strong (forced) context sensitivity</b>: These are cases where the\n// full-context prediction resolved an SLL conflict to a unique alternative,\n// <em>and</em> the minimum alternative of the SLL conflict was found to not be\n// a truly viable alternative. Two-stage parsing cannot be used for inputs where\n// this situation occurs.</li>\n// </ul>\n\nvar BitSet = __webpack_require__(\"bz+k\").BitSet;\nvar ErrorListener = __webpack_require__(\"qFmK\").ErrorListener;\nvar Interval = __webpack_require__(\"T+Yw\").Interval;\n\nfunction DiagnosticErrorListener(exactOnly) {\n\tErrorListener.call(this);\n\texactOnly = exactOnly || true;\n\t// whether all ambiguities or only exact ambiguities are reported.\n\tthis.exactOnly = exactOnly;\n\treturn this;\n}\n\nDiagnosticErrorListener.prototype = Object.create(ErrorListener.prototype);\nDiagnosticErrorListener.prototype.constructor = DiagnosticErrorListener;\n\nDiagnosticErrorListener.prototype.reportAmbiguity = function(recognizer, dfa,\n\t\tstartIndex, stopIndex, exact, ambigAlts, configs) {\n\tif (this.exactOnly && !exact) {\n\t\treturn;\n\t}\n\tvar msg = \"reportAmbiguity d=\" +\n\t\t\tthis.getDecisionDescription(recognizer, dfa) +\n\t\t\t\": ambigAlts=\" +\n\t\t\tthis.getConflictingAlts(ambigAlts, configs) +\n\t\t\t\", input='\" +\n\t\t\trecognizer.getTokenStream().getText(new Interval(startIndex, stopIndex)) + \"'\";\n\trecognizer.notifyErrorListeners(msg);\n};\n\nDiagnosticErrorListener.prototype.reportAttemptingFullContext = function(\n\t\trecognizer, dfa, startIndex, stopIndex, conflictingAlts, configs) {\n\tvar msg = \"reportAttemptingFullContext d=\" +\n\t\t\tthis.getDecisionDescription(recognizer, dfa) +\n\t\t\t\", input='\" +\n\t\t\trecognizer.getTokenStream().getText(new Interval(startIndex, stopIndex)) + \"'\";\n\trecognizer.notifyErrorListeners(msg);\n};\n\nDiagnosticErrorListener.prototype.reportContextSensitivity = function(\n\t\trecognizer, dfa, startIndex, stopIndex, prediction, configs) {\n\tvar msg = \"reportContextSensitivity d=\" +\n\t\t\tthis.getDecisionDescription(recognizer, dfa) +\n\t\t\t\", input='\" +\n\t\t\trecognizer.getTokenStream().getText(new Interval(startIndex, stopIndex)) + \"'\";\n\trecognizer.notifyErrorListeners(msg);\n};\n\nDiagnosticErrorListener.prototype.getDecisionDescription = function(recognizer, dfa) {\n\tvar decision = dfa.decision;\n\tvar ruleIndex = dfa.atnStartState.ruleIndex;\n\n\tvar ruleNames = recognizer.ruleNames;\n\tif (ruleIndex < 0 || ruleIndex >= ruleNames.length) {\n\t\treturn \"\" + decision;\n\t}\n\tvar ruleName = ruleNames[ruleIndex] || null;\n\tif (ruleName === null || ruleName.length === 0) {\n\t\treturn \"\" + decision;\n\t}\n\treturn \"\" + decision + \" (\" + ruleName + \")\";\n};\n\n//\n// Computes the set of conflicting or ambiguous alternatives from a\n// configuration set, if that information was not already provided by the\n// parser.\n//\n// @param reportedAlts The set of conflicting or ambiguous alternatives, as\n// reported by the parser.\n// @param configs The conflicting or ambiguous configuration set.\n// @return Returns {@code reportedAlts} if it is not {@code null}, otherwise\n// returns the set of alternatives represented in {@code configs}.\n//\nDiagnosticErrorListener.prototype.getConflictingAlts = function(reportedAlts, configs) {\n\tif (reportedAlts !== null) {\n\t\treturn reportedAlts;\n\t}\n\tvar result = new BitSet();\n\tfor (var i = 0; i < configs.items.length; i++) {\n\t\tresult.add(configs.items[i].alt);\n\t}\n\treturn \"{\" + result.values().join(\", \") + \"}\";\n};\n\nexports.DiagnosticErrorListener = DiagnosticErrorListener;\n\n/***/ }),\n\n/***/ \"BO1k\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(\"fxRn\"), __esModule: true };\n\n/***/ }),\n\n/***/ \"CF8A\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nexports.DFA = __webpack_require__(\"VIKC\").DFA;\nexports.DFASerializer = __webpack_require__(\"hL6x\").DFASerializer;\nexports.LexerDFASerializer = __webpack_require__(\"hL6x\").LexerDFASerializer;\nexports.PredPrediction = __webpack_require__(\"IUCG\").PredPrediction;\n\n\n/***/ }),\n\n/***/ \"CLgU\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nvar Tree = __webpack_require__(\"VnEu\");\nexports.Trees = __webpack_require__(\"WmJ1\").Trees;\nexports.RuleNode = Tree.RuleNode;\nexports.ParseTreeListener = Tree.ParseTreeListener;\nexports.ParseTreeVisitor = Tree.ParseTreeVisitor;\nexports.ParseTreeWalker = Tree.ParseTreeWalker;\n\n\n/***/ }),\n\n/***/ \"EesY\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n//* A rule invocation record for parsing.\n//\n//  Contains all of the information about the current rule not stored in the\n//  RuleContext. It handles parse tree children list, Any ATN state\n//  tracing, and the default values available for rule indications:\n//  start, stop, rule index, current alt number, current\n//  ATN state.\n//\n//  Subclasses made for each rule and grammar track the parameters,\n//  return values, locals, and labels specific to that rule. These\n//  are the objects that are returned from rules.\n//\n//  Note text is not an actual field of a rule return value; it is computed\n//  from start and stop using the input stream's toString() method.  I\n//  could add a ctor to this so that we can pass in and store the input\n//  stream, but I'm not sure we want to do that.  It would seem to be undefined\n//  to get the .text property anyway if the rule matches tokens from multiple\n//  input streams.\n//\n//  I do not use getters for fields of objects that are used simply to\n//  group values such as this aggregate.  The getters/setters are there to\n//  satisfy the superclass interface.\n\nvar RuleContext = __webpack_require__(\"6GCw\").RuleContext;\nvar Tree = __webpack_require__(\"VnEu\");\nvar INVALID_INTERVAL = Tree.INVALID_INTERVAL;\nvar TerminalNode = Tree.TerminalNode;\nvar TerminalNodeImpl = Tree.TerminalNodeImpl;\nvar ErrorNodeImpl = Tree.ErrorNodeImpl;\nvar Interval = __webpack_require__(\"T+Yw\").Interval;\n\nfunction ParserRuleContext(parent, invokingStateNumber) {\n\tparent = parent || null;\n\tinvokingStateNumber = invokingStateNumber || null;\n\tRuleContext.call(this, parent, invokingStateNumber);\n\tthis.ruleIndex = -1;\n    // * If we are debugging or building a parse tree for a visitor,\n    // we need to track all of the tokens and rule invocations associated\n    // with this rule's context. This is empty for parsing w/o tree constr.\n    // operation because we don't the need to track the details about\n    // how we parse this rule.\n    // /\n    this.children = null;\n    this.start = null;\n    this.stop = null;\n    // The exception that forced this rule to return. If the rule successfully\n    // completed, this is {@code null}.\n    this.exception = null;\n}\n\nParserRuleContext.prototype = Object.create(RuleContext.prototype);\nParserRuleContext.prototype.constructor = ParserRuleContext;\n\n// * COPY a ctx (I'm deliberately not using copy constructor)///\nParserRuleContext.prototype.copyFrom = function(ctx) {\n    // from RuleContext\n    this.parentCtx = ctx.parentCtx;\n    this.invokingState = ctx.invokingState;\n    this.children = null;\n    this.start = ctx.start;\n    this.stop = ctx.stop;\n    // copy any error nodes to alt label node\n    if(ctx.children) {\n        this.children = [];\n        // reset parent pointer for any error nodes\n    \tctx.children.map(function(child) {\n    \t\tif (child instanceof ErrorNodeImpl) {\n                this.children.push(child);\n                child.parentCtx = this;\n            }\n\t\t}, this);\n\t}\n};\n\n// Double dispatch methods for listeners\nParserRuleContext.prototype.enterRule = function(listener) {\n};\n\nParserRuleContext.prototype.exitRule = function(listener) {\n};\n\n// * Does not set parent link; other add methods do that///\nParserRuleContext.prototype.addChild = function(child) {\n    if (this.children === null) {\n        this.children = [];\n    }\n    this.children.push(child);\n    return child;\n};\n\n// * Used by enterOuterAlt to toss out a RuleContext previously added as\n// we entered a rule. If we have // label, we will need to remove\n// generic ruleContext object.\n// /\nParserRuleContext.prototype.removeLastChild = function() {\n    if (this.children !== null) {\n        this.children.pop();\n    }\n};\n\nParserRuleContext.prototype.addTokenNode = function(token) {\n    var node = new TerminalNodeImpl(token);\n    this.addChild(node);\n    node.parentCtx = this;\n    return node;\n};\n\nParserRuleContext.prototype.addErrorNode = function(badToken) {\n    var node = new ErrorNodeImpl(badToken);\n    this.addChild(node);\n    node.parentCtx = this;\n    return node;\n};\n\nParserRuleContext.prototype.getChild = function(i, type) {\n\ttype = type || null;\n\tif (this.children === null || i < 0 || i >= this.children.length) {\n\t\treturn null;\n\t}\n\tif (type === null) {\n\t\treturn this.children[i];\n\t} else {\n\t\tfor(var j=0; j<this.children.length; j++) {\n\t\t\tvar child = this.children[j];\n\t\t\tif(child instanceof type) {\n\t\t\t\tif(i===0) {\n\t\t\t\t\treturn child;\n\t\t\t\t} else {\n\t\t\t\t\ti -= 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n    }\n};\n\n\nParserRuleContext.prototype.getToken = function(ttype, i) {\n\tif (this.children === null || i < 0 || i >= this.children.length) {\n\t\treturn null;\n\t}\n\tfor(var j=0; j<this.children.length; j++) {\n\t\tvar child = this.children[j];\n\t\tif (child instanceof TerminalNode) {\n\t\t\tif (child.symbol.type === ttype) {\n\t\t\t\tif(i===0) {\n\t\t\t\t\treturn child;\n\t\t\t\t} else {\n\t\t\t\t\ti -= 1;\n\t\t\t\t}\n\t\t\t}\n        }\n\t}\n    return null;\n};\n\nParserRuleContext.prototype.getTokens = function(ttype ) {\n    if (this.children=== null) {\n        return [];\n    } else {\n\t\tvar tokens = [];\n\t\tfor(var j=0; j<this.children.length; j++) {\n\t\t\tvar child = this.children[j];\n\t\t\tif (child instanceof TerminalNode) {\n\t\t\t\tif (child.symbol.type === ttype) {\n\t\t\t\t\ttokens.push(child);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn tokens;\n    }\n};\n\nParserRuleContext.prototype.getTypedRuleContext = function(ctxType, i) {\n    return this.getChild(i, ctxType);\n};\n\nParserRuleContext.prototype.getTypedRuleContexts = function(ctxType) {\n    if (this.children=== null) {\n        return [];\n    } else {\n\t\tvar contexts = [];\n\t\tfor(var j=0; j<this.children.length; j++) {\n\t\t\tvar child = this.children[j];\n\t\t\tif (child instanceof ctxType) {\n\t\t\t\tcontexts.push(child);\n\t\t\t}\n\t\t}\n\t\treturn contexts;\n\t}\n};\n\nParserRuleContext.prototype.getChildCount = function() {\n\tif (this.children=== null) {\n\t\treturn 0;\n\t} else {\n\t\treturn this.children.length;\n\t}\n};\n\nParserRuleContext.prototype.getSourceInterval = function() {\n    if( this.start === null || this.stop === null) {\n        return INVALID_INTERVAL;\n    } else {\n        return new Interval(this.start.tokenIndex, this.stop.tokenIndex);\n    }\n};\n\nRuleContext.EMPTY = new ParserRuleContext();\n\nfunction InterpreterRuleContext(parent, invokingStateNumber, ruleIndex) {\n\tParserRuleContext.call(parent, invokingStateNumber);\n    this.ruleIndex = ruleIndex;\n    return this;\n}\n\nInterpreterRuleContext.prototype = Object.create(ParserRuleContext.prototype);\nInterpreterRuleContext.prototype.constructor = InterpreterRuleContext;\n\nexports.ParserRuleContext = ParserRuleContext;\n\n/***/ }),\n\n/***/ \"Ev7n\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar policy = __webpack_require__(\"1sgP\");\nvar policyListener = policy.policyListener;\nvar underscore = __webpack_require__(\"rdLu\");\n\n//排列\npermute.permArr = [];\npermute.usedChars = [];\nfunction permute(input) {\n  var i = void 0,\n    ch = void 0;\n  for (i = 0; i < input.length; i++) {\n    ch = input.splice(i, 1)[0];\n    permute.usedChars.push(ch);\n    if (input.length == 0) {\n      permute.permArr.push(permute.usedChars.slice());\n    }\n    permute(input);\n    input.splice(i, 0, ch);\n    permute.usedChars.pop();\n  }\n  return permute.permArr;\n};\n//随机的中间态名称\nfunction genRandomStateName(evt1, evt2, evtName) {\n  return 'autoGenratedState_' + evt1 + '_' + evt2 + '_' + evtName + '_' + (new Date() * Math.random()).toString(36).substring(0, 4);\n};\n\nvar JSONGeneratorExtentionClass = function (_policyListener) {\n  _inherits(JSONGeneratorExtentionClass, _policyListener);\n\n  function JSONGeneratorExtentionClass() {\n    _classCallCheck(this, JSONGeneratorExtentionClass);\n\n    var _this = _possibleConstructorReturn(this, (JSONGeneratorExtentionClass.__proto__ || Object.getPrototypeOf(JSONGeneratorExtentionClass)).call(this));\n\n    _this.errorMsg = null;\n    _this.policy_segments = [];\n    return _this;\n  }\n\n  _createClass(JSONGeneratorExtentionClass, [{\n    key: 'enterP',\n    value: function enterP(ctx) {}\n  }, {\n    key: 'exitP',\n    value: function exitP(ctx) {}\n  }, {\n    key: 'enterStart_hour',\n    value: function enterStart_hour(ctx) {}\n  }, {\n    key: 'exitStart_hour',\n    value: function exitStart_hour(ctx) {}\n  }, {\n    key: 'enterEnd_hour',\n    value: function enterEnd_hour(ctx) {}\n  }, {\n    key: 'exitEnd_hour',\n    value: function exitEnd_hour(ctx) {}\n  }, {\n    key: 'enterSegment',\n    value: function enterSegment(ctx) {\n      //对应一个segment\n      ctx.segment_block = {\n        segmentText: ctx.start.source[0]._input.strdata.slice(ctx.start.start, ctx.stop.stop + 1),\n        initialState: 'initial',\n        terminateState: 'terminate',\n        users: [], //暂时只有两种user，个人的和组的\n        states: [],\n        all_occured_states: [],\n        state_transition_table: []\n      };\n    }\n  }, {\n    key: 'exitSegment',\n    value: function exitSegment(ctx) {\n      // this.policy_segments.push(ctx.segment_block);\n    }\n  }, {\n    key: 'enterAudience_clause',\n\n    // 留给下简化版\n    // enterSettlement_clause (ctx) {};\n    // exitSettlement_clause (ctx) {\n    //   //settlement事件\n    //   let settlementForward = {\n    //     type: 'settlementForward',\n    //     params: [3, 'day'],\n    //     eventName: 'settlementForward_3_day'\n    //   };\n    //   let accountSettled = {\n    //     type: 'accountSettled',\n    //     params: [],\n    //     eventName: 'accountSettled'\n    //   };\n    //   //列出所有token states\n    //   let tokenStates = _.reduce( ctx.ID(), (x, y)=> {\n    //     return x.concat(y.getText())\n    //   }, []);\n    //   //获取对应的segment\n    //   let segment = this.policy_segments[this.policy_segments.length-1];\n    //   //检查tokens staets 是否已经出现,并且暂存一起来，如果pass验证，那么就concat进去了\n    //   let tempStates = [];\n    //   let statesOccured = _.every(tokenStates, (el)=> {\n    //     tempStates.push({\n    //       currentState: el,\n    //       event: settlementForward,\n    //       nextState: 'settlement'\n    //     });\n    //     tempStates.push({\n    //       currentState: 'settlement',\n    //       event: accountSettled,\n    //       nextState: el\n    //     });\n    //     return _.contains(segment.all_occured_states, el);\n    //   });\n    //   // //针对当前segment加入结算事件\n    //   if ( statesOccured ) {\n    //     Array.prototype.push.apply(this.policy_segments[this.policy_segments.length-1].state_transition_table, tempStates);\n    //   }\n    // };\n    value: function enterAudience_clause(ctx) {\n      ctx.segment_block = ctx.parentCtx.segment_block;\n    }\n  }, {\n    key: 'exitAudience_clause',\n    value: function exitAudience_clause(ctx) {\n      ctx.parentCtx.segment_block = ctx.segment_block;\n    }\n  }, {\n    key: 'enterAthorize_token_clause',\n    value: function enterAthorize_token_clause(ctx) {\n      ctx.segment_block = ctx.parentCtx.segment_block;\n      ctx.segment_block.activatedStates = [];\n      underscore.each(ctx.ID(), function (state) {\n        ctx.segment_block.activatedStates.push(state.getText());\n      });\n    }\n  }, {\n    key: 'exitAthorize_token_clause',\n    value: function exitAthorize_token_clause(ctx) {\n      this.policy_segments.push(ctx.segment_block);\n    }\n  }, {\n    key: 'enterAudience_individuals_clause',\n    value: function enterAudience_individuals_clause(ctx) {\n      ctx.segment_block = ctx.parentCtx.segment_block;\n      ctx.userObj = {};\n      ctx.userObj.userType = 'individuals';\n    }\n  }, {\n    key: 'exitAudience_individuals_clause',\n    value: function exitAudience_individuals_clause(ctx) {\n      ctx.segment_block.users.push(ctx.userObj);\n      ctx.parentCtx.segment_block = ctx.segment_block;\n    }\n  }, {\n    key: 'enterAudience_groups_clause',\n    value: function enterAudience_groups_clause(ctx) {\n      ctx.segment_block = ctx.parentCtx.segment_block;\n      ctx.userObj = {};\n      ctx.userObj.userType = 'groups';\n    }\n  }, {\n    key: 'exitAudience_groups_clause',\n    value: function exitAudience_groups_clause(ctx) {\n      ctx.segment_block.users.push(ctx.userObj);\n      ctx.parentCtx.segment_block = ctx.segment_block;\n    }\n  }, {\n    key: 'enterState_clause',\n    value: function enterState_clause(ctx) {\n      ctx.segment_block = ctx.parentCtx.segment_block;\n    }\n  }, {\n    key: 'exitState_clause',\n    value: function exitState_clause(ctx) {\n      ctx.parentCtx.segment_block = ctx.segment_block;\n    }\n  }, {\n    key: 'enterCurrent_state_clause',\n    value: function enterCurrent_state_clause(ctx) {\n      ctx.segment_block = ctx.parentCtx.segment_block;\n      ctx.segment_block.states.push(ctx.ID().getText());\n      ctx.segment_block.all_occured_states.push(ctx.ID().getText());\n      ctx.segment_block.all_occured_states = underscore.uniq(ctx.segment_block.all_occured_states);\n    }\n  }, {\n    key: 'exitCurrent_state_clause',\n    value: function exitCurrent_state_clause(ctx) {\n      ctx.parentCtx.segment_block = ctx.segment_block;\n    }\n  }, {\n    key: 'enterTarget_clause',\n    value: function enterTarget_clause(ctx) {\n      ctx.segment_block = ctx.parentCtx.segment_block;\n      //重置state\n      ctx.current_state = ctx.parentCtx.current_state_clause().ID().getText();\n      //next_state\n      ctx.next_state = ctx.ID().getText();\n      //重置event\n      ctx.events = [];\n    }\n  }, {\n    key: 'exitTarget_clause',\n\n\n    // Exit a parse tree produced by policyParser#target_clause.\n    value: function exitTarget_clause(ctx) {\n      var state_transition = void 0;\n      if (ctx.events.length > 1) {\n        state_transition = {\n          currentState: ctx.current_state,\n          event: {\n            type: 'compoundEvents',\n            params: ctx.events\n          },\n          nextState: ctx.next_state\n        };\n      } else {\n        state_transition = {\n          currentState: ctx.current_state,\n          event: ctx.events[0],\n          nextState: ctx.next_state\n        };\n      }\n      ctx.segment_block.state_transition_table.push(state_transition);\n      // //生成中间状态\n      // let tempCurrent = ctx.current_state;\n      // //permute当前events\n      // _.each(permute(ctx.events), (orderedEvts) => {\n      //   tempCurrent = ctx.current_state;\n      //   let path = [];\n      //   while (orderedEvts.length != 0) {\n      //     let event = orderedEvts.pop();\n      //     path.push(event.type);\n      //     let randomStateName = genRandomStateName(ctx.current_state, ctx.next_state,path.join('-'));\n      //     let state_transition = {\n      //       currentState: tempCurrent,\n      //       event: event,\n      //       nextState: ctx.next_state\n      //     };\n      //     if (orderedEvts.length != 0) {\n      //       state_transition.nextState = randomStateName;\n      //       tempCurrent = randomStateName;\n      //       ctx.segment_block.all_occured_states.push(randomStateName); //记录同一个起始state下面所有的target state及中间state\n      //     }\n      //     ctx.segment_block.state_transition_table.push(state_transition);\n      //   }\n      // });\n      //记录同一个curren_state 下的多个target\n      ctx.segment_block.all_occured_states.push(ctx.next_state);\n      ctx.segment_block.all_occured_states = underscore.uniq(ctx.segment_block.all_occured_states);\n      //回传\n      ctx.parentCtx.segment_block = ctx.segment_block;\n    }\n  }, {\n    key: 'enterEvent',\n    value: function enterEvent(ctx) {\n      ctx.events = ctx.parentCtx.events;\n    }\n  }, {\n    key: 'exitEvent',\n    value: function exitEvent(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterAnd_event',\n    value: function enterAnd_event(ctx) {\n      ctx.events = ctx.parentCtx.events;\n    }\n  }, {\n    key: 'exitAnd_event',\n    value: function exitAnd_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterPeriod_event',\n    value: function enterPeriod_event(ctx) {\n      var timeUnit = ctx.time_unit().getText();\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({\n        type: 'period',\n        params: [timeUnit],\n        eventName: 'period_' + timeUnit + '_event'\n      });\n    }\n  }, {\n    key: 'exitPeriod_event',\n    value: function exitPeriod_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterSpecific_date_event',\n    value: function enterSpecific_date_event(ctx) {\n      var date = ctx.DATE().getText();\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({\n        type: 'arrivalDate',\n        params: [1, date],\n        eventName: 'arrivalDate_1_' + date + '_event'\n      });\n    }\n  }, {\n    key: 'exitSpecific_date_event',\n    value: function exitSpecific_date_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterRelative_date_event',\n    value: function enterRelative_date_event(ctx) {\n      var day = Number(ctx.INT().getText());\n      var unit = ctx.time_unit().getText();\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({\n        type: 'arrivalDate',\n        params: [0, day, unit],\n        eventName: 'arrivalDate_0_' + day + '_' + unit + '_event'\n      });\n    }\n  }, {\n    key: 'exitRelative_date_event',\n    value: function exitRelative_date_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterPricing_agreement_event',\n    value: function enterPricing_agreement_event(ctx) {\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({\n        type: 'pricingAgreement',\n        params: [tbd],\n        eventName: 'pricingAgreement'\n      });\n    }\n  }, {\n    key: 'exitPricing_agreement_event',\n    value: function exitPricing_agreement_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterTransaction_event',\n    value: function enterTransaction_event(ctx) {\n      var transactionAmount = Number(ctx.INT().getText());\n      var account_id = ctx.FEATHERACCOUNT().getText();\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({\n        type: 'transaction',\n        params: [account_id, transactionAmount],\n        eventName: 'transaction_' + account_id + '_' + transactionAmount + '_event'\n      });\n    }\n  }, {\n    key: 'exitTransaction_event',\n    value: function exitTransaction_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterSigning_event',\n    value: function enterSigning_event(ctx) {\n      ctx.events = ctx.parentCtx.events;\n      var tempLicenseIds = [];\n      underscore.each(ctx.license_resource_id(), function (licensId) {\n        tempLicenseIds.push(licensId.getText());\n      });\n      ctx.events.push({\n        type: 'signing',\n        params: tempLicenseIds,\n        eventName: 'signing_' + tempLicenseIds.join('_')\n      });\n    }\n  }, {\n    key: 'exitSigning_event',\n    value: function exitSigning_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterGuaranty_event',\n    value: function enterGuaranty_event(ctx) {\n      ctx.events = ctx.parentCtx.events;\n    }\n  }, {\n    key: 'exitGuaranty_event',\n    value: function exitGuaranty_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterContract_guaranty',\n    value: function enterContract_guaranty(ctx) {\n      var amount = ctx.INT()[0].getText();\n      var day = ctx.INT()[1].getText();\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({\n        type: 'contractGuaranty',\n        params: [amount, day, 'day'],\n        eventName: 'contractGuaranty_' + amount + '_' + day + '_event'\n      });\n    }\n  }, {\n    key: 'exitContract_guaranty',\n    value: function exitContract_guaranty(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterPlatform_guaranty',\n    value: function enterPlatform_guaranty(ctx) {\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({\n        type: 'platformGuaranty',\n        params: [Number(ctx.INT().getText())],\n        eventName: 'platformGuaranty'\n      });\n    }\n  }, {\n    key: 'exitPlatform_guaranty',\n    value: function exitPlatform_guaranty(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterSettlement_event',\n    value: function enterSettlement_event(ctx) {\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({\n        type: 'accountSettled',\n        params: []\n      });\n    }\n  }, {\n    key: 'exitSettlement_event',\n    value: function exitSettlement_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterAccess_count_event',\n    value: function enterAccess_count_event(ctx) {\n      ctx.events = ctx.parentCtx.events;\n    }\n  }, {\n    key: 'exitAccess_count_event',\n    value: function exitAccess_count_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterVisit_increment_event',\n    value: function enterVisit_increment_event(ctx) {\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({\n        type: 'accessCountIncrement',\n        params: [Number(ctx.INT().getText())]\n      });\n    }\n  }, {\n    key: 'exitVisit_increment_event',\n\n\n    // Exit a parse tree produced by policyParser#visit_increment_event.\n    value: function exitVisit_increment_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterVisit_event',\n    value: function enterVisit_event(ctx) {\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({\n        type: 'accessCount',\n        params: [Number(ctx.INT().getText())]\n      });\n    }\n  }, {\n    key: 'exitVisit_event',\n    value: function exitVisit_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterBalance_event',\n    value: function enterBalance_event(ctx) {\n      ctx.events = ctx.parentCtx.events;\n    }\n  }, {\n    key: 'exitBalance_event',\n    value: function exitBalance_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterBalance_greater',\n\n\n    // Enter a parse tree produced by policyParser#balance_greater.\n    value: function enterBalance_greater(ctx) {\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({ type: 'balance_smaller_event', params: ctx.getText() });\n    }\n  }, {\n    key: 'exitBalance_greater',\n    value: function exitBalance_greater(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterBalance_smaller',\n    value: function enterBalance_smaller(ctx) {\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({ type: 'balance_greater_event', params: ctx.getText() });\n    }\n  }, {\n    key: 'exitBalance_smaller',\n    value: function exitBalance_smaller(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterTime_unit',\n    value: function enterTime_unit(ctx) {}\n  }, {\n    key: 'exitTime_unit',\n    value: function exitTime_unit(ctx) {}\n  }, {\n    key: 'enterState',\n    value: function enterState(ctx) {}\n  }, {\n    key: 'exitState',\n    value: function exitState(ctx) {}\n  }, {\n    key: 'enterLicense_resource_id',\n    value: function enterLicense_resource_id(ctx) {}\n  }, {\n    key: 'exitLicense_resource_id',\n    value: function exitLicense_resource_id(ctx) {}\n  }, {\n    key: 'enterUsers',\n    value: function enterUsers(ctx) {\n      //继承\n      ctx.userObj = ctx.parentCtx.userObj;\n      //新增users\n      ctx.userObj.users = ctx.userObj.users || [];\n      ctx.userObj.users.push(ctx.getText());\n      // for (var i = 0; i < ctx.getChildCount(); i++) {\n      //   if (ctx.getChild(i).getText() != ',') {\n      //     //修改\n      //     ctx.userObj.users.push(ctx.getChild(i).getText());\n      //   }\n      // }\n    }\n  }, {\n    key: 'exitUsers',\n    value: function exitUsers(ctx) {\n      //回传\n      ctx.parentCtx.userObj = ctx.userObj;\n    }\n  }, {\n    key: 'enterUser_groups',\n    value: function enterUser_groups(ctx) {\n      //继承\n      ctx.userObj = ctx.parentCtx.userObj;\n      //新增users\n      ctx.userObj.users = ctx.userObj.users || [];\n      for (var i = 0; i < ctx.getChildCount(); i++) {\n        if (ctx.getChild(i).getText() != ',') {\n          ctx.userObj.users.push(ctx.getChild(i).getText());\n        }\n      }\n    }\n  }, {\n    key: 'exitUser_groups',\n    value: function exitUser_groups(ctx) {\n      //回传\n      ctx.parentCtx.userObj = ctx.userObj;\n    }\n  }]);\n\n  return JSONGeneratorExtentionClass;\n}(policyListener);\n\n;\n\nmodule.exports = JSONGeneratorExtentionClass;\n\n\n/***/ }),\n\n/***/ \"ExQ7\":\n/***/ (function(module, exports, __webpack_require__) {\n\n//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n// This implementation of {@link TokenStream} loads tokens from a\n// {@link TokenSource} on-demand, and places the tokens in a buffer to provide\n// access to any previous token by index.\n//\n// <p>\n// This token stream ignores the value of {@link Token//getChannel}. If your\n// parser requires the token stream filter tokens to only those on a particular\n// channel, such as {@link Token//DEFAULT_CHANNEL} or\n// {@link Token//HIDDEN_CHANNEL}, use a filtering token stream such a\n// {@link CommonTokenStream}.</p>\n\nvar Token = __webpack_require__(\"j/5l\").Token;\nvar Lexer = __webpack_require__(\"h0lj\").Lexer;\nvar Interval = __webpack_require__(\"T+Yw\").Interval;\n\n// this is just to keep meaningful parameter types to Parser\nfunction TokenStream() {\n\treturn this;\n}\n\nfunction BufferedTokenStream(tokenSource) {\n\n\tTokenStream.call(this);\n\t// The {@link TokenSource} from which tokens for this stream are fetched.\n\tthis.tokenSource = tokenSource;\n\n\t// A collection of all tokens fetched from the token source. The list is\n\t// considered a complete view of the input once {@link //fetchedEOF} is set\n\t// to {@code true}.\n\tthis.tokens = [];\n\n\t// The index into {@link //tokens} of the current token (next token to\n\t// {@link //consume}). {@link //tokens}{@code [}{@link //p}{@code ]} should\n\t// be\n\t// {@link //LT LT(1)}.\n\t//\n\t// <p>This field is set to -1 when the stream is first constructed or when\n\t// {@link //setTokenSource} is called, indicating that the first token has\n\t// not yet been fetched from the token source. For additional information,\n\t// see the documentation of {@link IntStream} for a description of\n\t// Initializing Methods.</p>\n\tthis.index = -1;\n\n\t// Indicates whether the {@link Token//EOF} token has been fetched from\n\t// {@link //tokenSource} and added to {@link //tokens}. This field improves\n\t// performance for the following cases:\n\t//\n\t// <ul>\n\t// <li>{@link //consume}: The lookahead check in {@link //consume} to\n\t// prevent\n\t// consuming the EOF symbol is optimized by checking the values of\n\t// {@link //fetchedEOF} and {@link //p} instead of calling {@link\n\t// //LA}.</li>\n\t// <li>{@link //fetch}: The check to prevent adding multiple EOF symbols\n\t// into\n\t// {@link //tokens} is trivial with this field.</li>\n\t// <ul>\n\tthis.fetchedEOF = false;\n\treturn this;\n}\n\nBufferedTokenStream.prototype = Object.create(TokenStream.prototype);\nBufferedTokenStream.prototype.constructor = BufferedTokenStream;\n\nBufferedTokenStream.prototype.mark = function() {\n\treturn 0;\n};\n\nBufferedTokenStream.prototype.release = function(marker) {\n\t// no resources to release\n};\n\nBufferedTokenStream.prototype.reset = function() {\n\tthis.seek(0);\n};\n\nBufferedTokenStream.prototype.seek = function(index) {\n\tthis.lazyInit();\n\tthis.index = this.adjustSeekIndex(index);\n};\n\nBufferedTokenStream.prototype.get = function(index) {\n\tthis.lazyInit();\n\treturn this.tokens[index];\n};\n\nBufferedTokenStream.prototype.consume = function() {\n\tvar skipEofCheck = false;\n\tif (this.index >= 0) {\n\t\tif (this.fetchedEOF) {\n\t\t\t// the last token in tokens is EOF. skip check if p indexes any\n\t\t\t// fetched token except the last.\n\t\t\tskipEofCheck = this.index < this.tokens.length - 1;\n\t\t} else {\n\t\t\t// no EOF token in tokens. skip check if p indexes a fetched token.\n\t\t\tskipEofCheck = this.index < this.tokens.length;\n\t\t}\n\t} else {\n\t\t// not yet initialized\n\t\tskipEofCheck = false;\n\t}\n\tif (!skipEofCheck && this.LA(1) === Token.EOF) {\n\t\tthrow \"cannot consume EOF\";\n\t}\n\tif (this.sync(this.index + 1)) {\n\t\tthis.index = this.adjustSeekIndex(this.index + 1);\n\t}\n};\n\n// Make sure index {@code i} in tokens has a token.\n//\n// @return {@code true} if a token is located at index {@code i}, otherwise\n// {@code false}.\n// @see //get(int i)\n// /\nBufferedTokenStream.prototype.sync = function(i) {\n\tvar n = i - this.tokens.length + 1; // how many more elements we need?\n\tif (n > 0) {\n\t\tvar fetched = this.fetch(n);\n\t\treturn fetched >= n;\n\t}\n\treturn true;\n};\n\n// Add {@code n} elements to buffer.\n//\n// @return The actual number of elements added to the buffer.\n// /\nBufferedTokenStream.prototype.fetch = function(n) {\n\tif (this.fetchedEOF) {\n\t\treturn 0;\n\t}\n\tfor (var i = 0; i < n; i++) {\n\t\tvar t = this.tokenSource.nextToken();\n\t\tt.tokenIndex = this.tokens.length;\n\t\tthis.tokens.push(t);\n\t\tif (t.type === Token.EOF) {\n\t\t\tthis.fetchedEOF = true;\n\t\t\treturn i + 1;\n\t\t}\n\t}\n\treturn n;\n};\n\n// Get all tokens from start..stop inclusively///\nBufferedTokenStream.prototype.getTokens = function(start, stop, types) {\n\tif (types === undefined) {\n\t\ttypes = null;\n\t}\n\tif (start < 0 || stop < 0) {\n\t\treturn null;\n\t}\n\tthis.lazyInit();\n\tvar subset = [];\n\tif (stop >= this.tokens.length) {\n\t\tstop = this.tokens.length - 1;\n\t}\n\tfor (var i = start; i < stop; i++) {\n\t\tvar t = this.tokens[i];\n\t\tif (t.type === Token.EOF) {\n\t\t\tbreak;\n\t\t}\n\t\tif (types === null || types.contains(t.type)) {\n\t\t\tsubset.push(t);\n\t\t}\n\t}\n\treturn subset;\n};\n\nBufferedTokenStream.prototype.LA = function(i) {\n\treturn this.LT(i).type;\n};\n\nBufferedTokenStream.prototype.LB = function(k) {\n\tif (this.index - k < 0) {\n\t\treturn null;\n\t}\n\treturn this.tokens[this.index - k];\n};\n\nBufferedTokenStream.prototype.LT = function(k) {\n\tthis.lazyInit();\n\tif (k === 0) {\n\t\treturn null;\n\t}\n\tif (k < 0) {\n\t\treturn this.LB(-k);\n\t}\n\tvar i = this.index + k - 1;\n\tthis.sync(i);\n\tif (i >= this.tokens.length) { // return EOF token\n\t\t// EOF must be last token\n\t\treturn this.tokens[this.tokens.length - 1];\n\t}\n\treturn this.tokens[i];\n};\n\n// Allowed derived classes to modify the behavior of operations which change\n// the current stream position by adjusting the target token index of a seek\n// operation. The default implementation simply returns {@code i}. If an\n// exception is thrown in this method, the current stream index should not be\n// changed.\n//\n// <p>For example, {@link CommonTokenStream} overrides this method to ensure\n// that\n// the seek target is always an on-channel token.</p>\n//\n// @param i The target token index.\n// @return The adjusted target token index.\n\nBufferedTokenStream.prototype.adjustSeekIndex = function(i) {\n\treturn i;\n};\n\nBufferedTokenStream.prototype.lazyInit = function() {\n\tif (this.index === -1) {\n\t\tthis.setup();\n\t}\n};\n\nBufferedTokenStream.prototype.setup = function() {\n\tthis.sync(0);\n\tthis.index = this.adjustSeekIndex(0);\n};\n\n// Reset this token stream by setting its token source.///\nBufferedTokenStream.prototype.setTokenSource = function(tokenSource) {\n\tthis.tokenSource = tokenSource;\n\tthis.tokens = [];\n\tthis.index = -1;\n\tthis.fetchedEOF = false;\n};\n\n\n// Given a starting index, return the index of the next token on channel.\n// Return i if tokens[i] is on channel. Return -1 if there are no tokens\n// on channel between i and EOF.\n// /\nBufferedTokenStream.prototype.nextTokenOnChannel = function(i, channel) {\n\tthis.sync(i);\n\tif (i >= this.tokens.length) {\n\t\treturn -1;\n\t}\n\tvar token = this.tokens[i];\n\twhile (token.channel !== this.channel) {\n\t\tif (token.type === Token.EOF) {\n\t\t\treturn -1;\n\t\t}\n\t\ti += 1;\n\t\tthis.sync(i);\n\t\ttoken = this.tokens[i];\n\t}\n\treturn i;\n};\n\n// Given a starting index, return the index of the previous token on channel.\n// Return i if tokens[i] is on channel. Return -1 if there are no tokens\n// on channel between i and 0.\nBufferedTokenStream.prototype.previousTokenOnChannel = function(i, channel) {\n\twhile (i >= 0 && this.tokens[i].channel !== channel) {\n\t\ti -= 1;\n\t}\n\treturn i;\n};\n\n// Collect all tokens on specified channel to the right of\n// the current token up until we see a token on DEFAULT_TOKEN_CHANNEL or\n// EOF. If channel is -1, find any non default channel token.\nBufferedTokenStream.prototype.getHiddenTokensToRight = function(tokenIndex,\n\t\tchannel) {\n\tif (channel === undefined) {\n\t\tchannel = -1;\n\t}\n\tthis.lazyInit();\n\tif (tokenIndex < 0 || tokenIndex >= this.tokens.length) {\n\t\tthrow \"\" + tokenIndex + \" not in 0..\" + this.tokens.length - 1;\n\t}\n\tvar nextOnChannel = this.nextTokenOnChannel(tokenIndex + 1, Lexer.DEFAULT_TOKEN_CHANNEL);\n\tvar from_ = tokenIndex + 1;\n\t// if none onchannel to right, nextOnChannel=-1 so set to = last token\n\tvar to = nextOnChannel === -1 ? this.tokens.length - 1 : nextOnChannel;\n\treturn this.filterForChannel(from_, to, channel);\n};\n\n// Collect all tokens on specified channel to the left of\n// the current token up until we see a token on DEFAULT_TOKEN_CHANNEL.\n// If channel is -1, find any non default channel token.\nBufferedTokenStream.prototype.getHiddenTokensToLeft = function(tokenIndex,\n\t\tchannel) {\n\tif (channel === undefined) {\n\t\tchannel = -1;\n\t}\n\tthis.lazyInit();\n\tif (tokenIndex < 0 || tokenIndex >= this.tokens.length) {\n\t\tthrow \"\" + tokenIndex + \" not in 0..\" + this.tokens.length - 1;\n\t}\n\tvar prevOnChannel = this.previousTokenOnChannel(tokenIndex - 1, Lexer.DEFAULT_TOKEN_CHANNEL);\n\tif (prevOnChannel === tokenIndex - 1) {\n\t\treturn null;\n\t}\n\t// if none on channel to left, prevOnChannel=-1 then from=0\n\tvar from_ = prevOnChannel + 1;\n\tvar to = tokenIndex - 1;\n\treturn this.filterForChannel(from_, to, channel);\n};\n\nBufferedTokenStream.prototype.filterForChannel = function(left, right, channel) {\n\tvar hidden = [];\n\tfor (var i = left; i < right + 1; i++) {\n\t\tvar t = this.tokens[i];\n\t\tif (channel === -1) {\n\t\t\tif (t.channel !== Lexer.DEFAULT_TOKEN_CHANNEL) {\n\t\t\t\thidden.push(t);\n\t\t\t}\n\t\t} else if (t.channel === channel) {\n\t\t\thidden.push(t);\n\t\t}\n\t}\n\tif (hidden.length === 0) {\n\t\treturn null;\n\t}\n\treturn hidden;\n};\n\nBufferedTokenStream.prototype.getSourceName = function() {\n\treturn this.tokenSource.getSourceName();\n};\n\n// Get the text of all tokens in this buffer.///\nBufferedTokenStream.prototype.getText = function(interval) {\n\tthis.lazyInit();\n\tthis.fill();\n\tif (interval === undefined || interval === null) {\n\t\tinterval = new Interval(0, this.tokens.length - 1);\n\t}\n\tvar start = interval.start;\n\tif (start instanceof Token) {\n\t\tstart = start.tokenIndex;\n\t}\n\tvar stop = interval.stop;\n\tif (stop instanceof Token) {\n\t\tstop = stop.tokenIndex;\n\t}\n\tif (start === null || stop === null || start < 0 || stop < 0) {\n\t\treturn \"\";\n\t}\n\tif (stop >= this.tokens.length) {\n\t\tstop = this.tokens.length - 1;\n\t}\n\tvar s = \"\";\n\tfor (var i = start; i < stop + 1; i++) {\n\t\tvar t = this.tokens[i];\n\t\tif (t.type === Token.EOF) {\n\t\t\tbreak;\n\t\t}\n\t\ts = s + t.text;\n\t}\n\treturn s;\n};\n\n// Get all tokens from lexer until EOF///\nBufferedTokenStream.prototype.fill = function() {\n\tthis.lazyInit();\n\twhile (this.fetch(1000) === 1000) {\n\t\tcontinue;\n\t}\n};\n\nexports.BufferedTokenStream = BufferedTokenStream;\n\n\n/***/ }),\n\n/***/ \"F0r5\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'presentable-tags',\n  data: function data() {\n    return {\n      presentableTags: [],\n      inputVisible: false,\n      inputValue: ''\n    };\n  },\n\n  props: {\n    value: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  watch: {\n    value: function value(val) {\n      this.setCurrentValue(val);\n    }\n  },\n  mounted: function mounted() {\n    this.setCurrentValue(this.value);\n  },\n\n  methods: {\n    setCurrentValue: function setCurrentValue(value) {\n      this.presentableTags = value;\n    },\n    handleClose: function handleClose(tag) {\n      this.presentableTags.splice(this.presentableTags.indexOf(tag), 1);\n      this.$emit('input', this.presentableTags);\n    },\n    showInput: function showInput() {\n      var _this = this;\n\n      this.inputVisible = true;\n      this.$nextTick(function (_) {\n        _this.$refs.saveTagInput.$refs.input.focus();\n      });\n    },\n    handleInputConfirm: function handleInputConfirm() {\n      var inputValue = this.inputValue;\n      if (inputValue) {\n        this.presentableTags.push(inputValue);\n        this.$emit('input', this.presentableTags);\n      }\n      this.inputVisible = false;\n      this.inputValue = '';\n    }\n  }\n});\n\n/***/ }),\n\n/***/ \"Fzuw\":\n/***/ (function(module, exports, __webpack_require__) {\n\n//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\n//\n// This class extends {@link BufferedTokenStream} with functionality to filter\n// token streams to tokens on a particular channel (tokens where\n// {@link Token//getChannel} returns a particular value).\n//\n// <p>\n// This token stream provides access to all tokens by index or when calling\n// methods like {@link //getText}. The channel filtering is only used for code\n// accessing tokens via the lookahead methods {@link //LA}, {@link //LT}, and\n// {@link //LB}.</p>\n//\n// <p>\n// By default, tokens are placed on the default channel\n// ({@link Token//DEFAULT_CHANNEL}), but may be reassigned by using the\n// {@code ->channel(HIDDEN)} lexer command, or by using an embedded action to\n// call {@link Lexer//setChannel}.\n// </p>\n//\n// <p>\n// Note: lexer rules which use the {@code ->skip} lexer command or call\n// {@link Lexer//skip} do not produce tokens at all, so input text matched by\n// such a rule will not be available as part of the token stream, regardless of\n// channel.</p>\n///\n\nvar Token = __webpack_require__(\"j/5l\").Token;\nvar BufferedTokenStream = __webpack_require__(\"ExQ7\").BufferedTokenStream;\n\nfunction CommonTokenStream(lexer, channel) {\n\tBufferedTokenStream.call(this, lexer);\n    this.channel = channel===undefined ? Token.DEFAULT_CHANNEL : channel;\n    return this;\n}\n\nCommonTokenStream.prototype = Object.create(BufferedTokenStream.prototype);\nCommonTokenStream.prototype.constructor = CommonTokenStream;\n\nCommonTokenStream.prototype.adjustSeekIndex = function(i) {\n    return this.nextTokenOnChannel(i, this.channel);\n};\n\nCommonTokenStream.prototype.LB = function(k) {\n    if (k===0 || this.index-k<0) {\n        return null;\n    }\n    var i = this.index;\n    var n = 1;\n    // find k good tokens looking backwards\n    while (n <= k) {\n        // skip off-channel tokens\n        i = this.previousTokenOnChannel(i - 1, this.channel);\n        n += 1;\n    }\n    if (i < 0) {\n        return null;\n    }\n    return this.tokens[i];\n};\n\nCommonTokenStream.prototype.LT = function(k) {\n    this.lazyInit();\n    if (k === 0) {\n        return null;\n    }\n    if (k < 0) {\n        return this.LB(-k);\n    }\n    var i = this.index;\n    var n = 1; // we know tokens[pos] is a good one\n    // find k good tokens\n    while (n < k) {\n        // skip off-channel tokens, but make sure to not look past EOF\n        if (this.sync(i + 1)) {\n            i = this.nextTokenOnChannel(i + 1, this.channel);\n        }\n        n += 1;\n    }\n    return this.tokens[i];\n};\n\n// Count EOF just once.///\nCommonTokenStream.prototype.getNumberOfOnChannelTokens = function() {\n    var n = 0;\n    this.fill();\n    for (var i =0; i< this.tokens.length;i++) {\n        var t = this.tokens[i];\n        if( t.channel===this.channel) {\n            n += 1;\n        }\n        if( t.type===Token.EOF) {\n            break;\n        }\n    }\n    return n;\n};\n\nexports.CommonTokenStream = CommonTokenStream;\n\n/***/ }),\n\n/***/ \"HNBV\":\n/***/ (function(module, exports, __webpack_require__) {\n\n//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\nvar InputStream = __webpack_require__(\"4iSB\").InputStream;\n\nvar isNodeJs = typeof window === 'undefined' && typeof importScripts === 'undefined';\nvar fs = isNodeJs ? __webpack_require__(\"Ya8g\") : null;\n\n// Utility functions to create InputStreams from various sources.\n//\n// All returned InputStreams support the full range of Unicode\n// up to U+10FFFF (the default behavior of InputStream only supports\n// code points up to U+FFFF).\nvar CharStreams = {\n  // Creates an InputStream from a string.\n  fromString: function(str) {\n    return new InputStream(str, true);\n  },\n\n  // Asynchronously creates an InputStream from a blob given the\n  // encoding of the bytes in that blob (defaults to 'utf8' if\n  // encoding is null).\n  //\n  // Invokes onLoad(result) on success, onError(error) on\n  // failure.\n  fromBlob: function(blob, encoding, onLoad, onError) {\n    var reader = FileReader();\n    reader.onload = function(e) {\n      var is = new InputStream(e.target.result, true);\n      onLoad(is);\n    };\n    reader.onerror = onError;\n    reader.readAsText(blob, encoding);\n  },\n\n  // Creates an InputStream from a Buffer given the\n  // encoding of the bytes in that buffer (defaults to 'utf8' if\n  // encoding is null).\n  fromBuffer: function(buffer, encoding) {\n    return new InputStream(buffer.toString(encoding), true);\n  },\n\n  // Asynchronously creates an InputStream from a file on disk given\n  // the encoding of the bytes in that file (defaults to 'utf8' if\n  // encoding is null).\n  //\n  // Invokes callback(error, result) on completion.\n  fromPath: function(path, encoding, callback) {\n    fs.readFile(path, encoding, function(err, data) {\n      var is = null;\n      if (data !== null) {\n        is = new InputStream(data, true);\n      }\n      callback(err, is);\n    });\n  },\n\n  // Synchronously creates an InputStream given a path to a file\n  // on disk and the encoding of the bytes in that file (defaults to\n  // 'utf8' if encoding is null).\n  fromPathSync: function(path, encoding) {\n    var data = fs.readFileSync(path, encoding);\n    return new InputStream(data, true);\n  }\n};\n\nexports.CharStreams = CharStreams;\n\n\n/***/ }),\n\n/***/ \"HwOZ\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(\"o7dJ\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(\"rjj0\")(\"1d03e694\", content, true);\n\n/***/ }),\n\n/***/ \"I+6F\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar antlr4 = __webpack_require__(\"9C8F\");\nvar policy = __webpack_require__(\"k2M1\");\nvar policyLexer = policy.policyLexer;\nvar policyParser = policy.policyParser;\nvar _ = __webpack_require__(\"rdLu\");\n\nvar ErrorListener = __webpack_require__(\"qFmK\").ConsoleErrorListener;\nvar ErrorListenerExtend = __webpack_require__(\"W6Ef\");\nErrorListenerExtend(ErrorListener.prototype);\n\nvar compile = function compile(text) {\n  var target = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'json';\n\n  var extentionClass = __webpack_require__(\"/qG2\");\n  if (target === 'beautify') {\n    extentionClass = __webpack_require__(\"uruK\");\n  }\n\n  var chars = new antlr4.InputStream(text);\n  var lexer = new policyLexer(chars);\n\n  var tokens = new antlr4.CommonTokenStream(lexer);\n  var parser = new policyParser(tokens);\n  parser.buildParseTrees = true;\n  var tree = parser.p();\n  var listener = new extentionClass();\n  antlr4.tree.ParseTreeWalker.DEFAULT.walk(listener, tree);\n  if (parser._listeners[0].errorMsg) {\n    //把错误信息放进listener里面\n    listener.errorMsg = parser._listeners[0].errorMsg;\n    parser._listeners[0].errorMsg = null;\n  }\n  return listener;\n};\n\nexports.compile = compile;\n\n\n/***/ }),\n\n/***/ \"IUCG\":\n/***/ (function(module, exports, __webpack_require__) {\n\n//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\nvar ATNConfigSet = __webpack_require__(\"wMEt\").ATNConfigSet;\nvar Utils = __webpack_require__(\"bz+k\");\nvar Hash = Utils.Hash;\nvar Set = Utils.Set;\n\n// Map a predicate to a predicted alternative.///\n\nfunction PredPrediction(pred, alt) {\n\tthis.alt = alt;\n\tthis.pred = pred;\n\treturn this;\n}\n\nPredPrediction.prototype.toString = function() {\n\treturn \"(\" + this.pred + \", \" + this.alt + \")\";\n};\n\n// A DFA state represents a set of possible ATN configurations.\n// As Aho, Sethi, Ullman p. 117 says \"The DFA uses its state\n// to keep track of all possible states the ATN can be in after\n// reading each input symbol. That is to say, after reading\n// input a1a2..an, the DFA is in a state that represents the\n// subset T of the states of the ATN that are reachable from the\n// ATN's start state along some path labeled a1a2..an.\"\n// In conventional NFA&rarr;DFA conversion, therefore, the subset T\n// would be a bitset representing the set of states the\n// ATN could be in. We need to track the alt predicted by each\n// state as well, however. More importantly, we need to maintain\n// a stack of states, tracking the closure operations as they\n// jump from rule to rule, emulating rule invocations (method calls).\n// I have to add a stack to simulate the proper lookahead sequences for\n// the underlying LL grammar from which the ATN was derived.\n//\n// <p>I use a set of ATNConfig objects not simple states. An ATNConfig\n// is both a state (ala normal conversion) and a RuleContext describing\n// the chain of rules (if any) followed to arrive at that state.</p>\n//\n// <p>A DFA state may have multiple references to a particular state,\n// but with different ATN contexts (with same or different alts)\n// meaning that state was reached via a different set of rule invocations.</p>\n// /\n\nfunction DFAState(stateNumber, configs) {\n\tif (stateNumber === null) {\n\t\tstateNumber = -1;\n\t}\n\tif (configs === null) {\n\t\tconfigs = new ATNConfigSet();\n\t}\n\tthis.stateNumber = stateNumber;\n\tthis.configs = configs;\n\t// {@code edges[symbol]} points to target of symbol. Shift up by 1 so (-1)\n\t// {@link Token//EOF} maps to {@code edges[0]}.\n\tthis.edges = null;\n\tthis.isAcceptState = false;\n\t// if accept state, what ttype do we match or alt do we predict?\n\t// This is set to {@link ATN//INVALID_ALT_NUMBER} when {@link\n\t// //predicates}{@code !=null} or\n\t// {@link //requiresFullContext}.\n\tthis.prediction = 0;\n\tthis.lexerActionExecutor = null;\n\t// Indicates that this state was created during SLL prediction that\n\t// discovered a conflict between the configurations in the state. Future\n\t// {@link ParserATNSimulator//execATN} invocations immediately jumped doing\n\t// full context prediction if this field is true.\n\tthis.requiresFullContext = false;\n\t// During SLL parsing, this is a list of predicates associated with the\n\t// ATN configurations of the DFA state. When we have predicates,\n\t// {@link //requiresFullContext} is {@code false} since full context\n\t// prediction evaluates predicates\n\t// on-the-fly. If this is not null, then {@link //prediction} is\n\t// {@link ATN//INVALID_ALT_NUMBER}.\n\t//\n\t// <p>We only use these for non-{@link //requiresFullContext} but\n\t// conflicting states. That\n\t// means we know from the context (it's $ or we don't dip into outer\n\t// context) that it's an ambiguity not a conflict.</p>\n\t//\n\t// <p>This list is computed by {@link\n\t// ParserATNSimulator//predicateDFAState}.</p>\n\tthis.predicates = null;\n\treturn this;\n}\n\n// Get the set of all alts mentioned by all ATN configurations in this\n// DFA state.\nDFAState.prototype.getAltSet = function() {\n\tvar alts = new Set();\n\tif (this.configs !== null) {\n\t\tfor (var i = 0; i < this.configs.length; i++) {\n\t\t\tvar c = this.configs[i];\n\t\t\talts.add(c.alt);\n\t\t}\n\t}\n\tif (alts.length === 0) {\n\t\treturn null;\n\t} else {\n\t\treturn alts;\n\t}\n};\n\n// Two {@link DFAState} instances are equal if their ATN configuration sets\n// are the same. This method is used to see if a state already exists.\n//\n// <p>Because the number of alternatives and number of ATN configurations are\n// finite, there is a finite number of DFA states that can be processed.\n// This is necessary to show that the algorithm terminates.</p>\n//\n// <p>Cannot test the DFA state numbers here because in\n// {@link ParserATNSimulator//addDFAState} we need to know if any other state\n// exists that has this exact set of ATN configurations. The\n// {@link //stateNumber} is irrelevant.</p>\nDFAState.prototype.equals = function(other) {\n\t// compare set of ATN configurations in this set with other\n\treturn this === other ||\n\t\t\t(other instanceof DFAState &&\n\t\t\t\tthis.configs.equals(other.configs));\n};\n\nDFAState.prototype.toString = function() {\n\tvar s = \"\" + this.stateNumber + \":\" + this.configs;\n\tif(this.isAcceptState) {\n        s = s + \"=>\";\n        if (this.predicates !== null)\n            s = s + this.predicates;\n        else\n            s = s + this.prediction;\n    }\n\treturn s;\n};\n\nDFAState.prototype.hashCode = function() {\n\tvar hash = new Hash();\n\thash.update(this.configs);\n\tif(this.isAcceptState) {\n        if (this.predicates !== null)\n            hash.update(this.predicates);\n        else\n            hash.update(this.prediction);\n    }\n    return hash.finish();\n};\n\nexports.DFAState = DFAState;\nexports.PredPrediction = PredPrediction;\n\n\n/***/ }),\n\n/***/ \"ItGU\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_index_vue__ = __webpack_require__(\"tJvw\");\n/* unused harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_09f5c69c_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_index_vue__ = __webpack_require__(\"aX82\");\nfunction injectStyle (ssrContext) {\n  __webpack_require__(\"wADU\")\n}\nvar normalizeComponent = __webpack_require__(\"VU/8\")\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-09f5c69c\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_index_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_09f5c69c_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_index_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ \"J8R0\":\n/***/ (function(module, exports) {\n\n//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n //\n\nfunction LexerActionType() {\n}\n\nLexerActionType.CHANNEL = 0;     //The type of a {@link LexerChannelAction} action.\nLexerActionType.CUSTOM = 1;      //The type of a {@link LexerCustomAction} action.\nLexerActionType.MODE = 2;        //The type of a {@link LexerModeAction} action.\nLexerActionType.MORE = 3;        //The type of a {@link LexerMoreAction} action.\nLexerActionType.POP_MODE = 4;    //The type of a {@link LexerPopModeAction} action.\nLexerActionType.PUSH_MODE = 5;   //The type of a {@link LexerPushModeAction} action.\nLexerActionType.SKIP = 6;        //The type of a {@link LexerSkipAction} action.\nLexerActionType.TYPE = 7;        //The type of a {@link LexerTypeAction} action.\n\nfunction LexerAction(action) {\n    this.actionType = action;\n    this.isPositionDependent = false;\n    return this;\n}\n\nLexerAction.prototype.hashCode = function() {\n    var hash = new Hash();\n    this.updateHashCode(hash);\n    return hash.finish()\n};\n\nLexerAction.prototype.updateHashCode = function(hash) {\n    hash.update(this.actionType);\n};\n\nLexerAction.prototype.equals = function(other) {\n    return this === other;\n};\n\n\n\n//\n// Implements the {@code skip} lexer action by calling {@link Lexer//skip}.\n//\n// <p>The {@code skip} command does not have any parameters, so this action is\n// implemented as a singleton instance exposed by {@link //INSTANCE}.</p>\nfunction LexerSkipAction() {\n\tLexerAction.call(this, LexerActionType.SKIP);\n\treturn this;\n}\n\nLexerSkipAction.prototype = Object.create(LexerAction.prototype);\nLexerSkipAction.prototype.constructor = LexerSkipAction;\n\n// Provides a singleton instance of this parameterless lexer action.\nLexerSkipAction.INSTANCE = new LexerSkipAction();\n\nLexerSkipAction.prototype.execute = function(lexer) {\n    lexer.skip();\n};\n\nLexerSkipAction.prototype.toString = function() {\n\treturn \"skip\";\n};\n\n//  Implements the {@code type} lexer action by calling {@link Lexer//setType}\n// with the assigned type.\nfunction LexerTypeAction(type) {\n\tLexerAction.call(this, LexerActionType.TYPE);\n\tthis.type = type;\n\treturn this;\n}\n\nLexerTypeAction.prototype = Object.create(LexerAction.prototype);\nLexerTypeAction.prototype.constructor = LexerTypeAction;\n\nLexerTypeAction.prototype.execute = function(lexer) {\n    lexer.type = this.type;\n};\n\nLexerTypeAction.prototype.updateHashCode = function(hash) {\n    hash.update(this.actionType, this.type);\n};\n\n\nLexerTypeAction.prototype.equals = function(other) {\n    if(this === other) {\n        return true;\n    } else if (! (other instanceof LexerTypeAction)) {\n        return false;\n    } else {\n        return this.type === other.type;\n    }\n};\n\nLexerTypeAction.prototype.toString = function() {\n    return \"type(\" + this.type + \")\";\n};\n\n// Implements the {@code pushMode} lexer action by calling\n// {@link Lexer//pushMode} with the assigned mode.\nfunction LexerPushModeAction(mode) {\n\tLexerAction.call(this, LexerActionType.PUSH_MODE);\n    this.mode = mode;\n    return this;\n}\n\nLexerPushModeAction.prototype = Object.create(LexerAction.prototype);\nLexerPushModeAction.prototype.constructor = LexerPushModeAction;\n\n// <p>This action is implemented by calling {@link Lexer//pushMode} with the\n// value provided by {@link //getMode}.</p>\nLexerPushModeAction.prototype.execute = function(lexer) {\n    lexer.pushMode(this.mode);\n};\n\nLexerPushModeAction.prototype.updateHashCode = function(hash) {\n    hash.update(this.actionType, this.mode);\n};\n\nLexerPushModeAction.prototype.equals = function(other) {\n    if (this === other) {\n        return true;\n    } else if (! (other instanceof LexerPushModeAction)) {\n        return false;\n    } else {\n        return this.mode === other.mode;\n    }\n};\n\nLexerPushModeAction.prototype.toString = function() {\n\treturn \"pushMode(\" + this.mode + \")\";\n};\n\n\n// Implements the {@code popMode} lexer action by calling {@link Lexer//popMode}.\n//\n// <p>The {@code popMode} command does not have any parameters, so this action is\n// implemented as a singleton instance exposed by {@link //INSTANCE}.</p>\nfunction LexerPopModeAction() {\n\tLexerAction.call(this,LexerActionType.POP_MODE);\n\treturn this;\n}\n\nLexerPopModeAction.prototype = Object.create(LexerAction.prototype);\nLexerPopModeAction.prototype.constructor = LexerPopModeAction;\n\nLexerPopModeAction.INSTANCE = new LexerPopModeAction();\n\n// <p>This action is implemented by calling {@link Lexer//popMode}.</p>\nLexerPopModeAction.prototype.execute = function(lexer) {\n    lexer.popMode();\n};\n\nLexerPopModeAction.prototype.toString = function() {\n\treturn \"popMode\";\n};\n\n// Implements the {@code more} lexer action by calling {@link Lexer//more}.\n//\n// <p>The {@code more} command does not have any parameters, so this action is\n// implemented as a singleton instance exposed by {@link //INSTANCE}.</p>\nfunction LexerMoreAction() {\n\tLexerAction.call(this, LexerActionType.MORE);\n\treturn this;\n}\n\nLexerMoreAction.prototype = Object.create(LexerAction.prototype);\nLexerMoreAction.prototype.constructor = LexerMoreAction;\n\nLexerMoreAction.INSTANCE = new LexerMoreAction();\n\n// <p>This action is implemented by calling {@link Lexer//popMode}.</p>\nLexerMoreAction.prototype.execute = function(lexer) {\n    lexer.more();\n};\n\nLexerMoreAction.prototype.toString = function() {\n    return \"more\";\n};\n\n\n// Implements the {@code mode} lexer action by calling {@link Lexer//mode} with\n// the assigned mode.\nfunction LexerModeAction(mode) {\n\tLexerAction.call(this, LexerActionType.MODE);\n    this.mode = mode;\n    return this;\n}\n\nLexerModeAction.prototype = Object.create(LexerAction.prototype);\nLexerModeAction.prototype.constructor = LexerModeAction;\n\n// <p>This action is implemented by calling {@link Lexer//mode} with the\n// value provided by {@link //getMode}.</p>\nLexerModeAction.prototype.execute = function(lexer) {\n    lexer.mode(this.mode);\n};\n\nLexerModeAction.prototype.updateHashCode = function(hash) {\n    hash.update(this.actionType, this.mode);\n};\n\nLexerModeAction.prototype.equals = function(other) {\n    if (this === other) {\n        return true;\n    } else if (! (other instanceof LexerModeAction)) {\n        return false;\n    } else {\n        return this.mode === other.mode;\n    }\n};\n\nLexerModeAction.prototype.toString = function() {\n    return \"mode(\" + this.mode + \")\";\n};\n\n// Executes a custom lexer action by calling {@link Recognizer//action} with the\n// rule and action indexes assigned to the custom action. The implementation of\n// a custom action is added to the generated code for the lexer in an override\n// of {@link Recognizer//action} when the grammar is compiled.\n//\n// <p>This class may represent embedded actions created with the <code>{...}</code>\n// syntax in ANTLR 4, as well as actions created for lexer commands where the\n// command argument could not be evaluated when the grammar was compiled.</p>\n\n\n    // Constructs a custom lexer action with the specified rule and action\n    // indexes.\n    //\n    // @param ruleIndex The rule index to use for calls to\n    // {@link Recognizer//action}.\n    // @param actionIndex The action index to use for calls to\n    // {@link Recognizer//action}.\n\nfunction LexerCustomAction(ruleIndex, actionIndex) {\n\tLexerAction.call(this, LexerActionType.CUSTOM);\n    this.ruleIndex = ruleIndex;\n    this.actionIndex = actionIndex;\n    this.isPositionDependent = true;\n    return this;\n}\n\nLexerCustomAction.prototype = Object.create(LexerAction.prototype);\nLexerCustomAction.prototype.constructor = LexerCustomAction;\n\n// <p>Custom actions are implemented by calling {@link Lexer//action} with the\n// appropriate rule and action indexes.</p>\nLexerCustomAction.prototype.execute = function(lexer) {\n    lexer.action(null, this.ruleIndex, this.actionIndex);\n};\n\nLexerCustomAction.prototype.updateHashCode = function(hash) {\n    hash.update(this.actionType, this.ruleIndex, this.actionIndex);\n};\n\nLexerCustomAction.prototype.equals = function(other) {\n    if (this === other) {\n        return true;\n    } else if (! (other instanceof LexerCustomAction)) {\n        return false;\n    } else {\n        return this.ruleIndex === other.ruleIndex && this.actionIndex === other.actionIndex;\n    }\n};\n\n// Implements the {@code channel} lexer action by calling\n// {@link Lexer//setChannel} with the assigned channel.\n// Constructs a new {@code channel} action with the specified channel value.\n// @param channel The channel value to pass to {@link Lexer//setChannel}.\nfunction LexerChannelAction(channel) {\n\tLexerAction.call(this, LexerActionType.CHANNEL);\n    this.channel = channel;\n    return this;\n}\n\nLexerChannelAction.prototype = Object.create(LexerAction.prototype);\nLexerChannelAction.prototype.constructor = LexerChannelAction;\n\n// <p>This action is implemented by calling {@link Lexer//setChannel} with the\n// value provided by {@link //getChannel}.</p>\nLexerChannelAction.prototype.execute = function(lexer) {\n    lexer._channel = this.channel;\n};\n\nLexerChannelAction.prototype.updateHashCode = function(hash) {\n    hash.update(this.actionType, this.channel);\n};\n\nLexerChannelAction.prototype.equals = function(other) {\n    if (this === other) {\n        return true;\n    } else if (! (other instanceof LexerChannelAction)) {\n        return false;\n    } else {\n        return this.channel === other.channel;\n    }\n};\n\nLexerChannelAction.prototype.toString = function() {\n    return \"channel(\" + this.channel + \")\";\n};\n\n// This implementation of {@link LexerAction} is used for tracking input offsets\n// for position-dependent actions within a {@link LexerActionExecutor}.\n//\n// <p>This action is not serialized as part of the ATN, and is only required for\n// position-dependent lexer actions which appear at a location other than the\n// end of a rule. For more information about DFA optimizations employed for\n// lexer actions, see {@link LexerActionExecutor//append} and\n// {@link LexerActionExecutor//fixOffsetBeforeMatch}.</p>\n\n// Constructs a new indexed custom action by associating a character offset\n// with a {@link LexerAction}.\n//\n// <p>Note: This class is only required for lexer actions for which\n// {@link LexerAction//isPositionDependent} returns {@code true}.</p>\n//\n// @param offset The offset into the input {@link CharStream}, relative to\n// the token start index, at which the specified lexer action should be\n// executed.\n// @param action The lexer action to execute at a particular offset in the\n// input {@link CharStream}.\nfunction LexerIndexedCustomAction(offset, action) {\n\tLexerAction.call(this, action.actionType);\n    this.offset = offset;\n    this.action = action;\n    this.isPositionDependent = true;\n    return this;\n}\n\nLexerIndexedCustomAction.prototype = Object.create(LexerAction.prototype);\nLexerIndexedCustomAction.prototype.constructor = LexerIndexedCustomAction;\n\n// <p>This method calls {@link //execute} on the result of {@link //getAction}\n// using the provided {@code lexer}.</p>\nLexerIndexedCustomAction.prototype.execute = function(lexer) {\n    // assume the input stream position was properly set by the calling code\n    this.action.execute(lexer);\n};\n\nLexerIndexedCustomAction.prototype.updateHashCode = function(hash) {\n    hash.update(this.actionType, this.offset, this.action);\n};\n\nLexerIndexedCustomAction.prototype.equals = function(other) {\n    if (this === other) {\n        return true;\n    } else if (! (other instanceof LexerIndexedCustomAction)) {\n        return false;\n    } else {\n        return this.offset === other.offset && this.action === other.action;\n    }\n};\n\n\nexports.LexerActionType = LexerActionType;\nexports.LexerSkipAction = LexerSkipAction;\nexports.LexerChannelAction = LexerChannelAction;\nexports.LexerCustomAction = LexerCustomAction;\nexports.LexerIndexedCustomAction = LexerIndexedCustomAction;\nexports.LexerMoreAction = LexerMoreAction;\nexports.LexerTypeAction = LexerTypeAction;\nexports.LexerPushModeAction = LexerPushModeAction;\nexports.LexerPopModeAction = LexerPopModeAction;\nexports.LexerModeAction = LexerModeAction;\n\n/***/ }),\n\n/***/ \"JMs1\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_values__ = __webpack_require__(\"gRE1\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_values___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_values__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_keys__ = __webpack_require__(\"fZjL\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_keys___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_keys__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_assign__ = __webpack_require__(\"woOf\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_assign___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_assign__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_core_js_promise__ = __webpack_require__(\"//Fk\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_core_js_promise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_core_js_promise__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_core_js_get_iterator__ = __webpack_require__(\"BO1k\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_core_js_get_iterator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_core_js_get_iterator__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_babel_runtime_helpers_slicedToArray__ = __webpack_require__(\"d7EF\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_babel_runtime_helpers_slicedToArray___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_babel_runtime_helpers_slicedToArray__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_babel_runtime_core_js_number_is_integer__ = __webpack_require__(\"RRo+\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_babel_runtime_core_js_number_is_integer___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_babel_runtime_core_js_number_is_integer__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__views_node_presentable_steps_index_vue__ = __webpack_require__(\"0AMZ\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__policy_index_vue__ = __webpack_require__(\"9e1m\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__config_index__ = __webpack_require__(\"2uFj\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_freelog_policy_compiler__ = __webpack_require__(\"QtOE\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_freelog_policy_compiler___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_freelog_policy_compiler__);\n\n\n\n\n\n\n\n/**\n * 创建合同和user policy合一方案\n */\n\n\n\n\n\nvar RESOURCE_TYPES = __WEBPACK_IMPORTED_MODULE_9__config_index__[\"a\" /* default */].RESOURCE_TYPES;\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'node-contract-creator',\n  data: function data() {\n    return {\n      activeName: '',\n      tabList: [],\n      selected: false, //是否已选中policy\n      done: false //检查是否已经创建过presentable\n    };\n  },\n  mounted: function mounted() {\n    if (!this.$route.query.resourceId) {\n      this.$message.error('没有资源Id, 请重新选择');\n    } else {\n      this.init();\n    }\n  },\n\n  components: {\n    PresentableSteps: __WEBPACK_IMPORTED_MODULE_7__views_node_presentable_steps_index_vue__[\"a\" /* default */],\n    PresentablePolicy: __WEBPACK_IMPORTED_MODULE_8__policy_index_vue__[\"a\" /* default */]\n  },\n  methods: {\n    init: function init() {\n      var _this = this;\n\n      this.loadPolicyDetail().then(function (data) {\n        _this.tabList = data;\n        return data;\n      }).then(this.queryContractsStatus.bind(this));\n    },\n    segmentChangeHandler: function segmentChangeHandler(tabData, select) {\n      if (select !== undefined) {\n        tabData.selected = select;\n      }\n\n      tabData.checked = __WEBPACK_IMPORTED_MODULE_6_babel_runtime_core_js_number_is_integer___default()(tabData.selected);\n\n      this.selected = this.tabList.some(function (tab) {\n        return tab.checked;\n      });\n    },\n\n    //查询合同创建状态\n    queryContractsStatus: function queryContractsStatus(data) {\n      if (!data || !data.length) {\n        return;\n      }\n      var partyTwo = this.$route.params.nodeId;\n      var resourceIds = data.map(function (tabData) {\n        return tabData.resourceId;\n      }).join(',');\n\n      this.$services.contractRecords.get({\n        params: {\n          resourceIds: resourceIds,\n          partyTwo: partyTwo\n        }\n      }).then(function (res) {\n        var records = res.getData();\n        records.forEach(function (item) {\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = __WEBPACK_IMPORTED_MODULE_4_babel_runtime_core_js_get_iterator___default()(data.entries()), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var _ref = _step.value;\n\n              var _ref2 = __WEBPACK_IMPORTED_MODULE_5_babel_runtime_helpers_slicedToArray___default()(_ref, 2);\n\n              var i = _ref2[0];\n              var contract = _ref2[1];\n\n              if (contract.resourceId === item.resourceId) {\n                var policies = contract.data.policy;\n                contract.created = true;\n                var _iteratorNormalCompletion2 = true;\n                var _didIteratorError2 = false;\n                var _iteratorError2 = undefined;\n\n                try {\n                  for (var _iterator2 = __WEBPACK_IMPORTED_MODULE_4_babel_runtime_core_js_get_iterator___default()(policies.entries()), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var _ref3 = _step2.value;\n\n                    var _ref4 = __WEBPACK_IMPORTED_MODULE_5_babel_runtime_helpers_slicedToArray___default()(_ref3, 2);\n\n                    var j = _ref4[0];\n                    var policy = _ref4[1];\n\n                    if (policy.segmentId === item.segmentId) {\n                      policy.created = true;\n                      break;\n                    }\n                  }\n                } catch (err) {\n                  _didIteratorError2 = true;\n                  _iteratorError2 = err;\n                } finally {\n                  try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                      _iterator2.return();\n                    }\n                  } finally {\n                    if (_didIteratorError2) {\n                      throw _iteratorError2;\n                    }\n                  }\n                }\n\n                break;\n              }\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n        });\n      }).then(function () {\n        // this.done = data.every((item) => item.created)\n      });\n    },\n    loadResourceDetail: function loadResourceDetail(resId) {\n      return this.$services.resource.get(resId).then(function (res) {\n        return res.getData();\n      });\n    },\n    loadPolicyDetail: function loadPolicyDetail() {\n      var _this2 = this;\n\n      var query = this.$route.query;\n      return new __WEBPACK_IMPORTED_MODULE_3_babel_runtime_core_js_promise___default.a(function (resolve) {\n        if (query.resourceType === RESOURCE_TYPES.pageBuild) {\n          resolve(_this2.loadResourceDetail(query.resourceId));\n        } else {\n          resolve(null);\n        }\n      }).then(function (data) {\n        var resources = [{\n          resourceName: _this2.$route.query.resourceName,\n          resourceId: _this2.$route.query.resourceId\n        }];\n        var widgetsDataMap = {};\n        var tabList = [];\n        _this2.activeName = _this2.$route.query.resourceId;\n\n        if (data && data.systemMeta.widgets) {\n          resources = resources.concat(data.systemMeta.widgets);\n        }\n\n        resources.forEach(function (obj) {\n          widgetsDataMap[obj.resourceId] = {};\n          tabList.push({\n            resourceName: obj.resourceName,\n            resourceId: obj.resourceId,\n            data: widgetsDataMap[obj.resourceId],\n            userPolicy: '',\n            presentableName: '',\n            selected: false, //记录选择哪个策略\n            checked: false, //标记是否已选中策略\n            created: false //标记是否已创建过合同\n          });\n        });\n\n        var resourceIds = resources.map(function (obj) {\n          return obj.resourceId;\n        });\n        return _this2.$services.policy.get({\n          params: {\n            resourceIds: resourceIds.join(',')\n          }\n        }).then(function (res) {\n          var data = res.getData();\n          data.forEach(function (item) {\n            item.policy.forEach(function (p) {\n              p._formatSegmentText = _this2.formatSegmentText(p.segmentText);\n            });\n            __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_assign___default()(widgetsDataMap[item.resourceId], item);\n          });\n          return tabList;\n        }).catch(_this2.$error.showErrorMessage);\n      });\n    },\n    formatSegmentText: function formatSegmentText(segmentText) {\n      return __WEBPACK_IMPORTED_MODULE_10_freelog_policy_compiler___default.a.compile(segmentText, 'beautify').stringArray.splice(1).join(' ').replace(/\\n\\s/g, '\\n');\n    },\n    validatePageBuildParam: function validatePageBuildParam() {\n      var _this3 = this;\n\n      return new __WEBPACK_IMPORTED_MODULE_3_babel_runtime_core_js_promise___default.a(function (resolve, reject) {\n        var pageBuildResourceId = _this3.$route.query.resourceId;\n        var validMap = {};\n        var invalidMap = {};\n\n        _this3.tabList.forEach(function (tab) {\n          if (tab.checked) {\n            validMap[tab.resourceId] = tab;\n          } else {\n            invalidMap[tab.resourceId] = tab;\n          }\n        });\n\n        if (!validMap[pageBuildResourceId]) {\n          reject('\\u6CA1\\u6709\\u9009\\u4E2D' + invalidMap[pageBuildResourceId].resourceName + '\\u5408\\u540C');\n        } else if (__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_keys___default()(validMap).length === _this3.tabList.length) {\n          resolve();\n        } else if (__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_keys___default()(validMap).length < 2) {\n          reject('至少选择一个widget');\n        } else {\n          var names = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_values___default()(invalidMap).map(function (o) {\n            return o.resourceName;\n          }).join(',');\n          resolve('\\u6709\\u90E8\\u5206widgets=>' + names + '\\u7684\\u5408\\u540C\\u6CA1\\u6709\\u88AB\\u9009\\u4E2D');\n        }\n      });\n    },\n    createPageBuildContract: function createPageBuildContract(param) {\n      //创建pb合同必须一次性选中签约的widget，否则不能补签（后端有绑定逻辑），后续可提供补签功能\n      return this.$services.pbContract.post(param).then(function (res) {\n        if (res.data.errcode !== 0) {\n          throw new Error(res.data.msg);\n        } else {\n          var data = res.getData();\n          return data.newContracts.concat(data.oldContracts);\n        }\n      });\n    },\n    gotoCreateUserPolicy: function gotoCreateUserPolicy(contractId) {\n      var nodeId = this.$route.params.nodeId;\n      this.$router.push({\n        path: '/node/' + nodeId + '/presentable/create',\n        query: { contractId: contractId }\n      });\n    },\n    createResourceContract: function createResourceContract(param) {\n      return this.$services.contract.post(param).then(function (res) {\n        var data = res.getData();\n        if (res.data.errcode !== 0) {\n          throw new Error(res.data.msg);\n        } else {\n          return [{\n            contractId: data.contractId,\n            resourceId: data.resourceId\n          }];\n        }\n      });\n    },\n    showConfirmDialog: function showConfirmDialog(msg) {\n      var _this4 = this;\n\n      return new __WEBPACK_IMPORTED_MODULE_3_babel_runtime_core_js_promise___default.a(function (resolve, reject) {\n        _this4.$confirm(msg + '\\uFF0C\\u540E\\u7EED\\u4E0D\\u80FD\\u8865\\u7B7E\\u5408\\u540C\\uFF0C\\u786E\\u8BA4\\u7EE7\\u7EED\\u6267\\u884C\\uFF1F', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(function () {\n          resolve();\n        }).catch(function () {\n          reject(null);\n        });\n      });\n    },\n    createContract: function createContract(selectedContracts) {\n      var _this5 = this;\n\n      var nodeId = this.$route.params.nodeId;\n      if (this.$route.query.resourceType === RESOURCE_TYPES.pageBuild) {\n        return this.validatePageBuildParam().then(function (msg) {\n          if (msg) {\n            return _this5.showConfirmDialog(msg);\n          }\n        }).then(function () {\n          return _this5.createPageBuildContract({\n            nodeId: nodeId,\n            contracts: selectedContracts\n          });\n        });\n      } else {\n        var param = selectedContracts[0];\n        return this.createResourceContract({\n          contractType: '2',\n          targetId: param.resourceId,\n          segmentId: param.segmentId,\n          serialNumber: param.serialNumber,\n          partyTwo: nodeId\n        });\n      }\n    },\n    createPresentablePolicy: function createPresentablePolicy(policies) {\n      var _this6 = this;\n\n      var nodeId = parseInt(this.$route.params.nodeId);\n      var promises = [];\n\n      policies.forEach(function (policy) {\n        var params = {\n          name: policy.name,\n          nodeId: nodeId,\n          contractId: policy.contractId,\n          policyText: btoa(policy.policyText),\n          languageType: 'freelog_policy_lang'\n        };\n        promises.push(_this6.$services.presentables.post(params));\n      });\n\n      return __WEBPACK_IMPORTED_MODULE_3_babel_runtime_core_js_promise___default.a.all(promises).then(function (responseList) {\n        var res = responseList[0];\n        var data = res.getData();\n        return data;\n      });\n    },\n    paddingContractIds: function paddingContractIds(policies, contractIds) {\n      var contractIdMap = {};\n      contractIds.forEach(function (item) {\n        contractIdMap[item.resourceId] = item.contractId;\n      });\n\n      policies.forEach(function (p) {\n        p.contractId = contractIdMap[p.resourceId];\n      });\n    },\n    extractSubmitData: function extractSubmitData() {\n      var contracts = [];\n      var policies = [];\n      this.tabList.forEach(function (tabData) {\n        if (tabData.checked) {\n          var policy = tabData.data.policy[tabData.selected];\n          contracts.push({\n            resourceId: tabData.resourceId,\n            segmentId: policy.segmentId,\n            serialNumber: tabData.data.serialNumber\n          });\n          policies.push({\n            name: tabData.presentableName,\n            resourceId: tabData.resourceId,\n            policyText: tabData.userPolicy\n          });\n        }\n      });\n\n      return {\n        contracts: contracts,\n        policies: policies\n      };\n    },\n    submit: function submit() {\n      var _this7 = this;\n\n      var nodeId = parseInt(this.$route.params.nodeId);\n      var data = this.extractSubmitData();\n\n      if (!data.contracts.length) {\n        return this.$message.warning('请选择合同');\n      }\n\n      this.createContract(data.contracts).then(function (contractIds) {\n        _this7.paddingContractIds(data.policies, contractIds);\n      }).then(function () {\n        return _this7.createPresentablePolicy(data.policies);\n      }).then(function (data) {\n        _this7.$message.success('presentable创建成功');\n        _this7.$router.push({\n          path: '/node/' + nodeId + '/presentable/detail#presentable',\n          query: { presentableId: data.presentableId }\n        });\n      }).catch(this.$error.showErrorMessage);\n    }\n  }\n});\n\n/***/ }),\n\n/***/ \"JvoN\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"FZ+f\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \".gap[data-v-41f78b08]{margin-bottom:12px}\", \"\", {\"version\":3,\"sources\":[\"/Users/daizecheng/workplace/freelog/console/client/src/views/node/presentable/policy/index.vue\"],\"names\":[],\"mappings\":\"AACA,sBACE,kBAAoB,CACrB\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.gap[data-v-41f78b08] {\\n  margin-bottom: 12px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"LPMK\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// Generated from presentable_policy.g4 by ANTLR 4.7\r\n// jshint ignore: start\r\nvar antlr4 = __webpack_require__(\"9C8F\");\r\n\r\n// This class defines a complete listener for a parse tree produced by presentable_policyParser.\r\nfunction presentable_policyListener() {\r\n\tantlr4.tree.ParseTreeListener.call(this);\r\n\treturn this;\r\n}\r\n\r\npresentable_policyListener.prototype = Object.create(antlr4.tree.ParseTreeListener.prototype);\r\npresentable_policyListener.prototype.constructor = presentable_policyListener;\r\n\r\n// Enter a parse tree produced by presentable_policyParser#p.\r\npresentable_policyListener.prototype.enterP = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#p.\r\npresentable_policyListener.prototype.exitP = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#segment.\r\npresentable_policyListener.prototype.enterSegment = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#segment.\r\npresentable_policyListener.prototype.exitSegment = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#audience_clause.\r\npresentable_policyListener.prototype.enterAudience_clause = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#audience_clause.\r\npresentable_policyListener.prototype.exitAudience_clause = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#athorize_token_clause.\r\npresentable_policyListener.prototype.enterAthorize_token_clause = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#athorize_token_clause.\r\npresentable_policyListener.prototype.exitAthorize_token_clause = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#audience_individuals_clause.\r\npresentable_policyListener.prototype.enterAudience_individuals_clause = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#audience_individuals_clause.\r\npresentable_policyListener.prototype.exitAudience_individuals_clause = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#audience_groups_clause.\r\npresentable_policyListener.prototype.enterAudience_groups_clause = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#audience_groups_clause.\r\npresentable_policyListener.prototype.exitAudience_groups_clause = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#state_clause.\r\npresentable_policyListener.prototype.enterState_clause = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#state_clause.\r\npresentable_policyListener.prototype.exitState_clause = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#current_state_clause.\r\npresentable_policyListener.prototype.enterCurrent_state_clause = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#current_state_clause.\r\npresentable_policyListener.prototype.exitCurrent_state_clause = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#target_clause.\r\npresentable_policyListener.prototype.enterTarget_clause = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#target_clause.\r\npresentable_policyListener.prototype.exitTarget_clause = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#accepting.\r\npresentable_policyListener.prototype.enterAccepting = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#accepting.\r\npresentable_policyListener.prototype.exitAccepting = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#event.\r\npresentable_policyListener.prototype.enterEvent = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#event.\r\npresentable_policyListener.prototype.exitEvent = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#and_event.\r\npresentable_policyListener.prototype.enterAnd_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#and_event.\r\npresentable_policyListener.prototype.exitAnd_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#period_event.\r\npresentable_policyListener.prototype.enterPeriod_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#period_event.\r\npresentable_policyListener.prototype.exitPeriod_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#specific_date_event.\r\npresentable_policyListener.prototype.enterSpecific_date_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#specific_date_event.\r\npresentable_policyListener.prototype.exitSpecific_date_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#relative_date_event.\r\npresentable_policyListener.prototype.enterRelative_date_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#relative_date_event.\r\npresentable_policyListener.prototype.exitRelative_date_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#pricing_agreement_event.\r\npresentable_policyListener.prototype.enterPricing_agreement_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#pricing_agreement_event.\r\npresentable_policyListener.prototype.exitPricing_agreement_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#transaction_event.\r\npresentable_policyListener.prototype.enterTransaction_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#transaction_event.\r\npresentable_policyListener.prototype.exitTransaction_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#guaranty_event.\r\npresentable_policyListener.prototype.enterGuaranty_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#guaranty_event.\r\npresentable_policyListener.prototype.exitGuaranty_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#contract_guaranty.\r\npresentable_policyListener.prototype.enterContract_guaranty = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#contract_guaranty.\r\npresentable_policyListener.prototype.exitContract_guaranty = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#platform_guaranty.\r\npresentable_policyListener.prototype.enterPlatform_guaranty = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#platform_guaranty.\r\npresentable_policyListener.prototype.exitPlatform_guaranty = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#signing_event.\r\npresentable_policyListener.prototype.enterSigning_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#signing_event.\r\npresentable_policyListener.prototype.exitSigning_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#access_count_event.\r\npresentable_policyListener.prototype.enterAccess_count_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#access_count_event.\r\npresentable_policyListener.prototype.exitAccess_count_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#visit_increment_event.\r\npresentable_policyListener.prototype.enterVisit_increment_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#visit_increment_event.\r\npresentable_policyListener.prototype.exitVisit_increment_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#visit_event.\r\npresentable_policyListener.prototype.enterVisit_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#visit_event.\r\npresentable_policyListener.prototype.exitVisit_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#balance_event.\r\npresentable_policyListener.prototype.enterBalance_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#balance_event.\r\npresentable_policyListener.prototype.exitBalance_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#balance_greater.\r\npresentable_policyListener.prototype.enterBalance_greater = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#balance_greater.\r\npresentable_policyListener.prototype.exitBalance_greater = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#balance_smaller.\r\npresentable_policyListener.prototype.enterBalance_smaller = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#balance_smaller.\r\npresentable_policyListener.prototype.exitBalance_smaller = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#settlement_event.\r\npresentable_policyListener.prototype.enterSettlement_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#settlement_event.\r\npresentable_policyListener.prototype.exitSettlement_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#license_resource_id.\r\npresentable_policyListener.prototype.enterLicense_resource_id = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#license_resource_id.\r\npresentable_policyListener.prototype.exitLicense_resource_id = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#account_id.\r\npresentable_policyListener.prototype.enterAccount_id = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#account_id.\r\npresentable_policyListener.prototype.exitAccount_id = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#users.\r\npresentable_policyListener.prototype.enterUsers = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#users.\r\npresentable_policyListener.prototype.exitUsers = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#user_groups.\r\npresentable_policyListener.prototype.enterUser_groups = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#user_groups.\r\npresentable_policyListener.prototype.exitUser_groups = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#and.\r\npresentable_policyListener.prototype.enterAnd = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#and.\r\npresentable_policyListener.prototype.exitAnd = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#view_unit.\r\npresentable_policyListener.prototype.enterView_unit = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#view_unit.\r\npresentable_policyListener.prototype.exitView_unit = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#time_unit.\r\npresentable_policyListener.prototype.enterTime_unit = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#time_unit.\r\npresentable_policyListener.prototype.exitTime_unit = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#start_hour.\r\npresentable_policyListener.prototype.enterStart_hour = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#start_hour.\r\npresentable_policyListener.prototype.exitStart_hour = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#end_hour.\r\npresentable_policyListener.prototype.enterEnd_hour = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#end_hour.\r\npresentable_policyListener.prototype.exitEnd_hour = function(ctx) {\r\n};\r\n\r\n\r\n\r\nexports.presentable_policyListener = presentable_policyListener;\n\n/***/ }),\n\n/***/ \"LYMb\":\n/***/ (function(module, exports, __webpack_require__) {\n\n//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n//\n// This enumeration defines the prediction modes available in ANTLR 4 along with\n// utility methods for analyzing configuration sets for conflicts and/or\n// ambiguities.\n\nvar Set = __webpack_require__(\"bz+k\").Set;\nvar Map = __webpack_require__(\"bz+k\").Map;\nvar BitSet = __webpack_require__(\"bz+k\").BitSet;\nvar AltDict = __webpack_require__(\"bz+k\").AltDict;\nvar ATN = __webpack_require__(\"7y1Z\").ATN;\nvar RuleStopState = __webpack_require__(\"j0Qz\").RuleStopState;\nvar ATNConfigSet = __webpack_require__(\"wMEt\").ATNConfigSet;\nvar ATNConfig = __webpack_require__(\"yEAX\").ATNConfig;\nvar SemanticContext = __webpack_require__(\"wQJ6\").SemanticContext;\nvar Hash = __webpack_require__(\"bz+k\").Hash;\nvar hashStuff = __webpack_require__(\"bz+k\").hashStuff;\nvar equalArrays = __webpack_require__(\"bz+k\").equalArrays;\n\nfunction PredictionMode() {\n\treturn this;\n}\n\n//\n// The SLL(*) prediction mode. This prediction mode ignores the current\n// parser context when making predictions. This is the fastest prediction\n// mode, and provides correct results for many grammars. This prediction\n// mode is more powerful than the prediction mode provided by ANTLR 3, but\n// may result in syntax errors for grammar and input combinations which are\n// not SLL.\n//\n// <p>\n// When using this prediction mode, the parser will either return a correct\n// parse tree (i.e. the same parse tree that would be returned with the\n// {@link //LL} prediction mode), or it will report a syntax error. If a\n// syntax error is encountered when using the {@link //SLL} prediction mode,\n// it may be due to either an actual syntax error in the input or indicate\n// that the particular combination of grammar and input requires the more\n// powerful {@link //LL} prediction abilities to complete successfully.</p>\n//\n// <p>\n// This prediction mode does not provide any guarantees for prediction\n// behavior for syntactically-incorrect inputs.</p>\n//\nPredictionMode.SLL = 0;\n//\n// The LL(*) prediction mode. This prediction mode allows the current parser\n// context to be used for resolving SLL conflicts that occur during\n// prediction. This is the fastest prediction mode that guarantees correct\n// parse results for all combinations of grammars with syntactically correct\n// inputs.\n//\n// <p>\n// When using this prediction mode, the parser will make correct decisions\n// for all syntactically-correct grammar and input combinations. However, in\n// cases where the grammar is truly ambiguous this prediction mode might not\n// report a precise answer for <em>exactly which</em> alternatives are\n// ambiguous.</p>\n//\n// <p>\n// This prediction mode does not provide any guarantees for prediction\n// behavior for syntactically-incorrect inputs.</p>\n//\nPredictionMode.LL = 1;\n//\n// The LL(*) prediction mode with exact ambiguity detection. In addition to\n// the correctness guarantees provided by the {@link //LL} prediction mode,\n// this prediction mode instructs the prediction algorithm to determine the\n// complete and exact set of ambiguous alternatives for every ambiguous\n// decision encountered while parsing.\n//\n// <p>\n// This prediction mode may be used for diagnosing ambiguities during\n// grammar development. Due to the performance overhead of calculating sets\n// of ambiguous alternatives, this prediction mode should be avoided when\n// the exact results are not necessary.</p>\n//\n// <p>\n// This prediction mode does not provide any guarantees for prediction\n// behavior for syntactically-incorrect inputs.</p>\n//\nPredictionMode.LL_EXACT_AMBIG_DETECTION = 2;\n\n\n//\n// Computes the SLL prediction termination condition.\n//\n// <p>\n// This method computes the SLL prediction termination condition for both of\n// the following cases.</p>\n//\n// <ul>\n// <li>The usual SLL+LL fallback upon SLL conflict</li>\n// <li>Pure SLL without LL fallback</li>\n// </ul>\n//\n// <p><strong>COMBINED SLL+LL PARSING</strong></p>\n//\n// <p>When LL-fallback is enabled upon SLL conflict, correct predictions are\n// ensured regardless of how the termination condition is computed by this\n// method. Due to the substantially higher cost of LL prediction, the\n// prediction should only fall back to LL when the additional lookahead\n// cannot lead to a unique SLL prediction.</p>\n//\n// <p>Assuming combined SLL+LL parsing, an SLL configuration set with only\n// conflicting subsets should fall back to full LL, even if the\n// configuration sets don't resolve to the same alternative (e.g.\n// {@code {1,2}} and {@code {3,4}}. If there is at least one non-conflicting\n// configuration, SLL could continue with the hopes that more lookahead will\n// resolve via one of those non-conflicting configurations.</p>\n//\n// <p>Here's the prediction termination rule them: SLL (for SLL+LL parsing)\n// stops when it sees only conflicting configuration subsets. In contrast,\n// full LL keeps going when there is uncertainty.</p>\n//\n// <p><strong>HEURISTIC</strong></p>\n//\n// <p>As a heuristic, we stop prediction when we see any conflicting subset\n// unless we see a state that only has one alternative associated with it.\n// The single-alt-state thing lets prediction continue upon rules like\n// (otherwise, it would admit defeat too soon):</p>\n//\n// <p>{@code [12|1|[], 6|2|[], 12|2|[]]. s : (ID | ID ID?) ';' ;}</p>\n//\n// <p>When the ATN simulation reaches the state before {@code ';'}, it has a\n// DFA state that looks like: {@code [12|1|[], 6|2|[], 12|2|[]]}. Naturally\n// {@code 12|1|[]} and {@code 12|2|[]} conflict, but we cannot stop\n// processing this node because alternative to has another way to continue,\n// via {@code [6|2|[]]}.</p>\n//\n// <p>It also let's us continue for this rule:</p>\n//\n// <p>{@code [1|1|[], 1|2|[], 8|3|[]] a : A | A | A B ;}</p>\n//\n// <p>After matching input A, we reach the stop state for rule A, state 1.\n// State 8 is the state right before B. Clearly alternatives 1 and 2\n// conflict and no amount of further lookahead will separate the two.\n// However, alternative 3 will be able to continue and so we do not stop\n// working on this state. In the previous example, we're concerned with\n// states associated with the conflicting alternatives. Here alt 3 is not\n// associated with the conflicting configs, but since we can continue\n// looking for input reasonably, don't declare the state done.</p>\n//\n// <p><strong>PURE SLL PARSING</strong></p>\n//\n// <p>To handle pure SLL parsing, all we have to do is make sure that we\n// combine stack contexts for configurations that differ only by semantic\n// predicate. From there, we can do the usual SLL termination heuristic.</p>\n//\n// <p><strong>PREDICATES IN SLL+LL PARSING</strong></p>\n//\n// <p>SLL decisions don't evaluate predicates until after they reach DFA stop\n// states because they need to create the DFA cache that works in all\n// semantic situations. In contrast, full LL evaluates predicates collected\n// during start state computation so it can ignore predicates thereafter.\n// This means that SLL termination detection can totally ignore semantic\n// predicates.</p>\n//\n// <p>Implementation-wise, {@link ATNConfigSet} combines stack contexts but not\n// semantic predicate contexts so we might see two configurations like the\n// following.</p>\n//\n// <p>{@code (s, 1, x, {}), (s, 1, x', {p})}</p>\n//\n// <p>Before testing these configurations against others, we have to merge\n// {@code x} and {@code x'} (without modifying the existing configurations).\n// For example, we test {@code (x+x')==x''} when looking for conflicts in\n// the following configurations.</p>\n//\n// <p>{@code (s, 1, x, {}), (s, 1, x', {p}), (s, 2, x'', {})}</p>\n//\n// <p>If the configuration set has predicates (as indicated by\n// {@link ATNConfigSet//hasSemanticContext}), this algorithm makes a copy of\n// the configurations to strip out all of the predicates so that a standard\n// {@link ATNConfigSet} will merge everything ignoring predicates.</p>\n//\nPredictionMode.hasSLLConflictTerminatingPrediction = function( mode, configs) {\n    // Configs in rule stop states indicate reaching the end of the decision\n    // rule (local context) or end of start rule (full context). If all\n    // configs meet this condition, then none of the configurations is able\n    // to match additional input so we terminate prediction.\n    //\n    if (PredictionMode.allConfigsInRuleStopStates(configs)) {\n        return true;\n    }\n    // pure SLL mode parsing\n    if (mode === PredictionMode.SLL) {\n        // Don't bother with combining configs from different semantic\n        // contexts if we can fail over to full LL; costs more time\n        // since we'll often fail over anyway.\n        if (configs.hasSemanticContext) {\n            // dup configs, tossing out semantic predicates\n            var dup = new ATNConfigSet();\n            for(var i=0;i<configs.items.length;i++) {\n            \tvar c = configs.items[i];\n                c = new ATNConfig({semanticContext:SemanticContext.NONE}, c);\n                dup.add(c);\n            }\n            configs = dup;\n        }\n        // now we have combined contexts for configs with dissimilar preds\n    }\n    // pure SLL or combined SLL+LL mode parsing\n    var altsets = PredictionMode.getConflictingAltSubsets(configs);\n    return PredictionMode.hasConflictingAltSet(altsets) && !PredictionMode.hasStateAssociatedWithOneAlt(configs);\n};\n\n// Checks if any configuration in {@code configs} is in a\n// {@link RuleStopState}. Configurations meeting this condition have reached\n// the end of the decision rule (local context) or end of start rule (full\n// context).\n//\n// @param configs the configuration set to test\n// @return {@code true} if any configuration in {@code configs} is in a\n// {@link RuleStopState}, otherwise {@code false}\nPredictionMode.hasConfigInRuleStopState = function(configs) {\n\tfor(var i=0;i<configs.items.length;i++) {\n\t\tvar c = configs.items[i];\n        if (c.state instanceof RuleStopState) {\n            return true;\n        }\n\t}\n    return false;\n};\n\n// Checks if all configurations in {@code configs} are in a\n// {@link RuleStopState}. Configurations meeting this condition have reached\n// the end of the decision rule (local context) or end of start rule (full\n// context).\n//\n// @param configs the configuration set to test\n// @return {@code true} if all configurations in {@code configs} are in a\n// {@link RuleStopState}, otherwise {@code false}\nPredictionMode.allConfigsInRuleStopStates = function(configs) {\n\tfor(var i=0;i<configs.items.length;i++) {\n\t\tvar c = configs.items[i];\n        if (!(c.state instanceof RuleStopState)) {\n            return false;\n        }\n\t}\n    return true;\n};\n\n//\n// Full LL prediction termination.\n//\n// <p>Can we stop looking ahead during ATN simulation or is there some\n// uncertainty as to which alternative we will ultimately pick, after\n// consuming more input? Even if there are partial conflicts, we might know\n// that everything is going to resolve to the same minimum alternative. That\n// means we can stop since no more lookahead will change that fact. On the\n// other hand, there might be multiple conflicts that resolve to different\n// minimums. That means we need more look ahead to decide which of those\n// alternatives we should predict.</p>\n//\n// <p>The basic idea is to split the set of configurations {@code C}, into\n// conflicting subsets {@code (s, _, ctx, _)} and singleton subsets with\n// non-conflicting configurations. Two configurations conflict if they have\n// identical {@link ATNConfig//state} and {@link ATNConfig//context} values\n// but different {@link ATNConfig//alt} value, e.g. {@code (s, i, ctx, _)}\n// and {@code (s, j, ctx, _)} for {@code i!=j}.</p>\n//\n// <p>Reduce these configuration subsets to the set of possible alternatives.\n// You can compute the alternative subsets in one pass as follows:</p>\n//\n// <p>{@code A_s,ctx = {i | (s, i, ctx, _)}} for each configuration in\n// {@code C} holding {@code s} and {@code ctx} fixed.</p>\n//\n// <p>Or in pseudo-code, for each configuration {@code c} in {@code C}:</p>\n//\n// <pre>\n// map[c] U= c.{@link ATNConfig//alt alt} // map hash/equals uses s and x, not\n// alt and not pred\n// </pre>\n//\n// <p>The values in {@code map} are the set of {@code A_s,ctx} sets.</p>\n//\n// <p>If {@code |A_s,ctx|=1} then there is no conflict associated with\n// {@code s} and {@code ctx}.</p>\n//\n// <p>Reduce the subsets to singletons by choosing a minimum of each subset. If\n// the union of these alternative subsets is a singleton, then no amount of\n// more lookahead will help us. We will always pick that alternative. If,\n// however, there is more than one alternative, then we are uncertain which\n// alternative to predict and must continue looking for resolution. We may\n// or may not discover an ambiguity in the future, even if there are no\n// conflicting subsets this round.</p>\n//\n// <p>The biggest sin is to terminate early because it means we've made a\n// decision but were uncertain as to the eventual outcome. We haven't used\n// enough lookahead. On the other hand, announcing a conflict too late is no\n// big deal; you will still have the conflict. It's just inefficient. It\n// might even look until the end of file.</p>\n//\n// <p>No special consideration for semantic predicates is required because\n// predicates are evaluated on-the-fly for full LL prediction, ensuring that\n// no configuration contains a semantic context during the termination\n// check.</p>\n//\n// <p><strong>CONFLICTING CONFIGS</strong></p>\n//\n// <p>Two configurations {@code (s, i, x)} and {@code (s, j, x')}, conflict\n// when {@code i!=j} but {@code x=x'}. Because we merge all\n// {@code (s, i, _)} configurations together, that means that there are at\n// most {@code n} configurations associated with state {@code s} for\n// {@code n} possible alternatives in the decision. The merged stacks\n// complicate the comparison of configuration contexts {@code x} and\n// {@code x'}. Sam checks to see if one is a subset of the other by calling\n// merge and checking to see if the merged result is either {@code x} or\n// {@code x'}. If the {@code x} associated with lowest alternative {@code i}\n// is the superset, then {@code i} is the only possible prediction since the\n// others resolve to {@code min(i)} as well. However, if {@code x} is\n// associated with {@code j>i} then at least one stack configuration for\n// {@code j} is not in conflict with alternative {@code i}. The algorithm\n// should keep going, looking for more lookahead due to the uncertainty.</p>\n//\n// <p>For simplicity, I'm doing a equality check between {@code x} and\n// {@code x'} that lets the algorithm continue to consume lookahead longer\n// than necessary. The reason I like the equality is of course the\n// simplicity but also because that is the test you need to detect the\n// alternatives that are actually in conflict.</p>\n//\n// <p><strong>CONTINUE/STOP RULE</strong></p>\n//\n// <p>Continue if union of resolved alternative sets from non-conflicting and\n// conflicting alternative subsets has more than one alternative. We are\n// uncertain about which alternative to predict.</p>\n//\n// <p>The complete set of alternatives, {@code [i for (_,i,_)]}, tells us which\n// alternatives are still in the running for the amount of input we've\n// consumed at this point. The conflicting sets let us to strip away\n// configurations that won't lead to more states because we resolve\n// conflicts to the configuration with a minimum alternate for the\n// conflicting set.</p>\n//\n// <p><strong>CASES</strong></p>\n//\n// <ul>\n//\n// <li>no conflicts and more than 1 alternative in set =&gt; continue</li>\n//\n// <li> {@code (s, 1, x)}, {@code (s, 2, x)}, {@code (s, 3, z)},\n// {@code (s', 1, y)}, {@code (s', 2, y)} yields non-conflicting set\n// {@code {3}} U conflicting sets {@code min({1,2})} U {@code min({1,2})} =\n// {@code {1,3}} =&gt; continue\n// </li>\n//\n// <li>{@code (s, 1, x)}, {@code (s, 2, x)}, {@code (s', 1, y)},\n// {@code (s', 2, y)}, {@code (s'', 1, z)} yields non-conflicting set\n// {@code {1}} U conflicting sets {@code min({1,2})} U {@code min({1,2})} =\n// {@code {1}} =&gt; stop and predict 1</li>\n//\n// <li>{@code (s, 1, x)}, {@code (s, 2, x)}, {@code (s', 1, y)},\n// {@code (s', 2, y)} yields conflicting, reduced sets {@code {1}} U\n// {@code {1}} = {@code {1}} =&gt; stop and predict 1, can announce\n// ambiguity {@code {1,2}}</li>\n//\n// <li>{@code (s, 1, x)}, {@code (s, 2, x)}, {@code (s', 2, y)},\n// {@code (s', 3, y)} yields conflicting, reduced sets {@code {1}} U\n// {@code {2}} = {@code {1,2}} =&gt; continue</li>\n//\n// <li>{@code (s, 1, x)}, {@code (s, 2, x)}, {@code (s', 3, y)},\n// {@code (s', 4, y)} yields conflicting, reduced sets {@code {1}} U\n// {@code {3}} = {@code {1,3}} =&gt; continue</li>\n//\n// </ul>\n//\n// <p><strong>EXACT AMBIGUITY DETECTION</strong></p>\n//\n// <p>If all states report the same conflicting set of alternatives, then we\n// know we have the exact ambiguity set.</p>\n//\n// <p><code>|A_<em>i</em>|&gt;1</code> and\n// <code>A_<em>i</em> = A_<em>j</em></code> for all <em>i</em>, <em>j</em>.</p>\n//\n// <p>In other words, we continue examining lookahead until all {@code A_i}\n// have more than one alternative and all {@code A_i} are the same. If\n// {@code A={{1,2}, {1,3}}}, then regular LL prediction would terminate\n// because the resolved set is {@code {1}}. To determine what the real\n// ambiguity is, we have to know whether the ambiguity is between one and\n// two or one and three so we keep going. We can only stop prediction when\n// we need exact ambiguity detection when the sets look like\n// {@code A={{1,2}}} or {@code {{1,2},{1,2}}}, etc...</p>\n//\nPredictionMode.resolvesToJustOneViableAlt = function(altsets) {\n    return PredictionMode.getSingleViableAlt(altsets);\n};\n\n//\n// Determines if every alternative subset in {@code altsets} contains more\n// than one alternative.\n//\n// @param altsets a collection of alternative subsets\n// @return {@code true} if every {@link BitSet} in {@code altsets} has\n// {@link BitSet//cardinality cardinality} &gt; 1, otherwise {@code false}\n//\nPredictionMode.allSubsetsConflict = function(altsets) {\n    return ! PredictionMode.hasNonConflictingAltSet(altsets);\n};\n//\n// Determines if any single alternative subset in {@code altsets} contains\n// exactly one alternative.\n//\n// @param altsets a collection of alternative subsets\n// @return {@code true} if {@code altsets} contains a {@link BitSet} with\n// {@link BitSet//cardinality cardinality} 1, otherwise {@code false}\n//\nPredictionMode.hasNonConflictingAltSet = function(altsets) {\n\tfor(var i=0;i<altsets.length;i++) {\n\t\tvar alts = altsets[i];\n        if (alts.length===1) {\n            return true;\n        }\n\t}\n    return false;\n};\n\n//\n// Determines if any single alternative subset in {@code altsets} contains\n// more than one alternative.\n//\n// @param altsets a collection of alternative subsets\n// @return {@code true} if {@code altsets} contains a {@link BitSet} with\n// {@link BitSet//cardinality cardinality} &gt; 1, otherwise {@code false}\n//\nPredictionMode.hasConflictingAltSet = function(altsets) {\n\tfor(var i=0;i<altsets.length;i++) {\n\t\tvar alts = altsets[i];\n        if (alts.length>1) {\n            return true;\n        }\n\t}\n    return false;\n};\n\n//\n// Determines if every alternative subset in {@code altsets} is equivalent.\n//\n// @param altsets a collection of alternative subsets\n// @return {@code true} if every member of {@code altsets} is equal to the\n// others, otherwise {@code false}\n//\nPredictionMode.allSubsetsEqual = function(altsets) {\n    var first = null;\n\tfor(var i=0;i<altsets.length;i++) {\n\t\tvar alts = altsets[i];\n        if (first === null) {\n            first = alts;\n        } else if (alts!==first) {\n            return false;\n        }\n\t}\n    return true;\n};\n\n//\n// Returns the unique alternative predicted by all alternative subsets in\n// {@code altsets}. If no such alternative exists, this method returns\n// {@link ATN//INVALID_ALT_NUMBER}.\n//\n// @param altsets a collection of alternative subsets\n//\nPredictionMode.getUniqueAlt = function(altsets) {\n    var all = PredictionMode.getAlts(altsets);\n    if (all.length===1) {\n        return all.minValue();\n    } else {\n        return ATN.INVALID_ALT_NUMBER;\n    }\n};\n\n// Gets the complete set of represented alternatives for a collection of\n// alternative subsets. This method returns the union of each {@link BitSet}\n// in {@code altsets}.\n//\n// @param altsets a collection of alternative subsets\n// @return the set of represented alternatives in {@code altsets}\n//\nPredictionMode.getAlts = function(altsets) {\n    var all = new BitSet();\n    altsets.map( function(alts) { all.or(alts); });\n    return all;\n};\n\n//\n// This function gets the conflicting alt subsets from a configuration set.\n// For each configuration {@code c} in {@code configs}:\n//\n// <pre>\n// map[c] U= c.{@link ATNConfig//alt alt} // map hash/equals uses s and x, not\n// alt and not pred\n// </pre>\n\nPredictionMode.getConflictingAltSubsets = function(configs) {\n    var configToAlts = new Map();\n    configToAlts.hashFunction = function(cfg) { hashStuff(cfg.state.stateNumber, cfg.context); };\n    configToAlts.equalsFunction = function(c1, c2) { return c1.state.stateNumber==c2.state.stateNumber && c1.context.equals(c2.context);}\n    configs.items.map(function(cfg) {\n        var alts = configToAlts.get(cfg);\n        if (alts === null) {\n            alts = new BitSet();\n            configToAlts.put(cfg, alts);\n        }\n        alts.add(cfg.alt);\n\t});\n    return configToAlts.getValues();\n};\n\n//\n// Get a map from state to alt subset from a configuration set. For each\n// configuration {@code c} in {@code configs}:\n//\n// <pre>\n// map[c.{@link ATNConfig//state state}] U= c.{@link ATNConfig//alt alt}\n// </pre>\n//\nPredictionMode.getStateToAltMap = function(configs) {\n    var m = new AltDict();\n    configs.items.map(function(c) {\n        var alts = m.get(c.state);\n        if (alts === null) {\n            alts = new BitSet();\n            m.put(c.state, alts);\n        }\n        alts.add(c.alt);\n    });\n    return m;\n};\n\nPredictionMode.hasStateAssociatedWithOneAlt = function(configs) {\n    var values = PredictionMode.getStateToAltMap(configs).values();\n    for(var i=0;i<values.length;i++) {\n        if (values[i].length===1) {\n            return true;\n        }\n    }\n    return false;\n};\n\nPredictionMode.getSingleViableAlt = function(altsets) {\n    var result = null;\n\tfor(var i=0;i<altsets.length;i++) {\n\t\tvar alts = altsets[i];\n        var minAlt = alts.minValue();\n        if(result===null) {\n            result = minAlt;\n        } else if(result!==minAlt) { // more than 1 viable alt\n            return ATN.INVALID_ALT_NUMBER;\n        }\n\t}\n    return result;\n};\n\nexports.PredictionMode = PredictionMode;\n\n\n/***/ }),\n\n/***/ \"LoYW\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(\"O+Ac\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(\"rjj0\")(\"10c9c684\", content, true);\n\n/***/ }),\n\n/***/ \"Lrau\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// Generated from policy.g4 by ANTLR 4.7\r\n// jshint ignore: start\r\nvar antlr4 = __webpack_require__(\"9C8F\");\r\nvar policyListener = __webpack_require__(\"Smw7\").policyListener;\r\nvar grammarFileName = \"policy.g4\";\r\n\r\nvar serializedATN = [\"\\u0003\\u608b\\ua72a\\u8133\\ub9ed\\u417c\\u3be7\\u7786\\u5964\",\r\n    \"\\u00037\\u0116\\u0004\\u0002\\t\\u0002\\u0004\\u0003\\t\\u0003\\u0004\\u0004\\t\",\r\n    \"\\u0004\\u0004\\u0005\\t\\u0005\\u0004\\u0006\\t\\u0006\\u0004\\u0007\\t\\u0007\\u0004\",\r\n    \"\\b\\t\\b\\u0004\\t\\t\\t\\u0004\\n\\t\\n\\u0004\\u000b\\t\\u000b\\u0004\\f\\t\\f\\u0004\",\r\n    \"\\r\\t\\r\\u0004\\u000e\\t\\u000e\\u0004\\u000f\\t\\u000f\\u0004\\u0010\\t\\u0010\\u0004\",\r\n    \"\\u0011\\t\\u0011\\u0004\\u0012\\t\\u0012\\u0004\\u0013\\t\\u0013\\u0004\\u0014\\t\",\r\n    \"\\u0014\\u0004\\u0015\\t\\u0015\\u0004\\u0016\\t\\u0016\\u0004\\u0017\\t\\u0017\\u0004\",\r\n    \"\\u0018\\t\\u0018\\u0004\\u0019\\t\\u0019\\u0004\\u001a\\t\\u001a\\u0004\\u001b\\t\",\r\n    \"\\u001b\\u0004\\u001c\\t\\u001c\\u0004\\u001d\\t\\u001d\\u0004\\u001e\\t\\u001e\\u0004\",\r\n    \"\\u001f\\t\\u001f\\u0004 \\t \\u0004!\\t!\\u0004\\\"\\t\\\"\\u0004#\\t#\\u0004$\\t$\\u0004\",\r\n    \"%\\t%\\u0004&\\t&\\u0003\\u0002\\u0006\\u0002N\\n\\u0002\\r\\u0002\\u000e\\u0002\",\r\n    \"O\\u0003\\u0002\\u0003\\u0002\\u0003\\u0003\\u0003\\u0003\\u0006\\u0003V\\n\\u0003\",\r\n    \"\\r\\u0003\\u000e\\u0003W\\u0003\\u0003\\u0003\\u0003\\u0007\\u0003\\\\\\n\\u0003\",\r\n    \"\\f\\u0003\\u000e\\u0003_\\u000b\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0004\",\r\n    \"\\u0003\\u0004\\u0003\\u0004\\u0003\\u0004\\u0005\\u0004g\\n\\u0004\\u0003\\u0004\",\r\n    \"\\u0003\\u0004\\u0003\\u0004\\u0003\\u0004\\u0005\\u0004m\\n\\u0004\\u0005\\u0004\",\r\n    \"o\\n\\u0004\\u0003\\u0005\\u0003\\u0005\\u0007\\u0005s\\n\\u0005\\f\\u0005\\u000e\",\r\n    \"\\u0005v\\u000b\\u0005\\u0003\\u0005\\u0006\\u0005y\\n\\u0005\\r\\u0005\\u000e\\u0005\",\r\n    \"z\\u0003\\u0006\\u0003\\u0006\\u0003\\u0006\\u0007\\u0006\\u0080\\n\\u0006\\f\\u0006\",\r\n    \"\\u000e\\u0006\\u0083\\u000b\\u0006\\u0003\\u0007\\u0003\\u0007\\u0003\\u0007\\u0003\",\r\n    \"\\u0007\\u0007\\u0007\\u0089\\n\\u0007\\f\\u0007\\u000e\\u0007\\u008c\\u000b\\u0007\",\r\n    \"\\u0003\\b\\u0003\\b\\u0006\\b\\u0090\\n\\b\\r\\b\\u000e\\b\\u0091\\u0003\\t\\u0003\\t\",\r\n    \"\\u0003\\t\\u0003\\t\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0007\\n\\u009d\",\r\n    \"\\n\\n\\f\\n\\u000e\\n\\u00a0\\u000b\\n\\u0003\\n\\u0003\\n\\u0007\\n\\u00a4\\n\\n\\f\\n\",\r\n    \"\\u000e\\n\\u00a7\\u000b\\n\\u0003\\u000b\\u0003\\u000b\\u0003\\f\\u0003\\f\\u0003\",\r\n    \"\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0005\\f\\u00b5\",\r\n    \"\\n\\f\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\",\r\n    \"\\u000f\\u0003\\u000f\\u0003\\u000f\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\",\r\n    \"\\u0010\\u0003\\u0011\\u0003\\u0011\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\",\r\n    \"\\u0012\\u0003\\u0012\\u0003\\u0013\\u0003\\u0013\\u0005\\u0013\\u00cd\\n\\u0013\",\r\n    \"\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\",\r\n    \"\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0016\\u0003\\u0016\\u0007\\u0016\",\r\n    \"\\u00da\\n\\u0016\\f\\u0016\\u000e\\u0016\\u00dd\\u000b\\u0016\\u0003\\u0016\\u0006\",\r\n    \"\\u0016\\u00e0\\n\\u0016\\r\\u0016\\u000e\\u0016\\u00e1\\u0003\\u0017\\u0003\\u0017\",\r\n    \"\\u0005\\u0017\\u00e6\\n\\u0017\\u0003\\u0018\\u0003\\u0018\\u0003\\u0018\\u0003\",\r\n    \"\\u0019\\u0003\\u0019\\u0003\\u0019\\u0003\\u001a\\u0003\\u001a\\u0005\\u001a\\u00f0\",\r\n    \"\\n\\u001a\\u0003\\u001b\\u0003\\u001b\\u0003\\u001b\\u0003\\u001c\\u0003\\u001c\",\r\n    \"\\u0003\\u001c\\u0003\\u001d\\u0003\\u001d\\u0003\\u001e\\u0003\\u001e\\u0003\\u001f\",\r\n    \"\\u0003\\u001f\\u0003 \\u0003 \\u0003 \\u0003 \\u0006 \\u0102\\n \\r \\u000e \\u0103\",\r\n    \"\\u0003!\\u0003!\\u0003\\\"\\u0003\\\"\\u0003#\\u0003#\\u0003$\\u0003$\\u0003%\\u0003\",\r\n    \"%\\u0003%\\u0003%\\u0003&\\u0003&\\u0003&\\u0003&\\u0003&\\u0002\\u0002\\'\\u0002\",\r\n    \"\\u0004\\u0006\\b\\n\\f\\u000e\\u0010\\u0012\\u0014\\u0016\\u0018\\u001a\\u001c\\u001e\",\r\n    \" \\\"$&(*,.02468:<>@BDFHJ\\u0002\\u0005\\u0003\\u0002\\u001a\\u001d\\u0003\\u0002\",\r\n    \"\\u001f \\u0004\\u0002\\u0010\\u0010!#\\u0002\\u010f\\u0002M\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0004S\\u0003\\u0002\\u0002\\u0002\\u0006n\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\bp\\u0003\\u0002\\u0002\\u0002\\n|\\u0003\\u0002\\u0002\\u0002\\f\\u0084\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u000e\\u008d\\u0003\\u0002\\u0002\\u0002\\u0010\\u0093\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0012\\u0097\\u0003\\u0002\\u0002\\u0002\\u0014\\u00a8\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0016\\u00b4\\u0003\\u0002\\u0002\\u0002\\u0018\\u00b6\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u001a\\u00b9\\u0003\\u0002\\u0002\\u0002\\u001c\\u00bc\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u001e\\u00bf\\u0003\\u0002\\u0002\\u0002 \\u00c3\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\\"\\u00c5\\u0003\\u0002\\u0002\\u0002$\\u00cc\\u0003\\u0002\",\r\n    \"\\u0002\\u0002&\\u00ce\\u0003\\u0002\\u0002\\u0002(\\u00d4\\u0003\\u0002\\u0002\",\r\n    \"\\u0002*\\u00d7\\u0003\\u0002\\u0002\\u0002,\\u00e5\\u0003\\u0002\\u0002\\u0002\",\r\n    \".\\u00e7\\u0003\\u0002\\u0002\\u00020\\u00ea\\u0003\\u0002\\u0002\\u00022\\u00ef\",\r\n    \"\\u0003\\u0002\\u0002\\u00024\\u00f1\\u0003\\u0002\\u0002\\u00026\\u00f4\\u0003\",\r\n    \"\\u0002\\u0002\\u00028\\u00f7\\u0003\\u0002\\u0002\\u0002:\\u00f9\\u0003\\u0002\",\r\n    \"\\u0002\\u0002<\\u00fb\\u0003\\u0002\\u0002\\u0002>\\u0101\\u0003\\u0002\\u0002\",\r\n    \"\\u0002@\\u0105\\u0003\\u0002\\u0002\\u0002B\\u0107\\u0003\\u0002\\u0002\\u0002\",\r\n    \"D\\u0109\\u0003\\u0002\\u0002\\u0002F\\u010b\\u0003\\u0002\\u0002\\u0002H\\u010d\",\r\n    \"\\u0003\\u0002\\u0002\\u0002J\\u0111\\u0003\\u0002\\u0002\\u0002LN\\u0005\\u0004\",\r\n    \"\\u0003\\u0002ML\\u0003\\u0002\\u0002\\u0002NO\\u0003\\u0002\\u0002\\u0002OM\\u0003\",\r\n    \"\\u0002\\u0002\\u0002OP\\u0003\\u0002\\u0002\\u0002PQ\\u0003\\u0002\\u0002\\u0002\",\r\n    \"QR\\u0007\\u0002\\u0002\\u0003R\\u0003\\u0003\\u0002\\u0002\\u0002SU\\u0007$\\u0002\",\r\n    \"\\u0002TV\\u0005\\u0006\\u0004\\u0002UT\\u0003\\u0002\\u0002\\u0002VW\\u0003\\u0002\",\r\n    \"\\u0002\\u0002WU\\u0003\\u0002\\u0002\\u0002WX\\u0003\\u0002\\u0002\\u0002XY\\u0003\",\r\n    \"\\u0002\\u0002\\u0002Y]\\u0007\\u0003\\u0002\\u0002Z\\\\\\u0005\\u000e\\b\\u0002\",\r\n    \"[Z\\u0003\\u0002\\u0002\\u0002\\\\_\\u0003\\u0002\\u0002\\u0002][\\u0003\\u0002\",\r\n    \"\\u0002\\u0002]^\\u0003\\u0002\\u0002\\u0002^`\\u0003\\u0002\\u0002\\u0002_]\\u0003\",\r\n    \"\\u0002\\u0002\\u0002`a\\u0005\\b\\u0005\\u0002a\\u0005\\u0003\\u0002\\u0002\\u0002\",\r\n    \"bf\\u0005\\n\\u0006\\u0002cd\\u0005B\\\"\\u0002de\\u0005\\f\\u0007\\u0002eg\\u0003\",\r\n    \"\\u0002\\u0002\\u0002fc\\u0003\\u0002\\u0002\\u0002fg\\u0003\\u0002\\u0002\\u0002\",\r\n    \"go\\u0003\\u0002\\u0002\\u0002hl\\u0005\\f\\u0007\\u0002ij\\u0005B\\\"\\u0002jk\",\r\n    \"\\u0005\\n\\u0006\\u0002km\\u0003\\u0002\\u0002\\u0002li\\u0003\\u0002\\u0002\\u0002\",\r\n    \"lm\\u0003\\u0002\\u0002\\u0002mo\\u0003\\u0002\\u0002\\u0002nb\\u0003\\u0002\\u0002\",\r\n    \"\\u0002nh\\u0003\\u0002\\u0002\\u0002o\\u0007\\u0003\\u0002\\u0002\\u0002px\\u0007\",\r\n    \"\\u0004\\u0002\\u0002qs\\u0007\\u0005\\u0002\\u0002rq\\u0003\\u0002\\u0002\\u0002\",\r\n    \"sv\\u0003\\u0002\\u0002\\u0002tr\\u0003\\u0002\\u0002\\u0002tu\\u0003\\u0002\\u0002\",\r\n    \"\\u0002uw\\u0003\\u0002\\u0002\\u0002vt\\u0003\\u0002\\u0002\\u0002wy\\u00073\",\r\n    \"\\u0002\\u0002xt\\u0003\\u0002\\u0002\\u0002yz\\u0003\\u0002\\u0002\\u0002zx\\u0003\",\r\n    \"\\u0002\\u0002\\u0002z{\\u0003\\u0002\\u0002\\u0002{\\t\\u0003\\u0002\\u0002\\u0002\",\r\n    \"|\\u0081\\u0005> \\u0002}~\\u0007\\u0005\\u0002\\u0002~\\u0080\\u0005> \\u0002\",\r\n    \"\\u007f}\\u0003\\u0002\\u0002\\u0002\\u0080\\u0083\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0081\\u007f\\u0003\\u0002\\u0002\\u0002\\u0081\\u0082\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0082\\u000b\\u0003\\u0002\\u0002\\u0002\\u0083\\u0081\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0084\\u0085\\u0007\\u0006\\u0002\\u0002\\u0085\\u008a\\u0005@!\\u0002\\u0086\",\r\n    \"\\u0087\\u0007\\u0005\\u0002\\u0002\\u0087\\u0089\\u0005@!\\u0002\\u0088\\u0086\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0089\\u008c\\u0003\\u0002\\u0002\\u0002\\u008a\\u0088\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u008a\\u008b\\u0003\\u0002\\u0002\\u0002\\u008b\\r\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u008c\\u008a\\u0003\\u0002\\u0002\\u0002\\u008d\\u008f\",\r\n    \"\\u0005\\u0010\\t\\u0002\\u008e\\u0090\\u0005\\u0012\\n\\u0002\\u008f\\u008e\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0090\\u0091\\u0003\\u0002\\u0002\\u0002\\u0091\\u008f\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0091\\u0092\\u0003\\u0002\\u0002\\u0002\\u0092\\u000f\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0093\\u0094\\u0007)\\u0002\\u0002\\u0094\\u0095\\u0007\",\r\n    \"3\\u0002\\u0002\\u0095\\u0096\\u0007\\u0007\\u0002\\u0002\\u0096\\u0011\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0097\\u0098\\u0007\\'\\u0002\\u0002\\u0098\\u0099\\u0007\",\r\n    \"(\\u0002\\u0002\\u0099\\u009a\\u00073\\u0002\\u0002\\u009a\\u009e\\u0007*\\u0002\",\r\n    \"\\u0002\\u009b\\u009d\\u0005\\u0014\\u000b\\u0002\\u009c\\u009b\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u009d\\u00a0\\u0003\\u0002\\u0002\\u0002\\u009e\\u009c\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u009e\\u009f\\u0003\\u0002\\u0002\\u0002\\u009f\\u00a1\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00a0\\u009e\\u0003\\u0002\\u0002\\u0002\\u00a1\\u00a5\\u0005\\u0016\\f\",\r\n    \"\\u0002\\u00a2\\u00a4\\u0005\\u0018\\r\\u0002\\u00a3\\u00a2\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00a4\\u00a7\\u0003\\u0002\\u0002\\u0002\\u00a5\\u00a3\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00a5\\u00a6\\u0003\\u0002\\u0002\\u0002\\u00a6\\u0013\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00a7\\u00a5\\u0003\\u0002\\u0002\\u0002\\u00a8\\u00a9\\u0007+\\u0002\",\r\n    \"\\u0002\\u00a9\\u0015\\u0003\\u0002\\u0002\\u0002\\u00aa\\u00b5\\u0005\\u001a\\u000e\",\r\n    \"\\u0002\\u00ab\\u00b5\\u0005\\u001c\\u000f\\u0002\\u00ac\\u00b5\\u0005\\u001e\\u0010\",\r\n    \"\\u0002\\u00ad\\u00b5\\u0005 \\u0011\\u0002\\u00ae\\u00b5\\u0005\\\"\\u0012\\u0002\",\r\n    \"\\u00af\\u00b5\\u0005$\\u0013\\u0002\\u00b0\\u00b5\\u0005*\\u0016\\u0002\\u00b1\",\r\n    \"\\u00b5\\u0005,\\u0017\\u0002\\u00b2\\u00b5\\u00052\\u001a\\u0002\\u00b3\\u00b5\",\r\n    \"\\u00058\\u001d\\u0002\\u00b4\\u00aa\\u0003\\u0002\\u0002\\u0002\\u00b4\\u00ab\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u00b4\\u00ac\\u0003\\u0002\\u0002\\u0002\\u00b4\\u00ad\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u00b4\\u00ae\\u0003\\u0002\\u0002\\u0002\\u00b4\\u00af\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u00b4\\u00b0\\u0003\\u0002\\u0002\\u0002\\u00b4\\u00b1\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u00b4\\u00b2\\u0003\\u0002\\u0002\\u0002\\u00b4\\u00b3\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u00b5\\u0017\\u0003\\u0002\\u0002\\u0002\\u00b6\\u00b7\",\r\n    \"\\u0007\\b\\u0002\\u0002\\u00b7\\u00b8\\u0005\\u0016\\f\\u0002\\u00b8\\u0019\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00b9\\u00ba\\u0007\\t\\u0002\\u0002\\u00ba\\u00bb\\u0005\",\r\n    \"F$\\u0002\\u00bb\\u001b\\u0003\\u0002\\u0002\\u0002\\u00bc\\u00bd\\u0007\\n\\u0002\",\r\n    \"\\u0002\\u00bd\\u00be\\u00077\\u0002\\u0002\\u00be\\u001d\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00bf\\u00c0\\u00074\\u0002\\u0002\\u00c0\\u00c1\\u0005F$\\u0002\\u00c1\",\r\n    \"\\u00c2\\u0007\\u000b\\u0002\\u0002\\u00c2\\u001f\\u0003\\u0002\\u0002\\u0002\\u00c3\",\r\n    \"\\u00c4\\u0007\\f\\u0002\\u0002\\u00c4!\\u0003\\u0002\\u0002\\u0002\\u00c5\\u00c6\",\r\n    \"\\u0007\\r\\u0002\\u0002\\u00c6\\u00c7\\u00074\\u0002\\u0002\\u00c7\\u00c8\\u0007\",\r\n    \"(\\u0002\\u0002\\u00c8\\u00c9\\u00075\\u0002\\u0002\\u00c9#\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00ca\\u00cd\\u0005&\\u0014\\u0002\\u00cb\\u00cd\\u0005(\\u0015\\u0002\",\r\n    \"\\u00cc\\u00ca\\u0003\\u0002\\u0002\\u0002\\u00cc\\u00cb\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00cd%\\u0003\\u0002\\u0002\\u0002\\u00ce\\u00cf\\u0007\\u000e\\u0002\\u0002\",\r\n    \"\\u00cf\\u00d0\\u00074\\u0002\\u0002\\u00d0\\u00d1\\u0007\\u000f\\u0002\\u0002\",\r\n    \"\\u00d1\\u00d2\\u00074\\u0002\\u0002\\u00d2\\u00d3\\u0007\\u0010\\u0002\\u0002\",\r\n    \"\\u00d3\\'\\u0003\\u0002\\u0002\\u0002\\u00d4\\u00d5\\u0007\\u0011\\u0002\\u0002\",\r\n    \"\\u00d5\\u00d6\\u00074\\u0002\\u0002\\u00d6)\\u0003\\u0002\\u0002\\u0002\\u00d7\",\r\n    \"\\u00df\\u0007-\\u0002\\u0002\\u00d8\\u00da\\u0007\\u0005\\u0002\\u0002\\u00d9\",\r\n    \"\\u00d8\\u0003\\u0002\\u0002\\u0002\\u00da\\u00dd\\u0003\\u0002\\u0002\\u0002\\u00db\",\r\n    \"\\u00d9\\u0003\\u0002\\u0002\\u0002\\u00db\\u00dc\\u0003\\u0002\\u0002\\u0002\\u00dc\",\r\n    \"\\u00de\\u0003\\u0002\\u0002\\u0002\\u00dd\\u00db\\u0003\\u0002\\u0002\\u0002\\u00de\",\r\n    \"\\u00e0\\u0005:\\u001e\\u0002\\u00df\\u00db\\u0003\\u0002\\u0002\\u0002\\u00e0\",\r\n    \"\\u00e1\\u0003\\u0002\\u0002\\u0002\\u00e1\\u00df\\u0003\\u0002\\u0002\\u0002\\u00e1\",\r\n    \"\\u00e2\\u0003\\u0002\\u0002\\u0002\\u00e2+\\u0003\\u0002\\u0002\\u0002\\u00e3\",\r\n    \"\\u00e6\\u0005.\\u0018\\u0002\\u00e4\\u00e6\\u00050\\u0019\\u0002\\u00e5\\u00e3\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u00e5\\u00e4\\u0003\\u0002\\u0002\\u0002\\u00e6-\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u00e7\\u00e8\\u0007\\u0012\\u0002\\u0002\\u00e8\\u00e9\",\r\n    \"\\u00074\\u0002\\u0002\\u00e9/\\u0003\\u0002\\u0002\\u0002\\u00ea\\u00eb\\u0007\",\r\n    \"\\u0013\\u0002\\u0002\\u00eb\\u00ec\\u00074\\u0002\\u0002\\u00ec1\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u00ed\\u00f0\\u00054\\u001b\\u0002\\u00ee\\u00f0\\u00056\\u001c\",\r\n    \"\\u0002\\u00ef\\u00ed\\u0003\\u0002\\u0002\\u0002\\u00ef\\u00ee\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00f03\\u0003\\u0002\\u0002\\u0002\\u00f1\\u00f2\\u0007\\u0014\\u0002\",\r\n    \"\\u0002\\u00f2\\u00f3\\u00074\\u0002\\u0002\\u00f35\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00f4\\u00f5\\u0007\\u0015\\u0002\\u0002\\u00f5\\u00f6\\u00074\\u0002\\u0002\",\r\n    \"\\u00f67\\u0003\\u0002\\u0002\\u0002\\u00f7\\u00f8\\u0007\\u0016\\u0002\\u0002\",\r\n    \"\\u00f89\\u0003\\u0002\\u0002\\u0002\\u00f9\\u00fa\\u00073\\u0002\\u0002\\u00fa\",\r\n    \";\\u0003\\u0002\\u0002\\u0002\\u00fb\\u00fc\\u00073\\u0002\\u0002\\u00fc=\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00fd\\u0102\\u0007\\u0017\\u0002\\u0002\\u00fe\\u0102\\u0007\",\r\n    \"\\u0018\\u0002\\u0002\\u00ff\\u0102\\u0007\\u0019\\u0002\\u0002\\u0100\\u0102\\u0007\",\r\n    \"3\\u0002\\u0002\\u0101\\u00fd\\u0003\\u0002\\u0002\\u0002\\u0101\\u00fe\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0101\\u00ff\\u0003\\u0002\\u0002\\u0002\\u0101\\u0100\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0102\\u0103\\u0003\\u0002\\u0002\\u0002\\u0103\\u0101\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0103\\u0104\\u0003\\u0002\\u0002\\u0002\\u0104?\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0105\\u0106\\t\\u0002\\u0002\\u0002\\u0106A\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0107\\u0108\\u0007\\u001e\\u0002\\u0002\\u0108C\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0109\\u010a\\t\\u0003\\u0002\\u0002\\u010aE\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u010b\\u010c\\t\\u0004\\u0002\\u0002\\u010cG\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u010d\\u010e\\u00074\\u0002\\u0002\\u010e\\u010f\\u0007\\u0007\\u0002\\u0002\",\r\n    \"\\u010f\\u0110\\u00074\\u0002\\u0002\\u0110I\\u0003\\u0002\\u0002\\u0002\\u0111\",\r\n    \"\\u0112\\u00074\\u0002\\u0002\\u0112\\u0113\\u0007\\u0007\\u0002\\u0002\\u0113\",\r\n    \"\\u0114\\u00074\\u0002\\u0002\\u0114K\\u0003\\u0002\\u0002\\u0002\\u0017OW]fl\",\r\n    \"ntz\\u0081\\u008a\\u0091\\u009e\\u00a5\\u00b4\\u00cc\\u00db\\u00e1\\u00e5\\u00ef\",\r\n    \"\\u0101\\u0103\"].join(\"\");\r\n\r\n\r\nvar atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);\r\n\r\nvar decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });\r\n\r\nvar sharedContextCache = new antlr4.PredictionContextCache();\r\n\r\nvar literalNames = [ null, \"'in the following states:'\", \"'I agree to authorize token in'\", \r\n                     \"','\", \"'users in'\", \"':'\", \"'and on'\", \"'the end of'\", \r\n                     \"'date'\", \"'after contract creation'\", \"'price priceExpression'\", \r\n                     \"'transaction of'\", \"'contract_guaranty of'\", \"'refund after'\", \r\n                     \"'day'\", \"'platform_guaranty of'\", \"'visit_increment of'\", \r\n                     \"'visit of'\", \"'account_balance greater than'\", \"'account_balance smaller than'\", \r\n                     \"'account_settled'\", \"'.'\", \"'@'\", \"'_'\", \"'RegisteredUser'\", \r\n                     \"'LoginUser'\", \"'AllVisiter'\", \"'RegisteredNode'\", \r\n                     \"'and'\", \"'in total'\", \"'per view'\", \"'year'\", \"'week'\", \r\n                     \"'cycle'\", \"'For'\", \"'usergroups'\", \"'users'\", \"'proceed'\", \r\n                     \"'to'\", \"'in'\", \"'on'\", \"'accepting'\", null, \"'license'\", \r\n                     \"'paying'\", \"'per'\", \"'view'\", \"'require'\", \"'nothing'\" ];\r\n\r\nvar symbolicNames = [ null, null, null, null, null, null, null, null, null, \r\n                      null, null, null, null, null, null, null, null, null, \r\n                      null, null, null, null, null, null, null, null, null, \r\n                      null, null, null, null, null, null, null, \"FOR\", \"USERGROUPS\", \r\n                      \"USERS\", \"PROCEED\", \"TO\", \"IN\", \"ON\", \"ACCEPTING\", \r\n                      \"SELF\", \"LICENSE\", \"PAYING\", \"PER\", \"VIEW\", \"REQUIRE\", \r\n                      \"NOTHING\", \"ID\", \"INT\", \"FEATHERACCOUNT\", \"WS\", \"DATE\" ];\r\n\r\nvar ruleNames =  [ \"p\", \"segment\", \"audience_clause\", \"athorize_token_clause\", \r\n                   \"audience_individuals_clause\", \"audience_groups_clause\", \r\n                   \"state_clause\", \"current_state_clause\", \"target_clause\", \r\n                   \"accepting\", \"event\", \"and_event\", \"period_event\", \"specific_date_event\", \r\n                   \"relative_date_event\", \"pricing_agreement_event\", \"transaction_event\", \r\n                   \"guaranty_event\", \"contract_guaranty\", \"platform_guaranty\", \r\n                   \"signing_event\", \"access_count_event\", \"visit_increment_event\", \r\n                   \"visit_event\", \"balance_event\", \"balance_greater\", \"balance_smaller\", \r\n                   \"settlement_event\", \"license_resource_id\", \"account_id\", \r\n                   \"users\", \"user_groups\", \"and\", \"view_unit\", \"time_unit\", \r\n                   \"start_hour\", \"end_hour\" ];\r\n\r\nfunction policyParser (input) {\r\n\tantlr4.Parser.call(this, input);\r\n    this._interp = new antlr4.atn.ParserATNSimulator(this, atn, decisionsToDFA, sharedContextCache);\r\n    this.ruleNames = ruleNames;\r\n    this.literalNames = literalNames;\r\n    this.symbolicNames = symbolicNames;\r\n    return this;\r\n}\r\n\r\npolicyParser.prototype = Object.create(antlr4.Parser.prototype);\r\npolicyParser.prototype.constructor = policyParser;\r\n\r\nObject.defineProperty(policyParser.prototype, \"atn\", {\r\n\tget : function() {\r\n\t\treturn atn;\r\n\t}\r\n});\r\n\r\npolicyParser.EOF = antlr4.Token.EOF;\r\npolicyParser.T__0 = 1;\r\npolicyParser.T__1 = 2;\r\npolicyParser.T__2 = 3;\r\npolicyParser.T__3 = 4;\r\npolicyParser.T__4 = 5;\r\npolicyParser.T__5 = 6;\r\npolicyParser.T__6 = 7;\r\npolicyParser.T__7 = 8;\r\npolicyParser.T__8 = 9;\r\npolicyParser.T__9 = 10;\r\npolicyParser.T__10 = 11;\r\npolicyParser.T__11 = 12;\r\npolicyParser.T__12 = 13;\r\npolicyParser.T__13 = 14;\r\npolicyParser.T__14 = 15;\r\npolicyParser.T__15 = 16;\r\npolicyParser.T__16 = 17;\r\npolicyParser.T__17 = 18;\r\npolicyParser.T__18 = 19;\r\npolicyParser.T__19 = 20;\r\npolicyParser.T__20 = 21;\r\npolicyParser.T__21 = 22;\r\npolicyParser.T__22 = 23;\r\npolicyParser.T__23 = 24;\r\npolicyParser.T__24 = 25;\r\npolicyParser.T__25 = 26;\r\npolicyParser.T__26 = 27;\r\npolicyParser.T__27 = 28;\r\npolicyParser.T__28 = 29;\r\npolicyParser.T__29 = 30;\r\npolicyParser.T__30 = 31;\r\npolicyParser.T__31 = 32;\r\npolicyParser.T__32 = 33;\r\npolicyParser.FOR = 34;\r\npolicyParser.USERGROUPS = 35;\r\npolicyParser.USERS = 36;\r\npolicyParser.PROCEED = 37;\r\npolicyParser.TO = 38;\r\npolicyParser.IN = 39;\r\npolicyParser.ON = 40;\r\npolicyParser.ACCEPTING = 41;\r\npolicyParser.SELF = 42;\r\npolicyParser.LICENSE = 43;\r\npolicyParser.PAYING = 44;\r\npolicyParser.PER = 45;\r\npolicyParser.VIEW = 46;\r\npolicyParser.REQUIRE = 47;\r\npolicyParser.NOTHING = 48;\r\npolicyParser.ID = 49;\r\npolicyParser.INT = 50;\r\npolicyParser.FEATHERACCOUNT = 51;\r\npolicyParser.WS = 52;\r\npolicyParser.DATE = 53;\r\n\r\npolicyParser.RULE_p = 0;\r\npolicyParser.RULE_segment = 1;\r\npolicyParser.RULE_audience_clause = 2;\r\npolicyParser.RULE_athorize_token_clause = 3;\r\npolicyParser.RULE_audience_individuals_clause = 4;\r\npolicyParser.RULE_audience_groups_clause = 5;\r\npolicyParser.RULE_state_clause = 6;\r\npolicyParser.RULE_current_state_clause = 7;\r\npolicyParser.RULE_target_clause = 8;\r\npolicyParser.RULE_accepting = 9;\r\npolicyParser.RULE_event = 10;\r\npolicyParser.RULE_and_event = 11;\r\npolicyParser.RULE_period_event = 12;\r\npolicyParser.RULE_specific_date_event = 13;\r\npolicyParser.RULE_relative_date_event = 14;\r\npolicyParser.RULE_pricing_agreement_event = 15;\r\npolicyParser.RULE_transaction_event = 16;\r\npolicyParser.RULE_guaranty_event = 17;\r\npolicyParser.RULE_contract_guaranty = 18;\r\npolicyParser.RULE_platform_guaranty = 19;\r\npolicyParser.RULE_signing_event = 20;\r\npolicyParser.RULE_access_count_event = 21;\r\npolicyParser.RULE_visit_increment_event = 22;\r\npolicyParser.RULE_visit_event = 23;\r\npolicyParser.RULE_balance_event = 24;\r\npolicyParser.RULE_balance_greater = 25;\r\npolicyParser.RULE_balance_smaller = 26;\r\npolicyParser.RULE_settlement_event = 27;\r\npolicyParser.RULE_license_resource_id = 28;\r\npolicyParser.RULE_account_id = 29;\r\npolicyParser.RULE_users = 30;\r\npolicyParser.RULE_user_groups = 31;\r\npolicyParser.RULE_and = 32;\r\npolicyParser.RULE_view_unit = 33;\r\npolicyParser.RULE_time_unit = 34;\r\npolicyParser.RULE_start_hour = 35;\r\npolicyParser.RULE_end_hour = 36;\r\n\r\nfunction PContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_p;\r\n    return this;\r\n}\r\n\r\nPContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nPContext.prototype.constructor = PContext;\r\n\r\nPContext.prototype.EOF = function() {\r\n    return this.getToken(policyParser.EOF, 0);\r\n};\r\n\r\nPContext.prototype.segment = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(SegmentContext);\r\n    } else {\r\n        return this.getTypedRuleContext(SegmentContext,i);\r\n    }\r\n};\r\n\r\nPContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterP(this);\r\n\t}\r\n};\r\n\r\nPContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitP(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.PContext = PContext;\r\n\r\npolicyParser.prototype.p = function() {\r\n\r\n    var localctx = new PContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 0, policyParser.RULE_p);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 75; \r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        do {\r\n            this.state = 74;\r\n            this.segment();\r\n            this.state = 77; \r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        } while(_la===policyParser.FOR);\r\n        this.state = 79;\r\n        this.match(policyParser.EOF);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction SegmentContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_segment;\r\n    return this;\r\n}\r\n\r\nSegmentContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nSegmentContext.prototype.constructor = SegmentContext;\r\n\r\nSegmentContext.prototype.FOR = function() {\r\n    return this.getToken(policyParser.FOR, 0);\r\n};\r\n\r\nSegmentContext.prototype.athorize_token_clause = function() {\r\n    return this.getTypedRuleContext(Athorize_token_clauseContext,0);\r\n};\r\n\r\nSegmentContext.prototype.audience_clause = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(Audience_clauseContext);\r\n    } else {\r\n        return this.getTypedRuleContext(Audience_clauseContext,i);\r\n    }\r\n};\r\n\r\nSegmentContext.prototype.state_clause = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(State_clauseContext);\r\n    } else {\r\n        return this.getTypedRuleContext(State_clauseContext,i);\r\n    }\r\n};\r\n\r\nSegmentContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterSegment(this);\r\n\t}\r\n};\r\n\r\nSegmentContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitSegment(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.SegmentContext = SegmentContext;\r\n\r\npolicyParser.prototype.segment = function() {\r\n\r\n    var localctx = new SegmentContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 2, policyParser.RULE_segment);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 81;\r\n        this.match(policyParser.FOR);\r\n        this.state = 83; \r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        do {\r\n            this.state = 82;\r\n            this.audience_clause();\r\n            this.state = 85; \r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        } while((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << policyParser.T__3) | (1 << policyParser.T__20) | (1 << policyParser.T__21) | (1 << policyParser.T__22))) !== 0) || _la===policyParser.ID);\r\n        this.state = 87;\r\n        this.match(policyParser.T__0);\r\n        this.state = 91;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        while(_la===policyParser.IN) {\r\n            this.state = 88;\r\n            this.state_clause();\r\n            this.state = 93;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        }\r\n        this.state = 94;\r\n        this.athorize_token_clause();\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Audience_clauseContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_audience_clause;\r\n    return this;\r\n}\r\n\r\nAudience_clauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAudience_clauseContext.prototype.constructor = Audience_clauseContext;\r\n\r\nAudience_clauseContext.prototype.audience_individuals_clause = function() {\r\n    return this.getTypedRuleContext(Audience_individuals_clauseContext,0);\r\n};\r\n\r\nAudience_clauseContext.prototype.and = function() {\r\n    return this.getTypedRuleContext(AndContext,0);\r\n};\r\n\r\nAudience_clauseContext.prototype.audience_groups_clause = function() {\r\n    return this.getTypedRuleContext(Audience_groups_clauseContext,0);\r\n};\r\n\r\nAudience_clauseContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterAudience_clause(this);\r\n\t}\r\n};\r\n\r\nAudience_clauseContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitAudience_clause(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Audience_clauseContext = Audience_clauseContext;\r\n\r\npolicyParser.prototype.audience_clause = function() {\r\n\r\n    var localctx = new Audience_clauseContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 4, policyParser.RULE_audience_clause);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.state = 108;\r\n        this._errHandler.sync(this);\r\n        switch(this._input.LA(1)) {\r\n        case policyParser.T__20:\r\n        case policyParser.T__21:\r\n        case policyParser.T__22:\r\n        case policyParser.ID:\r\n            this.enterOuterAlt(localctx, 1);\r\n            this.state = 96;\r\n            this.audience_individuals_clause();\r\n            this.state = 100;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n            if(_la===policyParser.T__27) {\r\n                this.state = 97;\r\n                this.and();\r\n                this.state = 98;\r\n                this.audience_groups_clause();\r\n            }\r\n\r\n            break;\r\n        case policyParser.T__3:\r\n            this.enterOuterAlt(localctx, 2);\r\n            this.state = 102;\r\n            this.audience_groups_clause();\r\n            this.state = 106;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n            if(_la===policyParser.T__27) {\r\n                this.state = 103;\r\n                this.and();\r\n                this.state = 104;\r\n                this.audience_individuals_clause();\r\n            }\r\n\r\n            break;\r\n        default:\r\n            throw new antlr4.error.NoViableAltException(this);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Athorize_token_clauseContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_athorize_token_clause;\r\n    return this;\r\n}\r\n\r\nAthorize_token_clauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAthorize_token_clauseContext.prototype.constructor = Athorize_token_clauseContext;\r\n\r\nAthorize_token_clauseContext.prototype.ID = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(policyParser.ID);\r\n    } else {\r\n        return this.getToken(policyParser.ID, i);\r\n    }\r\n};\r\n\r\n\r\nAthorize_token_clauseContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterAthorize_token_clause(this);\r\n\t}\r\n};\r\n\r\nAthorize_token_clauseContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitAthorize_token_clause(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Athorize_token_clauseContext = Athorize_token_clauseContext;\r\n\r\npolicyParser.prototype.athorize_token_clause = function() {\r\n\r\n    var localctx = new Athorize_token_clauseContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 6, policyParser.RULE_athorize_token_clause);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 110;\r\n        this.match(policyParser.T__1);\r\n        this.state = 118; \r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        do {\r\n            this.state = 114;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n            while(_la===policyParser.T__2) {\r\n                this.state = 111;\r\n                this.match(policyParser.T__2);\r\n                this.state = 116;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n            }\r\n            this.state = 117;\r\n            this.match(policyParser.ID);\r\n            this.state = 120; \r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        } while(_la===policyParser.T__2 || _la===policyParser.ID);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Audience_individuals_clauseContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_audience_individuals_clause;\r\n    return this;\r\n}\r\n\r\nAudience_individuals_clauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAudience_individuals_clauseContext.prototype.constructor = Audience_individuals_clauseContext;\r\n\r\nAudience_individuals_clauseContext.prototype.users = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(UsersContext);\r\n    } else {\r\n        return this.getTypedRuleContext(UsersContext,i);\r\n    }\r\n};\r\n\r\nAudience_individuals_clauseContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterAudience_individuals_clause(this);\r\n\t}\r\n};\r\n\r\nAudience_individuals_clauseContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitAudience_individuals_clause(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Audience_individuals_clauseContext = Audience_individuals_clauseContext;\r\n\r\npolicyParser.prototype.audience_individuals_clause = function() {\r\n\r\n    var localctx = new Audience_individuals_clauseContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 8, policyParser.RULE_audience_individuals_clause);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 122;\r\n        this.users();\r\n        this.state = 127;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        while(_la===policyParser.T__2) {\r\n            this.state = 123;\r\n            this.match(policyParser.T__2);\r\n            this.state = 124;\r\n            this.users();\r\n            this.state = 129;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Audience_groups_clauseContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_audience_groups_clause;\r\n    return this;\r\n}\r\n\r\nAudience_groups_clauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAudience_groups_clauseContext.prototype.constructor = Audience_groups_clauseContext;\r\n\r\nAudience_groups_clauseContext.prototype.user_groups = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(User_groupsContext);\r\n    } else {\r\n        return this.getTypedRuleContext(User_groupsContext,i);\r\n    }\r\n};\r\n\r\nAudience_groups_clauseContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterAudience_groups_clause(this);\r\n\t}\r\n};\r\n\r\nAudience_groups_clauseContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitAudience_groups_clause(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Audience_groups_clauseContext = Audience_groups_clauseContext;\r\n\r\npolicyParser.prototype.audience_groups_clause = function() {\r\n\r\n    var localctx = new Audience_groups_clauseContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 10, policyParser.RULE_audience_groups_clause);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 130;\r\n        this.match(policyParser.T__3);\r\n        this.state = 131;\r\n        this.user_groups();\r\n        this.state = 136;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        while(_la===policyParser.T__2) {\r\n            this.state = 132;\r\n            this.match(policyParser.T__2);\r\n            this.state = 133;\r\n            this.user_groups();\r\n            this.state = 138;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction State_clauseContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_state_clause;\r\n    return this;\r\n}\r\n\r\nState_clauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nState_clauseContext.prototype.constructor = State_clauseContext;\r\n\r\nState_clauseContext.prototype.current_state_clause = function() {\r\n    return this.getTypedRuleContext(Current_state_clauseContext,0);\r\n};\r\n\r\nState_clauseContext.prototype.target_clause = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(Target_clauseContext);\r\n    } else {\r\n        return this.getTypedRuleContext(Target_clauseContext,i);\r\n    }\r\n};\r\n\r\nState_clauseContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterState_clause(this);\r\n\t}\r\n};\r\n\r\nState_clauseContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitState_clause(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.State_clauseContext = State_clauseContext;\r\n\r\npolicyParser.prototype.state_clause = function() {\r\n\r\n    var localctx = new State_clauseContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 12, policyParser.RULE_state_clause);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 139;\r\n        this.current_state_clause();\r\n        this.state = 141; \r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        do {\r\n            this.state = 140;\r\n            this.target_clause();\r\n            this.state = 143; \r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        } while(_la===policyParser.PROCEED);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Current_state_clauseContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_current_state_clause;\r\n    return this;\r\n}\r\n\r\nCurrent_state_clauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nCurrent_state_clauseContext.prototype.constructor = Current_state_clauseContext;\r\n\r\nCurrent_state_clauseContext.prototype.IN = function() {\r\n    return this.getToken(policyParser.IN, 0);\r\n};\r\n\r\nCurrent_state_clauseContext.prototype.ID = function() {\r\n    return this.getToken(policyParser.ID, 0);\r\n};\r\n\r\nCurrent_state_clauseContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterCurrent_state_clause(this);\r\n\t}\r\n};\r\n\r\nCurrent_state_clauseContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitCurrent_state_clause(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Current_state_clauseContext = Current_state_clauseContext;\r\n\r\npolicyParser.prototype.current_state_clause = function() {\r\n\r\n    var localctx = new Current_state_clauseContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 14, policyParser.RULE_current_state_clause);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 145;\r\n        this.match(policyParser.IN);\r\n        this.state = 146;\r\n        this.match(policyParser.ID);\r\n        this.state = 147;\r\n        this.match(policyParser.T__4);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Target_clauseContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_target_clause;\r\n    return this;\r\n}\r\n\r\nTarget_clauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nTarget_clauseContext.prototype.constructor = Target_clauseContext;\r\n\r\nTarget_clauseContext.prototype.PROCEED = function() {\r\n    return this.getToken(policyParser.PROCEED, 0);\r\n};\r\n\r\nTarget_clauseContext.prototype.TO = function() {\r\n    return this.getToken(policyParser.TO, 0);\r\n};\r\n\r\nTarget_clauseContext.prototype.ID = function() {\r\n    return this.getToken(policyParser.ID, 0);\r\n};\r\n\r\nTarget_clauseContext.prototype.event = function() {\r\n    return this.getTypedRuleContext(EventContext,0);\r\n};\r\n\r\nTarget_clauseContext.prototype.accepting = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(AcceptingContext);\r\n    } else {\r\n        return this.getTypedRuleContext(AcceptingContext,i);\r\n    }\r\n};\r\n\r\nTarget_clauseContext.prototype.and_event = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(And_eventContext);\r\n    } else {\r\n        return this.getTypedRuleContext(And_eventContext,i);\r\n    }\r\n};\r\n\r\nTarget_clauseContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterTarget_clause(this);\r\n\t}\r\n};\r\n\r\nTarget_clauseContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitTarget_clause(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Target_clauseContext = Target_clauseContext;\r\n\r\npolicyParser.prototype.target_clause = function() {\r\n\r\n    var localctx = new Target_clauseContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 16, policyParser.RULE_target_clause);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 149;\r\n        this.match(policyParser.PROCEED);\r\n        this.state = 150;\r\n        this.match(policyParser.TO);\r\n        this.state = 151;\r\n        this.match(policyParser.ID);\r\n        this.state = 152;\r\n        this.match(policyParser.ON);\r\n        this.state = 156;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        while(_la===policyParser.ACCEPTING) {\r\n            this.state = 153;\r\n            this.accepting();\r\n            this.state = 158;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        }\r\n        this.state = 159;\r\n        this.event();\r\n        this.state = 163;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        while(_la===policyParser.T__5) {\r\n            this.state = 160;\r\n            this.and_event();\r\n            this.state = 165;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction AcceptingContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_accepting;\r\n    return this;\r\n}\r\n\r\nAcceptingContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAcceptingContext.prototype.constructor = AcceptingContext;\r\n\r\n\r\nAcceptingContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterAccepting(this);\r\n\t}\r\n};\r\n\r\nAcceptingContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitAccepting(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.AcceptingContext = AcceptingContext;\r\n\r\npolicyParser.prototype.accepting = function() {\r\n\r\n    var localctx = new AcceptingContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 18, policyParser.RULE_accepting);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 166;\r\n        this.match(policyParser.ACCEPTING);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction EventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_event;\r\n    return this;\r\n}\r\n\r\nEventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nEventContext.prototype.constructor = EventContext;\r\n\r\nEventContext.prototype.period_event = function() {\r\n    return this.getTypedRuleContext(Period_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.specific_date_event = function() {\r\n    return this.getTypedRuleContext(Specific_date_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.relative_date_event = function() {\r\n    return this.getTypedRuleContext(Relative_date_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.pricing_agreement_event = function() {\r\n    return this.getTypedRuleContext(Pricing_agreement_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.transaction_event = function() {\r\n    return this.getTypedRuleContext(Transaction_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.guaranty_event = function() {\r\n    return this.getTypedRuleContext(Guaranty_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.signing_event = function() {\r\n    return this.getTypedRuleContext(Signing_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.access_count_event = function() {\r\n    return this.getTypedRuleContext(Access_count_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.balance_event = function() {\r\n    return this.getTypedRuleContext(Balance_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.settlement_event = function() {\r\n    return this.getTypedRuleContext(Settlement_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterEvent(this);\r\n\t}\r\n};\r\n\r\nEventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitEvent(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.EventContext = EventContext;\r\n\r\npolicyParser.prototype.event = function() {\r\n\r\n    var localctx = new EventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 20, policyParser.RULE_event);\r\n    try {\r\n        this.state = 178;\r\n        this._errHandler.sync(this);\r\n        switch(this._input.LA(1)) {\r\n        case policyParser.T__6:\r\n            this.enterOuterAlt(localctx, 1);\r\n            this.state = 168;\r\n            this.period_event();\r\n            break;\r\n        case policyParser.T__7:\r\n            this.enterOuterAlt(localctx, 2);\r\n            this.state = 169;\r\n            this.specific_date_event();\r\n            break;\r\n        case policyParser.INT:\r\n            this.enterOuterAlt(localctx, 3);\r\n            this.state = 170;\r\n            this.relative_date_event();\r\n            break;\r\n        case policyParser.T__9:\r\n            this.enterOuterAlt(localctx, 4);\r\n            this.state = 171;\r\n            this.pricing_agreement_event();\r\n            break;\r\n        case policyParser.T__10:\r\n            this.enterOuterAlt(localctx, 5);\r\n            this.state = 172;\r\n            this.transaction_event();\r\n            break;\r\n        case policyParser.T__11:\r\n        case policyParser.T__14:\r\n            this.enterOuterAlt(localctx, 6);\r\n            this.state = 173;\r\n            this.guaranty_event();\r\n            break;\r\n        case policyParser.LICENSE:\r\n            this.enterOuterAlt(localctx, 7);\r\n            this.state = 174;\r\n            this.signing_event();\r\n            break;\r\n        case policyParser.T__15:\r\n        case policyParser.T__16:\r\n            this.enterOuterAlt(localctx, 8);\r\n            this.state = 175;\r\n            this.access_count_event();\r\n            break;\r\n        case policyParser.T__17:\r\n        case policyParser.T__18:\r\n            this.enterOuterAlt(localctx, 9);\r\n            this.state = 176;\r\n            this.balance_event();\r\n            break;\r\n        case policyParser.T__19:\r\n            this.enterOuterAlt(localctx, 10);\r\n            this.state = 177;\r\n            this.settlement_event();\r\n            break;\r\n        default:\r\n            throw new antlr4.error.NoViableAltException(this);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction And_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_and_event;\r\n    return this;\r\n}\r\n\r\nAnd_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAnd_eventContext.prototype.constructor = And_eventContext;\r\n\r\nAnd_eventContext.prototype.event = function() {\r\n    return this.getTypedRuleContext(EventContext,0);\r\n};\r\n\r\nAnd_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterAnd_event(this);\r\n\t}\r\n};\r\n\r\nAnd_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitAnd_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.And_eventContext = And_eventContext;\r\n\r\npolicyParser.prototype.and_event = function() {\r\n\r\n    var localctx = new And_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 22, policyParser.RULE_and_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 180;\r\n        this.match(policyParser.T__5);\r\n        this.state = 181;\r\n        this.event();\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Period_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_period_event;\r\n    return this;\r\n}\r\n\r\nPeriod_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nPeriod_eventContext.prototype.constructor = Period_eventContext;\r\n\r\nPeriod_eventContext.prototype.time_unit = function() {\r\n    return this.getTypedRuleContext(Time_unitContext,0);\r\n};\r\n\r\nPeriod_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterPeriod_event(this);\r\n\t}\r\n};\r\n\r\nPeriod_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitPeriod_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Period_eventContext = Period_eventContext;\r\n\r\npolicyParser.prototype.period_event = function() {\r\n\r\n    var localctx = new Period_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 24, policyParser.RULE_period_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 183;\r\n        this.match(policyParser.T__6);\r\n        this.state = 184;\r\n        this.time_unit();\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Specific_date_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_specific_date_event;\r\n    return this;\r\n}\r\n\r\nSpecific_date_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nSpecific_date_eventContext.prototype.constructor = Specific_date_eventContext;\r\n\r\nSpecific_date_eventContext.prototype.DATE = function() {\r\n    return this.getToken(policyParser.DATE, 0);\r\n};\r\n\r\nSpecific_date_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterSpecific_date_event(this);\r\n\t}\r\n};\r\n\r\nSpecific_date_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitSpecific_date_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Specific_date_eventContext = Specific_date_eventContext;\r\n\r\npolicyParser.prototype.specific_date_event = function() {\r\n\r\n    var localctx = new Specific_date_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 26, policyParser.RULE_specific_date_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 186;\r\n        this.match(policyParser.T__7);\r\n        this.state = 187;\r\n        this.match(policyParser.DATE);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Relative_date_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_relative_date_event;\r\n    return this;\r\n}\r\n\r\nRelative_date_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nRelative_date_eventContext.prototype.constructor = Relative_date_eventContext;\r\n\r\nRelative_date_eventContext.prototype.INT = function() {\r\n    return this.getToken(policyParser.INT, 0);\r\n};\r\n\r\nRelative_date_eventContext.prototype.time_unit = function() {\r\n    return this.getTypedRuleContext(Time_unitContext,0);\r\n};\r\n\r\nRelative_date_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterRelative_date_event(this);\r\n\t}\r\n};\r\n\r\nRelative_date_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitRelative_date_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Relative_date_eventContext = Relative_date_eventContext;\r\n\r\npolicyParser.prototype.relative_date_event = function() {\r\n\r\n    var localctx = new Relative_date_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 28, policyParser.RULE_relative_date_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 189;\r\n        this.match(policyParser.INT);\r\n        this.state = 190;\r\n        this.time_unit();\r\n        this.state = 191;\r\n        this.match(policyParser.T__8);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Pricing_agreement_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_pricing_agreement_event;\r\n    return this;\r\n}\r\n\r\nPricing_agreement_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nPricing_agreement_eventContext.prototype.constructor = Pricing_agreement_eventContext;\r\n\r\n\r\nPricing_agreement_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterPricing_agreement_event(this);\r\n\t}\r\n};\r\n\r\nPricing_agreement_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitPricing_agreement_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Pricing_agreement_eventContext = Pricing_agreement_eventContext;\r\n\r\npolicyParser.prototype.pricing_agreement_event = function() {\r\n\r\n    var localctx = new Pricing_agreement_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 30, policyParser.RULE_pricing_agreement_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 193;\r\n        this.match(policyParser.T__9);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Transaction_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_transaction_event;\r\n    return this;\r\n}\r\n\r\nTransaction_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nTransaction_eventContext.prototype.constructor = Transaction_eventContext;\r\n\r\nTransaction_eventContext.prototype.INT = function() {\r\n    return this.getToken(policyParser.INT, 0);\r\n};\r\n\r\nTransaction_eventContext.prototype.FEATHERACCOUNT = function() {\r\n    return this.getToken(policyParser.FEATHERACCOUNT, 0);\r\n};\r\n\r\nTransaction_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterTransaction_event(this);\r\n\t}\r\n};\r\n\r\nTransaction_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitTransaction_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Transaction_eventContext = Transaction_eventContext;\r\n\r\npolicyParser.prototype.transaction_event = function() {\r\n\r\n    var localctx = new Transaction_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 32, policyParser.RULE_transaction_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 195;\r\n        this.match(policyParser.T__10);\r\n        this.state = 196;\r\n        this.match(policyParser.INT);\r\n        this.state = 197;\r\n        this.match(policyParser.TO);\r\n        this.state = 198;\r\n        this.match(policyParser.FEATHERACCOUNT);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Guaranty_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_guaranty_event;\r\n    return this;\r\n}\r\n\r\nGuaranty_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nGuaranty_eventContext.prototype.constructor = Guaranty_eventContext;\r\n\r\nGuaranty_eventContext.prototype.contract_guaranty = function() {\r\n    return this.getTypedRuleContext(Contract_guarantyContext,0);\r\n};\r\n\r\nGuaranty_eventContext.prototype.platform_guaranty = function() {\r\n    return this.getTypedRuleContext(Platform_guarantyContext,0);\r\n};\r\n\r\nGuaranty_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterGuaranty_event(this);\r\n\t}\r\n};\r\n\r\nGuaranty_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitGuaranty_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Guaranty_eventContext = Guaranty_eventContext;\r\n\r\npolicyParser.prototype.guaranty_event = function() {\r\n\r\n    var localctx = new Guaranty_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 34, policyParser.RULE_guaranty_event);\r\n    try {\r\n        this.state = 202;\r\n        this._errHandler.sync(this);\r\n        switch(this._input.LA(1)) {\r\n        case policyParser.T__11:\r\n            this.enterOuterAlt(localctx, 1);\r\n            this.state = 200;\r\n            this.contract_guaranty();\r\n            break;\r\n        case policyParser.T__14:\r\n            this.enterOuterAlt(localctx, 2);\r\n            this.state = 201;\r\n            this.platform_guaranty();\r\n            break;\r\n        default:\r\n            throw new antlr4.error.NoViableAltException(this);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Contract_guarantyContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_contract_guaranty;\r\n    return this;\r\n}\r\n\r\nContract_guarantyContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nContract_guarantyContext.prototype.constructor = Contract_guarantyContext;\r\n\r\nContract_guarantyContext.prototype.INT = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(policyParser.INT);\r\n    } else {\r\n        return this.getToken(policyParser.INT, i);\r\n    }\r\n};\r\n\r\n\r\nContract_guarantyContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterContract_guaranty(this);\r\n\t}\r\n};\r\n\r\nContract_guarantyContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitContract_guaranty(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Contract_guarantyContext = Contract_guarantyContext;\r\n\r\npolicyParser.prototype.contract_guaranty = function() {\r\n\r\n    var localctx = new Contract_guarantyContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 36, policyParser.RULE_contract_guaranty);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 204;\r\n        this.match(policyParser.T__11);\r\n        this.state = 205;\r\n        this.match(policyParser.INT);\r\n        this.state = 206;\r\n        this.match(policyParser.T__12);\r\n        this.state = 207;\r\n        this.match(policyParser.INT);\r\n        this.state = 208;\r\n        this.match(policyParser.T__13);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Platform_guarantyContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_platform_guaranty;\r\n    return this;\r\n}\r\n\r\nPlatform_guarantyContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nPlatform_guarantyContext.prototype.constructor = Platform_guarantyContext;\r\n\r\nPlatform_guarantyContext.prototype.INT = function() {\r\n    return this.getToken(policyParser.INT, 0);\r\n};\r\n\r\nPlatform_guarantyContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterPlatform_guaranty(this);\r\n\t}\r\n};\r\n\r\nPlatform_guarantyContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitPlatform_guaranty(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Platform_guarantyContext = Platform_guarantyContext;\r\n\r\npolicyParser.prototype.platform_guaranty = function() {\r\n\r\n    var localctx = new Platform_guarantyContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 38, policyParser.RULE_platform_guaranty);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 210;\r\n        this.match(policyParser.T__14);\r\n        this.state = 211;\r\n        this.match(policyParser.INT);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Signing_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_signing_event;\r\n    return this;\r\n}\r\n\r\nSigning_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nSigning_eventContext.prototype.constructor = Signing_eventContext;\r\n\r\nSigning_eventContext.prototype.LICENSE = function() {\r\n    return this.getToken(policyParser.LICENSE, 0);\r\n};\r\n\r\nSigning_eventContext.prototype.license_resource_id = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(License_resource_idContext);\r\n    } else {\r\n        return this.getTypedRuleContext(License_resource_idContext,i);\r\n    }\r\n};\r\n\r\nSigning_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterSigning_event(this);\r\n\t}\r\n};\r\n\r\nSigning_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitSigning_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Signing_eventContext = Signing_eventContext;\r\n\r\npolicyParser.prototype.signing_event = function() {\r\n\r\n    var localctx = new Signing_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 40, policyParser.RULE_signing_event);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 213;\r\n        this.match(policyParser.LICENSE);\r\n        this.state = 221; \r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        do {\r\n            this.state = 217;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n            while(_la===policyParser.T__2) {\r\n                this.state = 214;\r\n                this.match(policyParser.T__2);\r\n                this.state = 219;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n            }\r\n            this.state = 220;\r\n            this.license_resource_id();\r\n            this.state = 223; \r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        } while(_la===policyParser.T__2 || _la===policyParser.ID);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Access_count_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_access_count_event;\r\n    return this;\r\n}\r\n\r\nAccess_count_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAccess_count_eventContext.prototype.constructor = Access_count_eventContext;\r\n\r\nAccess_count_eventContext.prototype.visit_increment_event = function() {\r\n    return this.getTypedRuleContext(Visit_increment_eventContext,0);\r\n};\r\n\r\nAccess_count_eventContext.prototype.visit_event = function() {\r\n    return this.getTypedRuleContext(Visit_eventContext,0);\r\n};\r\n\r\nAccess_count_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterAccess_count_event(this);\r\n\t}\r\n};\r\n\r\nAccess_count_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitAccess_count_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Access_count_eventContext = Access_count_eventContext;\r\n\r\npolicyParser.prototype.access_count_event = function() {\r\n\r\n    var localctx = new Access_count_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 42, policyParser.RULE_access_count_event);\r\n    try {\r\n        this.state = 227;\r\n        this._errHandler.sync(this);\r\n        switch(this._input.LA(1)) {\r\n        case policyParser.T__15:\r\n            this.enterOuterAlt(localctx, 1);\r\n            this.state = 225;\r\n            this.visit_increment_event();\r\n            break;\r\n        case policyParser.T__16:\r\n            this.enterOuterAlt(localctx, 2);\r\n            this.state = 226;\r\n            this.visit_event();\r\n            break;\r\n        default:\r\n            throw new antlr4.error.NoViableAltException(this);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Visit_increment_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_visit_increment_event;\r\n    return this;\r\n}\r\n\r\nVisit_increment_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nVisit_increment_eventContext.prototype.constructor = Visit_increment_eventContext;\r\n\r\nVisit_increment_eventContext.prototype.INT = function() {\r\n    return this.getToken(policyParser.INT, 0);\r\n};\r\n\r\nVisit_increment_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterVisit_increment_event(this);\r\n\t}\r\n};\r\n\r\nVisit_increment_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitVisit_increment_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Visit_increment_eventContext = Visit_increment_eventContext;\r\n\r\npolicyParser.prototype.visit_increment_event = function() {\r\n\r\n    var localctx = new Visit_increment_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 44, policyParser.RULE_visit_increment_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 229;\r\n        this.match(policyParser.T__15);\r\n        this.state = 230;\r\n        this.match(policyParser.INT);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Visit_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_visit_event;\r\n    return this;\r\n}\r\n\r\nVisit_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nVisit_eventContext.prototype.constructor = Visit_eventContext;\r\n\r\nVisit_eventContext.prototype.INT = function() {\r\n    return this.getToken(policyParser.INT, 0);\r\n};\r\n\r\nVisit_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterVisit_event(this);\r\n\t}\r\n};\r\n\r\nVisit_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitVisit_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Visit_eventContext = Visit_eventContext;\r\n\r\npolicyParser.prototype.visit_event = function() {\r\n\r\n    var localctx = new Visit_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 46, policyParser.RULE_visit_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 232;\r\n        this.match(policyParser.T__16);\r\n        this.state = 233;\r\n        this.match(policyParser.INT);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Balance_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_balance_event;\r\n    return this;\r\n}\r\n\r\nBalance_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nBalance_eventContext.prototype.constructor = Balance_eventContext;\r\n\r\nBalance_eventContext.prototype.balance_greater = function() {\r\n    return this.getTypedRuleContext(Balance_greaterContext,0);\r\n};\r\n\r\nBalance_eventContext.prototype.balance_smaller = function() {\r\n    return this.getTypedRuleContext(Balance_smallerContext,0);\r\n};\r\n\r\nBalance_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterBalance_event(this);\r\n\t}\r\n};\r\n\r\nBalance_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitBalance_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Balance_eventContext = Balance_eventContext;\r\n\r\npolicyParser.prototype.balance_event = function() {\r\n\r\n    var localctx = new Balance_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 48, policyParser.RULE_balance_event);\r\n    try {\r\n        this.state = 237;\r\n        this._errHandler.sync(this);\r\n        switch(this._input.LA(1)) {\r\n        case policyParser.T__17:\r\n            this.enterOuterAlt(localctx, 1);\r\n            this.state = 235;\r\n            this.balance_greater();\r\n            break;\r\n        case policyParser.T__18:\r\n            this.enterOuterAlt(localctx, 2);\r\n            this.state = 236;\r\n            this.balance_smaller();\r\n            break;\r\n        default:\r\n            throw new antlr4.error.NoViableAltException(this);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Balance_greaterContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_balance_greater;\r\n    return this;\r\n}\r\n\r\nBalance_greaterContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nBalance_greaterContext.prototype.constructor = Balance_greaterContext;\r\n\r\nBalance_greaterContext.prototype.INT = function() {\r\n    return this.getToken(policyParser.INT, 0);\r\n};\r\n\r\nBalance_greaterContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterBalance_greater(this);\r\n\t}\r\n};\r\n\r\nBalance_greaterContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitBalance_greater(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Balance_greaterContext = Balance_greaterContext;\r\n\r\npolicyParser.prototype.balance_greater = function() {\r\n\r\n    var localctx = new Balance_greaterContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 50, policyParser.RULE_balance_greater);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 239;\r\n        this.match(policyParser.T__17);\r\n        this.state = 240;\r\n        this.match(policyParser.INT);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Balance_smallerContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_balance_smaller;\r\n    return this;\r\n}\r\n\r\nBalance_smallerContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nBalance_smallerContext.prototype.constructor = Balance_smallerContext;\r\n\r\nBalance_smallerContext.prototype.INT = function() {\r\n    return this.getToken(policyParser.INT, 0);\r\n};\r\n\r\nBalance_smallerContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterBalance_smaller(this);\r\n\t}\r\n};\r\n\r\nBalance_smallerContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitBalance_smaller(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Balance_smallerContext = Balance_smallerContext;\r\n\r\npolicyParser.prototype.balance_smaller = function() {\r\n\r\n    var localctx = new Balance_smallerContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 52, policyParser.RULE_balance_smaller);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 242;\r\n        this.match(policyParser.T__18);\r\n        this.state = 243;\r\n        this.match(policyParser.INT);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Settlement_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_settlement_event;\r\n    return this;\r\n}\r\n\r\nSettlement_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nSettlement_eventContext.prototype.constructor = Settlement_eventContext;\r\n\r\n\r\nSettlement_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterSettlement_event(this);\r\n\t}\r\n};\r\n\r\nSettlement_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitSettlement_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Settlement_eventContext = Settlement_eventContext;\r\n\r\npolicyParser.prototype.settlement_event = function() {\r\n\r\n    var localctx = new Settlement_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 54, policyParser.RULE_settlement_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 245;\r\n        this.match(policyParser.T__19);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction License_resource_idContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_license_resource_id;\r\n    return this;\r\n}\r\n\r\nLicense_resource_idContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nLicense_resource_idContext.prototype.constructor = License_resource_idContext;\r\n\r\nLicense_resource_idContext.prototype.ID = function() {\r\n    return this.getToken(policyParser.ID, 0);\r\n};\r\n\r\nLicense_resource_idContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterLicense_resource_id(this);\r\n\t}\r\n};\r\n\r\nLicense_resource_idContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitLicense_resource_id(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.License_resource_idContext = License_resource_idContext;\r\n\r\npolicyParser.prototype.license_resource_id = function() {\r\n\r\n    var localctx = new License_resource_idContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 56, policyParser.RULE_license_resource_id);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 247;\r\n        this.match(policyParser.ID);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Account_idContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_account_id;\r\n    return this;\r\n}\r\n\r\nAccount_idContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAccount_idContext.prototype.constructor = Account_idContext;\r\n\r\nAccount_idContext.prototype.ID = function() {\r\n    return this.getToken(policyParser.ID, 0);\r\n};\r\n\r\nAccount_idContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterAccount_id(this);\r\n\t}\r\n};\r\n\r\nAccount_idContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitAccount_id(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Account_idContext = Account_idContext;\r\n\r\npolicyParser.prototype.account_id = function() {\r\n\r\n    var localctx = new Account_idContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 58, policyParser.RULE_account_id);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 249;\r\n        this.match(policyParser.ID);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction UsersContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_users;\r\n    return this;\r\n}\r\n\r\nUsersContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nUsersContext.prototype.constructor = UsersContext;\r\n\r\nUsersContext.prototype.ID = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(policyParser.ID);\r\n    } else {\r\n        return this.getToken(policyParser.ID, i);\r\n    }\r\n};\r\n\r\n\r\nUsersContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterUsers(this);\r\n\t}\r\n};\r\n\r\nUsersContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitUsers(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.UsersContext = UsersContext;\r\n\r\npolicyParser.prototype.users = function() {\r\n\r\n    var localctx = new UsersContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 60, policyParser.RULE_users);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 255; \r\n        this._errHandler.sync(this);\r\n        var _alt = 1;\r\n        do {\r\n        \tswitch (_alt) {\r\n        \tcase 1:\r\n        \t\tthis.state = 255;\r\n        \t\tthis._errHandler.sync(this);\r\n        \t\tswitch(this._input.LA(1)) {\r\n        \t\tcase policyParser.T__20:\r\n        \t\t    this.state = 251;\r\n        \t\t    this.match(policyParser.T__20);\r\n        \t\t    break;\r\n        \t\tcase policyParser.T__21:\r\n        \t\t    this.state = 252;\r\n        \t\t    this.match(policyParser.T__21);\r\n        \t\t    break;\r\n        \t\tcase policyParser.T__22:\r\n        \t\t    this.state = 253;\r\n        \t\t    this.match(policyParser.T__22);\r\n        \t\t    break;\r\n        \t\tcase policyParser.ID:\r\n        \t\t    this.state = 254;\r\n        \t\t    this.match(policyParser.ID);\r\n        \t\t    break;\r\n        \t\tdefault:\r\n        \t\t    throw new antlr4.error.NoViableAltException(this);\r\n        \t\t}\r\n        \t\tbreak;\r\n        \tdefault:\r\n        \t\tthrow new antlr4.error.NoViableAltException(this);\r\n        \t}\r\n        \tthis.state = 257; \r\n        \tthis._errHandler.sync(this);\r\n        \t_alt = this._interp.adaptivePredict(this._input,20, this._ctx);\r\n        } while ( _alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER );\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction User_groupsContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_user_groups;\r\n    return this;\r\n}\r\n\r\nUser_groupsContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nUser_groupsContext.prototype.constructor = User_groupsContext;\r\n\r\n\r\nUser_groupsContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterUser_groups(this);\r\n\t}\r\n};\r\n\r\nUser_groupsContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitUser_groups(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.User_groupsContext = User_groupsContext;\r\n\r\npolicyParser.prototype.user_groups = function() {\r\n\r\n    var localctx = new User_groupsContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 62, policyParser.RULE_user_groups);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 259;\r\n        _la = this._input.LA(1);\r\n        if(!((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << policyParser.T__23) | (1 << policyParser.T__24) | (1 << policyParser.T__25) | (1 << policyParser.T__26))) !== 0))) {\r\n        this._errHandler.recoverInline(this);\r\n        }\r\n        else {\r\n        \tthis._errHandler.reportMatch(this);\r\n            this.consume();\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction AndContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_and;\r\n    return this;\r\n}\r\n\r\nAndContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAndContext.prototype.constructor = AndContext;\r\n\r\n\r\nAndContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterAnd(this);\r\n\t}\r\n};\r\n\r\nAndContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitAnd(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.AndContext = AndContext;\r\n\r\npolicyParser.prototype.and = function() {\r\n\r\n    var localctx = new AndContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 64, policyParser.RULE_and);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 261;\r\n        this.match(policyParser.T__27);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction View_unitContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_view_unit;\r\n    return this;\r\n}\r\n\r\nView_unitContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nView_unitContext.prototype.constructor = View_unitContext;\r\n\r\n\r\nView_unitContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterView_unit(this);\r\n\t}\r\n};\r\n\r\nView_unitContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitView_unit(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.View_unitContext = View_unitContext;\r\n\r\npolicyParser.prototype.view_unit = function() {\r\n\r\n    var localctx = new View_unitContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 66, policyParser.RULE_view_unit);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 263;\r\n        _la = this._input.LA(1);\r\n        if(!(_la===policyParser.T__28 || _la===policyParser.T__29)) {\r\n        this._errHandler.recoverInline(this);\r\n        }\r\n        else {\r\n        \tthis._errHandler.reportMatch(this);\r\n            this.consume();\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Time_unitContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_time_unit;\r\n    return this;\r\n}\r\n\r\nTime_unitContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nTime_unitContext.prototype.constructor = Time_unitContext;\r\n\r\n\r\nTime_unitContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterTime_unit(this);\r\n\t}\r\n};\r\n\r\nTime_unitContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitTime_unit(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Time_unitContext = Time_unitContext;\r\n\r\npolicyParser.prototype.time_unit = function() {\r\n\r\n    var localctx = new Time_unitContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 68, policyParser.RULE_time_unit);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 265;\r\n        _la = this._input.LA(1);\r\n        if(!(((((_la - 14)) & ~0x1f) == 0 && ((1 << (_la - 14)) & ((1 << (policyParser.T__13 - 14)) | (1 << (policyParser.T__30 - 14)) | (1 << (policyParser.T__31 - 14)) | (1 << (policyParser.T__32 - 14)))) !== 0))) {\r\n        this._errHandler.recoverInline(this);\r\n        }\r\n        else {\r\n        \tthis._errHandler.reportMatch(this);\r\n            this.consume();\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Start_hourContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_start_hour;\r\n    return this;\r\n}\r\n\r\nStart_hourContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nStart_hourContext.prototype.constructor = Start_hourContext;\r\n\r\nStart_hourContext.prototype.INT = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(policyParser.INT);\r\n    } else {\r\n        return this.getToken(policyParser.INT, i);\r\n    }\r\n};\r\n\r\n\r\nStart_hourContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterStart_hour(this);\r\n\t}\r\n};\r\n\r\nStart_hourContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitStart_hour(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Start_hourContext = Start_hourContext;\r\n\r\npolicyParser.prototype.start_hour = function() {\r\n\r\n    var localctx = new Start_hourContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 70, policyParser.RULE_start_hour);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 267;\r\n        this.match(policyParser.INT);\r\n        this.state = 268;\r\n        this.match(policyParser.T__4);\r\n        this.state = 269;\r\n        this.match(policyParser.INT);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction End_hourContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_end_hour;\r\n    return this;\r\n}\r\n\r\nEnd_hourContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nEnd_hourContext.prototype.constructor = End_hourContext;\r\n\r\nEnd_hourContext.prototype.INT = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(policyParser.INT);\r\n    } else {\r\n        return this.getToken(policyParser.INT, i);\r\n    }\r\n};\r\n\r\n\r\nEnd_hourContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterEnd_hour(this);\r\n\t}\r\n};\r\n\r\nEnd_hourContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitEnd_hour(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.End_hourContext = End_hourContext;\r\n\r\npolicyParser.prototype.end_hour = function() {\r\n\r\n    var localctx = new End_hourContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 72, policyParser.RULE_end_hour);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 271;\r\n        this.match(policyParser.INT);\r\n        this.state = 272;\r\n        this.match(policyParser.T__4);\r\n        this.state = 273;\r\n        this.match(policyParser.INT);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nexports.policyParser = policyParser;\r\n\n\n/***/ }),\n\n/***/ \"NJ0E\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_index_vue__ = __webpack_require__(\"PYJw\");\n/* empty harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_d708ef40_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_index_vue__ = __webpack_require__(\"hVtP\");\nfunction injectStyle (ssrContext) {\n  __webpack_require__(\"a1Cn\")\n}\nvar normalizeComponent = __webpack_require__(\"VU/8\")\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-d708ef40\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_index_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_d708ef40_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_index_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ \"NwDQ\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// Generated from presentable_policy.g4 by ANTLR 4.7\r\n// jshint ignore: start\r\nvar antlr4 = __webpack_require__(\"9C8F\");\r\n\r\n\r\nvar serializedATN = [\"\\u0003\\u608b\\ua72a\\u8133\\ub9ed\\u417c\\u3be7\\u7786\\u5964\",\r\n    \"\\u00020\\u0240\\b\\u0001\\u0004\\u0002\\t\\u0002\\u0004\\u0003\\t\\u0003\\u0004\",\r\n    \"\\u0004\\t\\u0004\\u0004\\u0005\\t\\u0005\\u0004\\u0006\\t\\u0006\\u0004\\u0007\\t\",\r\n    \"\\u0007\\u0004\\b\\t\\b\\u0004\\t\\t\\t\\u0004\\n\\t\\n\\u0004\\u000b\\t\\u000b\\u0004\",\r\n    \"\\f\\t\\f\\u0004\\r\\t\\r\\u0004\\u000e\\t\\u000e\\u0004\\u000f\\t\\u000f\\u0004\\u0010\",\r\n    \"\\t\\u0010\\u0004\\u0011\\t\\u0011\\u0004\\u0012\\t\\u0012\\u0004\\u0013\\t\\u0013\",\r\n    \"\\u0004\\u0014\\t\\u0014\\u0004\\u0015\\t\\u0015\\u0004\\u0016\\t\\u0016\\u0004\\u0017\",\r\n    \"\\t\\u0017\\u0004\\u0018\\t\\u0018\\u0004\\u0019\\t\\u0019\\u0004\\u001a\\t\\u001a\",\r\n    \"\\u0004\\u001b\\t\\u001b\\u0004\\u001c\\t\\u001c\\u0004\\u001d\\t\\u001d\\u0004\\u001e\",\r\n    \"\\t\\u001e\\u0004\\u001f\\t\\u001f\\u0004 \\t \\u0004!\\t!\\u0004\\\"\\t\\\"\\u0004#\",\r\n    \"\\t#\\u0004$\\t$\\u0004%\\t%\\u0004&\\t&\\u0004\\'\\t\\'\\u0004(\\t(\\u0004)\\t)\\u0004\",\r\n    \"*\\t*\\u0004+\\t+\\u0004,\\t,\\u0004-\\t-\\u0004.\\t.\\u0004/\\t/\\u0003\\u0002\\u0003\",\r\n    \"\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\",\r\n    \"\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\",\r\n    \"\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\",\r\n    \"\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\",\r\n    \"\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0004\\u0003\\u0004\\u0003\",\r\n    \"\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\",\r\n    \"\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\",\r\n    \"\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\",\r\n    \"\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\",\r\n    \"\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\\u0005\\u0003\\u0005\\u0003\",\r\n    \"\\u0006\\u0003\\u0006\\u0003\\u0006\\u0003\\u0006\\u0003\\u0006\\u0003\\u0006\\u0003\",\r\n    \"\\u0006\\u0003\\u0006\\u0003\\u0006\\u0003\\u0007\\u0003\\u0007\\u0003\\b\\u0003\",\r\n    \"\\b\\u0003\\b\\u0003\\b\\u0003\\b\\u0003\\b\\u0003\\b\\u0003\\t\\u0003\\t\\u0003\\t\\u0003\",\r\n    \"\\t\\u0003\\t\\u0003\\t\\u0003\\t\\u0003\\t\\u0003\\t\\u0003\\t\\u0003\\t\\u0003\\n\\u0003\",\r\n    \"\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\",\r\n    \"\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\",\r\n    \"\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\",\r\n    \"\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\",\r\n    \"\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\",\r\n    \"\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\",\r\n    \"\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\",\r\n    \"\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\",\r\n    \"\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\u000e\\u0003\\u000e\\u0003\",\r\n    \"\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\",\r\n    \"\\u000e\\u0003\\u000f\\u0003\\u000f\\u0003\\u000f\\u0003\\u000f\\u0003\\u000f\\u0003\",\r\n    \"\\u000f\\u0003\\u000f\\u0003\\u000f\\u0003\\u000f\\u0003\\u000f\\u0003\\u000f\\u0003\",\r\n    \"\\u000f\\u0003\\u000f\\u0003\\u000f\\u0003\\u000f\\u0003\\u000f\\u0003\\u000f\\u0003\",\r\n    \"\\u000f\\u0003\\u000f\\u0003\\u000f\\u0003\\u000f\\u0003\\u0010\\u0003\\u0010\\u0003\",\r\n    \"\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\",\r\n    \"\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0011\\u0003\",\r\n    \"\\u0011\\u0003\\u0011\\u0003\\u0011\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\",\r\n    \"\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\",\r\n    \"\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\",\r\n    \"\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\",\r\n    \"\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\",\r\n    \"\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\",\r\n    \"\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\",\r\n    \"\\u0013\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\",\r\n    \"\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0015\\u0003\\u0015\\u0003\",\r\n    \"\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\",\r\n    \"\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\",\r\n    \"\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\",\r\n    \"\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\",\r\n    \"\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\",\r\n    \"\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\",\r\n    \"\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\",\r\n    \"\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\",\r\n    \"\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\",\r\n    \"\\u0016\\u0003\\u0016\\u0003\\u0017\\u0003\\u0017\\u0003\\u0017\\u0003\\u0017\\u0003\",\r\n    \"\\u0017\\u0003\\u0017\\u0003\\u0017\\u0003\\u0017\\u0003\\u0017\\u0003\\u0017\\u0003\",\r\n    \"\\u0017\\u0003\\u0017\\u0003\\u0017\\u0003\\u0017\\u0003\\u0017\\u0003\\u0017\\u0003\",\r\n    \"\\u0018\\u0003\\u0018\\u0003\\u0018\\u0003\\u0018\\u0003\\u0018\\u0003\\u0018\\u0003\",\r\n    \"\\u0018\\u0003\\u0018\\u0003\\u0018\\u0003\\u0019\\u0003\\u0019\\u0003\\u0019\\u0003\",\r\n    \"\\u0019\\u0003\\u0019\\u0003\\u0019\\u0003\\u0019\\u0003\\u0019\\u0003\\u0019\\u0003\",\r\n    \"\\u001a\\u0003\\u001a\\u0003\\u001a\\u0003\\u001a\\u0003\\u001a\\u0003\\u001b\\u0003\",\r\n    \"\\u001b\\u0003\\u001b\\u0003\\u001b\\u0003\\u001b\\u0003\\u001c\\u0003\\u001c\\u0003\",\r\n    \"\\u001c\\u0003\\u001c\\u0003\\u001c\\u0003\\u001c\\u0003\\u001d\\u0003\\u001d\\u0003\",\r\n    \"\\u001d\\u0003\\u001d\\u0003\\u001e\\u0003\\u001e\\u0003\\u001e\\u0003\\u001e\\u0003\",\r\n    \"\\u001e\\u0003\\u001e\\u0003\\u001e\\u0003\\u001e\\u0003\\u001e\\u0003\\u001e\\u0003\",\r\n    \"\\u001e\\u0003\\u001f\\u0003\\u001f\\u0003\\u001f\\u0003\\u001f\\u0003\\u001f\\u0003\",\r\n    \"\\u001f\\u0003 \\u0003 \\u0003 \\u0003 \\u0003 \\u0003 \\u0003 \\u0003 \\u0003\",\r\n    \"!\\u0003!\\u0003!\\u0003\\\"\\u0003\\\"\\u0003\\\"\\u0003#\\u0003#\\u0003#\\u0003$\",\r\n    \"\\u0003$\\u0003$\\u0003$\\u0003$\\u0003$\\u0003$\\u0003$\\u0003$\\u0003$\\u0003\",\r\n    \"%\\u0003%\\u0003%\\u0003%\\u0003%\\u0003%\\u0003%\\u0003%\\u0005%\\u0200\\n%\\u0003\",\r\n    \"&\\u0003&\\u0003&\\u0003&\\u0003&\\u0003&\\u0003&\\u0003&\\u0003\\'\\u0003\\'\\u0003\",\r\n    \"\\'\\u0003\\'\\u0003\\'\\u0003\\'\\u0003\\'\\u0003(\\u0003(\\u0003(\\u0003(\\u0003\",\r\n    \")\\u0003)\\u0003)\\u0003)\\u0003)\\u0003*\\u0003*\\u0003*\\u0003*\\u0003*\\u0003\",\r\n    \"*\\u0003*\\u0003*\\u0003+\\u0003+\\u0003+\\u0003+\\u0003+\\u0003+\\u0003+\\u0003\",\r\n    \"+\\u0003,\\u0006,\\u022b\\n,\\r,\\u000e,\\u022c\\u0003-\\u0006-\\u0230\\n-\\r-\\u000e\",\r\n    \"-\\u0231\\u0003-\\u0003-\\u0003.\\u0006.\\u0237\\n.\\r.\\u000e.\\u0238\\u0003/\",\r\n    \"\\u0003/\\u0003/\\u0003/\\u0003/\\u0003/\\u0002\\u00020\\u0003\\u0003\\u0005\\u0004\",\r\n    \"\\u0007\\u0005\\t\\u0006\\u000b\\u0007\\r\\b\\u000f\\t\\u0011\\n\\u0013\\u000b\\u0015\",\r\n    \"\\f\\u0017\\r\\u0019\\u000e\\u001b\\u000f\\u001d\\u0010\\u001f\\u0011!\\u0012#\\u0013\",\r\n    \"%\\u0014\\'\\u0015)\\u0016+\\u0017-\\u0018/\\u00191\\u001a3\\u001b5\\u001c7\\u001d\",\r\n    \"9\\u001e;\\u001f= ?!A\\\"C#E$G%I&K\\'M(O)Q*S+U,W-Y.[/]0\\u0003\\u0002\\u0005\",\r\n    \"\\u0005\\u0002C\\\\aac|\\u0005\\u0002\\u000b\\f\\u000f\\u000f\\\"\\\"\\u0003\\u0002\",\r\n    \"2;\\u0002\\u0243\\u0002\\u0003\\u0003\\u0002\\u0002\\u0002\\u0002\\u0005\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0002\\u0007\\u0003\\u0002\\u0002\\u0002\\u0002\\t\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0002\\u000b\\u0003\\u0002\\u0002\\u0002\\u0002\\r\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0002\\u000f\\u0003\\u0002\\u0002\\u0002\\u0002\\u0011\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0002\\u0013\\u0003\\u0002\\u0002\\u0002\\u0002\\u0015\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0002\\u0017\\u0003\\u0002\\u0002\\u0002\\u0002\\u0019\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0002\\u001b\\u0003\\u0002\\u0002\\u0002\\u0002\\u001d\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0002\\u001f\\u0003\\u0002\\u0002\\u0002\\u0002!\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0002#\\u0003\\u0002\\u0002\\u0002\\u0002%\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0002\\'\\u0003\\u0002\\u0002\\u0002\\u0002)\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0002+\\u0003\\u0002\\u0002\\u0002\\u0002-\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0002/\\u0003\\u0002\\u0002\\u0002\\u00021\\u0003\\u0002\\u0002\\u0002\\u0002\",\r\n    \"3\\u0003\\u0002\\u0002\\u0002\\u00025\\u0003\\u0002\\u0002\\u0002\\u00027\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00029\\u0003\\u0002\\u0002\\u0002\\u0002;\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0002=\\u0003\\u0002\\u0002\\u0002\\u0002?\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0002A\\u0003\\u0002\\u0002\\u0002\\u0002C\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0002E\\u0003\\u0002\\u0002\\u0002\\u0002G\\u0003\\u0002\\u0002\\u0002\\u0002\",\r\n    \"I\\u0003\\u0002\\u0002\\u0002\\u0002K\\u0003\\u0002\\u0002\\u0002\\u0002M\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0002O\\u0003\\u0002\\u0002\\u0002\\u0002Q\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0002S\\u0003\\u0002\\u0002\\u0002\\u0002U\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0002W\\u0003\\u0002\\u0002\\u0002\\u0002Y\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0002[\\u0003\\u0002\\u0002\\u0002\\u0002]\\u0003\\u0002\\u0002\\u0002\\u0003\",\r\n    \"_\\u0003\\u0002\\u0002\\u0002\\u0005x\\u0003\\u0002\\u0002\\u0002\\u0007|\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\t\\u009a\\u0003\\u0002\\u0002\\u0002\\u000b\\u009c\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\r\\u00a5\\u0003\\u0002\\u0002\\u0002\\u000f\\u00a7\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0011\\u00ae\\u0003\\u0002\\u0002\\u0002\\u0013\\u00b9\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0015\\u00be\\u0003\\u0002\\u0002\\u0002\\u0017\\u00d6\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0019\\u00ec\\u0003\\u0002\\u0002\\u0002\\u001b\\u00fb\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u001d\\u0104\\u0003\\u0002\\u0002\\u0002\\u001f\\u0119\\u0003\",\r\n    \"\\u0002\\u0002\\u0002!\\u0126\\u0003\\u0002\\u0002\\u0002#\\u012a\\u0003\\u0002\",\r\n    \"\\u0002\\u0002%\\u013f\\u0003\\u0002\\u0002\\u0002\\'\\u0152\\u0003\\u0002\\u0002\",\r\n    \"\\u0002)\\u015b\\u0003\\u0002\\u0002\\u0002+\\u0178\\u0003\\u0002\\u0002\\u0002\",\r\n    \"-\\u0195\\u0003\\u0002\\u0002\\u0002/\\u01a5\\u0003\\u0002\\u0002\\u00021\\u01ae\",\r\n    \"\\u0003\\u0002\\u0002\\u00023\\u01b7\\u0003\\u0002\\u0002\\u00025\\u01bc\\u0003\",\r\n    \"\\u0002\\u0002\\u00027\\u01c1\\u0003\\u0002\\u0002\\u00029\\u01c7\\u0003\\u0002\",\r\n    \"\\u0002\\u0002;\\u01cb\\u0003\\u0002\\u0002\\u0002=\\u01d6\\u0003\\u0002\\u0002\",\r\n    \"\\u0002?\\u01dc\\u0003\\u0002\\u0002\\u0002A\\u01e4\\u0003\\u0002\\u0002\\u0002\",\r\n    \"C\\u01e7\\u0003\\u0002\\u0002\\u0002E\\u01ea\\u0003\\u0002\\u0002\\u0002G\\u01ed\",\r\n    \"\\u0003\\u0002\\u0002\\u0002I\\u01ff\\u0003\\u0002\\u0002\\u0002K\\u0201\\u0003\",\r\n    \"\\u0002\\u0002\\u0002M\\u0209\\u0003\\u0002\\u0002\\u0002O\\u0210\\u0003\\u0002\",\r\n    \"\\u0002\\u0002Q\\u0214\\u0003\\u0002\\u0002\\u0002S\\u0219\\u0003\\u0002\\u0002\",\r\n    \"\\u0002U\\u0221\\u0003\\u0002\\u0002\\u0002W\\u022a\\u0003\\u0002\\u0002\\u0002\",\r\n    \"Y\\u022f\\u0003\\u0002\\u0002\\u0002[\\u0236\\u0003\\u0002\\u0002\\u0002]\\u023a\",\r\n    \"\\u0003\\u0002\\u0002\\u0002_`\\u0007k\\u0002\\u0002`a\\u0007p\\u0002\\u0002a\",\r\n    \"b\\u0007\\\"\\u0002\\u0002bc\\u0007v\\u0002\\u0002cd\\u0007j\\u0002\\u0002de\\u0007\",\r\n    \"g\\u0002\\u0002ef\\u0007\\\"\\u0002\\u0002fg\\u0007h\\u0002\\u0002gh\\u0007q\\u0002\",\r\n    \"\\u0002hi\\u0007n\\u0002\\u0002ij\\u0007n\\u0002\\u0002jk\\u0007q\\u0002\\u0002\",\r\n    \"kl\\u0007y\\u0002\\u0002lm\\u0007k\\u0002\\u0002mn\\u0007p\\u0002\\u0002no\\u0007\",\r\n    \"i\\u0002\\u0002op\\u0007\\\"\\u0002\\u0002pq\\u0007u\\u0002\\u0002qr\\u0007v\\u0002\",\r\n    \"\\u0002rs\\u0007c\\u0002\\u0002st\\u0007v\\u0002\\u0002tu\\u0007g\\u0002\\u0002\",\r\n    \"uv\\u0007u\\u0002\\u0002vw\\u0007<\\u0002\\u0002w\\u0004\\u0003\\u0002\\u0002\",\r\n    \"\\u0002xy\\u0007c\\u0002\\u0002yz\\u0007p\\u0002\\u0002z{\\u0007f\\u0002\\u0002\",\r\n    \"{\\u0006\\u0003\\u0002\\u0002\\u0002|}\\u0007K\\u0002\\u0002}~\\u0007\\\"\\u0002\",\r\n    \"\\u0002~\\u007f\\u0007c\\u0002\\u0002\\u007f\\u0080\\u0007i\\u0002\\u0002\\u0080\",\r\n    \"\\u0081\\u0007t\\u0002\\u0002\\u0081\\u0082\\u0007g\\u0002\\u0002\\u0082\\u0083\",\r\n    \"\\u0007g\\u0002\\u0002\\u0083\\u0084\\u0007\\\"\\u0002\\u0002\\u0084\\u0085\\u0007\",\r\n    \"v\\u0002\\u0002\\u0085\\u0086\\u0007q\\u0002\\u0002\\u0086\\u0087\\u0007\\\"\\u0002\",\r\n    \"\\u0002\\u0087\\u0088\\u0007c\\u0002\\u0002\\u0088\\u0089\\u0007w\\u0002\\u0002\",\r\n    \"\\u0089\\u008a\\u0007v\\u0002\\u0002\\u008a\\u008b\\u0007j\\u0002\\u0002\\u008b\",\r\n    \"\\u008c\\u0007q\\u0002\\u0002\\u008c\\u008d\\u0007t\\u0002\\u0002\\u008d\\u008e\",\r\n    \"\\u0007k\\u0002\\u0002\\u008e\\u008f\\u0007|\\u0002\\u0002\\u008f\\u0090\\u0007\",\r\n    \"g\\u0002\\u0002\\u0090\\u0091\\u0007\\\"\\u0002\\u0002\\u0091\\u0092\\u0007v\\u0002\",\r\n    \"\\u0002\\u0092\\u0093\\u0007q\\u0002\\u0002\\u0093\\u0094\\u0007m\\u0002\\u0002\",\r\n    \"\\u0094\\u0095\\u0007g\\u0002\\u0002\\u0095\\u0096\\u0007p\\u0002\\u0002\\u0096\",\r\n    \"\\u0097\\u0007\\\"\\u0002\\u0002\\u0097\\u0098\\u0007k\\u0002\\u0002\\u0098\\u0099\",\r\n    \"\\u0007p\\u0002\\u0002\\u0099\\b\\u0003\\u0002\\u0002\\u0002\\u009a\\u009b\\u0007\",\r\n    \".\\u0002\\u0002\\u009b\\n\\u0003\\u0002\\u0002\\u0002\\u009c\\u009d\\u0007w\\u0002\",\r\n    \"\\u0002\\u009d\\u009e\\u0007u\\u0002\\u0002\\u009e\\u009f\\u0007g\\u0002\\u0002\",\r\n    \"\\u009f\\u00a0\\u0007t\\u0002\\u0002\\u00a0\\u00a1\\u0007u\\u0002\\u0002\\u00a1\",\r\n    \"\\u00a2\\u0007\\\"\\u0002\\u0002\\u00a2\\u00a3\\u0007k\\u0002\\u0002\\u00a3\\u00a4\",\r\n    \"\\u0007p\\u0002\\u0002\\u00a4\\f\\u0003\\u0002\\u0002\\u0002\\u00a5\\u00a6\\u0007\",\r\n    \"<\\u0002\\u0002\\u00a6\\u000e\\u0003\\u0002\\u0002\\u0002\\u00a7\\u00a8\\u0007\",\r\n    \"c\\u0002\\u0002\\u00a8\\u00a9\\u0007p\\u0002\\u0002\\u00a9\\u00aa\\u0007f\\u0002\",\r\n    \"\\u0002\\u00aa\\u00ab\\u0007\\\"\\u0002\\u0002\\u00ab\\u00ac\\u0007q\\u0002\\u0002\",\r\n    \"\\u00ac\\u00ad\\u0007p\\u0002\\u0002\\u00ad\\u0010\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00ae\\u00af\\u0007v\\u0002\\u0002\\u00af\\u00b0\\u0007j\\u0002\\u0002\\u00b0\",\r\n    \"\\u00b1\\u0007g\\u0002\\u0002\\u00b1\\u00b2\\u0007\\\"\\u0002\\u0002\\u00b2\\u00b3\",\r\n    \"\\u0007g\\u0002\\u0002\\u00b3\\u00b4\\u0007p\\u0002\\u0002\\u00b4\\u00b5\\u0007\",\r\n    \"f\\u0002\\u0002\\u00b5\\u00b6\\u0007\\\"\\u0002\\u0002\\u00b6\\u00b7\\u0007q\\u0002\",\r\n    \"\\u0002\\u00b7\\u00b8\\u0007h\\u0002\\u0002\\u00b8\\u0012\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00b9\\u00ba\\u0007f\\u0002\\u0002\\u00ba\\u00bb\\u0007c\\u0002\\u0002\",\r\n    \"\\u00bb\\u00bc\\u0007v\\u0002\\u0002\\u00bc\\u00bd\\u0007g\\u0002\\u0002\\u00bd\",\r\n    \"\\u0014\\u0003\\u0002\\u0002\\u0002\\u00be\\u00bf\\u0007c\\u0002\\u0002\\u00bf\",\r\n    \"\\u00c0\\u0007h\\u0002\\u0002\\u00c0\\u00c1\\u0007v\\u0002\\u0002\\u00c1\\u00c2\",\r\n    \"\\u0007g\\u0002\\u0002\\u00c2\\u00c3\\u0007t\\u0002\\u0002\\u00c3\\u00c4\\u0007\",\r\n    \"\\\"\\u0002\\u0002\\u00c4\\u00c5\\u0007e\\u0002\\u0002\\u00c5\\u00c6\\u0007q\\u0002\",\r\n    \"\\u0002\\u00c6\\u00c7\\u0007p\\u0002\\u0002\\u00c7\\u00c8\\u0007v\\u0002\\u0002\",\r\n    \"\\u00c8\\u00c9\\u0007t\\u0002\\u0002\\u00c9\\u00ca\\u0007c\\u0002\\u0002\\u00ca\",\r\n    \"\\u00cb\\u0007e\\u0002\\u0002\\u00cb\\u00cc\\u0007v\\u0002\\u0002\\u00cc\\u00cd\",\r\n    \"\\u0007\\\"\\u0002\\u0002\\u00cd\\u00ce\\u0007e\\u0002\\u0002\\u00ce\\u00cf\\u0007\",\r\n    \"t\\u0002\\u0002\\u00cf\\u00d0\\u0007g\\u0002\\u0002\\u00d0\\u00d1\\u0007c\\u0002\",\r\n    \"\\u0002\\u00d1\\u00d2\\u0007v\\u0002\\u0002\\u00d2\\u00d3\\u0007k\\u0002\\u0002\",\r\n    \"\\u00d3\\u00d4\\u0007q\\u0002\\u0002\\u00d4\\u00d5\\u0007p\\u0002\\u0002\\u00d5\",\r\n    \"\\u0016\\u0003\\u0002\\u0002\\u0002\\u00d6\\u00d7\\u0007r\\u0002\\u0002\\u00d7\",\r\n    \"\\u00d8\\u0007t\\u0002\\u0002\\u00d8\\u00d9\\u0007k\\u0002\\u0002\\u00d9\\u00da\",\r\n    \"\\u0007e\\u0002\\u0002\\u00da\\u00db\\u0007g\\u0002\\u0002\\u00db\\u00dc\\u0007\",\r\n    \"\\\"\\u0002\\u0002\\u00dc\\u00dd\\u0007r\\u0002\\u0002\\u00dd\\u00de\\u0007t\\u0002\",\r\n    \"\\u0002\\u00de\\u00df\\u0007k\\u0002\\u0002\\u00df\\u00e0\\u0007e\\u0002\\u0002\",\r\n    \"\\u00e0\\u00e1\\u0007g\\u0002\\u0002\\u00e1\\u00e2\\u0007G\\u0002\\u0002\\u00e2\",\r\n    \"\\u00e3\\u0007z\\u0002\\u0002\\u00e3\\u00e4\\u0007r\\u0002\\u0002\\u00e4\\u00e5\",\r\n    \"\\u0007t\\u0002\\u0002\\u00e5\\u00e6\\u0007g\\u0002\\u0002\\u00e6\\u00e7\\u0007\",\r\n    \"u\\u0002\\u0002\\u00e7\\u00e8\\u0007u\\u0002\\u0002\\u00e8\\u00e9\\u0007k\\u0002\",\r\n    \"\\u0002\\u00e9\\u00ea\\u0007q\\u0002\\u0002\\u00ea\\u00eb\\u0007p\\u0002\\u0002\",\r\n    \"\\u00eb\\u0018\\u0003\\u0002\\u0002\\u0002\\u00ec\\u00ed\\u0007v\\u0002\\u0002\",\r\n    \"\\u00ed\\u00ee\\u0007t\\u0002\\u0002\\u00ee\\u00ef\\u0007c\\u0002\\u0002\\u00ef\",\r\n    \"\\u00f0\\u0007p\\u0002\\u0002\\u00f0\\u00f1\\u0007u\\u0002\\u0002\\u00f1\\u00f2\",\r\n    \"\\u0007c\\u0002\\u0002\\u00f2\\u00f3\\u0007e\\u0002\\u0002\\u00f3\\u00f4\\u0007\",\r\n    \"v\\u0002\\u0002\\u00f4\\u00f5\\u0007k\\u0002\\u0002\\u00f5\\u00f6\\u0007q\\u0002\",\r\n    \"\\u0002\\u00f6\\u00f7\\u0007p\\u0002\\u0002\\u00f7\\u00f8\\u0007\\\"\\u0002\\u0002\",\r\n    \"\\u00f8\\u00f9\\u0007q\\u0002\\u0002\\u00f9\\u00fa\\u0007h\\u0002\\u0002\\u00fa\",\r\n    \"\\u001a\\u0003\\u0002\\u0002\\u0002\\u00fb\\u00fc\\u0007v\\u0002\\u0002\\u00fc\",\r\n    \"\\u00fd\\u0007q\\u0002\\u0002\\u00fd\\u00fe\\u0007\\\"\\u0002\\u0002\\u00fe\\u00ff\",\r\n    \"\\u0007q\\u0002\\u0002\\u00ff\\u0100\\u0007y\\u0002\\u0002\\u0100\\u0101\\u0007\",\r\n    \"p\\u0002\\u0002\\u0101\\u0102\\u0007g\\u0002\\u0002\\u0102\\u0103\\u0007t\\u0002\",\r\n    \"\\u0002\\u0103\\u001c\\u0003\\u0002\\u0002\\u0002\\u0104\\u0105\\u0007e\\u0002\",\r\n    \"\\u0002\\u0105\\u0106\\u0007q\\u0002\\u0002\\u0106\\u0107\\u0007p\\u0002\\u0002\",\r\n    \"\\u0107\\u0108\\u0007v\\u0002\\u0002\\u0108\\u0109\\u0007t\\u0002\\u0002\\u0109\",\r\n    \"\\u010a\\u0007c\\u0002\\u0002\\u010a\\u010b\\u0007e\\u0002\\u0002\\u010b\\u010c\",\r\n    \"\\u0007v\\u0002\\u0002\\u010c\\u010d\\u0007a\\u0002\\u0002\\u010d\\u010e\\u0007\",\r\n    \"i\\u0002\\u0002\\u010e\\u010f\\u0007w\\u0002\\u0002\\u010f\\u0110\\u0007c\\u0002\",\r\n    \"\\u0002\\u0110\\u0111\\u0007t\\u0002\\u0002\\u0111\\u0112\\u0007c\\u0002\\u0002\",\r\n    \"\\u0112\\u0113\\u0007p\\u0002\\u0002\\u0113\\u0114\\u0007v\\u0002\\u0002\\u0114\",\r\n    \"\\u0115\\u0007{\\u0002\\u0002\\u0115\\u0116\\u0007\\\"\\u0002\\u0002\\u0116\\u0117\",\r\n    \"\\u0007q\\u0002\\u0002\\u0117\\u0118\\u0007h\\u0002\\u0002\\u0118\\u001e\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0119\\u011a\\u0007t\\u0002\\u0002\\u011a\\u011b\\u0007\",\r\n    \"g\\u0002\\u0002\\u011b\\u011c\\u0007h\\u0002\\u0002\\u011c\\u011d\\u0007w\\u0002\",\r\n    \"\\u0002\\u011d\\u011e\\u0007p\\u0002\\u0002\\u011e\\u011f\\u0007f\\u0002\\u0002\",\r\n    \"\\u011f\\u0120\\u0007\\\"\\u0002\\u0002\\u0120\\u0121\\u0007c\\u0002\\u0002\\u0121\",\r\n    \"\\u0122\\u0007h\\u0002\\u0002\\u0122\\u0123\\u0007v\\u0002\\u0002\\u0123\\u0124\",\r\n    \"\\u0007g\\u0002\\u0002\\u0124\\u0125\\u0007t\\u0002\\u0002\\u0125 \\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0126\\u0127\\u0007f\\u0002\\u0002\\u0127\\u0128\\u0007c\\u0002\",\r\n    \"\\u0002\\u0128\\u0129\\u0007{\\u0002\\u0002\\u0129\\\"\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u012a\\u012b\\u0007r\\u0002\\u0002\\u012b\\u012c\\u0007n\\u0002\\u0002\\u012c\",\r\n    \"\\u012d\\u0007c\\u0002\\u0002\\u012d\\u012e\\u0007v\\u0002\\u0002\\u012e\\u012f\",\r\n    \"\\u0007h\\u0002\\u0002\\u012f\\u0130\\u0007q\\u0002\\u0002\\u0130\\u0131\\u0007\",\r\n    \"t\\u0002\\u0002\\u0131\\u0132\\u0007o\\u0002\\u0002\\u0132\\u0133\\u0007a\\u0002\",\r\n    \"\\u0002\\u0133\\u0134\\u0007i\\u0002\\u0002\\u0134\\u0135\\u0007w\\u0002\\u0002\",\r\n    \"\\u0135\\u0136\\u0007c\\u0002\\u0002\\u0136\\u0137\\u0007t\\u0002\\u0002\\u0137\",\r\n    \"\\u0138\\u0007c\\u0002\\u0002\\u0138\\u0139\\u0007p\\u0002\\u0002\\u0139\\u013a\",\r\n    \"\\u0007v\\u0002\\u0002\\u013a\\u013b\\u0007{\\u0002\\u0002\\u013b\\u013c\\u0007\",\r\n    \"\\\"\\u0002\\u0002\\u013c\\u013d\\u0007q\\u0002\\u0002\\u013d\\u013e\\u0007h\\u0002\",\r\n    \"\\u0002\\u013e$\\u0003\\u0002\\u0002\\u0002\\u013f\\u0140\\u0007x\\u0002\\u0002\",\r\n    \"\\u0140\\u0141\\u0007k\\u0002\\u0002\\u0141\\u0142\\u0007u\\u0002\\u0002\\u0142\",\r\n    \"\\u0143\\u0007k\\u0002\\u0002\\u0143\\u0144\\u0007v\\u0002\\u0002\\u0144\\u0145\",\r\n    \"\\u0007a\\u0002\\u0002\\u0145\\u0146\\u0007k\\u0002\\u0002\\u0146\\u0147\\u0007\",\r\n    \"p\\u0002\\u0002\\u0147\\u0148\\u0007e\\u0002\\u0002\\u0148\\u0149\\u0007t\\u0002\",\r\n    \"\\u0002\\u0149\\u014a\\u0007g\\u0002\\u0002\\u014a\\u014b\\u0007o\\u0002\\u0002\",\r\n    \"\\u014b\\u014c\\u0007g\\u0002\\u0002\\u014c\\u014d\\u0007p\\u0002\\u0002\\u014d\",\r\n    \"\\u014e\\u0007v\\u0002\\u0002\\u014e\\u014f\\u0007\\\"\\u0002\\u0002\\u014f\\u0150\",\r\n    \"\\u0007q\\u0002\\u0002\\u0150\\u0151\\u0007h\\u0002\\u0002\\u0151&\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0152\\u0153\\u0007x\\u0002\\u0002\\u0153\\u0154\\u0007k\\u0002\",\r\n    \"\\u0002\\u0154\\u0155\\u0007u\\u0002\\u0002\\u0155\\u0156\\u0007k\\u0002\\u0002\",\r\n    \"\\u0156\\u0157\\u0007v\\u0002\\u0002\\u0157\\u0158\\u0007\\\"\\u0002\\u0002\\u0158\",\r\n    \"\\u0159\\u0007q\\u0002\\u0002\\u0159\\u015a\\u0007h\\u0002\\u0002\\u015a(\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u015b\\u015c\\u0007c\\u0002\\u0002\\u015c\\u015d\\u0007\",\r\n    \"e\\u0002\\u0002\\u015d\\u015e\\u0007e\\u0002\\u0002\\u015e\\u015f\\u0007q\\u0002\",\r\n    \"\\u0002\\u015f\\u0160\\u0007w\\u0002\\u0002\\u0160\\u0161\\u0007p\\u0002\\u0002\",\r\n    \"\\u0161\\u0162\\u0007v\\u0002\\u0002\\u0162\\u0163\\u0007a\\u0002\\u0002\\u0163\",\r\n    \"\\u0164\\u0007d\\u0002\\u0002\\u0164\\u0165\\u0007c\\u0002\\u0002\\u0165\\u0166\",\r\n    \"\\u0007n\\u0002\\u0002\\u0166\\u0167\\u0007c\\u0002\\u0002\\u0167\\u0168\\u0007\",\r\n    \"p\\u0002\\u0002\\u0168\\u0169\\u0007e\\u0002\\u0002\\u0169\\u016a\\u0007g\\u0002\",\r\n    \"\\u0002\\u016a\\u016b\\u0007\\\"\\u0002\\u0002\\u016b\\u016c\\u0007i\\u0002\\u0002\",\r\n    \"\\u016c\\u016d\\u0007t\\u0002\\u0002\\u016d\\u016e\\u0007g\\u0002\\u0002\\u016e\",\r\n    \"\\u016f\\u0007c\\u0002\\u0002\\u016f\\u0170\\u0007v\\u0002\\u0002\\u0170\\u0171\",\r\n    \"\\u0007g\\u0002\\u0002\\u0171\\u0172\\u0007t\\u0002\\u0002\\u0172\\u0173\\u0007\",\r\n    \"\\\"\\u0002\\u0002\\u0173\\u0174\\u0007v\\u0002\\u0002\\u0174\\u0175\\u0007j\\u0002\",\r\n    \"\\u0002\\u0175\\u0176\\u0007c\\u0002\\u0002\\u0176\\u0177\\u0007p\\u0002\\u0002\",\r\n    \"\\u0177*\\u0003\\u0002\\u0002\\u0002\\u0178\\u0179\\u0007c\\u0002\\u0002\\u0179\",\r\n    \"\\u017a\\u0007e\\u0002\\u0002\\u017a\\u017b\\u0007e\\u0002\\u0002\\u017b\\u017c\",\r\n    \"\\u0007q\\u0002\\u0002\\u017c\\u017d\\u0007w\\u0002\\u0002\\u017d\\u017e\\u0007\",\r\n    \"p\\u0002\\u0002\\u017e\\u017f\\u0007v\\u0002\\u0002\\u017f\\u0180\\u0007a\\u0002\",\r\n    \"\\u0002\\u0180\\u0181\\u0007d\\u0002\\u0002\\u0181\\u0182\\u0007c\\u0002\\u0002\",\r\n    \"\\u0182\\u0183\\u0007n\\u0002\\u0002\\u0183\\u0184\\u0007c\\u0002\\u0002\\u0184\",\r\n    \"\\u0185\\u0007p\\u0002\\u0002\\u0185\\u0186\\u0007e\\u0002\\u0002\\u0186\\u0187\",\r\n    \"\\u0007g\\u0002\\u0002\\u0187\\u0188\\u0007\\\"\\u0002\\u0002\\u0188\\u0189\\u0007\",\r\n    \"u\\u0002\\u0002\\u0189\\u018a\\u0007o\\u0002\\u0002\\u018a\\u018b\\u0007c\\u0002\",\r\n    \"\\u0002\\u018b\\u018c\\u0007n\\u0002\\u0002\\u018c\\u018d\\u0007n\\u0002\\u0002\",\r\n    \"\\u018d\\u018e\\u0007g\\u0002\\u0002\\u018e\\u018f\\u0007t\\u0002\\u0002\\u018f\",\r\n    \"\\u0190\\u0007\\\"\\u0002\\u0002\\u0190\\u0191\\u0007v\\u0002\\u0002\\u0191\\u0192\",\r\n    \"\\u0007j\\u0002\\u0002\\u0192\\u0193\\u0007c\\u0002\\u0002\\u0193\\u0194\\u0007\",\r\n    \"p\\u0002\\u0002\\u0194,\\u0003\\u0002\\u0002\\u0002\\u0195\\u0196\\u0007c\\u0002\",\r\n    \"\\u0002\\u0196\\u0197\\u0007e\\u0002\\u0002\\u0197\\u0198\\u0007e\\u0002\\u0002\",\r\n    \"\\u0198\\u0199\\u0007q\\u0002\\u0002\\u0199\\u019a\\u0007w\\u0002\\u0002\\u019a\",\r\n    \"\\u019b\\u0007p\\u0002\\u0002\\u019b\\u019c\\u0007v\\u0002\\u0002\\u019c\\u019d\",\r\n    \"\\u0007a\\u0002\\u0002\\u019d\\u019e\\u0007u\\u0002\\u0002\\u019e\\u019f\\u0007\",\r\n    \"g\\u0002\\u0002\\u019f\\u01a0\\u0007v\\u0002\\u0002\\u01a0\\u01a1\\u0007v\\u0002\",\r\n    \"\\u0002\\u01a1\\u01a2\\u0007n\\u0002\\u0002\\u01a2\\u01a3\\u0007g\\u0002\\u0002\",\r\n    \"\\u01a3\\u01a4\\u0007f\\u0002\\u0002\\u01a4.\\u0003\\u0002\\u0002\\u0002\\u01a5\",\r\n    \"\\u01a6\\u0007k\\u0002\\u0002\\u01a6\\u01a7\\u0007p\\u0002\\u0002\\u01a7\\u01a8\",\r\n    \"\\u0007\\\"\\u0002\\u0002\\u01a8\\u01a9\\u0007v\\u0002\\u0002\\u01a9\\u01aa\\u0007\",\r\n    \"q\\u0002\\u0002\\u01aa\\u01ab\\u0007v\\u0002\\u0002\\u01ab\\u01ac\\u0007c\\u0002\",\r\n    \"\\u0002\\u01ac\\u01ad\\u0007n\\u0002\\u0002\\u01ad0\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u01ae\\u01af\\u0007r\\u0002\\u0002\\u01af\\u01b0\\u0007g\\u0002\\u0002\\u01b0\",\r\n    \"\\u01b1\\u0007t\\u0002\\u0002\\u01b1\\u01b2\\u0007\\\"\\u0002\\u0002\\u01b2\\u01b3\",\r\n    \"\\u0007x\\u0002\\u0002\\u01b3\\u01b4\\u0007k\\u0002\\u0002\\u01b4\\u01b5\\u0007\",\r\n    \"g\\u0002\\u0002\\u01b5\\u01b6\\u0007y\\u0002\\u0002\\u01b62\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u01b7\\u01b8\\u0007{\\u0002\\u0002\\u01b8\\u01b9\\u0007g\\u0002\\u0002\",\r\n    \"\\u01b9\\u01ba\\u0007c\\u0002\\u0002\\u01ba\\u01bb\\u0007t\\u0002\\u0002\\u01bb\",\r\n    \"4\\u0003\\u0002\\u0002\\u0002\\u01bc\\u01bd\\u0007y\\u0002\\u0002\\u01bd\\u01be\",\r\n    \"\\u0007g\\u0002\\u0002\\u01be\\u01bf\\u0007g\\u0002\\u0002\\u01bf\\u01c0\\u0007\",\r\n    \"m\\u0002\\u0002\\u01c06\\u0003\\u0002\\u0002\\u0002\\u01c1\\u01c2\\u0007e\\u0002\",\r\n    \"\\u0002\\u01c2\\u01c3\\u0007{\\u0002\\u0002\\u01c3\\u01c4\\u0007e\\u0002\\u0002\",\r\n    \"\\u01c4\\u01c5\\u0007n\\u0002\\u0002\\u01c5\\u01c6\\u0007g\\u0002\\u0002\\u01c6\",\r\n    \"8\\u0003\\u0002\\u0002\\u0002\\u01c7\\u01c8\\u0007H\\u0002\\u0002\\u01c8\\u01c9\",\r\n    \"\\u0007q\\u0002\\u0002\\u01c9\\u01ca\\u0007t\\u0002\\u0002\\u01ca:\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u01cb\\u01cc\\u0007w\\u0002\\u0002\\u01cc\\u01cd\\u0007u\\u0002\",\r\n    \"\\u0002\\u01cd\\u01ce\\u0007g\\u0002\\u0002\\u01ce\\u01cf\\u0007t\\u0002\\u0002\",\r\n    \"\\u01cf\\u01d0\\u0007i\\u0002\\u0002\\u01d0\\u01d1\\u0007t\\u0002\\u0002\\u01d1\",\r\n    \"\\u01d2\\u0007q\\u0002\\u0002\\u01d2\\u01d3\\u0007w\\u0002\\u0002\\u01d3\\u01d4\",\r\n    \"\\u0007r\\u0002\\u0002\\u01d4\\u01d5\\u0007u\\u0002\\u0002\\u01d5<\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u01d6\\u01d7\\u0007w\\u0002\\u0002\\u01d7\\u01d8\\u0007u\\u0002\",\r\n    \"\\u0002\\u01d8\\u01d9\\u0007g\\u0002\\u0002\\u01d9\\u01da\\u0007t\\u0002\\u0002\",\r\n    \"\\u01da\\u01db\\u0007u\\u0002\\u0002\\u01db>\\u0003\\u0002\\u0002\\u0002\\u01dc\",\r\n    \"\\u01dd\\u0007r\\u0002\\u0002\\u01dd\\u01de\\u0007t\\u0002\\u0002\\u01de\\u01df\",\r\n    \"\\u0007q\\u0002\\u0002\\u01df\\u01e0\\u0007e\\u0002\\u0002\\u01e0\\u01e1\\u0007\",\r\n    \"g\\u0002\\u0002\\u01e1\\u01e2\\u0007g\\u0002\\u0002\\u01e2\\u01e3\\u0007f\\u0002\",\r\n    \"\\u0002\\u01e3@\\u0003\\u0002\\u0002\\u0002\\u01e4\\u01e5\\u0007v\\u0002\\u0002\",\r\n    \"\\u01e5\\u01e6\\u0007q\\u0002\\u0002\\u01e6B\\u0003\\u0002\\u0002\\u0002\\u01e7\",\r\n    \"\\u01e8\\u0007k\\u0002\\u0002\\u01e8\\u01e9\\u0007p\\u0002\\u0002\\u01e9D\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u01ea\\u01eb\\u0007q\\u0002\\u0002\\u01eb\\u01ec\\u0007\",\r\n    \"p\\u0002\\u0002\\u01ecF\\u0003\\u0002\\u0002\\u0002\\u01ed\\u01ee\\u0007c\\u0002\",\r\n    \"\\u0002\\u01ee\\u01ef\\u0007e\\u0002\\u0002\\u01ef\\u01f0\\u0007e\\u0002\\u0002\",\r\n    \"\\u01f0\\u01f1\\u0007g\\u0002\\u0002\\u01f1\\u01f2\\u0007r\\u0002\\u0002\\u01f2\",\r\n    \"\\u01f3\\u0007v\\u0002\\u0002\\u01f3\\u01f4\\u0007k\\u0002\\u0002\\u01f4\\u01f5\",\r\n    \"\\u0007p\\u0002\\u0002\\u01f5\\u01f6\\u0007i\\u0002\\u0002\\u01f6H\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u01f7\\u01f8\\u0007u\\u0002\\u0002\\u01f8\\u01f9\\u0007g\\u0002\",\r\n    \"\\u0002\\u01f9\\u01fa\\u0007n\\u0002\\u0002\\u01fa\\u0200\\u0007h\\u0002\\u0002\",\r\n    \"\\u01fb\\u01fc\\u0007U\\u0002\\u0002\\u01fc\\u01fd\\u0007G\\u0002\\u0002\\u01fd\",\r\n    \"\\u01fe\\u0007N\\u0002\\u0002\\u01fe\\u0200\\u0007H\\u0002\\u0002\\u01ff\\u01f7\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u01ff\\u01fb\\u0003\\u0002\\u0002\\u0002\\u0200J\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0201\\u0202\\u0007n\\u0002\\u0002\\u0202\\u0203\",\r\n    \"\\u0007k\\u0002\\u0002\\u0203\\u0204\\u0007e\\u0002\\u0002\\u0204\\u0205\\u0007\",\r\n    \"g\\u0002\\u0002\\u0205\\u0206\\u0007p\\u0002\\u0002\\u0206\\u0207\\u0007u\\u0002\",\r\n    \"\\u0002\\u0207\\u0208\\u0007g\\u0002\\u0002\\u0208L\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0209\\u020a\\u0007r\\u0002\\u0002\\u020a\\u020b\\u0007c\\u0002\\u0002\\u020b\",\r\n    \"\\u020c\\u0007{\\u0002\\u0002\\u020c\\u020d\\u0007k\\u0002\\u0002\\u020d\\u020e\",\r\n    \"\\u0007p\\u0002\\u0002\\u020e\\u020f\\u0007i\\u0002\\u0002\\u020fN\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0210\\u0211\\u0007r\\u0002\\u0002\\u0211\\u0212\\u0007g\\u0002\",\r\n    \"\\u0002\\u0212\\u0213\\u0007t\\u0002\\u0002\\u0213P\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0214\\u0215\\u0007x\\u0002\\u0002\\u0215\\u0216\\u0007k\\u0002\\u0002\\u0216\",\r\n    \"\\u0217\\u0007g\\u0002\\u0002\\u0217\\u0218\\u0007y\\u0002\\u0002\\u0218R\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0219\\u021a\\u0007t\\u0002\\u0002\\u021a\\u021b\\u0007\",\r\n    \"g\\u0002\\u0002\\u021b\\u021c\\u0007s\\u0002\\u0002\\u021c\\u021d\\u0007w\\u0002\",\r\n    \"\\u0002\\u021d\\u021e\\u0007k\\u0002\\u0002\\u021e\\u021f\\u0007t\\u0002\\u0002\",\r\n    \"\\u021f\\u0220\\u0007g\\u0002\\u0002\\u0220T\\u0003\\u0002\\u0002\\u0002\\u0221\",\r\n    \"\\u0222\\u0007p\\u0002\\u0002\\u0222\\u0223\\u0007q\\u0002\\u0002\\u0223\\u0224\",\r\n    \"\\u0007v\\u0002\\u0002\\u0224\\u0225\\u0007j\\u0002\\u0002\\u0225\\u0226\\u0007\",\r\n    \"k\\u0002\\u0002\\u0226\\u0227\\u0007p\\u0002\\u0002\\u0227\\u0228\\u0007i\\u0002\",\r\n    \"\\u0002\\u0228V\\u0003\\u0002\\u0002\\u0002\\u0229\\u022b\\t\\u0002\\u0002\\u0002\",\r\n    \"\\u022a\\u0229\\u0003\\u0002\\u0002\\u0002\\u022b\\u022c\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u022c\\u022a\\u0003\\u0002\\u0002\\u0002\\u022c\\u022d\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u022dX\\u0003\\u0002\\u0002\\u0002\\u022e\\u0230\\t\\u0003\\u0002\\u0002\\u022f\",\r\n    \"\\u022e\\u0003\\u0002\\u0002\\u0002\\u0230\\u0231\\u0003\\u0002\\u0002\\u0002\\u0231\",\r\n    \"\\u022f\\u0003\\u0002\\u0002\\u0002\\u0231\\u0232\\u0003\\u0002\\u0002\\u0002\\u0232\",\r\n    \"\\u0233\\u0003\\u0002\\u0002\\u0002\\u0233\\u0234\\b-\\u0002\\u0002\\u0234Z\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0235\\u0237\\t\\u0004\\u0002\\u0002\\u0236\\u0235\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0237\\u0238\\u0003\\u0002\\u0002\\u0002\\u0238\\u0236\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0238\\u0239\\u0003\\u0002\\u0002\\u0002\\u0239\\\\\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u023a\\u023b\\u0005[.\\u0002\\u023b\\u023c\\u0007/\\u0002\",\r\n    \"\\u0002\\u023c\\u023d\\u0005[.\\u0002\\u023d\\u023e\\u0007/\\u0002\\u0002\\u023e\",\r\n    \"\\u023f\\u0005[.\\u0002\\u023f^\\u0003\\u0002\\u0002\\u0002\\b\\u0002\\u01ff\\u022a\",\r\n    \"\\u022c\\u0231\\u0238\\u0003\\b\\u0002\\u0002\"].join(\"\");\r\n\r\n\r\nvar atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);\r\n\r\nvar decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });\r\n\r\nfunction presentable_policyLexer(input) {\r\n\tantlr4.Lexer.call(this, input);\r\n    this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());\r\n    return this;\r\n}\r\n\r\npresentable_policyLexer.prototype = Object.create(antlr4.Lexer.prototype);\r\npresentable_policyLexer.prototype.constructor = presentable_policyLexer;\r\n\r\npresentable_policyLexer.EOF = antlr4.Token.EOF;\r\npresentable_policyLexer.T__0 = 1;\r\npresentable_policyLexer.T__1 = 2;\r\npresentable_policyLexer.T__2 = 3;\r\npresentable_policyLexer.T__3 = 4;\r\npresentable_policyLexer.T__4 = 5;\r\npresentable_policyLexer.T__5 = 6;\r\npresentable_policyLexer.T__6 = 7;\r\npresentable_policyLexer.T__7 = 8;\r\npresentable_policyLexer.T__8 = 9;\r\npresentable_policyLexer.T__9 = 10;\r\npresentable_policyLexer.T__10 = 11;\r\npresentable_policyLexer.T__11 = 12;\r\npresentable_policyLexer.T__12 = 13;\r\npresentable_policyLexer.T__13 = 14;\r\npresentable_policyLexer.T__14 = 15;\r\npresentable_policyLexer.T__15 = 16;\r\npresentable_policyLexer.T__16 = 17;\r\npresentable_policyLexer.T__17 = 18;\r\npresentable_policyLexer.T__18 = 19;\r\npresentable_policyLexer.T__19 = 20;\r\npresentable_policyLexer.T__20 = 21;\r\npresentable_policyLexer.T__21 = 22;\r\npresentable_policyLexer.T__22 = 23;\r\npresentable_policyLexer.T__23 = 24;\r\npresentable_policyLexer.T__24 = 25;\r\npresentable_policyLexer.T__25 = 26;\r\npresentable_policyLexer.T__26 = 27;\r\npresentable_policyLexer.FOR = 28;\r\npresentable_policyLexer.USERGROUPS = 29;\r\npresentable_policyLexer.USERS = 30;\r\npresentable_policyLexer.PROCEED = 31;\r\npresentable_policyLexer.TO = 32;\r\npresentable_policyLexer.IN = 33;\r\npresentable_policyLexer.ON = 34;\r\npresentable_policyLexer.ACCEPTING = 35;\r\npresentable_policyLexer.SELF = 36;\r\npresentable_policyLexer.LICENSE = 37;\r\npresentable_policyLexer.PAYING = 38;\r\npresentable_policyLexer.PER = 39;\r\npresentable_policyLexer.VIEW = 40;\r\npresentable_policyLexer.REQUIRE = 41;\r\npresentable_policyLexer.NOTHING = 42;\r\npresentable_policyLexer.ID = 43;\r\npresentable_policyLexer.WS = 44;\r\npresentable_policyLexer.INT = 45;\r\npresentable_policyLexer.DATE = 46;\r\n\r\npresentable_policyLexer.prototype.channelNames = [ \"DEFAULT_TOKEN_CHANNEL\", \"HIDDEN\" ];\r\n\r\npresentable_policyLexer.prototype.modeNames = [ \"DEFAULT_MODE\" ];\r\n\r\npresentable_policyLexer.prototype.literalNames = [ null, \"'in the following states:'\", \r\n                                                   \"'and'\", \"'I agree to authorize token in'\", \r\n                                                   \"','\", \"'users in'\", \r\n                                                   \"':'\", \"'and on'\", \"'the end of'\", \r\n                                                   \"'date'\", \"'after contract creation'\", \r\n                                                   \"'price priceExpression'\", \r\n                                                   \"'transaction of'\", \"'to owner'\", \r\n                                                   \"'contract_guaranty of'\", \r\n                                                   \"'refund after'\", \"'day'\", \r\n                                                   \"'platform_guaranty of'\", \r\n                                                   \"'visit_increment of'\", \r\n                                                   \"'visit of'\", \"'account_balance greater than'\", \r\n                                                   \"'account_balance smaller than'\", \r\n                                                   \"'account_settled'\", \r\n                                                   \"'in total'\", \"'per view'\", \r\n                                                   \"'year'\", \"'week'\", \"'cycle'\", \r\n                                                   \"'For'\", \"'usergroups'\", \r\n                                                   \"'users'\", \"'proceed'\", \r\n                                                   \"'to'\", \"'in'\", \"'on'\", \r\n                                                   \"'accepting'\", null, \r\n                                                   \"'license'\", \"'paying'\", \r\n                                                   \"'per'\", \"'view'\", \"'require'\", \r\n                                                   \"'nothing'\" ];\r\n\r\npresentable_policyLexer.prototype.symbolicNames = [ null, null, null, null, \r\n                                                    null, null, null, null, \r\n                                                    null, null, null, null, \r\n                                                    null, null, null, null, \r\n                                                    null, null, null, null, \r\n                                                    null, null, null, null, \r\n                                                    null, null, null, null, \r\n                                                    \"FOR\", \"USERGROUPS\", \r\n                                                    \"USERS\", \"PROCEED\", \r\n                                                    \"TO\", \"IN\", \"ON\", \"ACCEPTING\", \r\n                                                    \"SELF\", \"LICENSE\", \"PAYING\", \r\n                                                    \"PER\", \"VIEW\", \"REQUIRE\", \r\n                                                    \"NOTHING\", \"ID\", \"WS\", \r\n                                                    \"INT\", \"DATE\" ];\r\n\r\npresentable_policyLexer.prototype.ruleNames = [ \"T__0\", \"T__1\", \"T__2\", \r\n                                                \"T__3\", \"T__4\", \"T__5\", \r\n                                                \"T__6\", \"T__7\", \"T__8\", \r\n                                                \"T__9\", \"T__10\", \"T__11\", \r\n                                                \"T__12\", \"T__13\", \"T__14\", \r\n                                                \"T__15\", \"T__16\", \"T__17\", \r\n                                                \"T__18\", \"T__19\", \"T__20\", \r\n                                                \"T__21\", \"T__22\", \"T__23\", \r\n                                                \"T__24\", \"T__25\", \"T__26\", \r\n                                                \"FOR\", \"USERGROUPS\", \"USERS\", \r\n                                                \"PROCEED\", \"TO\", \"IN\", \"ON\", \r\n                                                \"ACCEPTING\", \"SELF\", \"LICENSE\", \r\n                                                \"PAYING\", \"PER\", \"VIEW\", \r\n                                                \"REQUIRE\", \"NOTHING\", \"ID\", \r\n                                                \"WS\", \"INT\", \"DATE\" ];\r\n\r\npresentable_policyLexer.prototype.grammarFileName = \"presentable_policy.g4\";\r\n\r\n\r\n\r\nexports.presentable_policyLexer = presentable_policyLexer;\r\n\r\n\n\n/***/ }),\n\n/***/ \"O+Ac\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"FZ+f\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \".table-view-wrapper .table[data-v-361849fa]{max-height:100%}.table-view-wrapper .pagination[data-v-361849fa]{margin-top:15px;text-align:center}\", \"\", {\"version\":3,\"sources\":[\"/Users/daizecheng/workplace/freelog/console/client/src/components/TableView/index.vue\"],\"names\":[],\"mappings\":\"AACA,4CACE,eAAiB,CAClB,AACD,iDACE,gBAAiB,AACjB,iBAAmB,CACpB\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.table-view-wrapper .table[data-v-361849fa] {\\n  max-height: 100%;\\n}\\n.table-view-wrapper .pagination[data-v-361849fa] {\\n  margin-top: 15px;\\n  text-align: center;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"P8NL\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"FZ+f\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \".p-detail li[data-v-3eb35d32]{margin-bottom:12px}.p-detail .item-title[data-v-3eb35d32]{color:#48576a;display:inline-block;width:150px;padding-right:12px;-webkit-box-sizing:border-box;box-sizing:border-box;text-align:right}.p-detail .item-detail[data-v-3eb35d32]{display:inline-block;vertical-align:top}\", \"\", {\"version\":3,\"sources\":[\"/Users/daizecheng/workplace/freelog/console/client/src/views/node/presentable/contract/detail/index.vue\"],\"names\":[],\"mappings\":\"AACA,8BACE,kBAAoB,CACrB,AACD,uCACE,cAAe,AACf,qBAAsB,AACtB,YAAa,AACb,mBAAoB,AACpB,8BAA+B,AACvB,sBAAuB,AAC/B,gBAAkB,CACnB,AACD,wCACE,qBAAsB,AACtB,kBAAoB,CACrB\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.p-detail li[data-v-3eb35d32] {\\n  margin-bottom: 12px;\\n}\\n.p-detail .item-title[data-v-3eb35d32] {\\n  color: #48576a;\\n  display: inline-block;\\n  width: 150px;\\n  padding-right: 12px;\\n  -webkit-box-sizing: border-box;\\n          box-sizing: border-box;\\n  text-align: right;\\n}\\n.p-detail .item-detail[data-v-3eb35d32] {\\n  display: inline-block;\\n  vertical-align: top;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"PG49\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_assign__ = __webpack_require__(\"woOf\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_assign___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_assign__);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'table-view',\n  data: function data() {\n    return {\n      loading: false,\n      tableData: [],\n      total: 0\n    };\n  },\n\n  props: {\n    data: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    showPagination: {\n      type: Boolean,\n      default: true\n    },\n    formatHandler: {\n      type: Function,\n      default: null\n    },\n    paginationOptions: {\n      type: Object,\n      default: function _default() {\n        return {\n          pageSizes: [10, 20, 30, 50]\n        };\n      }\n    },\n    loader: Function,\n    pageMeta: {\n      type: Object,\n      default: function _default() {\n        return {\n          pageSize: 10,\n          page: 1 //页码\n        };\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.tableData = this.data;\n    this.total = this.tableData.length;\n    this.load();\n  },\n\n  methods: {\n    load: function load(pageInfo) {\n      var _this = this;\n\n      __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_assign___default()(this.pageMeta, pageInfo || {});\n      if (this.loader) {\n        this.loading = true;\n        this.loader(this.pageMeta).then(function (res) {\n          var data = res.getData();\n          _this.loading = false;\n          if (data) {\n            var dataList = data.dataList || data;\n            if (_this.formatHandler) {\n              dataList = _this.formatHandler(dataList);\n            }\n            _this.tableData = dataList;\n            //分页数据\n            if (data.dataList) {\n              _this.total = data.totalItem;\n              _this.pageMeta.page = data.page || 1;\n            } else {\n              _this.total = dataList.length;\n            }\n          } else {\n            _this.$message.error(data.msg);\n          }\n        }).catch(function (res) {\n          _this.$message.warning('加载失败');\n          _this.loading = false;\n        });\n      }\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      var data = { pageSize: val };\n      this.load(data);\n      this.$emit('sizeChange', data);\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      var data = { page: val };\n      this.load(data);\n      this.$emit('pageChange', data);\n    }\n  }\n});\n\n/***/ }),\n\n/***/ \"PYJw\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__index__ = __webpack_require__(\"qBNV\");\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__index__[\"a\" /* default */]);\n\n/***/ }),\n\n/***/ \"QdQx\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(\"JvoN\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(\"rjj0\")(\"e7682b0c\", content, true);\n\n/***/ }),\n\n/***/ \"QtOE\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar antlr4 = __webpack_require__(\"9C8F\");\nvar policy = __webpack_require__(\"1sgP\");\nvar policyLexer = policy.policyLexer;\nvar policyParser = policy.policyParser;\nvar _ = __webpack_require__(\"rdLu\");\n\nvar ErrorListener = __webpack_require__(\"qFmK\").ConsoleErrorListener;\nvar ErrorListenerExtend = __webpack_require__(\"mywV\");\nErrorListenerExtend(ErrorListener.prototype);\n\nvar compile = function compile(text) {\n  var target = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'json';\n\n  var extentionClass = __webpack_require__(\"Ev7n\");\n  if (target === 'beautify') {\n    extentionClass = __webpack_require__(\"/CDt\");\n  }\n\n  var chars = new antlr4.InputStream(text);\n  var lexer = new policyLexer(chars);\n\n  var tokens = new antlr4.CommonTokenStream(lexer);\n  var parser = new policyParser(tokens);\n  parser.buildParseTrees = true;\n  var tree = parser.p();\n  var listener = new extentionClass();\n  antlr4.tree.ParseTreeWalker.DEFAULT.walk(listener, tree);\n  if (parser._listeners[0].errorMsg) {\n    //把错误信息放进listener里面\n    listener.errorMsg = parser._listeners[0].errorMsg;\n    parser._listeners[0].errorMsg = null;\n  }\n  return listener;\n};\n\nexports.compile = compile;\n\n\n/***/ }),\n\n/***/ \"RRo+\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(\"c45H\"), __esModule: true };\n\n/***/ }),\n\n/***/ \"RuwF\":\n/***/ (function(module, exports, __webpack_require__) {\n\n//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\nvar Set = __webpack_require__(\"bz+k\").Set;\nvar BitSet = __webpack_require__(\"bz+k\").BitSet;\nvar Token = __webpack_require__(\"j/5l\").Token;\nvar ATNConfig = __webpack_require__(\"yEAX\").ATNConfig;\nvar Interval = __webpack_require__(\"T+Yw\").Interval;\nvar IntervalSet = __webpack_require__(\"T+Yw\").IntervalSet;\nvar RuleStopState = __webpack_require__(\"j0Qz\").RuleStopState;\nvar RuleTransition = __webpack_require__(\"VS1O\").RuleTransition;\nvar NotSetTransition = __webpack_require__(\"VS1O\").NotSetTransition;\nvar WildcardTransition = __webpack_require__(\"VS1O\").WildcardTransition;\nvar AbstractPredicateTransition = __webpack_require__(\"VS1O\").AbstractPredicateTransition;\n\nvar pc = __webpack_require__(\"YFoD\");\nvar predictionContextFromRuleContext = pc.predictionContextFromRuleContext;\nvar PredictionContext = pc.PredictionContext;\nvar SingletonPredictionContext = pc.SingletonPredictionContext;\n\nfunction LL1Analyzer (atn) {\n    this.atn = atn;\n}\n\n//* Special value added to the lookahead sets to indicate that we hit\n//  a predicate during analysis if {@code seeThruPreds==false}.\n///\nLL1Analyzer.HIT_PRED = Token.INVALID_TYPE;\n\n\n//*\n// Calculates the SLL(1) expected lookahead set for each outgoing transition\n// of an {@link ATNState}. The returned array has one element for each\n// outgoing transition in {@code s}. If the closure from transition\n// <em>i</em> leads to a semantic predicate before matching a symbol, the\n// element at index <em>i</em> of the result will be {@code null}.\n//\n// @param s the ATN state\n// @return the expected symbols for each outgoing transition of {@code s}.\n///\nLL1Analyzer.prototype.getDecisionLookahead = function(s) {\n    if (s === null) {\n        return null;\n    }\n    var count = s.transitions.length;\n    var look = [];\n    for(var alt=0; alt< count; alt++) {\n        look[alt] = new IntervalSet();\n        var lookBusy = new Set();\n        var seeThruPreds = false; // fail to get lookahead upon pred\n        this._LOOK(s.transition(alt).target, null, PredictionContext.EMPTY,\n              look[alt], lookBusy, new BitSet(), seeThruPreds, false);\n        // Wipe out lookahead for this alternative if we found nothing\n        // or we had a predicate when we !seeThruPreds\n        if (look[alt].length===0 || look[alt].contains(LL1Analyzer.HIT_PRED)) {\n            look[alt] = null;\n        }\n    }\n    return look;\n};\n\n//*\n// Compute set of tokens that can follow {@code s} in the ATN in the\n// specified {@code ctx}.\n//\n// <p>If {@code ctx} is {@code null} and the end of the rule containing\n// {@code s} is reached, {@link Token//EPSILON} is added to the result set.\n// If {@code ctx} is not {@code null} and the end of the outermost rule is\n// reached, {@link Token//EOF} is added to the result set.</p>\n//\n// @param s the ATN state\n// @param stopState the ATN state to stop at. This can be a\n// {@link BlockEndState} to detect epsilon paths through a closure.\n// @param ctx the complete parser context, or {@code null} if the context\n// should be ignored\n//\n// @return The set of tokens that can follow {@code s} in the ATN in the\n// specified {@code ctx}.\n///\nLL1Analyzer.prototype.LOOK = function(s, stopState, ctx) {\n    var r = new IntervalSet();\n    var seeThruPreds = true; // ignore preds; get all lookahead\n\tctx = ctx || null;\n    var lookContext = ctx!==null ? predictionContextFromRuleContext(s.atn, ctx) : null;\n    this._LOOK(s, stopState, lookContext, r, new Set(), new BitSet(), seeThruPreds, true);\n    return r;\n};\n\n//*\n// Compute set of tokens that can follow {@code s} in the ATN in the\n// specified {@code ctx}.\n//\n// <p>If {@code ctx} is {@code null} and {@code stopState} or the end of the\n// rule containing {@code s} is reached, {@link Token//EPSILON} is added to\n// the result set. If {@code ctx} is not {@code null} and {@code addEOF} is\n// {@code true} and {@code stopState} or the end of the outermost rule is\n// reached, {@link Token//EOF} is added to the result set.</p>\n//\n// @param s the ATN state.\n// @param stopState the ATN state to stop at. This can be a\n// {@link BlockEndState} to detect epsilon paths through a closure.\n// @param ctx The outer context, or {@code null} if the outer context should\n// not be used.\n// @param look The result lookahead set.\n// @param lookBusy A set used for preventing epsilon closures in the ATN\n// from causing a stack overflow. Outside code should pass\n// {@code new Set<ATNConfig>} for this argument.\n// @param calledRuleStack A set used for preventing left recursion in the\n// ATN from causing a stack overflow. Outside code should pass\n// {@code new BitSet()} for this argument.\n// @param seeThruPreds {@code true} to true semantic predicates as\n// implicitly {@code true} and \"see through them\", otherwise {@code false}\n// to treat semantic predicates as opaque and add {@link //HIT_PRED} to the\n// result if one is encountered.\n// @param addEOF Add {@link Token//EOF} to the result if the end of the\n// outermost context is reached. This parameter has no effect if {@code ctx}\n// is {@code null}.\n///\nLL1Analyzer.prototype._LOOK = function(s, stopState , ctx, look, lookBusy, calledRuleStack, seeThruPreds, addEOF) {\n    var c = new ATNConfig({state:s, alt:0, context: ctx}, null);\n    if (lookBusy.contains(c)) {\n        return;\n    }\n    lookBusy.add(c);\n    if (s === stopState) {\n        if (ctx ===null) {\n            look.addOne(Token.EPSILON);\n            return;\n        } else if (ctx.isEmpty() && addEOF) {\n            look.addOne(Token.EOF);\n            return;\n        }\n    }\n    if (s instanceof RuleStopState ) {\n        if (ctx ===null) {\n            look.addOne(Token.EPSILON);\n            return;\n        } else if (ctx.isEmpty() && addEOF) {\n            look.addOne(Token.EOF);\n            return;\n        }\n        if (ctx !== PredictionContext.EMPTY) {\n            // run thru all possible stack tops in ctx\n            for(var i=0; i<ctx.length; i++) {\n                var returnState = this.atn.states[ctx.getReturnState(i)];\n                var removed = calledRuleStack.contains(returnState.ruleIndex);\n                try {\n                    calledRuleStack.remove(returnState.ruleIndex);\n                    this._LOOK(returnState, stopState, ctx.getParent(i), look, lookBusy, calledRuleStack, seeThruPreds, addEOF);\n                } finally {\n                    if (removed) {\n                        calledRuleStack.add(returnState.ruleIndex);\n                    }\n                }\n            }\n            return;\n        }\n    }\n    for(var j=0; j<s.transitions.length; j++) {\n        var t = s.transitions[j];\n        if (t.constructor === RuleTransition) {\n            if (calledRuleStack.contains(t.target.ruleIndex)) {\n                continue;\n            }\n            var newContext = SingletonPredictionContext.create(ctx, t.followState.stateNumber);\n            try {\n                calledRuleStack.add(t.target.ruleIndex);\n                this._LOOK(t.target, stopState, newContext, look, lookBusy, calledRuleStack, seeThruPreds, addEOF);\n            } finally {\n                calledRuleStack.remove(t.target.ruleIndex);\n            }\n        } else if (t instanceof AbstractPredicateTransition ) {\n            if (seeThruPreds) {\n                this._LOOK(t.target, stopState, ctx, look, lookBusy, calledRuleStack, seeThruPreds, addEOF);\n            } else {\n                look.addOne(LL1Analyzer.HIT_PRED);\n            }\n        } else if( t.isEpsilon) {\n            this._LOOK(t.target, stopState, ctx, look, lookBusy, calledRuleStack, seeThruPreds, addEOF);\n        } else if (t.constructor === WildcardTransition) {\n            look.addRange( Token.MIN_USER_TOKEN_TYPE, this.atn.maxTokenType );\n        } else {\n            var set = t.label;\n            if (set !== null) {\n                if (t instanceof NotSetTransition) {\n                    set = set.complement(Token.MIN_USER_TOKEN_TYPE, this.atn.maxTokenType);\n                }\n                look.addSet(set);\n            }\n        }\n    }\n};\n\nexports.LL1Analyzer = LL1Analyzer;\n\n\n\n/***/ }),\n\n/***/ \"Smw7\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// Generated from policy.g4 by ANTLR 4.7\r\n// jshint ignore: start\r\nvar antlr4 = __webpack_require__(\"9C8F\");\r\n\r\n// This class defines a complete listener for a parse tree produced by policyParser.\r\nfunction policyListener() {\r\n\tantlr4.tree.ParseTreeListener.call(this);\r\n\treturn this;\r\n}\r\n\r\npolicyListener.prototype = Object.create(antlr4.tree.ParseTreeListener.prototype);\r\npolicyListener.prototype.constructor = policyListener;\r\n\r\n// Enter a parse tree produced by policyParser#p.\r\npolicyListener.prototype.enterP = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#p.\r\npolicyListener.prototype.exitP = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#segment.\r\npolicyListener.prototype.enterSegment = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#segment.\r\npolicyListener.prototype.exitSegment = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#audience_clause.\r\npolicyListener.prototype.enterAudience_clause = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#audience_clause.\r\npolicyListener.prototype.exitAudience_clause = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#athorize_token_clause.\r\npolicyListener.prototype.enterAthorize_token_clause = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#athorize_token_clause.\r\npolicyListener.prototype.exitAthorize_token_clause = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#audience_individuals_clause.\r\npolicyListener.prototype.enterAudience_individuals_clause = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#audience_individuals_clause.\r\npolicyListener.prototype.exitAudience_individuals_clause = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#audience_groups_clause.\r\npolicyListener.prototype.enterAudience_groups_clause = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#audience_groups_clause.\r\npolicyListener.prototype.exitAudience_groups_clause = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#state_clause.\r\npolicyListener.prototype.enterState_clause = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#state_clause.\r\npolicyListener.prototype.exitState_clause = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#current_state_clause.\r\npolicyListener.prototype.enterCurrent_state_clause = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#current_state_clause.\r\npolicyListener.prototype.exitCurrent_state_clause = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#target_clause.\r\npolicyListener.prototype.enterTarget_clause = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#target_clause.\r\npolicyListener.prototype.exitTarget_clause = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#accepting.\r\npolicyListener.prototype.enterAccepting = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#accepting.\r\npolicyListener.prototype.exitAccepting = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#event.\r\npolicyListener.prototype.enterEvent = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#event.\r\npolicyListener.prototype.exitEvent = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#and_event.\r\npolicyListener.prototype.enterAnd_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#and_event.\r\npolicyListener.prototype.exitAnd_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#period_event.\r\npolicyListener.prototype.enterPeriod_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#period_event.\r\npolicyListener.prototype.exitPeriod_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#specific_date_event.\r\npolicyListener.prototype.enterSpecific_date_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#specific_date_event.\r\npolicyListener.prototype.exitSpecific_date_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#relative_date_event.\r\npolicyListener.prototype.enterRelative_date_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#relative_date_event.\r\npolicyListener.prototype.exitRelative_date_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#pricing_agreement_event.\r\npolicyListener.prototype.enterPricing_agreement_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#pricing_agreement_event.\r\npolicyListener.prototype.exitPricing_agreement_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#transaction_event.\r\npolicyListener.prototype.enterTransaction_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#transaction_event.\r\npolicyListener.prototype.exitTransaction_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#guaranty_event.\r\npolicyListener.prototype.enterGuaranty_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#guaranty_event.\r\npolicyListener.prototype.exitGuaranty_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#contract_guaranty.\r\npolicyListener.prototype.enterContract_guaranty = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#contract_guaranty.\r\npolicyListener.prototype.exitContract_guaranty = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#platform_guaranty.\r\npolicyListener.prototype.enterPlatform_guaranty = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#platform_guaranty.\r\npolicyListener.prototype.exitPlatform_guaranty = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#signing_event.\r\npolicyListener.prototype.enterSigning_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#signing_event.\r\npolicyListener.prototype.exitSigning_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#access_count_event.\r\npolicyListener.prototype.enterAccess_count_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#access_count_event.\r\npolicyListener.prototype.exitAccess_count_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#visit_increment_event.\r\npolicyListener.prototype.enterVisit_increment_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#visit_increment_event.\r\npolicyListener.prototype.exitVisit_increment_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#visit_event.\r\npolicyListener.prototype.enterVisit_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#visit_event.\r\npolicyListener.prototype.exitVisit_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#balance_event.\r\npolicyListener.prototype.enterBalance_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#balance_event.\r\npolicyListener.prototype.exitBalance_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#balance_greater.\r\npolicyListener.prototype.enterBalance_greater = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#balance_greater.\r\npolicyListener.prototype.exitBalance_greater = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#balance_smaller.\r\npolicyListener.prototype.enterBalance_smaller = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#balance_smaller.\r\npolicyListener.prototype.exitBalance_smaller = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#settlement_event.\r\npolicyListener.prototype.enterSettlement_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#settlement_event.\r\npolicyListener.prototype.exitSettlement_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#license_resource_id.\r\npolicyListener.prototype.enterLicense_resource_id = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#license_resource_id.\r\npolicyListener.prototype.exitLicense_resource_id = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#account_id.\r\npolicyListener.prototype.enterAccount_id = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#account_id.\r\npolicyListener.prototype.exitAccount_id = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#users.\r\npolicyListener.prototype.enterUsers = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#users.\r\npolicyListener.prototype.exitUsers = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#user_groups.\r\npolicyListener.prototype.enterUser_groups = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#user_groups.\r\npolicyListener.prototype.exitUser_groups = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#and.\r\npolicyListener.prototype.enterAnd = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#and.\r\npolicyListener.prototype.exitAnd = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#view_unit.\r\npolicyListener.prototype.enterView_unit = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#view_unit.\r\npolicyListener.prototype.exitView_unit = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#time_unit.\r\npolicyListener.prototype.enterTime_unit = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#time_unit.\r\npolicyListener.prototype.exitTime_unit = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#start_hour.\r\npolicyListener.prototype.enterStart_hour = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#start_hour.\r\npolicyListener.prototype.exitStart_hour = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#end_hour.\r\npolicyListener.prototype.enterEnd_hour = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#end_hour.\r\npolicyListener.prototype.exitEnd_hour = function(ctx) {\r\n};\r\n\r\n\r\n\r\nexports.policyListener = policyListener;\n\n/***/ }),\n\n/***/ \"T+Yw\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n/*jslint smarttabs:true */\n\nvar Token = __webpack_require__(\"j/5l\").Token;\n\n/* stop is not included! */\nfunction Interval(start, stop) {\n\tthis.start = start;\n\tthis.stop = stop;\n\treturn this;\n}\n\nInterval.prototype.contains = function(item) {\n\treturn item >= this.start && item < this.stop;\n};\n\nInterval.prototype.toString = function() {\n\tif(this.start===this.stop-1) {\n\t\treturn this.start.toString();\n\t} else {\n\t\treturn this.start.toString() + \"..\" + (this.stop-1).toString();\n\t}\n};\n\n\nObject.defineProperty(Interval.prototype, \"length\", {\n\tget : function() {\n\t\treturn this.stop - this.start;\n\t}\n});\n\nfunction IntervalSet() {\n\tthis.intervals = null;\n\tthis.readOnly = false;\n}\n\nIntervalSet.prototype.first = function(v) {\n\tif (this.intervals === null || this.intervals.length===0) {\n\t\treturn Token.INVALID_TYPE;\n\t} else {\n\t\treturn this.intervals[0].start;\n\t}\n};\n\nIntervalSet.prototype.addOne = function(v) {\n\tthis.addInterval(new Interval(v, v + 1));\n};\n\nIntervalSet.prototype.addRange = function(l, h) {\n\tthis.addInterval(new Interval(l, h + 1));\n};\n\nIntervalSet.prototype.addInterval = function(v) {\n\tif (this.intervals === null) {\n\t\tthis.intervals = [];\n\t\tthis.intervals.push(v);\n\t} else {\n\t\t// find insert pos\n\t\tfor (var k = 0; k < this.intervals.length; k++) {\n\t\t\tvar i = this.intervals[k];\n\t\t\t// distinct range -> insert\n\t\t\tif (v.stop < i.start) {\n\t\t\t\tthis.intervals.splice(k, 0, v);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// contiguous range -> adjust\n\t\t\telse if (v.stop === i.start) {\n\t\t\t\tthis.intervals[k].start = v.start;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// overlapping range -> adjust and reduce\n\t\t\telse if (v.start <= i.stop) {\n\t\t\t\tthis.intervals[k] = new Interval(Math.min(i.start, v.start), Math.max(i.stop, v.stop));\n\t\t\t\tthis.reduce(k);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t// greater than any existing\n\t\tthis.intervals.push(v);\n\t}\n};\n\nIntervalSet.prototype.addSet = function(other) {\n\tif (other.intervals !== null) {\n\t\tfor (var k = 0; k < other.intervals.length; k++) {\n\t\t\tvar i = other.intervals[k];\n\t\t\tthis.addInterval(new Interval(i.start, i.stop));\n\t\t}\n\t}\n\treturn this;\n};\n\nIntervalSet.prototype.reduce = function(k) {\n\t// only need to reduce if k is not the last\n\tif (k < this.intervalslength - 1) {\n\t\tvar l = this.intervals[k];\n\t\tvar r = this.intervals[k + 1];\n\t\t// if r contained in l\n\t\tif (l.stop >= r.stop) {\n\t\t\tthis.intervals.pop(k + 1);\n\t\t\tthis.reduce(k);\n\t\t} else if (l.stop >= r.start) {\n\t\t\tthis.intervals[k] = new Interval(l.start, r.stop);\n\t\t\tthis.intervals.pop(k + 1);\n\t\t}\n\t}\n};\n\nIntervalSet.prototype.complement = function(start, stop) {\n    var result = new IntervalSet();\n    result.addInterval(new Interval(start,stop+1));\n    for(var i=0; i<this.intervals.length; i++) {\n        result.removeRange(this.intervals[i]);\n    }\n    return result;\n};\n\nIntervalSet.prototype.contains = function(item) {\n\tif (this.intervals === null) {\n\t\treturn false;\n\t} else {\n\t\tfor (var k = 0; k < this.intervals.length; k++) {\n\t\t\tif(this.intervals[k].contains(item)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n};\n\nObject.defineProperty(IntervalSet.prototype, \"length\", {\n\tget : function() {\n\t\tvar len = 0;\n\t\tthis.intervals.map(function(i) {len += i.length;});\n\t\treturn len;\n\t}\n});\n\nIntervalSet.prototype.removeRange = function(v) {\n    if(v.start===v.stop-1) {\n        this.removeOne(v.start);\n    } else if (this.intervals!==null) {\n        var k = 0;\n        for(var n=0; n<this.intervals.length; n++) {\n            var i = this.intervals[k];\n            // intervals are ordered\n            if (v.stop<=i.start) {\n                return;\n            }\n            // check for including range, split it\n            else if(v.start>i.start && v.stop<i.stop) {\n                this.intervals[k] = new Interval(i.start, v.start);\n                var x = new Interval(v.stop, i.stop);\n                this.intervals.splice(k, 0, x);\n                return;\n            }\n            // check for included range, remove it\n            else if(v.start<=i.start && v.stop>=i.stop) {\n                this.intervals.splice(k, 1);\n                k = k - 1; // need another pass\n            }\n            // check for lower boundary\n            else if(v.start<i.stop) {\n                this.intervals[k] = new Interval(i.start, v.start);\n            }\n            // check for upper boundary\n            else if(v.stop<i.stop) {\n                this.intervals[k] = new Interval(v.stop, i.stop);\n            }\n            k += 1;\n        }\n    }\n};\n\nIntervalSet.prototype.removeOne = function(v) {\n\tif (this.intervals !== null) {\n\t\tfor (var k = 0; k < this.intervals.length; k++) {\n\t\t\tvar i = this.intervals[k];\n\t\t\t// intervals is ordered\n\t\t\tif (v < i.start) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// check for single value range\n\t\t\telse if (v === i.start && v === i.stop - 1) {\n\t\t\t\tthis.intervals.splice(k, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// check for lower boundary\n\t\t\telse if (v === i.start) {\n\t\t\t\tthis.intervals[k] = new Interval(i.start + 1, i.stop);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// check for upper boundary\n\t\t\telse if (v === i.stop - 1) {\n\t\t\t\tthis.intervals[k] = new Interval(i.start, i.stop - 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// split existing range\n\t\t\telse if (v < i.stop - 1) {\n\t\t\t\tvar x = new Interval(i.start, v);\n\t\t\t\ti.start = v + 1;\n\t\t\t\tthis.intervals.splice(k, 0, x);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n};\n\nIntervalSet.prototype.toString = function(literalNames, symbolicNames, elemsAreChar) {\n\tliteralNames = literalNames || null;\n\tsymbolicNames = symbolicNames || null;\n\telemsAreChar = elemsAreChar || false;\n\tif (this.intervals === null) {\n\t\treturn \"{}\";\n\t} else if(literalNames!==null || symbolicNames!==null) {\n\t\treturn this.toTokenString(literalNames, symbolicNames);\n\t} else if(elemsAreChar) {\n\t\treturn this.toCharString();\n\t} else {\n\t\treturn this.toIndexString();\n\t}\n};\n\nIntervalSet.prototype.toCharString = function() {\n\tvar names = [];\n\tfor (var i = 0; i < this.intervals.length; i++) {\n\t\tvar v = this.intervals[i];\n\t\tif(v.stop===v.start+1) {\n\t\t\tif ( v.start===Token.EOF ) {\n\t\t\t\tnames.push(\"<EOF>\");\n\t\t\t} else {\n\t\t\t\tnames.push(\"'\" + String.fromCharCode(v.start) + \"'\");\n\t\t\t}\n\t\t} else {\n\t\t\tnames.push(\"'\" + String.fromCharCode(v.start) + \"'..'\" + String.fromCharCode(v.stop-1) + \"'\");\n\t\t}\n\t}\n\tif (names.length > 1) {\n\t\treturn \"{\" + names.join(\", \") + \"}\";\n\t} else {\n\t\treturn names[0];\n\t}\n};\n\n\nIntervalSet.prototype.toIndexString = function() {\n\tvar names = [];\n\tfor (var i = 0; i < this.intervals.length; i++) {\n\t\tvar v = this.intervals[i];\n\t\tif(v.stop===v.start+1) {\n\t\t\tif ( v.start===Token.EOF ) {\n\t\t\t\tnames.push(\"<EOF>\");\n\t\t\t} else {\n\t\t\t\tnames.push(v.start.toString());\n\t\t\t}\n\t\t} else {\n\t\t\tnames.push(v.start.toString() + \"..\" + (v.stop-1).toString());\n\t\t}\n\t}\n\tif (names.length > 1) {\n\t\treturn \"{\" + names.join(\", \") + \"}\";\n\t} else {\n\t\treturn names[0];\n\t}\n};\n\n\nIntervalSet.prototype.toTokenString = function(literalNames, symbolicNames) {\n\tvar names = [];\n\tfor (var i = 0; i < this.intervals.length; i++) {\n\t\tvar v = this.intervals[i];\n\t\tfor (var j = v.start; j < v.stop; j++) {\n\t\t\tnames.push(this.elementName(literalNames, symbolicNames, j));\n\t\t}\n\t}\n\tif (names.length > 1) {\n\t\treturn \"{\" + names.join(\", \") + \"}\";\n\t} else {\n\t\treturn names[0];\n\t}\n};\n\nIntervalSet.prototype.elementName = function(literalNames, symbolicNames, a) {\n\tif (a === Token.EOF) {\n\t\treturn \"<EOF>\";\n\t} else if (a === Token.EPSILON) {\n\t\treturn \"<EPSILON>\";\n\t} else {\n\t\treturn literalNames[a] || symbolicNames[a];\n\t}\n};\n\nexports.Interval = Interval;\nexports.IntervalSet = IntervalSet;\n\n\n/***/ }),\n\n/***/ \"TEvv\":\n/***/ (function(module, exports, __webpack_require__) {\n\n//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\n//\n// This default implementation of {@link TokenFactory} creates\n// {@link CommonToken} objects.\n//\n\nvar CommonToken = __webpack_require__(\"j/5l\").CommonToken;\n\nfunction TokenFactory() {\n\treturn this;\n}\n\nfunction CommonTokenFactory(copyText) {\n\tTokenFactory.call(this);\n    // Indicates whether {@link CommonToken//setText} should be called after\n    // constructing tokens to explicitly set the text. This is useful for cases\n    // where the input stream might not be able to provide arbitrary substrings\n    // of text from the input after the lexer creates a token (e.g. the\n    // implementation of {@link CharStream//getText} in\n    // {@link UnbufferedCharStream} throws an\n    // {@link UnsupportedOperationException}). Explicitly setting the token text\n    // allows {@link Token//getText} to be called at any time regardless of the\n    // input stream implementation.\n    //\n    // <p>\n    // The default value is {@code false} to avoid the performance and memory\n    // overhead of copying text for every token unless explicitly requested.</p>\n    //\n    this.copyText = copyText===undefined ? false : copyText;\n\treturn this;\n}\n\nCommonTokenFactory.prototype = Object.create(TokenFactory.prototype);\nCommonTokenFactory.prototype.constructor = CommonTokenFactory;\n\n//\n// The default {@link CommonTokenFactory} instance.\n//\n// <p>\n// This token factory does not explicitly copy token text when constructing\n// tokens.</p>\n//\nCommonTokenFactory.DEFAULT = new CommonTokenFactory();\n\nCommonTokenFactory.prototype.create = function(source, type, text, channel, start, stop, line, column) {\n    var t = new CommonToken(source, type, channel, start, stop);\n    t.line = line;\n    t.column = column;\n    if (text !==null) {\n        t.text = text;\n    } else if (this.copyText && source[1] !==null) {\n        t.text = source[1].getText(start,stop);\n    }\n    return t;\n};\n\nCommonTokenFactory.prototype.createThin = function(type, text) {\n    var t = new CommonToken(null, type);\n    t.text = text;\n    return t;\n};\n\nexports.CommonTokenFactory = CommonTokenFactory;\n\n\n/***/ }),\n\n/***/ \"TmV0\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"fZOM\");\nmodule.exports = __webpack_require__(\"FeBl\").Object.values;\n\n\n/***/ }),\n\n/***/ \"VIKC\":\n/***/ (function(module, exports, __webpack_require__) {\n\n//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nvar Set = __webpack_require__(\"bz+k\").Set;\nvar DFAState = __webpack_require__(\"IUCG\").DFAState;\nvar StarLoopEntryState = __webpack_require__(\"j0Qz\").StarLoopEntryState;\nvar ATNConfigSet = __webpack_require__(\"wMEt\").ATNConfigSet;\nvar DFASerializer = __webpack_require__(\"hL6x\").DFASerializer;\nvar LexerDFASerializer = __webpack_require__(\"hL6x\").LexerDFASerializer;\n\n\n\nfunction DFA(atnStartState, decision) {\n\tif (decision === undefined) {\n\t\tdecision = 0;\n\t}\n\t// From which ATN state did we create this DFA?\n\tthis.atnStartState = atnStartState;\n\tthis.decision = decision;\n\t// A set of all DFA states. Use {@link Map} so we can get old state back\n\t// ({@link Set} only allows you to see if it's there).\n\tthis._states = new Set();\n\tthis.s0 = null;\n\t// {@code true} if this DFA is for a precedence decision; otherwise,\n\t// {@code false}. This is the backing field for {@link //isPrecedenceDfa},\n\t// {@link //setPrecedenceDfa}.\n\tthis.precedenceDfa = false;\n    if (atnStartState instanceof StarLoopEntryState)\n    {\n        if (atnStartState.isPrecedenceDecision) {\n            this.precedenceDfa = true;\n            var precedenceState = new DFAState(null, new ATNConfigSet());\n            precedenceState.edges = [];\n            precedenceState.isAcceptState = false;\n            precedenceState.requiresFullContext = false;\n            this.s0 = precedenceState;\n        }\n    }\n\treturn this;\n}\n\n// Get the start state for a specific precedence value.\n//\n// @param precedence The current precedence.\n// @return The start state corresponding to the specified precedence, or\n// {@code null} if no start state exists for the specified precedence.\n//\n// @throws IllegalStateException if this is not a precedence DFA.\n// @see //isPrecedenceDfa()\n\nDFA.prototype.getPrecedenceStartState = function(precedence) {\n\tif (!(this.precedenceDfa)) {\n\t\tthrow (\"Only precedence DFAs may contain a precedence start state.\");\n\t}\n\t// s0.edges is never null for a precedence DFA\n\tif (precedence < 0 || precedence >= this.s0.edges.length) {\n\t\treturn null;\n\t}\n\treturn this.s0.edges[precedence] || null;\n};\n\n// Set the start state for a specific precedence value.\n//\n// @param precedence The current precedence.\n// @param startState The start state corresponding to the specified\n// precedence.\n//\n// @throws IllegalStateException if this is not a precedence DFA.\n// @see //isPrecedenceDfa()\n//\nDFA.prototype.setPrecedenceStartState = function(precedence, startState) {\n\tif (!(this.precedenceDfa)) {\n\t\tthrow (\"Only precedence DFAs may contain a precedence start state.\");\n\t}\n\tif (precedence < 0) {\n\t\treturn;\n\t}\n\n\t// synchronization on s0 here is ok. when the DFA is turned into a\n\t// precedence DFA, s0 will be initialized once and not updated again\n\t// s0.edges is never null for a precedence DFA\n\tthis.s0.edges[precedence] = startState;\n};\n\n//\n// Sets whether this is a precedence DFA. If the specified value differs\n// from the current DFA configuration, the following actions are taken;\n// otherwise no changes are made to the current DFA.\n//\n// <ul>\n// <li>The {@link //states} map is cleared</li>\n// <li>If {@code precedenceDfa} is {@code false}, the initial state\n// {@link //s0} is set to {@code null}; otherwise, it is initialized to a new\n// {@link DFAState} with an empty outgoing {@link DFAState//edges} array to\n// store the start states for individual precedence values.</li>\n// <li>The {@link //precedenceDfa} field is updated</li>\n// </ul>\n//\n// @param precedenceDfa {@code true} if this is a precedence DFA; otherwise,\n// {@code false}\n\nDFA.prototype.setPrecedenceDfa = function(precedenceDfa) {\n\tif (this.precedenceDfa!==precedenceDfa) {\n\t\tthis._states = new DFAStatesSet();\n\t\tif (precedenceDfa) {\n\t\t\tvar precedenceState = new DFAState(null, new ATNConfigSet());\n\t\t\tprecedenceState.edges = [];\n\t\t\tprecedenceState.isAcceptState = false;\n\t\t\tprecedenceState.requiresFullContext = false;\n\t\t\tthis.s0 = precedenceState;\n\t\t} else {\n\t\t\tthis.s0 = null;\n\t\t}\n\t\tthis.precedenceDfa = precedenceDfa;\n\t}\n};\n\nObject.defineProperty(DFA.prototype, \"states\", {\n\tget : function() {\n\t\treturn this._states;\n\t}\n});\n\n// Return a list of all states in this DFA, ordered by state number.\nDFA.prototype.sortedStates = function() {\n\tvar list = this._states.values();\n\treturn list.sort(function(a, b) {\n\t\treturn a.stateNumber - b.stateNumber;\n\t});\n};\n\nDFA.prototype.toString = function(literalNames, symbolicNames) {\n\tliteralNames = literalNames || null;\n\tsymbolicNames = symbolicNames || null;\n\tif (this.s0 === null) {\n\t\treturn \"\";\n\t}\n\tvar serializer = new DFASerializer(this, literalNames, symbolicNames);\n\treturn serializer.toString();\n};\n\nDFA.prototype.toLexerString = function() {\n\tif (this.s0 === null) {\n\t\treturn \"\";\n\t}\n\tvar serializer = new LexerDFASerializer(this);\n\treturn serializer.toString();\n};\n\nexports.DFA = DFA;\n\n\n/***/ }),\n\n/***/ \"VS1O\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\n//  An ATN transition between any two ATN states.  Subclasses define\n//  atom, set, epsilon, action, predicate, rule transitions.\n//\n//  <p>This is a one way link.  It emanates from a state (usually via a list of\n//  transitions) and has a target state.</p>\n//\n//  <p>Since we never have to change the ATN transitions once we construct it,\n//  we can fix these transitions as specific classes. The DFA transitions\n//  on the other hand need to update the labels as it adds transitions to\n//  the states. We'll use the term Edge for the DFA to distinguish them from\n//  ATN transitions.</p>\n\nvar Token = __webpack_require__(\"j/5l\").Token;\nvar Interval = __webpack_require__(\"T+Yw\").Interval;\nvar IntervalSet = __webpack_require__(\"T+Yw\").IntervalSet;\nvar Predicate = __webpack_require__(\"wQJ6\").Predicate;\nvar PrecedencePredicate = __webpack_require__(\"wQJ6\").PrecedencePredicate;\n\nfunction Transition (target) {\n    // The target of this transition.\n    if (target===undefined || target===null) {\n        throw \"target cannot be null.\";\n    }\n    this.target = target;\n    // Are we epsilon, action, sempred?\n    this.isEpsilon = false;\n    this.label = null;\n    return this;\n}\n    // constants for serialization\nTransition.EPSILON = 1;\nTransition.RANGE = 2;\nTransition.RULE = 3;\nTransition.PREDICATE = 4; // e.g., {isType(input.LT(1))}?\nTransition.ATOM = 5;\nTransition.ACTION = 6;\nTransition.SET = 7; // ~(A|B) or ~atom, wildcard, which convert to next 2\nTransition.NOT_SET = 8;\nTransition.WILDCARD = 9;\nTransition.PRECEDENCE = 10;\n\nTransition.serializationNames = [\n            \"INVALID\",\n            \"EPSILON\",\n            \"RANGE\",\n            \"RULE\",\n            \"PREDICATE\",\n            \"ATOM\",\n            \"ACTION\",\n            \"SET\",\n            \"NOT_SET\",\n            \"WILDCARD\",\n            \"PRECEDENCE\"\n        ];\n\nTransition.serializationTypes = {\n        EpsilonTransition: Transition.EPSILON,\n        RangeTransition: Transition.RANGE,\n        RuleTransition: Transition.RULE,\n        PredicateTransition: Transition.PREDICATE,\n        AtomTransition: Transition.ATOM,\n        ActionTransition: Transition.ACTION,\n        SetTransition: Transition.SET,\n        NotSetTransition: Transition.NOT_SET,\n        WildcardTransition: Transition.WILDCARD,\n        PrecedencePredicateTransition: Transition.PRECEDENCE\n    };\n\n\n// TODO: make all transitions sets? no, should remove set edges\nfunction AtomTransition(target, label) {\n\tTransition.call(this, target);\n\tthis.label_ = label; // The token type or character value; or, signifies special label.\n    this.label = this.makeLabel();\n    this.serializationType = Transition.ATOM;\n    return this;\n}\n\nAtomTransition.prototype = Object.create(Transition.prototype);\nAtomTransition.prototype.constructor = AtomTransition;\n\nAtomTransition.prototype.makeLabel = function() {\n\tvar s = new IntervalSet();\n    s.addOne(this.label_);\n    return s;\n};\n\nAtomTransition.prototype.matches = function( symbol, minVocabSymbol,  maxVocabSymbol) {\n    return this.label_ === symbol;\n};\n\nAtomTransition.prototype.toString = function() {\n\treturn this.label_;\n};\n\nfunction RuleTransition(ruleStart, ruleIndex, precedence, followState) {\n\tTransition.call(this, ruleStart);\n    this.ruleIndex = ruleIndex; // ptr to the rule definition object for this rule ref\n    this.precedence = precedence;\n    this.followState = followState; // what node to begin computations following ref to rule\n    this.serializationType = Transition.RULE;\n    this.isEpsilon = true;\n    return this;\n}\n\nRuleTransition.prototype = Object.create(Transition.prototype);\nRuleTransition.prototype.constructor = RuleTransition;\n\nRuleTransition.prototype.matches = function(symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn false;\n};\n\n\nfunction EpsilonTransition(target, outermostPrecedenceReturn) {\n\tTransition.call(this, target);\n    this.serializationType = Transition.EPSILON;\n    this.isEpsilon = true;\n    this.outermostPrecedenceReturn = outermostPrecedenceReturn;\n    return this;\n}\n\nEpsilonTransition.prototype = Object.create(Transition.prototype);\nEpsilonTransition.prototype.constructor = EpsilonTransition;\n\nEpsilonTransition.prototype.matches = function( symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn false;\n};\n\nEpsilonTransition.prototype.toString = function() {\n\treturn \"epsilon\";\n};\n\nfunction RangeTransition(target, start, stop) {\n\tTransition.call(this, target);\n\tthis.serializationType = Transition.RANGE;\n    this.start = start;\n    this.stop = stop;\n    this.label = this.makeLabel();\n    return this;\n}\n\nRangeTransition.prototype = Object.create(Transition.prototype);\nRangeTransition.prototype.constructor = RangeTransition;\n\nRangeTransition.prototype.makeLabel = function() {\n    var s = new IntervalSet();\n    s.addRange(this.start, this.stop);\n    return s;\n};\n\nRangeTransition.prototype.matches = function(symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn symbol >= this.start && symbol <= this.stop;\n};\n\nRangeTransition.prototype.toString = function() {\n\treturn \"'\" + String.fromCharCode(this.start) + \"'..'\" + String.fromCharCode(this.stop) + \"'\";\n};\n\nfunction AbstractPredicateTransition(target) {\n\tTransition.call(this, target);\n\treturn this;\n}\n\nAbstractPredicateTransition.prototype = Object.create(Transition.prototype);\nAbstractPredicateTransition.prototype.constructor = AbstractPredicateTransition;\n\nfunction PredicateTransition(target, ruleIndex, predIndex, isCtxDependent) {\n\tAbstractPredicateTransition.call(this, target);\n    this.serializationType = Transition.PREDICATE;\n    this.ruleIndex = ruleIndex;\n    this.predIndex = predIndex;\n    this.isCtxDependent = isCtxDependent; // e.g., $i ref in pred\n    this.isEpsilon = true;\n    return this;\n}\n\nPredicateTransition.prototype = Object.create(AbstractPredicateTransition.prototype);\nPredicateTransition.prototype.constructor = PredicateTransition;\n\nPredicateTransition.prototype.matches = function(symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn false;\n};\n\nPredicateTransition.prototype.getPredicate = function() {\n\treturn new Predicate(this.ruleIndex, this.predIndex, this.isCtxDependent);\n};\n\nPredicateTransition.prototype.toString = function() {\n\treturn \"pred_\" + this.ruleIndex + \":\" + this.predIndex;\n};\n\nfunction ActionTransition(target, ruleIndex, actionIndex, isCtxDependent) {\n\tTransition.call(this, target);\n    this.serializationType = Transition.ACTION;\n    this.ruleIndex = ruleIndex;\n    this.actionIndex = actionIndex===undefined ? -1 : actionIndex;\n    this.isCtxDependent = isCtxDependent===undefined ? false : isCtxDependent; // e.g., $i ref in pred\n    this.isEpsilon = true;\n    return this;\n}\n\nActionTransition.prototype = Object.create(Transition.prototype);\nActionTransition.prototype.constructor = ActionTransition;\n\n\nActionTransition.prototype.matches = function(symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn false;\n};\n\nActionTransition.prototype.toString = function() {\n\treturn \"action_\" + this.ruleIndex + \":\" + this.actionIndex;\n};\n\n\n// A transition containing a set of values.\nfunction SetTransition(target, set) {\n\tTransition.call(this, target);\n\tthis.serializationType = Transition.SET;\n    if (set !==undefined && set !==null) {\n        this.label = set;\n    } else {\n        this.label = new IntervalSet();\n        this.label.addOne(Token.INVALID_TYPE);\n    }\n    return this;\n}\n\nSetTransition.prototype = Object.create(Transition.prototype);\nSetTransition.prototype.constructor = SetTransition;\n\nSetTransition.prototype.matches = function(symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn this.label.contains(symbol);\n};\n\n\nSetTransition.prototype.toString = function() {\n\treturn this.label.toString();\n};\n\nfunction NotSetTransition(target, set) {\n\tSetTransition.call(this, target, set);\n\tthis.serializationType = Transition.NOT_SET;\n\treturn this;\n}\n\nNotSetTransition.prototype = Object.create(SetTransition.prototype);\nNotSetTransition.prototype.constructor = NotSetTransition;\n\nNotSetTransition.prototype.matches = function(symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn symbol >= minVocabSymbol && symbol <= maxVocabSymbol &&\n\t\t\t!SetTransition.prototype.matches.call(this, symbol, minVocabSymbol, maxVocabSymbol);\n};\n\nNotSetTransition.prototype.toString = function() {\n\treturn '~' + SetTransition.prototype.toString.call(this);\n};\n\nfunction WildcardTransition(target) {\n\tTransition.call(this, target);\n\tthis.serializationType = Transition.WILDCARD;\n\treturn this;\n}\n\nWildcardTransition.prototype = Object.create(Transition.prototype);\nWildcardTransition.prototype.constructor = WildcardTransition;\n\n\nWildcardTransition.prototype.matches = function(symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn symbol >= minVocabSymbol && symbol <= maxVocabSymbol;\n};\n\nWildcardTransition.prototype.toString = function() {\n\treturn \".\";\n};\n\nfunction PrecedencePredicateTransition(target, precedence) {\n\tAbstractPredicateTransition.call(this, target);\n    this.serializationType = Transition.PRECEDENCE;\n    this.precedence = precedence;\n    this.isEpsilon = true;\n    return this;\n}\n\nPrecedencePredicateTransition.prototype = Object.create(AbstractPredicateTransition.prototype);\nPrecedencePredicateTransition.prototype.constructor = PrecedencePredicateTransition;\n\nPrecedencePredicateTransition.prototype.matches = function(symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn false;\n};\n\nPrecedencePredicateTransition.prototype.getPredicate = function() {\n\treturn new PrecedencePredicate(this.precedence);\n};\n\nPrecedencePredicateTransition.prototype.toString = function() {\n\treturn this.precedence + \" >= _p\";\n};\n\nexports.Transition = Transition;\nexports.AtomTransition = AtomTransition;\nexports.SetTransition = SetTransition;\nexports.NotSetTransition = NotSetTransition;\nexports.RuleTransition = RuleTransition;\nexports.ActionTransition = ActionTransition;\nexports.EpsilonTransition = EpsilonTransition;\nexports.RangeTransition = RangeTransition;\nexports.WildcardTransition = WildcardTransition;\nexports.PredicateTransition = PredicateTransition;\nexports.PrecedencePredicateTransition = PrecedencePredicateTransition;\nexports.AbstractPredicateTransition = AbstractPredicateTransition;\n\n/***/ }),\n\n/***/ \"VgzD\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nvar Token = __webpack_require__(\"j/5l\").Token;\nvar ParseTreeListener = __webpack_require__(\"VnEu\").ParseTreeListener;\nvar Recognizer = __webpack_require__(\"2EdO\").Recognizer;\nvar DefaultErrorStrategy = __webpack_require__(\"k1zP\").DefaultErrorStrategy;\nvar ATNDeserializer = __webpack_require__(\"3Rtt\").ATNDeserializer;\nvar ATNDeserializationOptions = __webpack_require__(\"hs4g\").ATNDeserializationOptions;\nvar TerminalNode = __webpack_require__(\"VnEu\").TerminalNode;\nvar ErrorNode = __webpack_require__(\"VnEu\").ErrorNode;\n\nfunction TraceListener(parser) {\n\tParseTreeListener.call(this);\n    this.parser = parser;\n\treturn this;\n}\n\nTraceListener.prototype = Object.create(ParseTreeListener.prototype);\nTraceListener.prototype.constructor = TraceListener;\n\nTraceListener.prototype.enterEveryRule = function(ctx) {\n\tconsole.log(\"enter   \" + this.parser.ruleNames[ctx.ruleIndex] + \", LT(1)=\" + this.parser._input.LT(1).text);\n};\n\nTraceListener.prototype.visitTerminal = function( node) {\n\tconsole.log(\"consume \" + node.symbol + \" rule \" + this.parser.ruleNames[this.parser._ctx.ruleIndex]);\n};\n\nTraceListener.prototype.exitEveryRule = function(ctx) {\n\tconsole.log(\"exit    \" + this.parser.ruleNames[ctx.ruleIndex] + \", LT(1)=\" + this.parser._input.LT(1).text);\n};\n\n// this is all the parsing support code essentially; most of it is error\n// recovery stuff.//\nfunction Parser(input) {\n\tRecognizer.call(this);\n\t// The input stream.\n\tthis._input = null;\n\t// The error handling strategy for the parser. The default value is a new\n\t// instance of {@link DefaultErrorStrategy}.\n\tthis._errHandler = new DefaultErrorStrategy();\n\tthis._precedenceStack = [];\n\tthis._precedenceStack.push(0);\n\t// The {@link ParserRuleContext} object for the currently executing rule.\n\t// this is always non-null during the parsing process.\n\tthis._ctx = null;\n\t// Specifies whether or not the parser should construct a parse tree during\n\t// the parsing process. The default value is {@code true}.\n\tthis.buildParseTrees = true;\n\t// When {@link //setTrace}{@code (true)} is called, a reference to the\n\t// {@link TraceListener} is stored here so it can be easily removed in a\n\t// later call to {@link //setTrace}{@code (false)}. The listener itself is\n\t// implemented as a parser listener so this field is not directly used by\n\t// other parser methods.\n\tthis._tracer = null;\n\t// The list of {@link ParseTreeListener} listeners registered to receive\n\t// events during the parse.\n\tthis._parseListeners = null;\n\t// The number of syntax errors reported during parsing. this value is\n\t// incremented each time {@link //notifyErrorListeners} is called.\n\tthis._syntaxErrors = 0;\n\tthis.setInputStream(input);\n\treturn this;\n}\n\nParser.prototype = Object.create(Recognizer.prototype);\nParser.prototype.contructor = Parser;\n\n// this field maps from the serialized ATN string to the deserialized {@link\n// ATN} with\n// bypass alternatives.\n//\n// @see ATNDeserializationOptions//isGenerateRuleBypassTransitions()\n//\nParser.bypassAltsAtnCache = {};\n\n// reset the parser's state//\nParser.prototype.reset = function() {\n\tif (this._input !== null) {\n\t\tthis._input.seek(0);\n\t}\n\tthis._errHandler.reset(this);\n\tthis._ctx = null;\n\tthis._syntaxErrors = 0;\n\tthis.setTrace(false);\n\tthis._precedenceStack = [];\n\tthis._precedenceStack.push(0);\n\tif (this._interp !== null) {\n\t\tthis._interp.reset();\n\t}\n};\n\n// Match current input symbol against {@code ttype}. If the symbol type\n// matches, {@link ANTLRErrorStrategy//reportMatch} and {@link //consume} are\n// called to complete the match process.\n//\n// <p>If the symbol type does not match,\n// {@link ANTLRErrorStrategy//recoverInline} is called on the current error\n// strategy to attempt recovery. If {@link //getBuildParseTree} is\n// {@code true} and the token index of the symbol returned by\n// {@link ANTLRErrorStrategy//recoverInline} is -1, the symbol is added to\n// the parse tree by calling {@link ParserRuleContext//addErrorNode}.</p>\n//\n// @param ttype the token type to match\n// @return the matched symbol\n// @throws RecognitionException if the current input symbol did not match\n// {@code ttype} and the error strategy could not recover from the\n// mismatched symbol\n\nParser.prototype.match = function(ttype) {\n\tvar t = this.getCurrentToken();\n\tif (t.type === ttype) {\n\t\tthis._errHandler.reportMatch(this);\n\t\tthis.consume();\n\t} else {\n\t\tt = this._errHandler.recoverInline(this);\n\t\tif (this.buildParseTrees && t.tokenIndex === -1) {\n\t\t\t// we must have conjured up a new token during single token\n\t\t\t// insertion\n\t\t\t// if it's not the current symbol\n\t\t\tthis._ctx.addErrorNode(t);\n\t\t}\n\t}\n\treturn t;\n};\n// Match current input symbol as a wildcard. If the symbol type matches\n// (i.e. has a value greater than 0), {@link ANTLRErrorStrategy//reportMatch}\n// and {@link //consume} are called to complete the match process.\n//\n// <p>If the symbol type does not match,\n// {@link ANTLRErrorStrategy//recoverInline} is called on the current error\n// strategy to attempt recovery. If {@link //getBuildParseTree} is\n// {@code true} and the token index of the symbol returned by\n// {@link ANTLRErrorStrategy//recoverInline} is -1, the symbol is added to\n// the parse tree by calling {@link ParserRuleContext//addErrorNode}.</p>\n//\n// @return the matched symbol\n// @throws RecognitionException if the current input symbol did not match\n// a wildcard and the error strategy could not recover from the mismatched\n// symbol\n\nParser.prototype.matchWildcard = function() {\n\tvar t = this.getCurrentToken();\n\tif (t.type > 0) {\n\t\tthis._errHandler.reportMatch(this);\n\t\tthis.consume();\n\t} else {\n\t\tt = this._errHandler.recoverInline(this);\n\t\tif (this._buildParseTrees && t.tokenIndex === -1) {\n\t\t\t// we must have conjured up a new token during single token\n\t\t\t// insertion\n\t\t\t// if it's not the current symbol\n\t\t\tthis._ctx.addErrorNode(t);\n\t\t}\n\t}\n\treturn t;\n};\n\nParser.prototype.getParseListeners = function() {\n\treturn this._parseListeners || [];\n};\n\n// Registers {@code listener} to receive events during the parsing process.\n//\n// <p>To support output-preserving grammar transformations (including but not\n// limited to left-recursion removal, automated left-factoring, and\n// optimized code generation), calls to listener methods during the parse\n// may differ substantially from calls made by\n// {@link ParseTreeWalker//DEFAULT} used after the parse is complete. In\n// particular, rule entry and exit events may occur in a different order\n// during the parse than after the parser. In addition, calls to certain\n// rule entry methods may be omitted.</p>\n//\n// <p>With the following specific exceptions, calls to listener events are\n// <em>deterministic</em>, i.e. for identical input the calls to listener\n// methods will be the same.</p>\n//\n// <ul>\n// <li>Alterations to the grammar used to generate code may change the\n// behavior of the listener calls.</li>\n// <li>Alterations to the command line options passed to ANTLR 4 when\n// generating the parser may change the behavior of the listener calls.</li>\n// <li>Changing the version of the ANTLR Tool used to generate the parser\n// may change the behavior of the listener calls.</li>\n// </ul>\n//\n// @param listener the listener to add\n//\n// @throws NullPointerException if {@code} listener is {@code null}\n//\nParser.prototype.addParseListener = function(listener) {\n\tif (listener === null) {\n\t\tthrow \"listener\";\n\t}\n\tif (this._parseListeners === null) {\n\t\tthis._parseListeners = [];\n\t}\n\tthis._parseListeners.push(listener);\n};\n\n//\n// Remove {@code listener} from the list of parse listeners.\n//\n// <p>If {@code listener} is {@code null} or has not been added as a parse\n// listener, this method does nothing.</p>\n// @param listener the listener to remove\n//\nParser.prototype.removeParseListener = function(listener) {\n\tif (this._parseListeners !== null) {\n\t\tvar idx = this._parseListeners.indexOf(listener);\n\t\tif (idx >= 0) {\n\t\t\tthis._parseListeners.splice(idx, 1);\n\t\t}\n\t\tif (this._parseListeners.length === 0) {\n\t\t\tthis._parseListeners = null;\n\t\t}\n\t}\n};\n\n// Remove all parse listeners.\nParser.prototype.removeParseListeners = function() {\n\tthis._parseListeners = null;\n};\n\n// Notify any parse listeners of an enter rule event.\nParser.prototype.triggerEnterRuleEvent = function() {\n\tif (this._parseListeners !== null) {\n        var ctx = this._ctx;\n\t\tthis._parseListeners.map(function(listener) {\n\t\t\tlistener.enterEveryRule(ctx);\n\t\t\tctx.enterRule(listener);\n\t\t});\n\t}\n};\n\n//\n// Notify any parse listeners of an exit rule event.\n//\n// @see //addParseListener\n//\nParser.prototype.triggerExitRuleEvent = function() {\n\tif (this._parseListeners !== null) {\n\t\t// reverse order walk of listeners\n        var ctx = this._ctx;\n\t\tthis._parseListeners.slice(0).reverse().map(function(listener) {\n\t\t\tctx.exitRule(listener);\n\t\t\tlistener.exitEveryRule(ctx);\n\t\t});\n\t}\n};\n\nParser.prototype.getTokenFactory = function() {\n\treturn this._input.tokenSource._factory;\n};\n\n// Tell our token source and error strategy about a new way to create tokens.//\nParser.prototype.setTokenFactory = function(factory) {\n\tthis._input.tokenSource._factory = factory;\n};\n\n// The ATN with bypass alternatives is expensive to create so we create it\n// lazily.\n//\n// @throws UnsupportedOperationException if the current parser does not\n// implement the {@link //getSerializedATN()} method.\n//\nParser.prototype.getATNWithBypassAlts = function() {\n\tvar serializedAtn = this.getSerializedATN();\n\tif (serializedAtn === null) {\n\t\tthrow \"The current parser does not support an ATN with bypass alternatives.\";\n\t}\n\tvar result = this.bypassAltsAtnCache[serializedAtn];\n\tif (result === null) {\n\t\tvar deserializationOptions = new ATNDeserializationOptions();\n\t\tdeserializationOptions.generateRuleBypassTransitions = true;\n\t\tresult = new ATNDeserializer(deserializationOptions)\n\t\t\t\t.deserialize(serializedAtn);\n\t\tthis.bypassAltsAtnCache[serializedAtn] = result;\n\t}\n\treturn result;\n};\n\n// The preferred method of getting a tree pattern. For example, here's a\n// sample use:\n//\n// <pre>\n// ParseTree t = parser.expr();\n// ParseTreePattern p = parser.compileParseTreePattern(\"&lt;ID&gt;+0\",\n// MyParser.RULE_expr);\n// ParseTreeMatch m = p.match(t);\n// String id = m.get(\"ID\");\n// </pre>\n\nvar Lexer = __webpack_require__(\"h0lj\").Lexer;\n\nParser.prototype.compileParseTreePattern = function(pattern, patternRuleIndex, lexer) {\n\tlexer = lexer || null;\n\tif (lexer === null) {\n\t\tif (this.getTokenStream() !== null) {\n\t\t\tvar tokenSource = this.getTokenStream().tokenSource;\n\t\t\tif (tokenSource instanceof Lexer) {\n\t\t\t\tlexer = tokenSource;\n\t\t\t}\n\t\t}\n\t}\n\tif (lexer === null) {\n\t\tthrow \"Parser can't discover a lexer to use\";\n\t}\n\tvar m = new ParseTreePatternMatcher(lexer, this);\n\treturn m.compile(pattern, patternRuleIndex);\n};\n\nParser.prototype.getInputStream = function() {\n\treturn this.getTokenStream();\n};\n\nParser.prototype.setInputStream = function(input) {\n\tthis.setTokenStream(input);\n};\n\nParser.prototype.getTokenStream = function() {\n\treturn this._input;\n};\n\n// Set the token stream and reset the parser.//\nParser.prototype.setTokenStream = function(input) {\n\tthis._input = null;\n\tthis.reset();\n\tthis._input = input;\n};\n\n// Match needs to return the current input symbol, which gets put\n// into the label for the associated token ref; e.g., x=ID.\n//\nParser.prototype.getCurrentToken = function() {\n\treturn this._input.LT(1);\n};\n\nParser.prototype.notifyErrorListeners = function(msg, offendingToken, err) {\n\toffendingToken = offendingToken || null;\n\terr = err || null;\n\tif (offendingToken === null) {\n\t\toffendingToken = this.getCurrentToken();\n\t}\n\tthis._syntaxErrors += 1;\n\tvar line = offendingToken.line;\n\tvar column = offendingToken.column;\n\tvar listener = this.getErrorListenerDispatch();\n\tlistener.syntaxError(this, offendingToken, line, column, msg, err);\n};\n\n//\n// Consume and return the {@linkplain //getCurrentToken current symbol}.\n//\n// <p>E.g., given the following input with {@code A} being the current\n// lookahead symbol, this function moves the cursor to {@code B} and returns\n// {@code A}.</p>\n//\n// <pre>\n// A B\n// ^\n// </pre>\n//\n// If the parser is not in error recovery mode, the consumed symbol is added\n// to the parse tree using {@link ParserRuleContext//addChild(Token)}, and\n// {@link ParseTreeListener//visitTerminal} is called on any parse listeners.\n// If the parser <em>is</em> in error recovery mode, the consumed symbol is\n// added to the parse tree using\n// {@link ParserRuleContext//addErrorNode(Token)}, and\n// {@link ParseTreeListener//visitErrorNode} is called on any parse\n// listeners.\n//\nParser.prototype.consume = function() {\n\tvar o = this.getCurrentToken();\n\tif (o.type !== Token.EOF) {\n\t\tthis.getInputStream().consume();\n\t}\n\tvar hasListener = this._parseListeners !== null && this._parseListeners.length > 0;\n\tif (this.buildParseTrees || hasListener) {\n\t\tvar node;\n\t\tif (this._errHandler.inErrorRecoveryMode(this)) {\n\t\t\tnode = this._ctx.addErrorNode(o);\n\t\t} else {\n\t\t\tnode = this._ctx.addTokenNode(o);\n\t\t}\n        node.invokingState = this.state;\n\t\tif (hasListener) {\n\t\t\tthis._parseListeners.map(function(listener) {\n\t\t\t\tif (node instanceof ErrorNode || (node.isErrorNode !== undefined && node.isErrorNode())) {\n\t\t\t\t\tlistener.visitErrorNode(node);\n\t\t\t\t} else if (node instanceof TerminalNode) {\n\t\t\t\t\tlistener.visitTerminal(node);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\treturn o;\n};\n\nParser.prototype.addContextToParseTree = function() {\n\t// add current context to parent if we have a parent\n\tif (this._ctx.parentCtx !== null) {\n\t\tthis._ctx.parentCtx.addChild(this._ctx);\n\t}\n};\n\n// Always called by generated parsers upon entry to a rule. Access field\n// {@link //_ctx} get the current context.\n\nParser.prototype.enterRule = function(localctx, state, ruleIndex) {\n\tthis.state = state;\n\tthis._ctx = localctx;\n\tthis._ctx.start = this._input.LT(1);\n\tif (this.buildParseTrees) {\n\t\tthis.addContextToParseTree();\n\t}\n\tif (this._parseListeners !== null) {\n\t\tthis.triggerEnterRuleEvent();\n\t}\n};\n\nParser.prototype.exitRule = function() {\n\tthis._ctx.stop = this._input.LT(-1);\n\t// trigger event on _ctx, before it reverts to parent\n\tif (this._parseListeners !== null) {\n\t\tthis.triggerExitRuleEvent();\n\t}\n\tthis.state = this._ctx.invokingState;\n\tthis._ctx = this._ctx.parentCtx;\n};\n\nParser.prototype.enterOuterAlt = function(localctx, altNum) {\n   \tlocalctx.setAltNumber(altNum);\n\t// if we have new localctx, make sure we replace existing ctx\n\t// that is previous child of parse tree\n\tif (this.buildParseTrees && this._ctx !== localctx) {\n\t\tif (this._ctx.parentCtx !== null) {\n\t\t\tthis._ctx.parentCtx.removeLastChild();\n\t\t\tthis._ctx.parentCtx.addChild(localctx);\n\t\t}\n\t}\n\tthis._ctx = localctx;\n};\n\n// Get the precedence level for the top-most precedence rule.\n//\n// @return The precedence level for the top-most precedence rule, or -1 if\n// the parser context is not nested within a precedence rule.\n\nParser.prototype.getPrecedence = function() {\n\tif (this._precedenceStack.length === 0) {\n\t\treturn -1;\n\t} else {\n\t\treturn this._precedenceStack[this._precedenceStack.length-1];\n\t}\n};\n\nParser.prototype.enterRecursionRule = function(localctx, state, ruleIndex,\n\t\tprecedence) {\n\tthis.state = state;\n\tthis._precedenceStack.push(precedence);\n\tthis._ctx = localctx;\n\tthis._ctx.start = this._input.LT(1);\n\tif (this._parseListeners !== null) {\n\t\tthis.triggerEnterRuleEvent(); // simulates rule entry for\n\t\t\t\t\t\t\t\t\t\t// left-recursive rules\n\t}\n};\n\n//\n// Like {@link //enterRule} but for recursive rules.\n\nParser.prototype.pushNewRecursionContext = function(localctx, state, ruleIndex) {\n\tvar previous = this._ctx;\n\tprevious.parentCtx = localctx;\n\tprevious.invokingState = state;\n\tprevious.stop = this._input.LT(-1);\n\n\tthis._ctx = localctx;\n\tthis._ctx.start = previous.start;\n\tif (this.buildParseTrees) {\n\t\tthis._ctx.addChild(previous);\n\t}\n\tif (this._parseListeners !== null) {\n\t\tthis.triggerEnterRuleEvent(); // simulates rule entry for\n\t\t\t\t\t\t\t\t\t\t// left-recursive rules\n\t}\n};\n\nParser.prototype.unrollRecursionContexts = function(parentCtx) {\n\tthis._precedenceStack.pop();\n\tthis._ctx.stop = this._input.LT(-1);\n\tvar retCtx = this._ctx; // save current ctx (return value)\n\t// unroll so _ctx is as it was before call to recursive method\n\tif (this._parseListeners !== null) {\n\t\twhile (this._ctx !== parentCtx) {\n\t\t\tthis.triggerExitRuleEvent();\n\t\t\tthis._ctx = this._ctx.parentCtx;\n\t\t}\n\t} else {\n\t\tthis._ctx = parentCtx;\n\t}\n\t// hook into tree\n\tretCtx.parentCtx = parentCtx;\n\tif (this.buildParseTrees && parentCtx !== null) {\n\t\t// add return ctx into invoking rule's tree\n\t\tparentCtx.addChild(retCtx);\n\t}\n};\n\nParser.prototype.getInvokingContext = function(ruleIndex) {\n\tvar ctx = this._ctx;\n\twhile (ctx !== null) {\n\t\tif (ctx.ruleIndex === ruleIndex) {\n\t\t\treturn ctx;\n\t\t}\n\t\tctx = ctx.parentCtx;\n\t}\n\treturn null;\n};\n\nParser.prototype.precpred = function(localctx, precedence) {\n\treturn precedence >= this._precedenceStack[this._precedenceStack.length-1];\n};\n\nParser.prototype.inContext = function(context) {\n\t// TODO: useful in parser?\n\treturn false;\n};\n\n//\n// Checks whether or not {@code symbol} can follow the current state in the\n// ATN. The behavior of this method is equivalent to the following, but is\n// implemented such that the complete context-sensitive follow set does not\n// need to be explicitly constructed.\n//\n// <pre>\n// return getExpectedTokens().contains(symbol);\n// </pre>\n//\n// @param symbol the symbol type to check\n// @return {@code true} if {@code symbol} can follow the current state in\n// the ATN, otherwise {@code false}.\n\nParser.prototype.isExpectedToken = function(symbol) {\n\tvar atn = this._interp.atn;\n\tvar ctx = this._ctx;\n\tvar s = atn.states[this.state];\n\tvar following = atn.nextTokens(s);\n\tif (following.contains(symbol)) {\n\t\treturn true;\n\t}\n\tif (!following.contains(Token.EPSILON)) {\n\t\treturn false;\n\t}\n\twhile (ctx !== null && ctx.invokingState >= 0 && following.contains(Token.EPSILON)) {\n\t\tvar invokingState = atn.states[ctx.invokingState];\n\t\tvar rt = invokingState.transitions[0];\n\t\tfollowing = atn.nextTokens(rt.followState);\n\t\tif (following.contains(symbol)) {\n\t\t\treturn true;\n\t\t}\n\t\tctx = ctx.parentCtx;\n\t}\n\tif (following.contains(Token.EPSILON) && symbol === Token.EOF) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\n\n// Computes the set of input symbols which could follow the current parser\n// state and context, as given by {@link //getState} and {@link //getContext},\n// respectively.\n//\n// @see ATN//getExpectedTokens(int, RuleContext)\n//\nParser.prototype.getExpectedTokens = function() {\n\treturn this._interp.atn.getExpectedTokens(this.state, this._ctx);\n};\n\nParser.prototype.getExpectedTokensWithinCurrentRule = function() {\n\tvar atn = this._interp.atn;\n\tvar s = atn.states[this.state];\n\treturn atn.nextTokens(s);\n};\n\n// Get a rule's index (i.e., {@code RULE_ruleName} field) or -1 if not found.//\nParser.prototype.getRuleIndex = function(ruleName) {\n\tvar ruleIndex = this.getRuleIndexMap()[ruleName];\n\tif (ruleIndex !== null) {\n\t\treturn ruleIndex;\n\t} else {\n\t\treturn -1;\n\t}\n};\n\n// Return List&lt;String&gt; of the rule names in your parser instance\n// leading up to a call to the current rule. You could override if\n// you want more details such as the file/line info of where\n// in the ATN a rule is invoked.\n//\n// this is very useful for error messages.\n//\nParser.prototype.getRuleInvocationStack = function(p) {\n\tp = p || null;\n\tif (p === null) {\n\t\tp = this._ctx;\n\t}\n\tvar stack = [];\n\twhile (p !== null) {\n\t\t// compute what follows who invoked us\n\t\tvar ruleIndex = p.ruleIndex;\n\t\tif (ruleIndex < 0) {\n\t\t\tstack.push(\"n/a\");\n\t\t} else {\n\t\t\tstack.push(this.ruleNames[ruleIndex]);\n\t\t}\n\t\tp = p.parentCtx;\n\t}\n\treturn stack;\n};\n\n// For debugging and other purposes.//\nParser.prototype.getDFAStrings = function() {\n\treturn this._interp.decisionToDFA.toString();\n};\n// For debugging and other purposes.//\nParser.prototype.dumpDFA = function() {\n\tvar seenOne = false;\n\tfor (var i = 0; i < this._interp.decisionToDFA.length; i++) {\n\t\tvar dfa = this._interp.decisionToDFA[i];\n\t\tif (dfa.states.length > 0) {\n\t\t\tif (seenOne) {\n\t\t\t\tconsole.log();\n\t\t\t}\n\t\t\tthis.printer.println(\"Decision \" + dfa.decision + \":\");\n\t\t\tthis.printer.print(dfa.toString(this.literalNames, this.symbolicNames));\n\t\t\tseenOne = true;\n\t\t}\n\t}\n};\n\n/*\n\"\t\t\tprinter = function() {\\r\\n\" +\n\"\t\t\t\tthis.println = function(s) { document.getElementById('output') += s + '\\\\n'; }\\r\\n\" +\n\"\t\t\t\tthis.print = function(s) { document.getElementById('output') += s; }\\r\\n\" +\n\"\t\t\t};\\r\\n\" +\n*/\n\nParser.prototype.getSourceName = function() {\n\treturn this._input.sourceName;\n};\n\n// During a parse is sometimes useful to listen in on the rule entry and exit\n// events as well as token matches. this is for quick and dirty debugging.\n//\nParser.prototype.setTrace = function(trace) {\n\tif (!trace) {\n\t\tthis.removeParseListener(this._tracer);\n\t\tthis._tracer = null;\n\t} else {\n\t\tif (this._tracer !== null) {\n\t\t\tthis.removeParseListener(this._tracer);\n\t\t}\n\t\tthis._tracer = new TraceListener(this);\n\t\tthis.addParseListener(this._tracer);\n\t}\n};\n\nexports.Parser = Parser;\n\n/***/ }),\n\n/***/ \"VnEu\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\n// The basic notion of a tree has a parent, a payload, and a list of children.\n//  It is the most abstract interface for all the trees used by ANTLR.\n///\n\nvar Token = __webpack_require__(\"j/5l\").Token;\nvar Interval = __webpack_require__(\"T+Yw\").Interval;\nvar INVALID_INTERVAL = new Interval(-1, -2);\nvar Utils = __webpack_require__(\"bz+k\");\n\n\nfunction Tree() {\n\treturn this;\n}\n\nfunction SyntaxTree() {\n\tTree.call(this);\n\treturn this;\n}\n\nSyntaxTree.prototype = Object.create(Tree.prototype);\nSyntaxTree.prototype.constructor = SyntaxTree;\n\nfunction ParseTree() {\n\tSyntaxTree.call(this);\n\treturn this;\n}\n\nParseTree.prototype = Object.create(SyntaxTree.prototype);\nParseTree.prototype.constructor = ParseTree;\n\nfunction RuleNode() {\n\tParseTree.call(this);\n\treturn this;\n}\n\nRuleNode.prototype = Object.create(ParseTree.prototype);\nRuleNode.prototype.constructor = RuleNode;\n\nfunction TerminalNode() {\n\tParseTree.call(this);\n\treturn this;\n}\n\nTerminalNode.prototype = Object.create(ParseTree.prototype);\nTerminalNode.prototype.constructor = TerminalNode;\n\nfunction ErrorNode() {\n\tTerminalNode.call(this);\n\treturn this;\n}\n\nErrorNode.prototype = Object.create(TerminalNode.prototype);\nErrorNode.prototype.constructor = ErrorNode;\n\nfunction ParseTreeVisitor() {\n\treturn this;\n}\n\nParseTreeVisitor.prototype.visit = function(ctx) {\n \tif (Array.isArray(ctx)) {\n\t\treturn ctx.map(function(child) {\n            return child.accept(this);\n        }, this);\n\t} else {\n\t\treturn ctx.accept(this);\n\t}\n};\n\nParseTreeVisitor.prototype.visitChildren = function(ctx) {\n  return this.visit(ctx.children);\n}\n\nParseTreeVisitor.prototype.visitTerminal = function(node) {\n};\n\nParseTreeVisitor.prototype.visitErrorNode = function(node) {\n};\n\n\nfunction ParseTreeListener() {\n\treturn this;\n}\n\nParseTreeListener.prototype.visitTerminal = function(node) {\n};\n\nParseTreeListener.prototype.visitErrorNode = function(node) {\n};\n\nParseTreeListener.prototype.enterEveryRule = function(node) {\n};\n\nParseTreeListener.prototype.exitEveryRule = function(node) {\n};\n\nfunction TerminalNodeImpl(symbol) {\n\tTerminalNode.call(this);\n\tthis.parentCtx = null;\n\tthis.symbol = symbol;\n\treturn this;\n}\n\nTerminalNodeImpl.prototype = Object.create(TerminalNode.prototype);\nTerminalNodeImpl.prototype.constructor = TerminalNodeImpl;\n\nTerminalNodeImpl.prototype.getChild = function(i) {\n\treturn null;\n};\n\nTerminalNodeImpl.prototype.getSymbol = function() {\n\treturn this.symbol;\n};\n\nTerminalNodeImpl.prototype.getParent = function() {\n\treturn this.parentCtx;\n};\n\nTerminalNodeImpl.prototype.getPayload = function() {\n\treturn this.symbol;\n};\n\nTerminalNodeImpl.prototype.getSourceInterval = function() {\n\tif (this.symbol === null) {\n\t\treturn INVALID_INTERVAL;\n\t}\n\tvar tokenIndex = this.symbol.tokenIndex;\n\treturn new Interval(tokenIndex, tokenIndex);\n};\n\nTerminalNodeImpl.prototype.getChildCount = function() {\n\treturn 0;\n};\n\nTerminalNodeImpl.prototype.accept = function(visitor) {\n\treturn visitor.visitTerminal(this);\n};\n\nTerminalNodeImpl.prototype.getText = function() {\n\treturn this.symbol.text;\n};\n\nTerminalNodeImpl.prototype.toString = function() {\n\tif (this.symbol.type === Token.EOF) {\n\t\treturn \"<EOF>\";\n\t} else {\n\t\treturn this.symbol.text;\n\t}\n};\n\n// Represents a token that was consumed during resynchronization\n// rather than during a valid match operation. For example,\n// we will create this kind of a node during single token insertion\n// and deletion as well as during \"consume until error recovery set\"\n// upon no viable alternative exceptions.\n\nfunction ErrorNodeImpl(token) {\n\tTerminalNodeImpl.call(this, token);\n\treturn this;\n}\n\nErrorNodeImpl.prototype = Object.create(TerminalNodeImpl.prototype);\nErrorNodeImpl.prototype.constructor = ErrorNodeImpl;\n\nErrorNodeImpl.prototype.isErrorNode = function() {\n\treturn true;\n};\n\nErrorNodeImpl.prototype.accept = function(visitor) {\n\treturn visitor.visitErrorNode(this);\n};\n\nfunction ParseTreeWalker() {\n\treturn this;\n}\n\nParseTreeWalker.prototype.walk = function(listener, t) {\n\tvar errorNode = t instanceof ErrorNode ||\n\t\t\t(t.isErrorNode !== undefined && t.isErrorNode());\n\tif (errorNode) {\n\t\tlistener.visitErrorNode(t);\n\t} else if (t instanceof TerminalNode) {\n\t\tlistener.visitTerminal(t);\n\t} else {\n\t\tthis.enterRule(listener, t);\n\t\tfor (var i = 0; i < t.getChildCount(); i++) {\n\t\t\tvar child = t.getChild(i);\n\t\t\tthis.walk(listener, child);\n\t\t}\n\t\tthis.exitRule(listener, t);\n\t}\n};\n//\n// The discovery of a rule node, involves sending two events: the generic\n// {@link ParseTreeListener//enterEveryRule} and a\n// {@link RuleContext}-specific event. First we trigger the generic and then\n// the rule specific. We to them in reverse order upon finishing the node.\n//\nParseTreeWalker.prototype.enterRule = function(listener, r) {\n\tvar ctx = r.getRuleContext();\n\tlistener.enterEveryRule(ctx);\n\tctx.enterRule(listener);\n};\n\nParseTreeWalker.prototype.exitRule = function(listener, r) {\n\tvar ctx = r.getRuleContext();\n\tctx.exitRule(listener);\n\tlistener.exitEveryRule(ctx);\n};\n\nParseTreeWalker.DEFAULT = new ParseTreeWalker();\n\nexports.RuleNode = RuleNode;\nexports.ErrorNode = ErrorNode;\nexports.TerminalNode = TerminalNode;\nexports.ErrorNodeImpl = ErrorNodeImpl;\nexports.TerminalNodeImpl = TerminalNodeImpl;\nexports.ParseTreeListener = ParseTreeListener;\nexports.ParseTreeVisitor = ParseTreeVisitor;\nexports.ParseTreeWalker = ParseTreeWalker;\nexports.INVALID_INTERVAL = INVALID_INTERVAL;\n\n\n/***/ }),\n\n/***/ \"W6Ef\":\n/***/ (function(module, exports) {\n\nfunction Extend(that) {\r\n  that.syntaxError = function(recognizer, offendingSymbol, line, column, msg, e) {\r\n    this.errorMsg = msg;\r\n  };\r\n}\r\nmodule.exports = Extend;\r\n\n\n/***/ }),\n\n/***/ \"WcIR\":\n/***/ (function(module, exports, __webpack_require__) {\n\n//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\n// When we hit an accept state in either the DFA or the ATN, we\n//  have to notify the character stream to start buffering characters\n//  via {@link IntStream//mark} and record the current state. The current sim state\n//  includes the current index into the input, the current line,\n//  and current character position in that line. Note that the Lexer is\n//  tracking the starting line and characterization of the token. These\n//  variables track the \"state\" of the simulator when it hits an accept state.\n//\n//  <p>We track these variables separately for the DFA and ATN simulation\n//  because the DFA simulation often has to fail over to the ATN\n//  simulation. If the ATN simulation fails, we need the DFA to fall\n//  back to its previously accepted state, if any. If the ATN succeeds,\n//  then the ATN does the accept and the DFA simulator that invoked it\n//  can simply return the predicted token type.</p>\n///\n\nvar Token = __webpack_require__(\"j/5l\").Token;\nvar Lexer = __webpack_require__(\"h0lj\").Lexer;\nvar ATN = __webpack_require__(\"7y1Z\").ATN;\nvar ATNSimulator = __webpack_require__(\"bcvg\").ATNSimulator;\nvar DFAState = __webpack_require__(\"IUCG\").DFAState;\nvar ATNConfigSet = __webpack_require__(\"wMEt\").ATNConfigSet;\nvar OrderedATNConfigSet = __webpack_require__(\"wMEt\").OrderedATNConfigSet;\nvar PredictionContext = __webpack_require__(\"YFoD\").PredictionContext;\nvar SingletonPredictionContext = __webpack_require__(\"YFoD\").SingletonPredictionContext;\nvar RuleStopState = __webpack_require__(\"j0Qz\").RuleStopState;\nvar LexerATNConfig = __webpack_require__(\"yEAX\").LexerATNConfig;\nvar Transition = __webpack_require__(\"VS1O\").Transition;\nvar LexerActionExecutor = __webpack_require__(\"/Z+8\").LexerActionExecutor;\nvar LexerNoViableAltException = __webpack_require__(\"5d5Q\").LexerNoViableAltException;\n\nfunction resetSimState(sim) {\n\tsim.index = -1;\n\tsim.line = 0;\n\tsim.column = -1;\n\tsim.dfaState = null;\n}\n\nfunction SimState() {\n\tresetSimState(this);\n\treturn this;\n}\n\nSimState.prototype.reset = function() {\n\tresetSimState(this);\n};\n\nfunction LexerATNSimulator(recog, atn, decisionToDFA, sharedContextCache) {\n\tATNSimulator.call(this, atn, sharedContextCache);\n\tthis.decisionToDFA = decisionToDFA;\n\tthis.recog = recog;\n\t// The current token's starting index into the character stream.\n\t// Shared across DFA to ATN simulation in case the ATN fails and the\n\t// DFA did not have a previous accept state. In this case, we use the\n\t// ATN-generated exception object.\n\tthis.startIndex = -1;\n\t// line number 1..n within the input///\n\tthis.line = 1;\n\t// The index of the character relative to the beginning of the line\n\t// 0..n-1///\n\tthis.column = 0;\n\tthis.mode = Lexer.DEFAULT_MODE;\n\t// Used during DFA/ATN exec to record the most recent accept configuration\n\t// info\n\tthis.prevAccept = new SimState();\n\t// done\n\treturn this;\n}\n\nLexerATNSimulator.prototype = Object.create(ATNSimulator.prototype);\nLexerATNSimulator.prototype.constructor = LexerATNSimulator;\n\nLexerATNSimulator.debug = false;\nLexerATNSimulator.dfa_debug = false;\n\nLexerATNSimulator.MIN_DFA_EDGE = 0;\nLexerATNSimulator.MAX_DFA_EDGE = 127; // forces unicode to stay in ATN\n\nLexerATNSimulator.match_calls = 0;\n\nLexerATNSimulator.prototype.copyState = function(simulator) {\n\tthis.column = simulator.column;\n\tthis.line = simulator.line;\n\tthis.mode = simulator.mode;\n\tthis.startIndex = simulator.startIndex;\n};\n\nLexerATNSimulator.prototype.match = function(input, mode) {\n\tthis.match_calls += 1;\n\tthis.mode = mode;\n\tvar mark = input.mark();\n\ttry {\n\t\tthis.startIndex = input.index;\n\t\tthis.prevAccept.reset();\n\t\tvar dfa = this.decisionToDFA[mode];\n\t\tif (dfa.s0 === null) {\n\t\t\treturn this.matchATN(input);\n\t\t} else {\n\t\t\treturn this.execATN(input, dfa.s0);\n\t\t}\n\t} finally {\n\t\tinput.release(mark);\n\t}\n};\n\nLexerATNSimulator.prototype.reset = function() {\n\tthis.prevAccept.reset();\n\tthis.startIndex = -1;\n\tthis.line = 1;\n\tthis.column = 0;\n\tthis.mode = Lexer.DEFAULT_MODE;\n};\n\nLexerATNSimulator.prototype.matchATN = function(input) {\n\tvar startState = this.atn.modeToStartState[this.mode];\n\n\tif (LexerATNSimulator.debug) {\n\t\tconsole.log(\"matchATN mode \" + this.mode + \" start: \" + startState);\n\t}\n\tvar old_mode = this.mode;\n\tvar s0_closure = this.computeStartState(input, startState);\n\tvar suppressEdge = s0_closure.hasSemanticContext;\n\ts0_closure.hasSemanticContext = false;\n\n\tvar next = this.addDFAState(s0_closure);\n\tif (!suppressEdge) {\n\t\tthis.decisionToDFA[this.mode].s0 = next;\n\t}\n\n\tvar predict = this.execATN(input, next);\n\n\tif (LexerATNSimulator.debug) {\n\t\tconsole.log(\"DFA after matchATN: \" + this.decisionToDFA[old_mode].toLexerString());\n\t}\n\treturn predict;\n};\n\nLexerATNSimulator.prototype.execATN = function(input, ds0) {\n\tif (LexerATNSimulator.debug) {\n\t\tconsole.log(\"start state closure=\" + ds0.configs);\n\t}\n\tif (ds0.isAcceptState) {\n\t\t// allow zero-length tokens\n\t\tthis.captureSimState(this.prevAccept, input, ds0);\n\t}\n\tvar t = input.LA(1);\n\tvar s = ds0; // s is current/from DFA state\n\n\twhile (true) { // while more work\n\t\tif (LexerATNSimulator.debug) {\n\t\t\tconsole.log(\"execATN loop starting closure: \" + s.configs);\n\t\t}\n\n\t\t// As we move src->trg, src->trg, we keep track of the previous trg to\n\t\t// avoid looking up the DFA state again, which is expensive.\n\t\t// If the previous target was already part of the DFA, we might\n\t\t// be able to avoid doing a reach operation upon t. If s!=null,\n\t\t// it means that semantic predicates didn't prevent us from\n\t\t// creating a DFA state. Once we know s!=null, we check to see if\n\t\t// the DFA state has an edge already for t. If so, we can just reuse\n\t\t// it's configuration set; there's no point in re-computing it.\n\t\t// This is kind of like doing DFA simulation within the ATN\n\t\t// simulation because DFA simulation is really just a way to avoid\n\t\t// computing reach/closure sets. Technically, once we know that\n\t\t// we have a previously added DFA state, we could jump over to\n\t\t// the DFA simulator. But, that would mean popping back and forth\n\t\t// a lot and making things more complicated algorithmically.\n\t\t// This optimization makes a lot of sense for loops within DFA.\n\t\t// A character will take us back to an existing DFA state\n\t\t// that already has lots of edges out of it. e.g., .* in comments.\n\t\t// print(\"Target for:\" + str(s) + \" and:\" + str(t))\n\t\tvar target = this.getExistingTargetState(s, t);\n\t\t// print(\"Existing:\" + str(target))\n\t\tif (target === null) {\n\t\t\ttarget = this.computeTargetState(input, s, t);\n\t\t\t// print(\"Computed:\" + str(target))\n\t\t}\n\t\tif (target === ATNSimulator.ERROR) {\n\t\t\tbreak;\n\t\t}\n\t\t// If this is a consumable input element, make sure to consume before\n\t\t// capturing the accept state so the input index, line, and char\n\t\t// position accurately reflect the state of the interpreter at the\n\t\t// end of the token.\n\t\tif (t !== Token.EOF) {\n\t\t\tthis.consume(input);\n\t\t}\n\t\tif (target.isAcceptState) {\n\t\t\tthis.captureSimState(this.prevAccept, input, target);\n\t\t\tif (t === Token.EOF) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tt = input.LA(1);\n\t\ts = target; // flip; current DFA target becomes new src/from state\n\t}\n\treturn this.failOrAccept(this.prevAccept, input, s.configs, t);\n};\n\n// Get an existing target state for an edge in the DFA. If the target state\n// for the edge has not yet been computed or is otherwise not available,\n// this method returns {@code null}.\n//\n// @param s The current DFA state\n// @param t The next input symbol\n// @return The existing target DFA state for the given input symbol\n// {@code t}, or {@code null} if the target state for this edge is not\n// already cached\nLexerATNSimulator.prototype.getExistingTargetState = function(s, t) {\n\tif (s.edges === null || t < LexerATNSimulator.MIN_DFA_EDGE || t > LexerATNSimulator.MAX_DFA_EDGE) {\n\t\treturn null;\n\t}\n\n\tvar target = s.edges[t - LexerATNSimulator.MIN_DFA_EDGE];\n\tif(target===undefined) {\n\t\ttarget = null;\n\t}\n\tif (LexerATNSimulator.debug && target !== null) {\n\t\tconsole.log(\"reuse state \" + s.stateNumber + \" edge to \" + target.stateNumber);\n\t}\n\treturn target;\n};\n\n// Compute a target state for an edge in the DFA, and attempt to add the\n// computed state and corresponding edge to the DFA.\n//\n// @param input The input stream\n// @param s The current DFA state\n// @param t The next input symbol\n//\n// @return The computed target DFA state for the given input symbol\n// {@code t}. If {@code t} does not lead to a valid DFA state, this method\n// returns {@link //ERROR}.\nLexerATNSimulator.prototype.computeTargetState = function(input, s, t) {\n\tvar reach = new OrderedATNConfigSet();\n\t// if we don't find an existing DFA state\n\t// Fill reach starting from closure, following t transitions\n\tthis.getReachableConfigSet(input, s.configs, reach, t);\n\n\tif (reach.items.length === 0) { // we got nowhere on t from s\n\t\tif (!reach.hasSemanticContext) {\n\t\t\t// we got nowhere on t, don't throw out this knowledge; it'd\n\t\t\t// cause a failover from DFA later.\n\t\t\tthis.addDFAEdge(s, t, ATNSimulator.ERROR);\n\t\t}\n\t\t// stop when we can't match any more char\n\t\treturn ATNSimulator.ERROR;\n\t}\n\t// Add an edge from s to target DFA found/created for reach\n\treturn this.addDFAEdge(s, t, null, reach);\n};\n\nLexerATNSimulator.prototype.failOrAccept = function(prevAccept, input, reach, t) {\n\tif (this.prevAccept.dfaState !== null) {\n\t\tvar lexerActionExecutor = prevAccept.dfaState.lexerActionExecutor;\n\t\tthis.accept(input, lexerActionExecutor, this.startIndex,\n\t\t\t\tprevAccept.index, prevAccept.line, prevAccept.column);\n\t\treturn prevAccept.dfaState.prediction;\n\t} else {\n\t\t// if no accept and EOF is first char, return EOF\n\t\tif (t === Token.EOF && input.index === this.startIndex) {\n\t\t\treturn Token.EOF;\n\t\t}\n\t\tthrow new LexerNoViableAltException(this.recog, input, this.startIndex, reach);\n\t}\n};\n\n// Given a starting configuration set, figure out all ATN configurations\n// we can reach upon input {@code t}. Parameter {@code reach} is a return\n// parameter.\nLexerATNSimulator.prototype.getReachableConfigSet = function(input, closure,\n\t\treach, t) {\n\t// this is used to skip processing for configs which have a lower priority\n\t// than a config that already reached an accept state for the same rule\n\tvar skipAlt = ATN.INVALID_ALT_NUMBER;\n\tfor (var i = 0; i < closure.items.length; i++) {\n\t\tvar cfg = closure.items[i];\n\t\tvar currentAltReachedAcceptState = (cfg.alt === skipAlt);\n\t\tif (currentAltReachedAcceptState && cfg.passedThroughNonGreedyDecision) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (LexerATNSimulator.debug) {\n\t\t\tconsole.log(\"testing %s at %s\\n\", this.getTokenName(t), cfg\n\t\t\t\t\t.toString(this.recog, true));\n\t\t}\n\t\tfor (var j = 0; j < cfg.state.transitions.length; j++) {\n\t\t\tvar trans = cfg.state.transitions[j]; // for each transition\n\t\t\tvar target = this.getReachableTarget(trans, t);\n\t\t\tif (target !== null) {\n\t\t\t\tvar lexerActionExecutor = cfg.lexerActionExecutor;\n\t\t\t\tif (lexerActionExecutor !== null) {\n\t\t\t\t\tlexerActionExecutor = lexerActionExecutor.fixOffsetBeforeMatch(input.index - this.startIndex);\n\t\t\t\t}\n\t\t\t\tvar treatEofAsEpsilon = (t === Token.EOF);\n\t\t\t\tvar config = new LexerATNConfig({state:target, lexerActionExecutor:lexerActionExecutor}, cfg);\n\t\t\t\tif (this.closure(input, config, reach,\n\t\t\t\t\t\tcurrentAltReachedAcceptState, true, treatEofAsEpsilon)) {\n\t\t\t\t\t// any remaining configs for this alt have a lower priority\n\t\t\t\t\t// than the one that just reached an accept state.\n\t\t\t\t\tskipAlt = cfg.alt;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\nLexerATNSimulator.prototype.accept = function(input, lexerActionExecutor,\n\t\tstartIndex, index, line, charPos) {\n\tif (LexerATNSimulator.debug) {\n\t\tconsole.log(\"ACTION %s\\n\", lexerActionExecutor);\n\t}\n\t// seek to after last char in token\n\tinput.seek(index);\n\tthis.line = line;\n\tthis.column = charPos;\n\tif (lexerActionExecutor !== null && this.recog !== null) {\n\t\tlexerActionExecutor.execute(this.recog, input, startIndex);\n\t}\n};\n\nLexerATNSimulator.prototype.getReachableTarget = function(trans, t) {\n\tif (trans.matches(t, 0, Lexer.MAX_CHAR_VALUE)) {\n\t\treturn trans.target;\n\t} else {\n\t\treturn null;\n\t}\n};\n\nLexerATNSimulator.prototype.computeStartState = function(input, p) {\n\tvar initialContext = PredictionContext.EMPTY;\n\tvar configs = new OrderedATNConfigSet();\n\tfor (var i = 0; i < p.transitions.length; i++) {\n\t\tvar target = p.transitions[i].target;\n        var cfg = new LexerATNConfig({state:target, alt:i+1, context:initialContext}, null);\n\t\tthis.closure(input, cfg, configs, false, false, false);\n\t}\n\treturn configs;\n};\n\n// Since the alternatives within any lexer decision are ordered by\n// preference, this method stops pursuing the closure as soon as an accept\n// state is reached. After the first accept state is reached by depth-first\n// search from {@code config}, all other (potentially reachable) states for\n// this rule would have a lower priority.\n//\n// @return {@code true} if an accept state is reached, otherwise\n// {@code false}.\nLexerATNSimulator.prototype.closure = function(input, config, configs,\n\t\tcurrentAltReachedAcceptState, speculative, treatEofAsEpsilon) {\n\tvar cfg = null;\n\tif (LexerATNSimulator.debug) {\n\t\tconsole.log(\"closure(\" + config.toString(this.recog, true) + \")\");\n\t}\n\tif (config.state instanceof RuleStopState) {\n\t\tif (LexerATNSimulator.debug) {\n\t\t\tif (this.recog !== null) {\n\t\t\t\tconsole.log(\"closure at %s rule stop %s\\n\", this.recog.ruleNames[config.state.ruleIndex], config);\n\t\t\t} else {\n\t\t\t\tconsole.log(\"closure at rule stop %s\\n\", config);\n\t\t\t}\n\t\t}\n\t\tif (config.context === null || config.context.hasEmptyPath()) {\n\t\t\tif (config.context === null || config.context.isEmpty()) {\n\t\t\t\tconfigs.add(config);\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tconfigs.add(new LexerATNConfig({ state:config.state, context:PredictionContext.EMPTY}, config));\n\t\t\t\tcurrentAltReachedAcceptState = true;\n\t\t\t}\n\t\t}\n\t\tif (config.context !== null && !config.context.isEmpty()) {\n\t\t\tfor (var i = 0; i < config.context.length; i++) {\n\t\t\t\tif (config.context.getReturnState(i) !== PredictionContext.EMPTY_RETURN_STATE) {\n\t\t\t\t\tvar newContext = config.context.getParent(i); // \"pop\" return state\n\t\t\t\t\tvar returnState = this.atn.states[config.context.getReturnState(i)];\n\t\t\t\t\tcfg = new LexerATNConfig({ state:returnState, context:newContext }, config);\n\t\t\t\t\tcurrentAltReachedAcceptState = this.closure(input, cfg,\n\t\t\t\t\t\t\tconfigs, currentAltReachedAcceptState, speculative,\n\t\t\t\t\t\t\ttreatEofAsEpsilon);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn currentAltReachedAcceptState;\n\t}\n\t// optimization\n\tif (!config.state.epsilonOnlyTransitions) {\n\t\tif (!currentAltReachedAcceptState || !config.passedThroughNonGreedyDecision) {\n\t\t\tconfigs.add(config);\n\t\t}\n\t}\n\tfor (var j = 0; j < config.state.transitions.length; j++) {\n\t\tvar trans = config.state.transitions[j];\n\t\tcfg = this.getEpsilonTarget(input, config, trans, configs, speculative, treatEofAsEpsilon);\n\t\tif (cfg !== null) {\n\t\t\tcurrentAltReachedAcceptState = this.closure(input, cfg, configs,\n\t\t\t\t\tcurrentAltReachedAcceptState, speculative, treatEofAsEpsilon);\n\t\t}\n\t}\n\treturn currentAltReachedAcceptState;\n};\n\n// side-effect: can alter configs.hasSemanticContext\nLexerATNSimulator.prototype.getEpsilonTarget = function(input, config, trans,\n\t\tconfigs, speculative, treatEofAsEpsilon) {\n\tvar cfg = null;\n\tif (trans.serializationType === Transition.RULE) {\n\t\tvar newContext = SingletonPredictionContext.create(config.context, trans.followState.stateNumber);\n\t\tcfg = new LexerATNConfig( { state:trans.target, context:newContext}, config);\n\t} else if (trans.serializationType === Transition.PRECEDENCE) {\n\t\tthrow \"Precedence predicates are not supported in lexers.\";\n\t} else if (trans.serializationType === Transition.PREDICATE) {\n\t\t// Track traversing semantic predicates. If we traverse,\n\t\t// we cannot add a DFA state for this \"reach\" computation\n\t\t// because the DFA would not test the predicate again in the\n\t\t// future. Rather than creating collections of semantic predicates\n\t\t// like v3 and testing them on prediction, v4 will test them on the\n\t\t// fly all the time using the ATN not the DFA. This is slower but\n\t\t// semantically it's not used that often. One of the key elements to\n\t\t// this predicate mechanism is not adding DFA states that see\n\t\t// predicates immediately afterwards in the ATN. For example,\n\n\t\t// a : ID {p1}? | ID {p2}? ;\n\n\t\t// should create the start state for rule 'a' (to save start state\n\t\t// competition), but should not create target of ID state. The\n\t\t// collection of ATN states the following ID references includes\n\t\t// states reached by traversing predicates. Since this is when we\n\t\t// test them, we cannot cash the DFA state target of ID.\n\n\t\tif (LexerATNSimulator.debug) {\n\t\t\tconsole.log(\"EVAL rule \" + trans.ruleIndex + \":\" + trans.predIndex);\n\t\t}\n\t\tconfigs.hasSemanticContext = true;\n\t\tif (this.evaluatePredicate(input, trans.ruleIndex, trans.predIndex, speculative)) {\n\t\t\tcfg = new LexerATNConfig({ state:trans.target}, config);\n\t\t}\n\t} else if (trans.serializationType === Transition.ACTION) {\n\t\tif (config.context === null || config.context.hasEmptyPath()) {\n\t\t\t// execute actions anywhere in the start rule for a token.\n\t\t\t//\n\t\t\t// TODO: if the entry rule is invoked recursively, some\n\t\t\t// actions may be executed during the recursive call. The\n\t\t\t// problem can appear when hasEmptyPath() is true but\n\t\t\t// isEmpty() is false. In this case, the config needs to be\n\t\t\t// split into two contexts - one with just the empty path\n\t\t\t// and another with everything but the empty path.\n\t\t\t// Unfortunately, the current algorithm does not allow\n\t\t\t// getEpsilonTarget to return two configurations, so\n\t\t\t// additional modifications are needed before we can support\n\t\t\t// the split operation.\n\t\t\tvar lexerActionExecutor = LexerActionExecutor.append(config.lexerActionExecutor,\n\t\t\t\t\tthis.atn.lexerActions[trans.actionIndex]);\n\t\t\tcfg = new LexerATNConfig({ state:trans.target, lexerActionExecutor:lexerActionExecutor }, config);\n\t\t} else {\n\t\t\t// ignore actions in referenced rules\n\t\t\tcfg = new LexerATNConfig( { state:trans.target}, config);\n\t\t}\n\t} else if (trans.serializationType === Transition.EPSILON) {\n\t\tcfg = new LexerATNConfig({ state:trans.target}, config);\n\t} else if (trans.serializationType === Transition.ATOM ||\n\t\t\t\ttrans.serializationType === Transition.RANGE ||\n\t\t\t\ttrans.serializationType === Transition.SET) {\n\t\tif (treatEofAsEpsilon) {\n\t\t\tif (trans.matches(Token.EOF, 0, Lexer.MAX_CHAR_VALUE)) {\n\t\t\t\tcfg = new LexerATNConfig( { state:trans.target }, config);\n\t\t\t}\n\t\t}\n\t}\n\treturn cfg;\n};\n\n// Evaluate a predicate specified in the lexer.\n//\n// <p>If {@code speculative} is {@code true}, this method was called before\n// {@link //consume} for the matched character. This method should call\n// {@link //consume} before evaluating the predicate to ensure position\n// sensitive values, including {@link Lexer//getText}, {@link Lexer//getLine},\n// and {@link Lexer//getcolumn}, properly reflect the current\n// lexer state. This method should restore {@code input} and the simulator\n// to the original state before returning (i.e. undo the actions made by the\n// call to {@link //consume}.</p>\n//\n// @param input The input stream.\n// @param ruleIndex The rule containing the predicate.\n// @param predIndex The index of the predicate within the rule.\n// @param speculative {@code true} if the current index in {@code input} is\n// one character before the predicate's location.\n//\n// @return {@code true} if the specified predicate evaluates to\n// {@code true}.\n// /\nLexerATNSimulator.prototype.evaluatePredicate = function(input, ruleIndex,\n\t\tpredIndex, speculative) {\n\t// assume true if no recognizer was provided\n\tif (this.recog === null) {\n\t\treturn true;\n\t}\n\tif (!speculative) {\n\t\treturn this.recog.sempred(null, ruleIndex, predIndex);\n\t}\n\tvar savedcolumn = this.column;\n\tvar savedLine = this.line;\n\tvar index = input.index;\n\tvar marker = input.mark();\n\ttry {\n\t\tthis.consume(input);\n\t\treturn this.recog.sempred(null, ruleIndex, predIndex);\n\t} finally {\n\t\tthis.column = savedcolumn;\n\t\tthis.line = savedLine;\n\t\tinput.seek(index);\n\t\tinput.release(marker);\n\t}\n};\n\nLexerATNSimulator.prototype.captureSimState = function(settings, input, dfaState) {\n\tsettings.index = input.index;\n\tsettings.line = this.line;\n\tsettings.column = this.column;\n\tsettings.dfaState = dfaState;\n};\n\nLexerATNSimulator.prototype.addDFAEdge = function(from_, tk, to, cfgs) {\n\tif (to === undefined) {\n\t\tto = null;\n\t}\n\tif (cfgs === undefined) {\n\t\tcfgs = null;\n\t}\n\tif (to === null && cfgs !== null) {\n\t\t// leading to this call, ATNConfigSet.hasSemanticContext is used as a\n\t\t// marker indicating dynamic predicate evaluation makes this edge\n\t\t// dependent on the specific input sequence, so the static edge in the\n\t\t// DFA should be omitted. The target DFAState is still created since\n\t\t// execATN has the ability to resynchronize with the DFA state cache\n\t\t// following the predicate evaluation step.\n\t\t//\n\t\t// TJP notes: next time through the DFA, we see a pred again and eval.\n\t\t// If that gets us to a previously created (but dangling) DFA\n\t\t// state, we can continue in pure DFA mode from there.\n\t\t// /\n\t\tvar suppressEdge = cfgs.hasSemanticContext;\n\t\tcfgs.hasSemanticContext = false;\n\n\t\tto = this.addDFAState(cfgs);\n\n\t\tif (suppressEdge) {\n\t\t\treturn to;\n\t\t}\n\t}\n\t// add the edge\n\tif (tk < LexerATNSimulator.MIN_DFA_EDGE || tk > LexerATNSimulator.MAX_DFA_EDGE) {\n\t\t// Only track edges within the DFA bounds\n\t\treturn to;\n\t}\n\tif (LexerATNSimulator.debug) {\n\t\tconsole.log(\"EDGE \" + from_ + \" -> \" + to + \" upon \" + tk);\n\t}\n\tif (from_.edges === null) {\n\t\t// make room for tokens 1..n and -1 masquerading as index 0\n\t\tfrom_.edges = [];\n\t}\n\tfrom_.edges[tk - LexerATNSimulator.MIN_DFA_EDGE] = to; // connect\n\n\treturn to;\n};\n\n// Add a new DFA state if there isn't one with this set of\n// configurations already. This method also detects the first\n// configuration containing an ATN rule stop state. Later, when\n// traversing the DFA, we will know which rule to accept.\nLexerATNSimulator.prototype.addDFAState = function(configs) {\n\tvar proposed = new DFAState(null, configs);\n\tvar firstConfigWithRuleStopState = null;\n\tfor (var i = 0; i < configs.items.length; i++) {\n\t\tvar cfg = configs.items[i];\n\t\tif (cfg.state instanceof RuleStopState) {\n\t\t\tfirstConfigWithRuleStopState = cfg;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (firstConfigWithRuleStopState !== null) {\n\t\tproposed.isAcceptState = true;\n\t\tproposed.lexerActionExecutor = firstConfigWithRuleStopState.lexerActionExecutor;\n\t\tproposed.prediction = this.atn.ruleToTokenType[firstConfigWithRuleStopState.state.ruleIndex];\n\t}\n\tvar dfa = this.decisionToDFA[this.mode];\n\tvar existing = dfa.states.get(proposed);\n\tif (existing!==null) {\n\t\treturn existing;\n\t}\n\tvar newState = proposed;\n\tnewState.stateNumber = dfa.states.length;\n\tconfigs.setReadonly(true);\n\tnewState.configs = configs;\n\tdfa.states.add(newState);\n\treturn newState;\n};\n\nLexerATNSimulator.prototype.getDFA = function(mode) {\n\treturn this.decisionToDFA[mode];\n};\n\n// Get the text matched so far for the current token.\nLexerATNSimulator.prototype.getText = function(input) {\n\t// index is first lookahead char, don't include.\n\treturn input.getText(this.startIndex, input.index - 1);\n};\n\nLexerATNSimulator.prototype.consume = function(input) {\n\tvar curChar = input.LA(1);\n\tif (curChar === \"\\n\".charCodeAt(0)) {\n\t\tthis.line += 1;\n\t\tthis.column = 0;\n\t} else {\n\t\tthis.column += 1;\n\t}\n\tinput.consume();\n};\n\nLexerATNSimulator.prototype.getTokenName = function(tt) {\n\tif (tt === -1) {\n\t\treturn \"EOF\";\n\t} else {\n\t\treturn \"'\" + String.fromCharCode(tt) + \"'\";\n\t}\n};\n\nexports.LexerATNSimulator = LexerATNSimulator;\n\n\n/***/ }),\n\n/***/ \"WmJ1\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nvar Utils = __webpack_require__(\"bz+k\");\nvar Token = __webpack_require__(\"j/5l\").Token;\nvar RuleNode = __webpack_require__(\"VnEu\").RuleNode;\nvar ErrorNode = __webpack_require__(\"VnEu\").ErrorNode;\nvar TerminalNode = __webpack_require__(\"VnEu\").TerminalNode;\nvar ParserRuleContext = __webpack_require__(\"EesY\").ParserRuleContext;\nvar RuleContext = __webpack_require__(\"6GCw\").RuleContext;\nvar INVALID_ALT_NUMBER = __webpack_require__(\"7y1Z\").INVALID_ALT_NUMBER;\n\n\n/** A set of utility routines useful for all kinds of ANTLR trees. */\nfunction Trees() {\n}\n\n// Print out a whole tree in LISP form. {@link //getNodeText} is used on the\n//  node payloads to get the text for the nodes.  Detect\n//  parse trees and extract data appropriately.\nTrees.toStringTree = function(tree, ruleNames, recog) {\n\truleNames = ruleNames || null;\n\trecog = recog || null;\n    if(recog!==null) {\n       ruleNames = recog.ruleNames;\n    }\n    var s = Trees.getNodeText(tree, ruleNames);\n    s = Utils.escapeWhitespace(s, false);\n    var c = tree.getChildCount();\n    if(c===0) {\n        return s;\n    }\n    var res = \"(\" + s + ' ';\n    if(c>0) {\n        s = Trees.toStringTree(tree.getChild(0), ruleNames);\n        res = res.concat(s);\n    }\n    for(var i=1;i<c;i++) {\n        s = Trees.toStringTree(tree.getChild(i), ruleNames);\n        res = res.concat(' ' + s);\n    }\n    res = res.concat(\")\");\n    return res;\n};\n\nTrees.getNodeText = function(t, ruleNames, recog) {\n\truleNames = ruleNames || null;\n\trecog = recog || null;\n    if(recog!==null) {\n        ruleNames = recog.ruleNames;\n    }\n    if(ruleNames!==null) {\n       if (t instanceof RuleContext) {\n           var altNumber = t.getAltNumber();\n           if ( altNumber!=INVALID_ALT_NUMBER ) {\n               return ruleNames[t.ruleIndex]+\":\"+altNumber;\n           }\n           return ruleNames[t.ruleIndex];\n       } else if ( t instanceof ErrorNode) {\n           return t.toString();\n       } else if(t instanceof TerminalNode) {\n           if(t.symbol!==null) {\n               return t.symbol.text;\n           }\n       }\n    }\n    // no recog for rule names\n    var payload = t.getPayload();\n    if (payload instanceof Token ) {\n       return payload.text;\n    }\n    return t.getPayload().toString();\n};\n\n\n// Return ordered list of all children of this node\nTrees.getChildren = function(t) {\n\tvar list = [];\n\tfor(var i=0;i<t.getChildCount();i++) {\n\t\tlist.push(t.getChild(i));\n\t}\n\treturn list;\n};\n\n// Return a list of all ancestors of this node.  The first node of\n//  list is the root and the last is the parent of this node.\n//\nTrees.getAncestors = function(t) {\n    var ancestors = [];\n    t = t.getParent();\n    while(t!==null) {\n        ancestors = [t].concat(ancestors);\n        t = t.getParent();\n    }\n    return ancestors;\n};\n\nTrees.findAllTokenNodes = function(t, ttype) {\n    return Trees.findAllNodes(t, ttype, true);\n};\n\nTrees.findAllRuleNodes = function(t, ruleIndex) {\n\treturn Trees.findAllNodes(t, ruleIndex, false);\n};\n\nTrees.findAllNodes = function(t, index, findTokens) {\n\tvar nodes = [];\n\tTrees._findAllNodes(t, index, findTokens, nodes);\n\treturn nodes;\n};\n\nTrees._findAllNodes = function(t, index, findTokens, nodes) {\n\t// check this node (the root) first\n\tif(findTokens && (t instanceof TerminalNode)) {\n\t\tif(t.symbol.type===index) {\n\t\t\tnodes.push(t);\n\t\t}\n\t} else if(!findTokens && (t instanceof ParserRuleContext)) {\n\t\tif(t.ruleIndex===index) {\n\t\t\tnodes.push(t);\n\t\t}\n\t}\n\t// check children\n\tfor(var i=0;i<t.getChildCount();i++) {\n\t\tTrees._findAllNodes(t.getChild(i), index, findTokens, nodes);\n\t}\n};\n\nTrees.descendants = function(t) {\n\tvar nodes = [t];\n    for(var i=0;i<t.getChildCount();i++) {\n        nodes = nodes.concat(Trees.descendants(t.getChild(i)));\n    }\n    return nodes;\n};\n\n\nexports.Trees = Trees;\n\n/***/ }),\n\n/***/ \"Xd32\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"+tPU\");\n__webpack_require__(\"zQR9\");\nmodule.exports = __webpack_require__(\"5PlU\");\n\n\n/***/ }),\n\n/***/ \"Xttn\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"FZ+f\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \".p-detail li[data-v-6983dd12]{margin-bottom:12px}.p-detail .item-title[data-v-6983dd12]{color:#48576a;display:inline-block;width:150px;padding-right:12px;-webkit-box-sizing:border-box;box-sizing:border-box;text-align:right}.p-detail .item-detail[data-v-6983dd12]{display:inline-block;vertical-align:top}.presentable-steps[data-v-6983dd12]{margin-bottom:30px!important}.uncreated-policy-tip[data-v-6983dd12]{line-height:100px;margin-left:100px;color:#e6a23c}\", \"\", {\"version\":3,\"sources\":[\"/Users/daizecheng/workplace/freelog/console/client/src/views/node/presentable/detail/index.vue\"],\"names\":[],\"mappings\":\"AACA,8BACE,kBAAoB,CACrB,AACD,uCACE,cAAe,AACf,qBAAsB,AACtB,YAAa,AACb,mBAAoB,AACpB,8BAA+B,AACvB,sBAAuB,AAC/B,gBAAkB,CACnB,AACD,wCACE,qBAAsB,AACtB,kBAAoB,CACrB,AACD,oCACE,4BAA+B,CAChC,AACD,uCACE,kBAAmB,AACnB,kBAAmB,AACnB,aAAe,CAChB\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.p-detail li[data-v-6983dd12] {\\n  margin-bottom: 12px;\\n}\\n.p-detail .item-title[data-v-6983dd12] {\\n  color: #48576a;\\n  display: inline-block;\\n  width: 150px;\\n  padding-right: 12px;\\n  -webkit-box-sizing: border-box;\\n          box-sizing: border-box;\\n  text-align: right;\\n}\\n.p-detail .item-detail[data-v-6983dd12] {\\n  display: inline-block;\\n  vertical-align: top;\\n}\\n.presentable-steps[data-v-6983dd12] {\\n  margin-bottom: 30px !important;\\n}\\n.uncreated-policy-tip[data-v-6983dd12] {\\n  line-height: 100px;\\n  margin-left: 100px;\\n  color: #E6A23C;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"YFoD\":\n/***/ (function(module, exports, __webpack_require__) {\n\n//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\nvar RuleContext = __webpack_require__(\"6GCw\").RuleContext;\nvar Hash = __webpack_require__(\"bz+k\").Hash;\n\nfunction PredictionContext(cachedHashCode) {\n\tthis.cachedHashCode = cachedHashCode;\n}\n\n// Represents {@code $} in local context prediction, which means wildcard.\n// {@code//+x =//}.\n// /\nPredictionContext.EMPTY = null;\n\n// Represents {@code $} in an array in full context mode, when {@code $}\n// doesn't mean wildcard: {@code $ + x = [$,x]}. Here,\n// {@code $} = {@link //EMPTY_RETURN_STATE}.\n// /\nPredictionContext.EMPTY_RETURN_STATE = 0x7FFFFFFF;\n\nPredictionContext.globalNodeCount = 1;\nPredictionContext.id = PredictionContext.globalNodeCount;\n\n// Stores the computed hash code of this {@link PredictionContext}. The hash\n// code is computed in parts to match the following reference algorithm.\n//\n// <pre>\n// private int referenceHashCode() {\n// int hash = {@link MurmurHash//initialize MurmurHash.initialize}({@link\n// //INITIAL_HASH});\n//\n// for (int i = 0; i &lt; {@link //size()}; i++) {\n// hash = {@link MurmurHash//update MurmurHash.update}(hash, {@link //getParent\n// getParent}(i));\n// }\n//\n// for (int i = 0; i &lt; {@link //size()}; i++) {\n// hash = {@link MurmurHash//update MurmurHash.update}(hash, {@link\n// //getReturnState getReturnState}(i));\n// }\n//\n// hash = {@link MurmurHash//finish MurmurHash.finish}(hash, 2// {@link\n// //size()});\n// return hash;\n// }\n// </pre>\n// /\n\n// This means only the {@link //EMPTY} context is in set.\nPredictionContext.prototype.isEmpty = function() {\n\treturn this === PredictionContext.EMPTY;\n};\n\nPredictionContext.prototype.hasEmptyPath = function() {\n\treturn this.getReturnState(this.length - 1) === PredictionContext.EMPTY_RETURN_STATE;\n};\n\nPredictionContext.prototype.hashCode = function() {\n\treturn this.cachedHashCode;\n};\n\n\nPredictionContext.prototype.updateHashCode = function(hash) {\n    hash.update(this.cachedHashCode);\n};\n/*\nfunction calculateHashString(parent, returnState) {\n\treturn \"\" + parent + returnState;\n}\n*/\n\n// Used to cache {@link PredictionContext} objects. Its used for the shared\n// context cash associated with contexts in DFA states. This cache\n// can be used for both lexers and parsers.\n\nfunction PredictionContextCache() {\n\tthis.cache = {};\n\treturn this;\n}\n\n// Add a context to the cache and return it. If the context already exists,\n// return that one instead and do not add a new context to the cache.\n// Protect shared cache from unsafe thread access.\n//\nPredictionContextCache.prototype.add = function(ctx) {\n\tif (ctx === PredictionContext.EMPTY) {\n\t\treturn PredictionContext.EMPTY;\n\t}\n\tvar existing = this.cache[ctx] || null;\n\tif (existing !== null) {\n\t\treturn existing;\n\t}\n\tthis.cache[ctx] = ctx;\n\treturn ctx;\n};\n\nPredictionContextCache.prototype.get = function(ctx) {\n\treturn this.cache[ctx] || null;\n};\n\nObject.defineProperty(PredictionContextCache.prototype, \"length\", {\n\tget : function() {\n\t\treturn this.cache.length;\n\t}\n});\n\nfunction SingletonPredictionContext(parent, returnState) {\n\tvar hashCode = 0;\n\tif(parent !== null) {\n\t\tvar hash = new Hash();\n\t\thash.update(parent, returnState);\n        hashCode = hash.finish();\n\t}\n\tPredictionContext.call(this, hashCode);\n\tthis.parentCtx = parent;\n\tthis.returnState = returnState;\n}\n\nSingletonPredictionContext.prototype = Object.create(PredictionContext.prototype);\nSingletonPredictionContext.prototype.contructor = SingletonPredictionContext;\n\nSingletonPredictionContext.create = function(parent, returnState) {\n\tif (returnState === PredictionContext.EMPTY_RETURN_STATE && parent === null) {\n\t\t// someone can pass in the bits of an array ctx that mean $\n\t\treturn PredictionContext.EMPTY;\n\t} else {\n\t\treturn new SingletonPredictionContext(parent, returnState);\n\t}\n};\n\nObject.defineProperty(SingletonPredictionContext.prototype, \"length\", {\n\tget : function() {\n\t\treturn 1;\n\t}\n});\n\nSingletonPredictionContext.prototype.getParent = function(index) {\n\treturn this.parentCtx;\n};\n\nSingletonPredictionContext.prototype.getReturnState = function(index) {\n\treturn this.returnState;\n};\n\nSingletonPredictionContext.prototype.equals = function(other) {\n\tif (this === other) {\n\t\treturn true;\n\t} else if (!(other instanceof SingletonPredictionContext)) {\n\t\treturn false;\n\t} else if (this.hashCode() !== other.hashCode()) {\n\t\treturn false; // can't be same if hash is different\n\t} else {\n\t\tif(this.returnState !== other.returnState)\n            return false;\n        else if(this.parentCtx==null)\n            return other.parentCtx==null\n\t\telse\n            return this.parentCtx.equals(other.parentCtx);\n\t}\n};\n\nSingletonPredictionContext.prototype.toString = function() {\n\tvar up = this.parentCtx === null ? \"\" : this.parentCtx.toString();\n\tif (up.length === 0) {\n\t\tif (this.returnState === PredictionContext.EMPTY_RETURN_STATE) {\n\t\t\treturn \"$\";\n\t\t} else {\n\t\t\treturn \"\" + this.returnState;\n\t\t}\n\t} else {\n\t\treturn \"\" + this.returnState + \" \" + up;\n\t}\n};\n\nfunction EmptyPredictionContext() {\n\tSingletonPredictionContext.call(this, null, PredictionContext.EMPTY_RETURN_STATE);\n\treturn this;\n}\n\nEmptyPredictionContext.prototype = Object.create(SingletonPredictionContext.prototype);\nEmptyPredictionContext.prototype.constructor = EmptyPredictionContext;\n\nEmptyPredictionContext.prototype.isEmpty = function() {\n\treturn true;\n};\n\nEmptyPredictionContext.prototype.getParent = function(index) {\n\treturn null;\n};\n\nEmptyPredictionContext.prototype.getReturnState = function(index) {\n\treturn this.returnState;\n};\n\nEmptyPredictionContext.prototype.equals = function(other) {\n\treturn this === other;\n};\n\nEmptyPredictionContext.prototype.toString = function() {\n\treturn \"$\";\n};\n\nPredictionContext.EMPTY = new EmptyPredictionContext();\n\nfunction ArrayPredictionContext(parents, returnStates) {\n\t// Parent can be null only if full ctx mode and we make an array\n\t// from {@link //EMPTY} and non-empty. We merge {@link //EMPTY} by using\n\t// null parent and\n\t// returnState == {@link //EMPTY_RETURN_STATE}.\n\tvar h = new Hash();\n\th.update(parents, returnStates);\n\tvar hashCode = h.finish();\n\tPredictionContext.call(this, hashCode);\n\tthis.parents = parents;\n\tthis.returnStates = returnStates;\n\treturn this;\n}\n\nArrayPredictionContext.prototype = Object.create(PredictionContext.prototype);\nArrayPredictionContext.prototype.constructor = ArrayPredictionContext;\n\nArrayPredictionContext.prototype.isEmpty = function() {\n\t// since EMPTY_RETURN_STATE can only appear in the last position, we\n\t// don't need to verify that size==1\n\treturn this.returnStates[0] === PredictionContext.EMPTY_RETURN_STATE;\n};\n\nObject.defineProperty(ArrayPredictionContext.prototype, \"length\", {\n\tget : function() {\n\t\treturn this.returnStates.length;\n\t}\n});\n\nArrayPredictionContext.prototype.getParent = function(index) {\n\treturn this.parents[index];\n};\n\nArrayPredictionContext.prototype.getReturnState = function(index) {\n\treturn this.returnStates[index];\n};\n\nArrayPredictionContext.prototype.equals = function(other) {\n\tif (this === other) {\n\t\treturn true;\n\t} else if (!(other instanceof ArrayPredictionContext)) {\n\t\treturn false;\n\t} else if (this.hashCode() !== other.hashCode()) {\n\t\treturn false; // can't be same if hash is different\n\t} else {\n\t\treturn this.returnStates === other.returnStates &&\n\t\t\t\tthis.parents === other.parents;\n\t}\n};\n\nArrayPredictionContext.prototype.toString = function() {\n\tif (this.isEmpty()) {\n\t\treturn \"[]\";\n\t} else {\n\t\tvar s = \"[\";\n\t\tfor (var i = 0; i < this.returnStates.length; i++) {\n\t\t\tif (i > 0) {\n\t\t\t\ts = s + \", \";\n\t\t\t}\n\t\t\tif (this.returnStates[i] === PredictionContext.EMPTY_RETURN_STATE) {\n\t\t\t\ts = s + \"$\";\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\ts = s + this.returnStates[i];\n\t\t\tif (this.parents[i] !== null) {\n\t\t\t\ts = s + \" \" + this.parents[i];\n\t\t\t} else {\n\t\t\t\ts = s + \"null\";\n\t\t\t}\n\t\t}\n\t\treturn s + \"]\";\n\t}\n};\n\n// Convert a {@link RuleContext} tree to a {@link PredictionContext} graph.\n// Return {@link //EMPTY} if {@code outerContext} is empty or null.\n// /\nfunction predictionContextFromRuleContext(atn, outerContext) {\n\tif (outerContext === undefined || outerContext === null) {\n\t\touterContext = RuleContext.EMPTY;\n\t}\n\t// if we are in RuleContext of start rule, s, then PredictionContext\n\t// is EMPTY. Nobody called us. (if we are empty, return empty)\n\tif (outerContext.parentCtx === null || outerContext === RuleContext.EMPTY) {\n\t\treturn PredictionContext.EMPTY;\n\t}\n\t// If we have a parent, convert it to a PredictionContext graph\n\tvar parent = predictionContextFromRuleContext(atn, outerContext.parentCtx);\n\tvar state = atn.states[outerContext.invokingState];\n\tvar transition = state.transitions[0];\n\treturn SingletonPredictionContext.create(parent, transition.followState.stateNumber);\n}\n/*\nfunction calculateListsHashString(parents, returnStates) {\n\tvar s = \"\";\n\tparents.map(function(p) {\n\t\ts = s + p;\n\t});\n\treturnStates.map(function(r) {\n\t\ts = s + r;\n\t});\n\treturn s;\n}\n*/\nfunction merge(a, b, rootIsWildcard, mergeCache) {\n\t// share same graph if both same\n\tif (a === b) {\n\t\treturn a;\n\t}\n\tif (a instanceof SingletonPredictionContext && b instanceof SingletonPredictionContext) {\n\t\treturn mergeSingletons(a, b, rootIsWildcard, mergeCache);\n\t}\n\t// At least one of a or b is array\n\t// If one is $ and rootIsWildcard, return $ as// wildcard\n\tif (rootIsWildcard) {\n\t\tif (a instanceof EmptyPredictionContext) {\n\t\t\treturn a;\n\t\t}\n\t\tif (b instanceof EmptyPredictionContext) {\n\t\t\treturn b;\n\t\t}\n\t}\n\t// convert singleton so both are arrays to normalize\n\tif (a instanceof SingletonPredictionContext) {\n\t\ta = new ArrayPredictionContext([a.getParent()], [a.returnState]);\n\t}\n\tif (b instanceof SingletonPredictionContext) {\n\t\tb = new ArrayPredictionContext([b.getParent()], [b.returnState]);\n\t}\n\treturn mergeArrays(a, b, rootIsWildcard, mergeCache);\n}\n\n//\n// Merge two {@link SingletonPredictionContext} instances.\n//\n// <p>Stack tops equal, parents merge is same; return left graph.<br>\n// <embed src=\"images/SingletonMerge_SameRootSamePar.svg\"\n// type=\"image/svg+xml\"/></p>\n//\n// <p>Same stack top, parents differ; merge parents giving array node, then\n// remainders of those graphs. A new root node is created to point to the\n// merged parents.<br>\n// <embed src=\"images/SingletonMerge_SameRootDiffPar.svg\"\n// type=\"image/svg+xml\"/></p>\n//\n// <p>Different stack tops pointing to same parent. Make array node for the\n// root where both element in the root point to the same (original)\n// parent.<br>\n// <embed src=\"images/SingletonMerge_DiffRootSamePar.svg\"\n// type=\"image/svg+xml\"/></p>\n//\n// <p>Different stack tops pointing to different parents. Make array node for\n// the root where each element points to the corresponding original\n// parent.<br>\n// <embed src=\"images/SingletonMerge_DiffRootDiffPar.svg\"\n// type=\"image/svg+xml\"/></p>\n//\n// @param a the first {@link SingletonPredictionContext}\n// @param b the second {@link SingletonPredictionContext}\n// @param rootIsWildcard {@code true} if this is a local-context merge,\n// otherwise false to indicate a full-context merge\n// @param mergeCache\n// /\nfunction mergeSingletons(a, b, rootIsWildcard, mergeCache) {\n\tif (mergeCache !== null) {\n\t\tvar previous = mergeCache.get(a, b);\n\t\tif (previous !== null) {\n\t\t\treturn previous;\n\t\t}\n\t\tprevious = mergeCache.get(b, a);\n\t\tif (previous !== null) {\n\t\t\treturn previous;\n\t\t}\n\t}\n\n\tvar rootMerge = mergeRoot(a, b, rootIsWildcard);\n\tif (rootMerge !== null) {\n\t\tif (mergeCache !== null) {\n\t\t\tmergeCache.set(a, b, rootMerge);\n\t\t}\n\t\treturn rootMerge;\n\t}\n\tif (a.returnState === b.returnState) {\n\t\tvar parent = merge(a.parentCtx, b.parentCtx, rootIsWildcard, mergeCache);\n\t\t// if parent is same as existing a or b parent or reduced to a parent,\n\t\t// return it\n\t\tif (parent === a.parentCtx) {\n\t\t\treturn a; // ax + bx = ax, if a=b\n\t\t}\n\t\tif (parent === b.parentCtx) {\n\t\t\treturn b; // ax + bx = bx, if a=b\n\t\t}\n\t\t// else: ax + ay = a'[x,y]\n\t\t// merge parents x and y, giving array node with x,y then remainders\n\t\t// of those graphs. dup a, a' points at merged array\n\t\t// new joined parent so create new singleton pointing to it, a'\n\t\tvar spc = SingletonPredictionContext.create(parent, a.returnState);\n\t\tif (mergeCache !== null) {\n\t\t\tmergeCache.set(a, b, spc);\n\t\t}\n\t\treturn spc;\n\t} else { // a != b payloads differ\n\t\t// see if we can collapse parents due to $+x parents if local ctx\n\t\tvar singleParent = null;\n\t\tif (a === b || (a.parentCtx !== null && a.parentCtx === b.parentCtx)) { // ax +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// bx =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// [a,b]x\n\t\t\tsingleParent = a.parentCtx;\n\t\t}\n\t\tif (singleParent !== null) { // parents are same\n\t\t\t// sort payloads and use same parent\n\t\t\tvar payloads = [ a.returnState, b.returnState ];\n\t\t\tif (a.returnState > b.returnState) {\n\t\t\t\tpayloads[0] = b.returnState;\n\t\t\t\tpayloads[1] = a.returnState;\n\t\t\t}\n\t\t\tvar parents = [ singleParent, singleParent ];\n\t\t\tvar apc = new ArrayPredictionContext(parents, payloads);\n\t\t\tif (mergeCache !== null) {\n\t\t\t\tmergeCache.set(a, b, apc);\n\t\t\t}\n\t\t\treturn apc;\n\t\t}\n\t\t// parents differ and can't merge them. Just pack together\n\t\t// into array; can't merge.\n\t\t// ax + by = [ax,by]\n\t\tvar payloads = [ a.returnState, b.returnState ];\n\t\tvar parents = [ a.parentCtx, b.parentCtx ];\n\t\tif (a.returnState > b.returnState) { // sort by payload\n\t\t\tpayloads[0] = b.returnState;\n\t\t\tpayloads[1] = a.returnState;\n\t\t\tparents = [ b.parentCtx, a.parentCtx ];\n\t\t}\n\t\tvar a_ = new ArrayPredictionContext(parents, payloads);\n\t\tif (mergeCache !== null) {\n\t\t\tmergeCache.set(a, b, a_);\n\t\t}\n\t\treturn a_;\n\t}\n}\n\n//\n// Handle case where at least one of {@code a} or {@code b} is\n// {@link //EMPTY}. In the following diagrams, the symbol {@code $} is used\n// to represent {@link //EMPTY}.\n//\n// <h2>Local-Context Merges</h2>\n//\n// <p>These local-context merge operations are used when {@code rootIsWildcard}\n// is true.</p>\n//\n// <p>{@link //EMPTY} is superset of any graph; return {@link //EMPTY}.<br>\n// <embed src=\"images/LocalMerge_EmptyRoot.svg\" type=\"image/svg+xml\"/></p>\n//\n// <p>{@link //EMPTY} and anything is {@code //EMPTY}, so merged parent is\n// {@code //EMPTY}; return left graph.<br>\n// <embed src=\"images/LocalMerge_EmptyParent.svg\" type=\"image/svg+xml\"/></p>\n//\n// <p>Special case of last merge if local context.<br>\n// <embed src=\"images/LocalMerge_DiffRoots.svg\" type=\"image/svg+xml\"/></p>\n//\n// <h2>Full-Context Merges</h2>\n//\n// <p>These full-context merge operations are used when {@code rootIsWildcard}\n// is false.</p>\n//\n// <p><embed src=\"images/FullMerge_EmptyRoots.svg\" type=\"image/svg+xml\"/></p>\n//\n// <p>Must keep all contexts; {@link //EMPTY} in array is a special value (and\n// null parent).<br>\n// <embed src=\"images/FullMerge_EmptyRoot.svg\" type=\"image/svg+xml\"/></p>\n//\n// <p><embed src=\"images/FullMerge_SameRoot.svg\" type=\"image/svg+xml\"/></p>\n//\n// @param a the first {@link SingletonPredictionContext}\n// @param b the second {@link SingletonPredictionContext}\n// @param rootIsWildcard {@code true} if this is a local-context merge,\n// otherwise false to indicate a full-context merge\n// /\nfunction mergeRoot(a, b, rootIsWildcard) {\n\tif (rootIsWildcard) {\n\t\tif (a === PredictionContext.EMPTY) {\n\t\t\treturn PredictionContext.EMPTY; // // + b =//\n\t\t}\n\t\tif (b === PredictionContext.EMPTY) {\n\t\t\treturn PredictionContext.EMPTY; // a +// =//\n\t\t}\n\t} else {\n\t\tif (a === PredictionContext.EMPTY && b === PredictionContext.EMPTY) {\n\t\t\treturn PredictionContext.EMPTY; // $ + $ = $\n\t\t} else if (a === PredictionContext.EMPTY) { // $ + x = [$,x]\n\t\t\tvar payloads = [ b.returnState,\n\t\t\t\t\tPredictionContext.EMPTY_RETURN_STATE ];\n\t\t\tvar parents = [ b.parentCtx, null ];\n\t\t\treturn new ArrayPredictionContext(parents, payloads);\n\t\t} else if (b === PredictionContext.EMPTY) { // x + $ = [$,x] ($ is always first if present)\n\t\t\tvar payloads = [ a.returnState, PredictionContext.EMPTY_RETURN_STATE ];\n\t\t\tvar parents = [ a.parentCtx, null ];\n\t\t\treturn new ArrayPredictionContext(parents, payloads);\n\t\t}\n\t}\n\treturn null;\n}\n\n//\n// Merge two {@link ArrayPredictionContext} instances.\n//\n// <p>Different tops, different parents.<br>\n// <embed src=\"images/ArrayMerge_DiffTopDiffPar.svg\" type=\"image/svg+xml\"/></p>\n//\n// <p>Shared top, same parents.<br>\n// <embed src=\"images/ArrayMerge_ShareTopSamePar.svg\" type=\"image/svg+xml\"/></p>\n//\n// <p>Shared top, different parents.<br>\n// <embed src=\"images/ArrayMerge_ShareTopDiffPar.svg\" type=\"image/svg+xml\"/></p>\n//\n// <p>Shared top, all shared parents.<br>\n// <embed src=\"images/ArrayMerge_ShareTopSharePar.svg\"\n// type=\"image/svg+xml\"/></p>\n//\n// <p>Equal tops, merge parents and reduce top to\n// {@link SingletonPredictionContext}.<br>\n// <embed src=\"images/ArrayMerge_EqualTop.svg\" type=\"image/svg+xml\"/></p>\n// /\nfunction mergeArrays(a, b, rootIsWildcard, mergeCache) {\n\tif (mergeCache !== null) {\n\t\tvar previous = mergeCache.get(a, b);\n\t\tif (previous !== null) {\n\t\t\treturn previous;\n\t\t}\n\t\tprevious = mergeCache.get(b, a);\n\t\tif (previous !== null) {\n\t\t\treturn previous;\n\t\t}\n\t}\n\t// merge sorted payloads a + b => M\n\tvar i = 0; // walks a\n\tvar j = 0; // walks b\n\tvar k = 0; // walks target M array\n\n\tvar mergedReturnStates = [];\n\tvar mergedParents = [];\n\t// walk and merge to yield mergedParents, mergedReturnStates\n\twhile (i < a.returnStates.length && j < b.returnStates.length) {\n\t\tvar a_parent = a.parents[i];\n\t\tvar b_parent = b.parents[j];\n\t\tif (a.returnStates[i] === b.returnStates[j]) {\n\t\t\t// same payload (stack tops are equal), must yield merged singleton\n\t\t\tvar payload = a.returnStates[i];\n\t\t\t// $+$ = $\n\t\t\tvar bothDollars = payload === PredictionContext.EMPTY_RETURN_STATE &&\n\t\t\t\t\ta_parent === null && b_parent === null;\n\t\t\tvar ax_ax = (a_parent !== null && b_parent !== null && a_parent === b_parent); // ax+ax\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// ->\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// ax\n\t\t\tif (bothDollars || ax_ax) {\n\t\t\t\tmergedParents[k] = a_parent; // choose left\n\t\t\t\tmergedReturnStates[k] = payload;\n\t\t\t} else { // ax+ay -> a'[x,y]\n\t\t\t\tvar mergedParent = merge(a_parent, b_parent, rootIsWildcard, mergeCache);\n\t\t\t\tmergedParents[k] = mergedParent;\n\t\t\t\tmergedReturnStates[k] = payload;\n\t\t\t}\n\t\t\ti += 1; // hop over left one as usual\n\t\t\tj += 1; // but also skip one in right side since we merge\n\t\t} else if (a.returnStates[i] < b.returnStates[j]) { // copy a[i] to M\n\t\t\tmergedParents[k] = a_parent;\n\t\t\tmergedReturnStates[k] = a.returnStates[i];\n\t\t\ti += 1;\n\t\t} else { // b > a, copy b[j] to M\n\t\t\tmergedParents[k] = b_parent;\n\t\t\tmergedReturnStates[k] = b.returnStates[j];\n\t\t\tj += 1;\n\t\t}\n\t\tk += 1;\n\t}\n\t// copy over any payloads remaining in either array\n\tif (i < a.returnStates.length) {\n\t\tfor (var p = i; p < a.returnStates.length; p++) {\n\t\t\tmergedParents[k] = a.parents[p];\n\t\t\tmergedReturnStates[k] = a.returnStates[p];\n\t\t\tk += 1;\n\t\t}\n\t} else {\n\t\tfor (var p = j; p < b.returnStates.length; p++) {\n\t\t\tmergedParents[k] = b.parents[p];\n\t\t\tmergedReturnStates[k] = b.returnStates[p];\n\t\t\tk += 1;\n\t\t}\n\t}\n\t// trim merged if we combined a few that had same stack tops\n\tif (k < mergedParents.length) { // write index < last position; trim\n\t\tif (k === 1) { // for just one merged element, return singleton top\n\t\t\tvar a_ = SingletonPredictionContext.create(mergedParents[0],\n\t\t\t\t\tmergedReturnStates[0]);\n\t\t\tif (mergeCache !== null) {\n\t\t\t\tmergeCache.set(a, b, a_);\n\t\t\t}\n\t\t\treturn a_;\n\t\t}\n\t\tmergedParents = mergedParents.slice(0, k);\n\t\tmergedReturnStates = mergedReturnStates.slice(0, k);\n\t}\n\n\tvar M = new ArrayPredictionContext(mergedParents, mergedReturnStates);\n\n\t// if we created same array as a or b, return that instead\n\t// TODO: track whether this is possible above during merge sort for speed\n\tif (M === a) {\n\t\tif (mergeCache !== null) {\n\t\t\tmergeCache.set(a, b, a);\n\t\t}\n\t\treturn a;\n\t}\n\tif (M === b) {\n\t\tif (mergeCache !== null) {\n\t\t\tmergeCache.set(a, b, b);\n\t\t}\n\t\treturn b;\n\t}\n\tcombineCommonParents(mergedParents);\n\n\tif (mergeCache !== null) {\n\t\tmergeCache.set(a, b, M);\n\t}\n\treturn M;\n}\n\n//\n// Make pass over all <em>M</em> {@code parents}; merge any {@code equals()}\n// ones.\n// /\nfunction combineCommonParents(parents) {\n\tvar uniqueParents = {};\n\n\tfor (var p = 0; p < parents.length; p++) {\n\t\tvar parent = parents[p];\n\t\tif (!(parent in uniqueParents)) {\n\t\t\tuniqueParents[parent] = parent;\n\t\t}\n\t}\n\tfor (var q = 0; q < parents.length; q++) {\n\t\tparents[q] = uniqueParents[parents[q]];\n\t}\n}\n\nfunction getCachedPredictionContext(context, contextCache, visited) {\n\tif (context.isEmpty()) {\n\t\treturn context;\n\t}\n\tvar existing = visited[context] || null;\n\tif (existing !== null) {\n\t\treturn existing;\n\t}\n\texisting = contextCache.get(context);\n\tif (existing !== null) {\n\t\tvisited[context] = existing;\n\t\treturn existing;\n\t}\n\tvar changed = false;\n\tvar parents = [];\n\tfor (var i = 0; i < parents.length; i++) {\n\t\tvar parent = getCachedPredictionContext(context.getParent(i), contextCache, visited);\n\t\tif (changed || parent !== context.getParent(i)) {\n\t\t\tif (!changed) {\n\t\t\t\tparents = [];\n\t\t\t\tfor (var j = 0; j < context.length; j++) {\n\t\t\t\t\tparents[j] = context.getParent(j);\n\t\t\t\t}\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t\tparents[i] = parent;\n\t\t}\n\t}\n\tif (!changed) {\n\t\tcontextCache.add(context);\n\t\tvisited[context] = context;\n\t\treturn context;\n\t}\n\tvar updated = null;\n\tif (parents.length === 0) {\n\t\tupdated = PredictionContext.EMPTY;\n\t} else if (parents.length === 1) {\n\t\tupdated = SingletonPredictionContext.create(parents[0], context\n\t\t\t\t.getReturnState(0));\n\t} else {\n\t\tupdated = new ArrayPredictionContext(parents, context.returnStates);\n\t}\n\tcontextCache.add(updated);\n\tvisited[updated] = updated;\n\tvisited[context] = updated;\n\n\treturn updated;\n}\n\n// ter's recursive version of Sam's getAllNodes()\nfunction getAllContextNodes(context, nodes, visited) {\n\tif (nodes === null) {\n\t\tnodes = [];\n\t\treturn getAllContextNodes(context, nodes, visited);\n\t} else if (visited === null) {\n\t\tvisited = {};\n\t\treturn getAllContextNodes(context, nodes, visited);\n\t} else {\n\t\tif (context === null || visited[context] !== null) {\n\t\t\treturn nodes;\n\t\t}\n\t\tvisited[context] = context;\n\t\tnodes.push(context);\n\t\tfor (var i = 0; i < context.length; i++) {\n\t\t\tgetAllContextNodes(context.getParent(i), nodes, visited);\n\t\t}\n\t\treturn nodes;\n\t}\n}\n\nexports.merge = merge;\nexports.PredictionContext = PredictionContext;\nexports.PredictionContextCache = PredictionContextCache;\nexports.SingletonPredictionContext = SingletonPredictionContext;\nexports.predictionContextFromRuleContext = predictionContextFromRuleContext;\nexports.getCachedPredictionContext = getCachedPredictionContext;\n\n\n/***/ }),\n\n/***/ \"Ya8g\":\n/***/ (function(module, exports) {\n\n\n\n/***/ }),\n\n/***/ \"Zapo\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__index__ = __webpack_require__(\"7AHu\");\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__index__[\"a\" /* default */]);\n\n/***/ }),\n\n/***/ \"a1Cn\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(\"uY8j\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(\"rjj0\")(\"4b7ceff2\", content, true);\n\n/***/ }),\n\n/***/ \"aX82\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._l((_vm.presentableTags),function(tag){return _c('el-tag',{key:tag,attrs:{\"closable\":\"\",\"disable-transitions\":false},on:{\"close\":function($event){_vm.handleClose(tag)}}},[_vm._v(\"\\n    \"+_vm._s(tag)+\"\\n  \")])}),_vm._v(\" \"),(_vm.inputVisible)?_c('el-input',{ref:\"saveTagInput\",staticClass:\"input-new-tag\",attrs:{\"size\":\"small\"},on:{\"blur\":_vm.handleInputConfirm},nativeOn:{\"keyup\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"enter\",13,$event.key)){ return null; }_vm.handleInputConfirm($event)}},model:{value:(_vm.inputValue),callback:function ($$v) {_vm.inputValue=$$v},expression:\"inputValue\"}}):_c('el-button',{staticClass:\"button-new-tag\",attrs:{\"size\":\"small\"},on:{\"click\":_vm.showInput}},[_vm._v(\"+ New Tag\")])],2)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ \"aqfl\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RESOURCE_TYPES\", function() { return RESOURCE_TYPES; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RESOURCE_STATUS\", function() { return RESOURCE_STATUS; });\nvar RESOURCE_TYPES = {\n  widget: 'widget',\n  image: 'image',\n  audio: 'audio',\n  markdown: 'markdown',\n  pageBuild: 'page_build',\n  revealSlide: 'reveal_slide'\n};\n\nvar RESOURCE_STATUS = [{\n  text: '未知状态',\n  type: 'info'\n}, {\n  text: '正常',\n  type: 'info'\n}, {\n  text: '发布',\n  type: 'success'\n}, {\n  text: '冻结',\n  type: 'danger'\n}];\n\n/***/ }),\n\n/***/ \"bCSO\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"FZ+f\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \".presentable-steps[data-v-b9e66b48]{position:relative;left:50%;-webkit-transform:translate(-25%);transform:translate(-25%);text-align:center;margin-bottom:15px}\", \"\", {\"version\":3,\"sources\":[\"/Users/daizecheng/workplace/freelog/console/client/src/views/node/presentable/steps/index.vue\"],\"names\":[],\"mappings\":\"AACA,oCACE,kBAAmB,AACnB,SAAU,AACV,kCAAsC,AAC9B,0BAA8B,AACtC,kBAAmB,AACnB,kBAAoB,CACrB\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.presentable-steps[data-v-b9e66b48] {\\n  position: relative;\\n  left: 50%;\\n  -webkit-transform: translate(-25%, 0);\\n          transform: translate(-25%, 0);\\n  text-align: center;\\n  margin-bottom: 15px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"bcvg\":\n/***/ (function(module, exports, __webpack_require__) {\n\n//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\nvar DFAState = __webpack_require__(\"IUCG\").DFAState;\nvar ATNConfigSet = __webpack_require__(\"wMEt\").ATNConfigSet;\nvar getCachedPredictionContext = __webpack_require__(\"YFoD\").getCachedPredictionContext;\n\nfunction ATNSimulator(atn, sharedContextCache) {\n\n    // The context cache maps all PredictionContext objects that are ==\n    //  to a single cached copy. This cache is shared across all contexts\n    //  in all ATNConfigs in all DFA states.  We rebuild each ATNConfigSet\n    //  to use only cached nodes/graphs in addDFAState(). We don't want to\n    //  fill this during closure() since there are lots of contexts that\n    //  pop up but are not used ever again. It also greatly slows down closure().\n    //\n    //  <p>This cache makes a huge difference in memory and a little bit in speed.\n    //  For the Java grammar on java.*, it dropped the memory requirements\n    //  at the end from 25M to 16M. We don't store any of the full context\n    //  graphs in the DFA because they are limited to local context only,\n    //  but apparently there's a lot of repetition there as well. We optimize\n    //  the config contexts before storing the config set in the DFA states\n    //  by literally rebuilding them with cached subgraphs only.</p>\n    //\n    //  <p>I tried a cache for use during closure operations, that was\n    //  whacked after each adaptivePredict(). It cost a little bit\n    //  more time I think and doesn't save on the overall footprint\n    //  so it's not worth the complexity.</p>\n    ///\n    this.atn = atn;\n    this.sharedContextCache = sharedContextCache;\n    return this;\n}\n\n// Must distinguish between missing edge and edge we know leads nowhere///\nATNSimulator.ERROR = new DFAState(0x7FFFFFFF, new ATNConfigSet());\n\n\nATNSimulator.prototype.getCachedContext = function(context) {\n    if (this.sharedContextCache ===null) {\n        return context;\n    }\n    var visited = {};\n    return getCachedPredictionContext(context, this.sharedContextCache, visited);\n};\n\nexports.ATNSimulator = ATNSimulator;\n\n\n/***/ }),\n\n/***/ \"bz+k\":\n/***/ (function(module, exports) {\n\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nfunction arrayToString(a) {\n    return \"[\" + a.join(\", \") + \"]\";\n}\n\nString.prototype.seed = String.prototype.seed || Math.round(Math.random() * Math.pow(2, 32));\n\nString.prototype.hashCode = function () {\n    var remainder, bytes, h1, h1b, c1, c1b, c2, c2b, k1, i,\n        key = this.toString();\n\n    remainder = key.length & 3; // key.length % 4\n    bytes = key.length - remainder;\n    h1 = String.prototype.seed;\n    c1 = 0xcc9e2d51;\n    c2 = 0x1b873593;\n    i = 0;\n\n    while (i < bytes) {\n        k1 =\n            ((key.charCodeAt(i) & 0xff)) |\n            ((key.charCodeAt(++i) & 0xff) << 8) |\n            ((key.charCodeAt(++i) & 0xff) << 16) |\n            ((key.charCodeAt(++i) & 0xff) << 24);\n        ++i;\n\n        k1 = ((((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16))) & 0xffffffff;\n        k1 = (k1 << 15) | (k1 >>> 17);\n        k1 = ((((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16))) & 0xffffffff;\n\n        h1 ^= k1;\n        h1 = (h1 << 13) | (h1 >>> 19);\n        h1b = ((((h1 & 0xffff) * 5) + ((((h1 >>> 16) * 5) & 0xffff) << 16))) & 0xffffffff;\n        h1 = (((h1b & 0xffff) + 0x6b64) + ((((h1b >>> 16) + 0xe654) & 0xffff) << 16));\n    }\n\n    k1 = 0;\n\n    switch (remainder) {\n        case 3:\n            k1 ^= (key.charCodeAt(i + 2) & 0xff) << 16;\n        case 2:\n            k1 ^= (key.charCodeAt(i + 1) & 0xff) << 8;\n        case 1:\n            k1 ^= (key.charCodeAt(i) & 0xff);\n\n            k1 = (((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16)) & 0xffffffff;\n            k1 = (k1 << 15) | (k1 >>> 17);\n            k1 = (((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16)) & 0xffffffff;\n            h1 ^= k1;\n    }\n\n    h1 ^= key.length;\n\n    h1 ^= h1 >>> 16;\n    h1 = (((h1 & 0xffff) * 0x85ebca6b) + ((((h1 >>> 16) * 0x85ebca6b) & 0xffff) << 16)) & 0xffffffff;\n    h1 ^= h1 >>> 13;\n    h1 = ((((h1 & 0xffff) * 0xc2b2ae35) + ((((h1 >>> 16) * 0xc2b2ae35) & 0xffff) << 16))) & 0xffffffff;\n    h1 ^= h1 >>> 16;\n\n    return h1 >>> 0;\n};\n\nfunction standardEqualsFunction(a, b) {\n    return a.equals(b);\n}\n\nfunction standardHashCodeFunction(a) {\n    return a.hashCode();\n}\n\nfunction Set(hashFunction, equalsFunction) {\n    this.data = {};\n    this.hashFunction = hashFunction || standardHashCodeFunction;\n    this.equalsFunction = equalsFunction || standardEqualsFunction;\n    return this;\n}\n\nObject.defineProperty(Set.prototype, \"length\", {\n    get: function () {\n        var l = 0;\n        for (var key in this.data) {\n            if (key.indexOf(\"hash_\") === 0) {\n                l = l + this.data[key].length;\n            }\n        }\n        return l;\n    }\n});\n\nSet.prototype.add = function (value) {\n    var hash = this.hashFunction(value);\n    var key = \"hash_\" + hash;\n    if (key in this.data) {\n        var values = this.data[key];\n        for (var i = 0; i < values.length; i++) {\n            if (this.equalsFunction(value, values[i])) {\n                return values[i];\n            }\n        }\n        values.push(value);\n        return value;\n    } else {\n        this.data[key] = [value];\n        return value;\n    }\n};\n\nSet.prototype.contains = function (value) {\n    return this.get(value) != null;\n};\n\nSet.prototype.get = function (value) {\n    var hash = this.hashFunction(value);\n    var key = \"hash_\" + hash;\n    if (key in this.data) {\n        var values = this.data[key];\n        for (var i = 0; i < values.length; i++) {\n            if (this.equalsFunction(value, values[i])) {\n                return values[i];\n            }\n        }\n    }\n    return null;\n};\n\nSet.prototype.values = function () {\n    var l = [];\n    for (var key in this.data) {\n        if (key.indexOf(\"hash_\") === 0) {\n            l = l.concat(this.data[key]);\n        }\n    }\n    return l;\n};\n\nSet.prototype.toString = function () {\n    return arrayToString(this.values());\n};\n\nfunction BitSet() {\n    this.data = [];\n    return this;\n}\n\nBitSet.prototype.add = function (value) {\n    this.data[value] = true;\n};\n\nBitSet.prototype.or = function (set) {\n    var bits = this;\n    Object.keys(set.data).map(function (alt) {\n        bits.add(alt);\n    });\n};\n\nBitSet.prototype.remove = function (value) {\n    delete this.data[value];\n};\n\nBitSet.prototype.contains = function (value) {\n    return this.data[value] === true;\n};\n\nBitSet.prototype.values = function () {\n    return Object.keys(this.data);\n};\n\nBitSet.prototype.minValue = function () {\n    return Math.min.apply(null, this.values());\n};\n\nBitSet.prototype.hashCode = function () {\n    var hash = new Hash();\n    hash.update(this.values());\n    return hash.finish();\n};\n\nBitSet.prototype.equals = function (other) {\n    if (!(other instanceof BitSet)) {\n        return false;\n    }\n    return this.hashCode() === other.hashCode();\n};\n\nObject.defineProperty(BitSet.prototype, \"length\", {\n    get: function () {\n        return this.values().length;\n    }\n});\n\nBitSet.prototype.toString = function () {\n    return \"{\" + this.values().join(\", \") + \"}\";\n};\n\nfunction Map(hashFunction, equalsFunction) {\n    this.data = {};\n    this.hashFunction = hashFunction || standardHashCodeFunction;\n    this.equalsFunction = equalsFunction || standardEqualsFunction;\n    return this;\n}\n\nObject.defineProperty(Map.prototype, \"length\", {\n    get: function () {\n        var l = 0;\n        for (var hashKey in this.data) {\n            if (hashKey.indexOf(\"hash_\") === 0) {\n                l = l + this.data[hashKey].length;\n            }\n        }\n        return l;\n    }\n});\n\nMap.prototype.put = function (key, value) {\n    var hashKey = \"hash_\" + this.hashFunction(key);\n    if (hashKey in this.data) {\n        var entries = this.data[hashKey];\n        for (var i = 0; i < entries.length; i++) {\n            var entry = entries[i];\n            if (this.equalsFunction(key, entry.key)) {\n                var oldValue = entry.value;\n                entry.value = value;\n                return oldValue;\n            }\n        }\n        entries.push({key:key, value:value});\n        return value;\n    } else {\n        this.data[hashKey] = [{key:key, value:value}];\n        return value;\n    }\n};\n\nMap.prototype.containsKey = function (key) {\n    var hashKey = \"hash_\" + this.hashFunction(key);\n    if(hashKey in this.data) {\n        var entries = this.data[hashKey];\n        for (var i = 0; i < entries.length; i++) {\n            var entry = entries[i];\n            if (this.equalsFunction(key, entry.key))\n                return true;\n        }\n    }\n    return false;\n};\n\nMap.prototype.get = function (key) {\n    var hashKey = \"hash_\" + this.hashFunction(key);\n    if(hashKey in this.data) {\n        var entries = this.data[hashKey];\n        for (var i = 0; i < entries.length; i++) {\n            var entry = entries[i];\n            if (this.equalsFunction(key, entry.key))\n                return entry.value;\n        }\n    }\n    return null;\n};\n\nMap.prototype.entries = function () {\n    var l = [];\n    for (var key in this.data) {\n        if (key.indexOf(\"hash_\") === 0) {\n            l = l.concat(this.data[key]);\n        }\n    }\n    return l;\n};\n\n\nMap.prototype.getKeys = function () {\n    return this.entries().map(function(e) {\n        return e.key;\n    });\n};\n\n\nMap.prototype.getValues = function () {\n    return this.entries().map(function(e) {\n            return e.value;\n    });\n};\n\n\nMap.prototype.toString = function () {\n    var ss = this.entries().map(function(entry) {\n        return '{' + entry.key + ':' + entry.value + '}';\n    });\n    return '[' + ss.join(\", \") + ']';\n};\n\n\nfunction AltDict() {\n    this.data = {};\n    return this;\n}\n\n\nAltDict.prototype.get = function (key) {\n    key = \"k-\" + key;\n    if (key in this.data) {\n        return this.data[key];\n    } else {\n        return null;\n    }\n};\n\nAltDict.prototype.put = function (key, value) {\n    key = \"k-\" + key;\n    this.data[key] = value;\n};\n\nAltDict.prototype.values = function () {\n    var data = this.data;\n    var keys = Object.keys(this.data);\n    return keys.map(function (key) {\n        return data[key];\n    });\n};\n\nfunction DoubleDict() {\n    return this;\n}\n\nfunction Hash() {\n    this.count = 0;\n    this.hash = 0;\n    return this;\n}\n\nHash.prototype.update = function () {\n    for(var i=0;i<arguments.length;i++) {\n        var value = arguments[i];\n        if (value == null)\n            continue;\n        if(Array.isArray(value))\n            this.update.apply(value);\n        else {\n            var k = 0;\n            switch (typeof(value)) {\n                case 'undefined':\n                case 'function':\n                    continue;\n                case 'number':\n                case 'boolean':\n                    k = value;\n                    break;\n                case 'string':\n                    k = value.hashCode();\n                    break;\n                default:\n                    value.updateHashCode(this);\n                    continue;\n            }\n            k = k * 0xCC9E2D51;\n            k = (k << 15) | (k >>> (32 - 15));\n            k = k * 0x1B873593;\n            this.count = this.count + 1;\n            var hash = this.hash ^ k;\n            hash = (hash << 13) | (hash >>> (32 - 13));\n            hash = hash * 5 + 0xE6546B64;\n            this.hash = hash;\n        }\n    }\n}\n\nHash.prototype.finish = function () {\n    var hash = this.hash ^ (this.count * 4);\n    hash = hash ^ (hash >>> 16);\n    hash = hash * 0x85EBCA6B;\n    hash = hash ^ (hash >>> 13);\n    hash = hash * 0xC2B2AE35;\n    hash = hash ^ (hash >>> 16);\n    return hash;\n}\n\nfunction hashStuff() {\n    var hash = new Hash();\n    hash.update.apply(arguments);\n    return hash.finish();\n}\n\nDoubleDict.prototype.get = function (a, b) {\n    var d = this[a] || null;\n    return d === null ? null : (d[b] || null);\n};\n\nDoubleDict.prototype.set = function (a, b, o) {\n    var d = this[a] || null;\n    if (d === null) {\n        d = {};\n        this[a] = d;\n    }\n    d[b] = o;\n};\n\n\nfunction escapeWhitespace(s, escapeSpaces) {\n    s = s.replace(/\\t/g, \"\\\\t\")\n         .replace(/\\n/g, \"\\\\n\")\n         .replace(/\\r/g, \"\\\\r\");\n    if (escapeSpaces) {\n        s = s.replace(/ /g, \"\\u00B7\");\n    }\n    return s;\n}\n\nfunction titleCase(str) {\n    return str.replace(/\\w\\S*/g, function (txt) {\n        return txt.charAt(0).toUpperCase() + txt.substr(1);\n    });\n};\n\nfunction equalArrays(a, b)\n{\n    if (!Array.isArray(a) || !Array.isArray(b))\n        return false;\n    if (a == b)\n        return true;\n    if (a.length != b.length)\n        return false;\n    for (var i = 0; i < a.length; i++) {\n        if (a[i] == b[i])\n            continue;\n        if (!a[i].equals(b[i]))\n            return false;\n    }\n    return true;\n};\n\nexports.Hash = Hash;\nexports.Set = Set;\nexports.Map = Map;\nexports.BitSet = BitSet;\nexports.AltDict = AltDict;\nexports.DoubleDict = DoubleDict;\nexports.hashStuff = hashStuff;\nexports.escapeWhitespace = escapeWhitespace;\nexports.arrayToString = arrayToString;\nexports.titleCase = titleCase;\nexports.equalArrays = equalArrays;\n\n\n/***/ }),\n\n/***/ \"c45H\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"1alW\");\nmodule.exports = __webpack_require__(\"FeBl\").Number.isInteger;\n\n\n/***/ }),\n\n/***/ \"d7EF\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _isIterable2 = __webpack_require__(\"us/S\");\n\nvar _isIterable3 = _interopRequireDefault(_isIterable2);\n\nvar _getIterator2 = __webpack_require__(\"BO1k\");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if ((0, _isIterable3.default)(Object(arr))) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\n/***/ }),\n\n/***/ \"dVol\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PRESENTABLE_STATUS_TIPS\", function() { return PRESENTABLE_STATUS_TIPS; });\nvar PRESENTABLE_STATUS_TIPS = [{\n  text: '测试状态',\n  type: 'info'\n}, {\n  text: '未开始执行',\n  type: 'info'\n}, {\n  text: '执行中',\n  type: ''\n}, {\n  text: '生效中',\n  type: 'success'\n}, {\n  text: '用户终止',\n  type: 'danger'\n}, {\n  text: '系统终止',\n  type: 'danger'\n}];\n\n/***/ }),\n\n/***/ \"dibs\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_index_vue__ = __webpack_require__(\"7Ae7\");\n/* unused harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_3eb35d32_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_index_vue__ = __webpack_require__(\"lL/Q\");\nfunction injectStyle (ssrContext) {\n  __webpack_require__(\"9eSa\")\n}\nvar normalizeComponent = __webpack_require__(\"VU/8\")\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-3eb35d32\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_index_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_3eb35d32_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_index_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ \"fZOM\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// https://github.com/tc39/proposal-object-values-entries\nvar $export = __webpack_require__(\"kM2E\");\nvar $values = __webpack_require__(\"mbce\")(false);\n\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n\n\n/***/ }),\n\n/***/ \"fxRn\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"+tPU\");\n__webpack_require__(\"zQR9\");\nmodule.exports = __webpack_require__(\"g8Ux\");\n\n\n/***/ }),\n\n/***/ \"g8Ux\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar anObject = __webpack_require__(\"77Pl\");\nvar get = __webpack_require__(\"3fs2\");\nmodule.exports = __webpack_require__(\"FeBl\").getIterator = function (it) {\n  var iterFn = get(it);\n  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n\n\n/***/ }),\n\n/***/ \"gRE1\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(\"TmV0\"), __esModule: true };\n\n/***/ }),\n\n/***/ \"h0lj\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\n// A lexer is recognizer that draws input symbols from a character stream.\n//  lexer grammars result in a subclass of this object. A Lexer object\n//  uses simplified match() and error recovery mechanisms in the interest of speed.\n\nvar Token = __webpack_require__(\"j/5l\").Token;\nvar Recognizer = __webpack_require__(\"2EdO\").Recognizer;\nvar CommonTokenFactory = __webpack_require__(\"TEvv\").CommonTokenFactory;\nvar RecognitionException  = __webpack_require__(\"5d5Q\").RecognitionException;\nvar LexerNoViableAltException = __webpack_require__(\"5d5Q\").LexerNoViableAltException;\n\nfunction TokenSource() {\n\treturn this;\n}\n\nfunction Lexer(input) {\n\tRecognizer.call(this);\n\tthis._input = input;\n\tthis._factory = CommonTokenFactory.DEFAULT;\n\tthis._tokenFactorySourcePair = [ this, input ];\n\n\tthis._interp = null; // child classes must populate this\n\n\t// The goal of all lexer rules/methods is to create a token object.\n\t// this is an instance variable as multiple rules may collaborate to\n\t// create a single token. nextToken will return this object after\n\t// matching lexer rule(s). If you subclass to allow multiple token\n\t// emissions, then set this to the last token to be matched or\n\t// something nonnull so that the auto token emit mechanism will not\n\t// emit another token.\n\tthis._token = null;\n\n\t// What character index in the stream did the current token start at?\n\t// Needed, for example, to get the text for current token. Set at\n\t// the start of nextToken.\n\tthis._tokenStartCharIndex = -1;\n\n\t// The line on which the first character of the token resides///\n\tthis._tokenStartLine = -1;\n\n\t// The character position of first character within the line///\n\tthis._tokenStartColumn = -1;\n\n\t// Once we see EOF on char stream, next token will be EOF.\n\t// If you have DONE : EOF ; then you see DONE EOF.\n\tthis._hitEOF = false;\n\n\t// The channel number for the current token///\n\tthis._channel = Token.DEFAULT_CHANNEL;\n\n\t// The token type for the current token///\n\tthis._type = Token.INVALID_TYPE;\n\n\tthis._modeStack = [];\n\tthis._mode = Lexer.DEFAULT_MODE;\n\n\t// You can set the text for the current token to override what is in\n\t// the input char buffer. Use setText() or can set this instance var.\n\t// /\n\tthis._text = null;\n\n\treturn this;\n}\n\nLexer.prototype = Object.create(Recognizer.prototype);\nLexer.prototype.constructor = Lexer;\n\nLexer.DEFAULT_MODE = 0;\nLexer.MORE = -2;\nLexer.SKIP = -3;\n\nLexer.DEFAULT_TOKEN_CHANNEL = Token.DEFAULT_CHANNEL;\nLexer.HIDDEN = Token.HIDDEN_CHANNEL;\nLexer.MIN_CHAR_VALUE = 0x0000;\nLexer.MAX_CHAR_VALUE = 0x10FFFF;\n\nLexer.prototype.reset = function() {\n\t// wack Lexer state variables\n\tif (this._input !== null) {\n\t\tthis._input.seek(0); // rewind the input\n\t}\n\tthis._token = null;\n\tthis._type = Token.INVALID_TYPE;\n\tthis._channel = Token.DEFAULT_CHANNEL;\n\tthis._tokenStartCharIndex = -1;\n\tthis._tokenStartColumn = -1;\n\tthis._tokenStartLine = -1;\n\tthis._text = null;\n\n\tthis._hitEOF = false;\n\tthis._mode = Lexer.DEFAULT_MODE;\n\tthis._modeStack = [];\n\n\tthis._interp.reset();\n};\n\n// Return a token from this source; i.e., match a token on the char stream.\nLexer.prototype.nextToken = function() {\n\tif (this._input === null) {\n\t\tthrow \"nextToken requires a non-null input stream.\";\n\t}\n\n\t// Mark start location in char stream so unbuffered streams are\n\t// guaranteed at least have text of current token\n\tvar tokenStartMarker = this._input.mark();\n\ttry {\n\t\twhile (true) {\n\t\t\tif (this._hitEOF) {\n\t\t\t\tthis.emitEOF();\n\t\t\t\treturn this._token;\n\t\t\t}\n\t\t\tthis._token = null;\n\t\t\tthis._channel = Token.DEFAULT_CHANNEL;\n\t\t\tthis._tokenStartCharIndex = this._input.index;\n\t\t\tthis._tokenStartColumn = this._interp.column;\n\t\t\tthis._tokenStartLine = this._interp.line;\n\t\t\tthis._text = null;\n\t\t\tvar continueOuter = false;\n\t\t\twhile (true) {\n\t\t\t\tthis._type = Token.INVALID_TYPE;\n\t\t\t\tvar ttype = Lexer.SKIP;\n\t\t\t\ttry {\n\t\t\t\t\tttype = this._interp.match(this._input, this._mode);\n\t\t\t\t} catch (e) {\n\t\t\t\t    if(e instanceof RecognitionException) {\n                        this.notifyListeners(e); // report error\n                        this.recover(e);\n                    } else {\n                        console.log(e.stack);\n                        throw e;\n                    }\n\t\t\t\t}\n\t\t\t\tif (this._input.LA(1) === Token.EOF) {\n\t\t\t\t\tthis._hitEOF = true;\n\t\t\t\t}\n\t\t\t\tif (this._type === Token.INVALID_TYPE) {\n\t\t\t\t\tthis._type = ttype;\n\t\t\t\t}\n\t\t\t\tif (this._type === Lexer.SKIP) {\n\t\t\t\t\tcontinueOuter = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (this._type !== Lexer.MORE) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (continueOuter) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (this._token === null) {\n\t\t\t\tthis.emit();\n\t\t\t}\n\t\t\treturn this._token;\n\t\t}\n\t} finally {\n\t\t// make sure we release marker after match or\n\t\t// unbuffered char stream will keep buffering\n\t\tthis._input.release(tokenStartMarker);\n\t}\n};\n\n// Instruct the lexer to skip creating a token for current lexer rule\n// and look for another token. nextToken() knows to keep looking when\n// a lexer rule finishes with token set to SKIP_TOKEN. Recall that\n// if token==null at end of any token rule, it creates one for you\n// and emits it.\n// /\nLexer.prototype.skip = function() {\n\tthis._type = Lexer.SKIP;\n};\n\nLexer.prototype.more = function() {\n\tthis._type = Lexer.MORE;\n};\n\nLexer.prototype.mode = function(m) {\n\tthis._mode = m;\n};\n\nLexer.prototype.pushMode = function(m) {\n\tif (this._interp.debug) {\n\t\tconsole.log(\"pushMode \" + m);\n\t}\n\tthis._modeStack.push(this._mode);\n\tthis.mode(m);\n};\n\nLexer.prototype.popMode = function() {\n\tif (this._modeStack.length === 0) {\n\t\tthrow \"Empty Stack\";\n\t}\n\tif (this._interp.debug) {\n\t\tconsole.log(\"popMode back to \" + this._modeStack.slice(0, -1));\n\t}\n\tthis.mode(this._modeStack.pop());\n\treturn this._mode;\n};\n\n// Set the char stream and reset the lexer\nObject.defineProperty(Lexer.prototype, \"inputStream\", {\n\tget : function() {\n\t\treturn this._input;\n\t},\n\tset : function(input) {\n\t\tthis._input = null;\n\t\tthis._tokenFactorySourcePair = [ this, this._input ];\n\t\tthis.reset();\n\t\tthis._input = input;\n\t\tthis._tokenFactorySourcePair = [ this, this._input ];\n\t}\n});\n\nObject.defineProperty(Lexer.prototype, \"sourceName\", {\n\tget : function sourceName() {\n\t\treturn this._input.sourceName;\n\t}\n});\n\n// By default does not support multiple emits per nextToken invocation\n// for efficiency reasons. Subclass and override this method, nextToken,\n// and getToken (to push tokens into a list and pull from that list\n// rather than a single variable as this implementation does).\n// /\nLexer.prototype.emitToken = function(token) {\n\tthis._token = token;\n};\n\n// The standard method called to automatically emit a token at the\n// outermost lexical rule. The token object should point into the\n// char buffer start..stop. If there is a text override in 'text',\n// use that to set the token's text. Override this method to emit\n// custom Token objects or provide a new factory.\n// /\nLexer.prototype.emit = function() {\n\tvar t = this._factory.create(this._tokenFactorySourcePair, this._type,\n\t\t\tthis._text, this._channel, this._tokenStartCharIndex, this\n\t\t\t\t\t.getCharIndex() - 1, this._tokenStartLine,\n\t\t\tthis._tokenStartColumn);\n\tthis.emitToken(t);\n\treturn t;\n};\n\nLexer.prototype.emitEOF = function() {\n\tvar cpos = this.column;\n\tvar lpos = this.line;\n\tvar eof = this._factory.create(this._tokenFactorySourcePair, Token.EOF,\n\t\t\tnull, Token.DEFAULT_CHANNEL, this._input.index,\n\t\t\tthis._input.index - 1, lpos, cpos);\n\tthis.emitToken(eof);\n\treturn eof;\n};\n\nObject.defineProperty(Lexer.prototype, \"type\", {\n\tget : function() {\n\t\treturn this.type;\n\t},\n\tset : function(type) {\n\t\tthis._type = type;\n\t}\n});\n\nObject.defineProperty(Lexer.prototype, \"line\", {\n\tget : function() {\n\t\treturn this._interp.line;\n\t},\n\tset : function(line) {\n\t\tthis._interp.line = line;\n\t}\n});\n\nObject.defineProperty(Lexer.prototype, \"column\", {\n\tget : function() {\n\t\treturn this._interp.column;\n\t},\n\tset : function(column) {\n\t\tthis._interp.column = column;\n\t}\n});\n\n\n// What is the index of the current character of lookahead?///\nLexer.prototype.getCharIndex = function() {\n\treturn this._input.index;\n};\n\n// Return the text matched so far for the current token or any text override.\n//Set the complete text of this token; it wipes any previous changes to the text.\nObject.defineProperty(Lexer.prototype, \"text\", {\n\tget : function() {\n\t\tif (this._text !== null) {\n\t\t\treturn this._text;\n\t\t} else {\n\t\t\treturn this._interp.getText(this._input);\n\t\t}\n\t},\n\tset : function(text) {\n\t\tthis._text = text;\n\t}\n});\n// Return a list of all Token objects in input char stream.\n// Forces load of all tokens. Does not include EOF token.\n// /\nLexer.prototype.getAllTokens = function() {\n\tvar tokens = [];\n\tvar t = this.nextToken();\n\twhile (t.type !== Token.EOF) {\n\t\ttokens.push(t);\n\t\tt = this.nextToken();\n\t}\n\treturn tokens;\n};\n\nLexer.prototype.notifyListeners = function(e) {\n\tvar start = this._tokenStartCharIndex;\n\tvar stop = this._input.index;\n\tvar text = this._input.getText(start, stop);\n\tvar msg = \"token recognition error at: '\" + this.getErrorDisplay(text) + \"'\";\n\tvar listener = this.getErrorListenerDispatch();\n\tlistener.syntaxError(this, null, this._tokenStartLine,\n\t\t\tthis._tokenStartColumn, msg, e);\n};\n\nLexer.prototype.getErrorDisplay = function(s) {\n\tvar d = [];\n\tfor (var i = 0; i < s.length; i++) {\n\t\td.push(s[i]);\n\t}\n\treturn d.join('');\n};\n\nLexer.prototype.getErrorDisplayForChar = function(c) {\n\tif (c.charCodeAt(0) === Token.EOF) {\n\t\treturn \"<EOF>\";\n\t} else if (c === '\\n') {\n\t\treturn \"\\\\n\";\n\t} else if (c === '\\t') {\n\t\treturn \"\\\\t\";\n\t} else if (c === '\\r') {\n\t\treturn \"\\\\r\";\n\t} else {\n\t\treturn c;\n\t}\n};\n\nLexer.prototype.getCharErrorDisplay = function(c) {\n\treturn \"'\" + this.getErrorDisplayForChar(c) + \"'\";\n};\n\n// Lexers can normally match any char in it's vocabulary after matching\n// a token, so do the easy thing and just kill a character and hope\n// it all works out. You can instead use the rule invocation stack\n// to do sophisticated error recovery if you are in a fragment rule.\n// /\nLexer.prototype.recover = function(re) {\n\tif (this._input.LA(1) !== Token.EOF) {\n\t\tif (re instanceof LexerNoViableAltException) {\n\t\t\t// skip a char and try again\n\t\t\tthis._interp.consume(this._input);\n\t\t} else {\n\t\t\t// TODO: Do we lose character or line position information?\n\t\t\tthis._input.consume();\n\t\t}\n\t}\n};\n\nexports.Lexer = Lexer;\n\n\n/***/ }),\n\n/***/ \"hL6x\":\n/***/ (function(module, exports) {\n\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n// A DFA walker that knows how to dump them to serialized strings.#/\n\n\nfunction DFASerializer(dfa, literalNames, symbolicNames) {\n\tthis.dfa = dfa;\n\tthis.literalNames = literalNames || [];\n\tthis.symbolicNames = symbolicNames || [];\n\treturn this;\n}\n\nDFASerializer.prototype.toString = function() {\n   if(this.dfa.s0 === null) {\n       return null;\n   }\n   var buf = \"\";\n   var states = this.dfa.sortedStates();\n   for(var i=0;i<states.length;i++) {\n       var s = states[i];\n       if(s.edges!==null) {\n            var n = s.edges.length;\n            for(var j=0;j<n;j++) {\n                var t = s.edges[j] || null;\n                if(t!==null && t.stateNumber !== 0x7FFFFFFF) {\n                    buf = buf.concat(this.getStateString(s));\n                    buf = buf.concat(\"-\");\n                    buf = buf.concat(this.getEdgeLabel(j));\n                    buf = buf.concat(\"->\");\n                    buf = buf.concat(this.getStateString(t));\n                    buf = buf.concat('\\n');\n                }\n            }\n       }\n   }\n   return buf.length===0 ? null : buf;\n};\n\nDFASerializer.prototype.getEdgeLabel = function(i) {\n    if (i===0) {\n        return \"EOF\";\n    } else if(this.literalNames !==null || this.symbolicNames!==null) {\n        return this.literalNames[i-1] || this.symbolicNames[i-1];\n    } else {\n        return String.fromCharCode(i-1);\n    }\n};\n\nDFASerializer.prototype.getStateString = function(s) {\n    var baseStateStr = ( s.isAcceptState ? \":\" : \"\") + \"s\" + s.stateNumber + ( s.requiresFullContext ? \"^\" : \"\");\n    if(s.isAcceptState) {\n        if (s.predicates !== null) {\n            return baseStateStr + \"=>\" + s.predicates.toString();\n        } else {\n            return baseStateStr + \"=>\" + s.prediction.toString();\n        }\n    } else {\n        return baseStateStr;\n    }\n};\n\nfunction LexerDFASerializer(dfa) {\n\tDFASerializer.call(this, dfa, null);\n\treturn this;\n}\n\nLexerDFASerializer.prototype = Object.create(DFASerializer.prototype);\nLexerDFASerializer.prototype.constructor = LexerDFASerializer;\n\nLexerDFASerializer.prototype.getEdgeLabel = function(i) {\n\treturn \"'\" + String.fromCharCode(i) + \"'\";\n};\n\nexports.DFASerializer = DFASerializer;\nexports.LexerDFASerializer = LexerDFASerializer;\n\n\n\n/***/ }),\n\n/***/ \"hVtP\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('presentable-steps',{attrs:{\"active\":_vm.step.active}}),_vm._v(\" \"),_c('el-row',[_c('el-form',{ref:\"ruleForm\",attrs:{\"model\":_vm.formData,\"rules\":_vm.rules,\"label-width\":\"200px\"}},[_c('el-form-item',{attrs:{\"label\":\"presentable名\",\"required\":\"\",\"prop\":\"presentableName\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入presentable名\"},model:{value:(_vm.formData.presentableName),callback:function ($$v) {_vm.$set(_vm.formData, \"presentableName\", $$v)},expression:\"formData.presentableName\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"presentable tags\",\"prop\":\"presentableTags\"}},[_c('presentable-tags',{model:{value:(_vm.formData.presentableTags),callback:function ($$v) {_vm.$set(_vm.formData, \"presentableTags\", $$v)},expression:\"formData.presentableTags\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"presentable_policy\",\"required\":\"\",\"prop\":\"userPolicy\"}},[_c('el-input',{staticClass:\"gap\",attrs:{\"spellcheck\":\"false\",\"type\":\"textarea\",\"rows\":8,\"placeholder\":\"请输入policy\"},model:{value:(_vm.formData.userPolicy),callback:function ($$v) {_vm.$set(_vm.formData, \"userPolicy\", $$v)},expression:\"formData.userPolicy\"}})],1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.validateLoading},on:{\"click\":function($event){_vm.validate('ruleForm')}}},[_vm._v(\"校验\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.submitLoading},on:{\"click\":_vm.submit}},[_vm._v(\"提交\")])],1)],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ \"hi6K\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_keys__ = __webpack_require__(\"fZjL\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_keys___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_keys__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_assign__ = __webpack_require__(\"woOf\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_assign___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_assign__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_presentable_policy_compiler__ = __webpack_require__(\"I+6F\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_presentable_policy_compiler___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_presentable_policy_compiler__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__views_node_presentable_steps_index_vue__ = __webpack_require__(\"0AMZ\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__contract_detail_index_vue__ = __webpack_require__(\"dibs\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__policy_index_vue__ = __webpack_require__(\"9e1m\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__tags_index_vue__ = __webpack_require__(\"ItGU\");\n\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'presentable-detail',\n  data: function data() {\n    return {\n      tabPosition: 'left',\n      detail: {},\n      activeTabName: 'resource',\n      userPolicy: '',\n      inputValue: '',\n      tags: []\n    };\n  },\n\n  components: {\n    PresentableSteps: __WEBPACK_IMPORTED_MODULE_3__views_node_presentable_steps_index_vue__[\"a\" /* default */],\n    PresentableContractDetail: __WEBPACK_IMPORTED_MODULE_4__contract_detail_index_vue__[\"a\" /* default */],\n    PresentablePolicy: __WEBPACK_IMPORTED_MODULE_5__policy_index_vue__[\"a\" /* default */],\n    PresentableTags: __WEBPACK_IMPORTED_MODULE_6__tags_index_vue__[\"a\" /* default */]\n  },\n\n  mounted: function mounted() {\n    var query = this.$route.query;\n\n    if (this.$route.hash) {\n      this.activeTabName = this.$route.hash.slice(1);\n    }\n\n    if (query.presentableId) {\n      this.loadPresentableDetail(query.presentableId).then(this.loadDetail.bind(this)).then(this.formatData.bind(this));\n    } else if (query.contractId) {\n      var param = __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_assign___default()({}, query);\n      this.loadDetail(param).then(this.formatData.bind(this));\n    } else {\n      this.$message.error('缺少参数');\n    }\n  },\n\n  methods: {\n    loadDetail: function loadDetail(detail) {\n      var _this = this;\n\n      return this.loadContractDetail(detail.contractId).then(function (contract) {\n        return _this.loadResourceDetail(contract.resourceId).then(function (resource) {\n          detail._contractDetail = contract;\n          detail._resourceDetail = resource;\n          return detail;\n        });\n      }).catch(this.$error.showErrorMessage);\n    },\n    beautifySegmentText: function beautifySegmentText(text) {\n      if (text) {\n        return __WEBPACK_IMPORTED_MODULE_2_presentable_policy_compiler___default.a.compile(text, 'beautify').stringArray.splice(1).join(' ').replace(/\\n\\s/g, '\\n');\n      } else {\n        return '';\n      }\n    },\n    formatData: function formatData(detail) {\n      var _this2 = this;\n\n      if (detail.presentableId) {\n        detail.policy.forEach(function (segment) {\n          segment._formatSegmentText = _this2.beautifySegmentText(segment.segmentText);\n        });\n        detail._formatSegmentText = this.beautifySegmentText(detail.policyText);\n        this.originPresentable = {\n          name: detail.name,\n          policyText: detail.policyText,\n          userDefinedTags: detail.tagInfo.userDefined.join(',')\n        };\n      }\n\n      this.detail = detail;\n      console.log('detail', detail);\n    },\n    loadResourceDetail: function loadResourceDetail(resId) {\n      return this.$services.resource.get(resId).then(function (res) {\n        if (res.data.errcode === 0) {\n          return res.getData();\n        } else {\n          throw new Error(res.data.msg);\n        }\n      });\n    },\n    loadPresentableDetail: function loadPresentableDetail(param) {\n      return this.$services.presentables.get(param || {}).then(function (res) {\n        if (res.data.errcode === 0) {\n          return res.getData();\n        } else {\n          throw new Error(res.data.msg);\n        }\n      }).catch(this.$error.showErrorMessage);\n    },\n    loadContractDetail: function loadContractDetail(param) {\n      return this.$services.contract.get(param || {}).then(function (res) {\n        if (res.data.errcode === 0) {\n          return res.getData();\n        } else {\n          throw new Error(res.data.msg);\n        }\n      }).catch(this.$error.showErrorMessage);\n    },\n    createUserPolicyHandler: function createUserPolicyHandler() {\n      var path = '/node/' + this.$route.params.nodeId + '/presentable/edit';\n      this.$router.push({\n        path: path,\n        query: {\n          contractId: this.detail._contractDetail.contractId\n        }\n      });\n    },\n    updatePresentableHandler: function updatePresentableHandler() {\n      var _this3 = this;\n\n      var data = {\n        name: this.detail.name,\n        policyText: this.detail._formatSegmentText,\n        userDefinedTags: this.detail.tagInfo.userDefined.join(',')\n      };\n      var param = {};\n      __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_keys___default()(this.originPresentable).forEach(function (key) {\n        if (data[key] !== _this3.originPresentable[key]) {\n          param[key] = data[key];\n        }\n      });\n\n      this.originPresentable = data;\n      this.$services.presentables.put(this.detail.presentableId, param).then(function (res) {\n        if (res.data.errcode === 0) {\n          var data = res.getData();\n          __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_assign___default()(_this3.detail, data);\n        } else {\n          _this3.$message.error(res.data.msg || '更新失败');\n        }\n      }).catch(this.$error.showErrorMessage);\n    },\n    updateContractDetail: function updateContractDetail() {\n      var _this4 = this;\n\n      this.loadContractDetail(this.detail._contractDetail.contractId).then(function (contract) {\n        __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_assign___default()(_this4.detail._contractDetail, contract);\n      });\n    }\n  }\n});\n\n/***/ }),\n\n/***/ \"hs4g\":\n/***/ (function(module, exports) {\n\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nfunction ATNDeserializationOptions(copyFrom) {\n\tif(copyFrom===undefined) {\n\t\tcopyFrom = null;\n\t}\n\tthis.readOnly = false;\n    this.verifyATN = copyFrom===null ? true : copyFrom.verifyATN;\n    this.generateRuleBypassTransitions = copyFrom===null ? false : copyFrom.generateRuleBypassTransitions;\n\n    return this;\n}\n\nATNDeserializationOptions.defaultOptions = new ATNDeserializationOptions();\nATNDeserializationOptions.defaultOptions.readOnly = true;\n\n//    def __setattr__(self, key, value):\n//        if key!=\"readOnly\" and self.readOnly:\n//            raise Exception(\"The object is read only.\")\n//        super(type(self), self).__setattr__(key,value)\n\nexports.ATNDeserializationOptions = ATNDeserializationOptions;\n\n\n/***/ }),\n\n/***/ \"iUzR\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// Generated from presentable_policy.g4 by ANTLR 4.7\r\n// jshint ignore: start\r\nvar antlr4 = __webpack_require__(\"9C8F\");\r\nvar presentable_policyListener = __webpack_require__(\"LPMK\").presentable_policyListener;\r\nvar grammarFileName = \"presentable_policy.g4\";\r\n\r\nvar serializedATN = [\"\\u0003\\u608b\\ua72a\\u8133\\ub9ed\\u417c\\u3be7\\u7786\\u5964\",\r\n    \"\\u00030\\u011a\\u0004\\u0002\\t\\u0002\\u0004\\u0003\\t\\u0003\\u0004\\u0004\\t\",\r\n    \"\\u0004\\u0004\\u0005\\t\\u0005\\u0004\\u0006\\t\\u0006\\u0004\\u0007\\t\\u0007\\u0004\",\r\n    \"\\b\\t\\b\\u0004\\t\\t\\t\\u0004\\n\\t\\n\\u0004\\u000b\\t\\u000b\\u0004\\f\\t\\f\\u0004\",\r\n    \"\\r\\t\\r\\u0004\\u000e\\t\\u000e\\u0004\\u000f\\t\\u000f\\u0004\\u0010\\t\\u0010\\u0004\",\r\n    \"\\u0011\\t\\u0011\\u0004\\u0012\\t\\u0012\\u0004\\u0013\\t\\u0013\\u0004\\u0014\\t\",\r\n    \"\\u0014\\u0004\\u0015\\t\\u0015\\u0004\\u0016\\t\\u0016\\u0004\\u0017\\t\\u0017\\u0004\",\r\n    \"\\u0018\\t\\u0018\\u0004\\u0019\\t\\u0019\\u0004\\u001a\\t\\u001a\\u0004\\u001b\\t\",\r\n    \"\\u001b\\u0004\\u001c\\t\\u001c\\u0004\\u001d\\t\\u001d\\u0004\\u001e\\t\\u001e\\u0004\",\r\n    \"\\u001f\\t\\u001f\\u0004 \\t \\u0004!\\t!\\u0004\\\"\\t\\\"\\u0004#\\t#\\u0004$\\t$\\u0004\",\r\n    \"%\\t%\\u0004&\\t&\\u0003\\u0002\\u0006\\u0002N\\n\\u0002\\r\\u0002\\u000e\\u0002\",\r\n    \"O\\u0003\\u0002\\u0003\\u0002\\u0003\\u0003\\u0003\\u0003\\u0006\\u0003V\\n\\u0003\",\r\n    \"\\r\\u0003\\u000e\\u0003W\\u0003\\u0003\\u0003\\u0003\\u0007\\u0003\\\\\\n\\u0003\",\r\n    \"\\f\\u0003\\u000e\\u0003_\\u000b\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0004\",\r\n    \"\\u0003\\u0004\\u0003\\u0004\\u0005\\u0004f\\n\\u0004\\u0003\\u0004\\u0003\\u0004\",\r\n    \"\\u0003\\u0004\\u0005\\u0004k\\n\\u0004\\u0005\\u0004m\\n\\u0004\\u0003\\u0005\\u0003\",\r\n    \"\\u0005\\u0007\\u0005q\\n\\u0005\\f\\u0005\\u000e\\u0005t\\u000b\\u0005\\u0003\\u0005\",\r\n    \"\\u0007\\u0005w\\n\\u0005\\f\\u0005\\u000e\\u0005z\\u000b\\u0005\\u0003\\u0006\\u0003\",\r\n    \"\\u0006\\u0003\\u0006\\u0007\\u0006\\u007f\\n\\u0006\\f\\u0006\\u000e\\u0006\\u0082\",\r\n    \"\\u000b\\u0006\\u0003\\u0007\\u0003\\u0007\\u0003\\u0007\\u0003\\u0007\\u0007\\u0007\",\r\n    \"\\u0088\\n\\u0007\\f\\u0007\\u000e\\u0007\\u008b\\u000b\\u0007\\u0003\\b\\u0003\\b\",\r\n    \"\\u0006\\b\\u008f\\n\\b\\r\\b\\u000e\\b\\u0090\\u0003\\t\\u0003\\t\\u0003\\t\\u0003\\t\",\r\n    \"\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0007\\n\\u009c\\n\\n\\f\\n\\u000e\",\r\n    \"\\n\\u009f\\u000b\\n\\u0003\\n\\u0003\\n\\u0007\\n\\u00a3\\n\\n\\f\\n\\u000e\\n\\u00a6\",\r\n    \"\\u000b\\n\\u0003\\u000b\\u0003\\u000b\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\",\r\n    \"\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0005\\f\\u00b4\\n\\f\\u0003\\r\",\r\n    \"\\u0003\\r\\u0003\\r\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\\u000f\\u0003\",\r\n    \"\\u000f\\u0003\\u000f\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\",\r\n    \"\\u0011\\u0003\\u0011\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\",\r\n    \"\\u0013\\u0003\\u0013\\u0005\\u0013\\u00cb\\n\\u0013\\u0003\\u0014\\u0003\\u0014\",\r\n    \"\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0015\\u0003\\u0015\",\r\n    \"\\u0003\\u0015\\u0003\\u0016\\u0003\\u0016\\u0007\\u0016\\u00d8\\n\\u0016\\f\\u0016\",\r\n    \"\\u000e\\u0016\\u00db\\u000b\\u0016\\u0003\\u0016\\u0006\\u0016\\u00de\\n\\u0016\",\r\n    \"\\r\\u0016\\u000e\\u0016\\u00df\\u0003\\u0017\\u0003\\u0017\\u0005\\u0017\\u00e4\",\r\n    \"\\n\\u0017\\u0003\\u0018\\u0003\\u0018\\u0003\\u0018\\u0003\\u0019\\u0003\\u0019\",\r\n    \"\\u0003\\u0019\\u0003\\u001a\\u0003\\u001a\\u0005\\u001a\\u00ee\\n\\u001a\\u0003\",\r\n    \"\\u001b\\u0003\\u001b\\u0003\\u001b\\u0003\\u001c\\u0003\\u001c\\u0003\\u001c\\u0003\",\r\n    \"\\u001d\\u0003\\u001d\\u0003\\u001e\\u0003\\u001e\\u0003\\u001f\\u0003\\u001f\\u0003\",\r\n    \" \\u0003 \\u0003 \\u0007 \\u00ff\\n \\f \\u000e \\u0102\\u000b \\u0003!\\u0003\",\r\n    \"!\\u0003!\\u0007!\\u0107\\n!\\f!\\u000e!\\u010a\\u000b!\\u0003\\\"\\u0003\\\"\\u0003\",\r\n    \"#\\u0003#\\u0003$\\u0003$\\u0003%\\u0003%\\u0003%\\u0003%\\u0003&\\u0003&\\u0003\",\r\n    \"&\\u0003&\\u0003&\\u0002\\u0002\\'\\u0002\\u0004\\u0006\\b\\n\\f\\u000e\\u0010\\u0012\",\r\n    \"\\u0014\\u0016\\u0018\\u001a\\u001c\\u001e \\\"$&(*,.02468:<>@BDFHJ\\u0002\\u0004\",\r\n    \"\\u0003\\u0002\\u0019\\u001a\\u0004\\u0002\\u0012\\u0012\\u001b\\u001d\\u0002\\u0111\",\r\n    \"\\u0002M\\u0003\\u0002\\u0002\\u0002\\u0004S\\u0003\\u0002\\u0002\\u0002\\u0006\",\r\n    \"l\\u0003\\u0002\\u0002\\u0002\\bn\\u0003\\u0002\\u0002\\u0002\\n{\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\f\\u0083\\u0003\\u0002\\u0002\\u0002\\u000e\\u008c\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0010\\u0092\\u0003\\u0002\\u0002\\u0002\\u0012\\u0096\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0014\\u00a7\\u0003\\u0002\\u0002\\u0002\\u0016\\u00b3\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0018\\u00b5\\u0003\\u0002\\u0002\\u0002\\u001a\\u00b8\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u001c\\u00bb\\u0003\\u0002\\u0002\\u0002\\u001e\\u00be\\u0003\\u0002\",\r\n    \"\\u0002\\u0002 \\u00c2\\u0003\\u0002\\u0002\\u0002\\\"\\u00c4\\u0003\\u0002\\u0002\",\r\n    \"\\u0002$\\u00ca\\u0003\\u0002\\u0002\\u0002&\\u00cc\\u0003\\u0002\\u0002\\u0002\",\r\n    \"(\\u00d2\\u0003\\u0002\\u0002\\u0002*\\u00d5\\u0003\\u0002\\u0002\\u0002,\\u00e3\",\r\n    \"\\u0003\\u0002\\u0002\\u0002.\\u00e5\\u0003\\u0002\\u0002\\u00020\\u00e8\\u0003\",\r\n    \"\\u0002\\u0002\\u00022\\u00ed\\u0003\\u0002\\u0002\\u00024\\u00ef\\u0003\\u0002\",\r\n    \"\\u0002\\u00026\\u00f2\\u0003\\u0002\\u0002\\u00028\\u00f5\\u0003\\u0002\\u0002\",\r\n    \"\\u0002:\\u00f7\\u0003\\u0002\\u0002\\u0002<\\u00f9\\u0003\\u0002\\u0002\\u0002\",\r\n    \">\\u00fb\\u0003\\u0002\\u0002\\u0002@\\u0103\\u0003\\u0002\\u0002\\u0002B\\u010b\",\r\n    \"\\u0003\\u0002\\u0002\\u0002D\\u010d\\u0003\\u0002\\u0002\\u0002F\\u010f\\u0003\",\r\n    \"\\u0002\\u0002\\u0002H\\u0111\\u0003\\u0002\\u0002\\u0002J\\u0115\\u0003\\u0002\",\r\n    \"\\u0002\\u0002LN\\u0005\\u0004\\u0003\\u0002ML\\u0003\\u0002\\u0002\\u0002NO\\u0003\",\r\n    \"\\u0002\\u0002\\u0002OM\\u0003\\u0002\\u0002\\u0002OP\\u0003\\u0002\\u0002\\u0002\",\r\n    \"PQ\\u0003\\u0002\\u0002\\u0002QR\\u0007\\u0002\\u0002\\u0003R\\u0003\\u0003\\u0002\",\r\n    \"\\u0002\\u0002SU\\u0007\\u001e\\u0002\\u0002TV\\u0005\\u0006\\u0004\\u0002UT\\u0003\",\r\n    \"\\u0002\\u0002\\u0002VW\\u0003\\u0002\\u0002\\u0002WU\\u0003\\u0002\\u0002\\u0002\",\r\n    \"WX\\u0003\\u0002\\u0002\\u0002XY\\u0003\\u0002\\u0002\\u0002Y]\\u0007\\u0003\\u0002\",\r\n    \"\\u0002Z\\\\\\u0005\\u000e\\b\\u0002[Z\\u0003\\u0002\\u0002\\u0002\\\\_\\u0003\\u0002\",\r\n    \"\\u0002\\u0002][\\u0003\\u0002\\u0002\\u0002]^\\u0003\\u0002\\u0002\\u0002^`\\u0003\",\r\n    \"\\u0002\\u0002\\u0002_]\\u0003\\u0002\\u0002\\u0002`a\\u0005\\b\\u0005\\u0002a\",\r\n    \"\\u0005\\u0003\\u0002\\u0002\\u0002be\\u0005\\n\\u0006\\u0002cd\\u0007\\u0004\\u0002\",\r\n    \"\\u0002df\\u0005\\f\\u0007\\u0002ec\\u0003\\u0002\\u0002\\u0002ef\\u0003\\u0002\",\r\n    \"\\u0002\\u0002fm\\u0003\\u0002\\u0002\\u0002gj\\u0005\\f\\u0007\\u0002hi\\u0007\",\r\n    \"\\u0004\\u0002\\u0002ik\\u0005\\n\\u0006\\u0002jh\\u0003\\u0002\\u0002\\u0002j\",\r\n    \"k\\u0003\\u0002\\u0002\\u0002km\\u0003\\u0002\\u0002\\u0002lb\\u0003\\u0002\\u0002\",\r\n    \"\\u0002lg\\u0003\\u0002\\u0002\\u0002m\\u0007\\u0003\\u0002\\u0002\\u0002nx\\u0007\",\r\n    \"\\u0005\\u0002\\u0002oq\\u0007\\u0006\\u0002\\u0002po\\u0003\\u0002\\u0002\\u0002\",\r\n    \"qt\\u0003\\u0002\\u0002\\u0002rp\\u0003\\u0002\\u0002\\u0002rs\\u0003\\u0002\\u0002\",\r\n    \"\\u0002su\\u0003\\u0002\\u0002\\u0002tr\\u0003\\u0002\\u0002\\u0002uw\\u0007-\",\r\n    \"\\u0002\\u0002vr\\u0003\\u0002\\u0002\\u0002wz\\u0003\\u0002\\u0002\\u0002xv\\u0003\",\r\n    \"\\u0002\\u0002\\u0002xy\\u0003\\u0002\\u0002\\u0002y\\t\\u0003\\u0002\\u0002\\u0002\",\r\n    \"zx\\u0003\\u0002\\u0002\\u0002{\\u0080\\u0005> \\u0002|}\\u0007\\u0006\\u0002\",\r\n    \"\\u0002}\\u007f\\u0005> \\u0002~|\\u0003\\u0002\\u0002\\u0002\\u007f\\u0082\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0080~\\u0003\\u0002\\u0002\\u0002\\u0080\\u0081\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0081\\u000b\\u0003\\u0002\\u0002\\u0002\\u0082\\u0080\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0083\\u0084\\u0007\\u0007\\u0002\\u0002\\u0084\\u0089\\u0005\",\r\n    \"@!\\u0002\\u0085\\u0086\\u0007\\u0006\\u0002\\u0002\\u0086\\u0088\\u0005@!\\u0002\",\r\n    \"\\u0087\\u0085\\u0003\\u0002\\u0002\\u0002\\u0088\\u008b\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0089\\u0087\\u0003\\u0002\\u0002\\u0002\\u0089\\u008a\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u008a\\r\\u0003\\u0002\\u0002\\u0002\\u008b\\u0089\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u008c\\u008e\\u0005\\u0010\\t\\u0002\\u008d\\u008f\\u0005\\u0012\\n\\u0002\\u008e\",\r\n    \"\\u008d\\u0003\\u0002\\u0002\\u0002\\u008f\\u0090\\u0003\\u0002\\u0002\\u0002\\u0090\",\r\n    \"\\u008e\\u0003\\u0002\\u0002\\u0002\\u0090\\u0091\\u0003\\u0002\\u0002\\u0002\\u0091\",\r\n    \"\\u000f\\u0003\\u0002\\u0002\\u0002\\u0092\\u0093\\u0007#\\u0002\\u0002\\u0093\",\r\n    \"\\u0094\\u0007-\\u0002\\u0002\\u0094\\u0095\\u0007\\b\\u0002\\u0002\\u0095\\u0011\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0096\\u0097\\u0007!\\u0002\\u0002\\u0097\\u0098\",\r\n    \"\\u0007\\\"\\u0002\\u0002\\u0098\\u0099\\u0007-\\u0002\\u0002\\u0099\\u009d\\u0007\",\r\n    \"$\\u0002\\u0002\\u009a\\u009c\\u0005\\u0014\\u000b\\u0002\\u009b\\u009a\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u009c\\u009f\\u0003\\u0002\\u0002\\u0002\\u009d\\u009b\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u009d\\u009e\\u0003\\u0002\\u0002\\u0002\\u009e\\u00a0\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u009f\\u009d\\u0003\\u0002\\u0002\\u0002\\u00a0\\u00a4\\u0005\",\r\n    \"\\u0016\\f\\u0002\\u00a1\\u00a3\\u0005\\u0018\\r\\u0002\\u00a2\\u00a1\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u00a3\\u00a6\\u0003\\u0002\\u0002\\u0002\\u00a4\\u00a2\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u00a4\\u00a5\\u0003\\u0002\\u0002\\u0002\\u00a5\\u0013\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u00a6\\u00a4\\u0003\\u0002\\u0002\\u0002\\u00a7\\u00a8\\u0007%\",\r\n    \"\\u0002\\u0002\\u00a8\\u0015\\u0003\\u0002\\u0002\\u0002\\u00a9\\u00b4\\u0005\\u001a\",\r\n    \"\\u000e\\u0002\\u00aa\\u00b4\\u0005\\u001c\\u000f\\u0002\\u00ab\\u00b4\\u0005\\u001e\",\r\n    \"\\u0010\\u0002\\u00ac\\u00b4\\u0005 \\u0011\\u0002\\u00ad\\u00b4\\u0005\\\"\\u0012\",\r\n    \"\\u0002\\u00ae\\u00b4\\u0005$\\u0013\\u0002\\u00af\\u00b4\\u0005*\\u0016\\u0002\",\r\n    \"\\u00b0\\u00b4\\u0005,\\u0017\\u0002\\u00b1\\u00b4\\u00052\\u001a\\u0002\\u00b2\",\r\n    \"\\u00b4\\u00058\\u001d\\u0002\\u00b3\\u00a9\\u0003\\u0002\\u0002\\u0002\\u00b3\",\r\n    \"\\u00aa\\u0003\\u0002\\u0002\\u0002\\u00b3\\u00ab\\u0003\\u0002\\u0002\\u0002\\u00b3\",\r\n    \"\\u00ac\\u0003\\u0002\\u0002\\u0002\\u00b3\\u00ad\\u0003\\u0002\\u0002\\u0002\\u00b3\",\r\n    \"\\u00ae\\u0003\\u0002\\u0002\\u0002\\u00b3\\u00af\\u0003\\u0002\\u0002\\u0002\\u00b3\",\r\n    \"\\u00b0\\u0003\\u0002\\u0002\\u0002\\u00b3\\u00b1\\u0003\\u0002\\u0002\\u0002\\u00b3\",\r\n    \"\\u00b2\\u0003\\u0002\\u0002\\u0002\\u00b4\\u0017\\u0003\\u0002\\u0002\\u0002\\u00b5\",\r\n    \"\\u00b6\\u0007\\t\\u0002\\u0002\\u00b6\\u00b7\\u0005\\u0016\\f\\u0002\\u00b7\\u0019\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u00b8\\u00b9\\u0007\\n\\u0002\\u0002\\u00b9\\u00ba\",\r\n    \"\\u0005F$\\u0002\\u00ba\\u001b\\u0003\\u0002\\u0002\\u0002\\u00bb\\u00bc\\u0007\",\r\n    \"\\u000b\\u0002\\u0002\\u00bc\\u00bd\\u00070\\u0002\\u0002\\u00bd\\u001d\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00be\\u00bf\\u0007/\\u0002\\u0002\\u00bf\\u00c0\\u0005\",\r\n    \"F$\\u0002\\u00c0\\u00c1\\u0007\\f\\u0002\\u0002\\u00c1\\u001f\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00c2\\u00c3\\u0007\\r\\u0002\\u0002\\u00c3!\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00c4\\u00c5\\u0007\\u000e\\u0002\\u0002\\u00c5\\u00c6\\u0007/\\u0002\\u0002\",\r\n    \"\\u00c6\\u00c7\\u0007\\u000f\\u0002\\u0002\\u00c7#\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00c8\\u00cb\\u0005&\\u0014\\u0002\\u00c9\\u00cb\\u0005(\\u0015\\u0002\\u00ca\",\r\n    \"\\u00c8\\u0003\\u0002\\u0002\\u0002\\u00ca\\u00c9\\u0003\\u0002\\u0002\\u0002\\u00cb\",\r\n    \"%\\u0003\\u0002\\u0002\\u0002\\u00cc\\u00cd\\u0007\\u0010\\u0002\\u0002\\u00cd\",\r\n    \"\\u00ce\\u0007/\\u0002\\u0002\\u00ce\\u00cf\\u0007\\u0011\\u0002\\u0002\\u00cf\",\r\n    \"\\u00d0\\u0007/\\u0002\\u0002\\u00d0\\u00d1\\u0007\\u0012\\u0002\\u0002\\u00d1\",\r\n    \"\\'\\u0003\\u0002\\u0002\\u0002\\u00d2\\u00d3\\u0007\\u0013\\u0002\\u0002\\u00d3\",\r\n    \"\\u00d4\\u0007/\\u0002\\u0002\\u00d4)\\u0003\\u0002\\u0002\\u0002\\u00d5\\u00dd\",\r\n    \"\\u0007\\'\\u0002\\u0002\\u00d6\\u00d8\\u0007\\u0006\\u0002\\u0002\\u00d7\\u00d6\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u00d8\\u00db\\u0003\\u0002\\u0002\\u0002\\u00d9\\u00d7\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u00d9\\u00da\\u0003\\u0002\\u0002\\u0002\\u00da\\u00dc\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u00db\\u00d9\\u0003\\u0002\\u0002\\u0002\\u00dc\\u00de\",\r\n    \"\\u0005:\\u001e\\u0002\\u00dd\\u00d9\\u0003\\u0002\\u0002\\u0002\\u00de\\u00df\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u00df\\u00dd\\u0003\\u0002\\u0002\\u0002\\u00df\\u00e0\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u00e0+\\u0003\\u0002\\u0002\\u0002\\u00e1\\u00e4\",\r\n    \"\\u0005.\\u0018\\u0002\\u00e2\\u00e4\\u00050\\u0019\\u0002\\u00e3\\u00e1\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00e3\\u00e2\\u0003\\u0002\\u0002\\u0002\\u00e4-\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00e5\\u00e6\\u0007\\u0014\\u0002\\u0002\\u00e6\\u00e7\\u0007\",\r\n    \"/\\u0002\\u0002\\u00e7/\\u0003\\u0002\\u0002\\u0002\\u00e8\\u00e9\\u0007\\u0015\",\r\n    \"\\u0002\\u0002\\u00e9\\u00ea\\u0007/\\u0002\\u0002\\u00ea1\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00eb\\u00ee\\u00054\\u001b\\u0002\\u00ec\\u00ee\\u00056\\u001c\\u0002\",\r\n    \"\\u00ed\\u00eb\\u0003\\u0002\\u0002\\u0002\\u00ed\\u00ec\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00ee3\\u0003\\u0002\\u0002\\u0002\\u00ef\\u00f0\\u0007\\u0016\\u0002\\u0002\",\r\n    \"\\u00f0\\u00f1\\u0007/\\u0002\\u0002\\u00f15\\u0003\\u0002\\u0002\\u0002\\u00f2\",\r\n    \"\\u00f3\\u0007\\u0017\\u0002\\u0002\\u00f3\\u00f4\\u0007/\\u0002\\u0002\\u00f4\",\r\n    \"7\\u0003\\u0002\\u0002\\u0002\\u00f5\\u00f6\\u0007\\u0018\\u0002\\u0002\\u00f6\",\r\n    \"9\\u0003\\u0002\\u0002\\u0002\\u00f7\\u00f8\\u0007-\\u0002\\u0002\\u00f8;\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00f9\\u00fa\\u0007-\\u0002\\u0002\\u00fa=\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u00fb\\u0100\\u0007-\\u0002\\u0002\\u00fc\\u00fd\\u0007\\u0006\",\r\n    \"\\u0002\\u0002\\u00fd\\u00ff\\u0007-\\u0002\\u0002\\u00fe\\u00fc\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u00ff\\u0102\\u0003\\u0002\\u0002\\u0002\\u0100\\u00fe\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0100\\u0101\\u0003\\u0002\\u0002\\u0002\\u0101?\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0102\\u0100\\u0003\\u0002\\u0002\\u0002\\u0103\\u0108\\u0007-\",\r\n    \"\\u0002\\u0002\\u0104\\u0105\\u0007\\u0006\\u0002\\u0002\\u0105\\u0107\\u0007-\",\r\n    \"\\u0002\\u0002\\u0106\\u0104\\u0003\\u0002\\u0002\\u0002\\u0107\\u010a\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0108\\u0106\\u0003\\u0002\\u0002\\u0002\\u0108\\u0109\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0109A\\u0003\\u0002\\u0002\\u0002\\u010a\\u0108\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u010b\\u010c\\u0007\\u0004\\u0002\\u0002\\u010cC\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u010d\\u010e\\t\\u0002\\u0002\\u0002\\u010eE\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u010f\\u0110\\t\\u0003\\u0002\\u0002\\u0110G\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0111\\u0112\\u0007/\\u0002\\u0002\\u0112\\u0113\\u0007\\b\\u0002\\u0002\\u0113\",\r\n    \"\\u0114\\u0007/\\u0002\\u0002\\u0114I\\u0003\\u0002\\u0002\\u0002\\u0115\\u0116\",\r\n    \"\\u0007/\\u0002\\u0002\\u0116\\u0117\\u0007\\b\\u0002\\u0002\\u0117\\u0118\\u0007\",\r\n    \"/\\u0002\\u0002\\u0118K\\u0003\\u0002\\u0002\\u0002\\u0017OW]ejlrx\\u0080\\u0089\",\r\n    \"\\u0090\\u009d\\u00a4\\u00b3\\u00ca\\u00d9\\u00df\\u00e3\\u00ed\\u0100\\u0108\"].join(\"\");\r\n\r\n\r\nvar atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);\r\n\r\nvar decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });\r\n\r\nvar sharedContextCache = new antlr4.PredictionContextCache();\r\n\r\nvar literalNames = [ null, \"'in the following states:'\", \"'and'\", \"'I agree to authorize token in'\", \r\n                     \"','\", \"'users in'\", \"':'\", \"'and on'\", \"'the end of'\", \r\n                     \"'date'\", \"'after contract creation'\", \"'price priceExpression'\", \r\n                     \"'transaction of'\", \"'to owner'\", \"'contract_guaranty of'\", \r\n                     \"'refund after'\", \"'day'\", \"'platform_guaranty of'\", \r\n                     \"'visit_increment of'\", \"'visit of'\", \"'account_balance greater than'\", \r\n                     \"'account_balance smaller than'\", \"'account_settled'\", \r\n                     \"'in total'\", \"'per view'\", \"'year'\", \"'week'\", \"'cycle'\", \r\n                     \"'For'\", \"'usergroups'\", \"'users'\", \"'proceed'\", \"'to'\", \r\n                     \"'in'\", \"'on'\", \"'accepting'\", null, \"'license'\", \"'paying'\", \r\n                     \"'per'\", \"'view'\", \"'require'\", \"'nothing'\" ];\r\n\r\nvar symbolicNames = [ null, null, null, null, null, null, null, null, null, \r\n                      null, null, null, null, null, null, null, null, null, \r\n                      null, null, null, null, null, null, null, null, null, \r\n                      null, \"FOR\", \"USERGROUPS\", \"USERS\", \"PROCEED\", \"TO\", \r\n                      \"IN\", \"ON\", \"ACCEPTING\", \"SELF\", \"LICENSE\", \"PAYING\", \r\n                      \"PER\", \"VIEW\", \"REQUIRE\", \"NOTHING\", \"ID\", \"WS\", \"INT\", \r\n                      \"DATE\" ];\r\n\r\nvar ruleNames =  [ \"p\", \"segment\", \"audience_clause\", \"athorize_token_clause\", \r\n                   \"audience_individuals_clause\", \"audience_groups_clause\", \r\n                   \"state_clause\", \"current_state_clause\", \"target_clause\", \r\n                   \"accepting\", \"event\", \"and_event\", \"period_event\", \"specific_date_event\", \r\n                   \"relative_date_event\", \"pricing_agreement_event\", \"transaction_event\", \r\n                   \"guaranty_event\", \"contract_guaranty\", \"platform_guaranty\", \r\n                   \"signing_event\", \"access_count_event\", \"visit_increment_event\", \r\n                   \"visit_event\", \"balance_event\", \"balance_greater\", \"balance_smaller\", \r\n                   \"settlement_event\", \"license_resource_id\", \"account_id\", \r\n                   \"users\", \"user_groups\", \"and\", \"view_unit\", \"time_unit\", \r\n                   \"start_hour\", \"end_hour\" ];\r\n\r\nfunction presentable_policyParser (input) {\r\n\tantlr4.Parser.call(this, input);\r\n    this._interp = new antlr4.atn.ParserATNSimulator(this, atn, decisionsToDFA, sharedContextCache);\r\n    this.ruleNames = ruleNames;\r\n    this.literalNames = literalNames;\r\n    this.symbolicNames = symbolicNames;\r\n    return this;\r\n}\r\n\r\npresentable_policyParser.prototype = Object.create(antlr4.Parser.prototype);\r\npresentable_policyParser.prototype.constructor = presentable_policyParser;\r\n\r\nObject.defineProperty(presentable_policyParser.prototype, \"atn\", {\r\n\tget : function() {\r\n\t\treturn atn;\r\n\t}\r\n});\r\n\r\npresentable_policyParser.EOF = antlr4.Token.EOF;\r\npresentable_policyParser.T__0 = 1;\r\npresentable_policyParser.T__1 = 2;\r\npresentable_policyParser.T__2 = 3;\r\npresentable_policyParser.T__3 = 4;\r\npresentable_policyParser.T__4 = 5;\r\npresentable_policyParser.T__5 = 6;\r\npresentable_policyParser.T__6 = 7;\r\npresentable_policyParser.T__7 = 8;\r\npresentable_policyParser.T__8 = 9;\r\npresentable_policyParser.T__9 = 10;\r\npresentable_policyParser.T__10 = 11;\r\npresentable_policyParser.T__11 = 12;\r\npresentable_policyParser.T__12 = 13;\r\npresentable_policyParser.T__13 = 14;\r\npresentable_policyParser.T__14 = 15;\r\npresentable_policyParser.T__15 = 16;\r\npresentable_policyParser.T__16 = 17;\r\npresentable_policyParser.T__17 = 18;\r\npresentable_policyParser.T__18 = 19;\r\npresentable_policyParser.T__19 = 20;\r\npresentable_policyParser.T__20 = 21;\r\npresentable_policyParser.T__21 = 22;\r\npresentable_policyParser.T__22 = 23;\r\npresentable_policyParser.T__23 = 24;\r\npresentable_policyParser.T__24 = 25;\r\npresentable_policyParser.T__25 = 26;\r\npresentable_policyParser.T__26 = 27;\r\npresentable_policyParser.FOR = 28;\r\npresentable_policyParser.USERGROUPS = 29;\r\npresentable_policyParser.USERS = 30;\r\npresentable_policyParser.PROCEED = 31;\r\npresentable_policyParser.TO = 32;\r\npresentable_policyParser.IN = 33;\r\npresentable_policyParser.ON = 34;\r\npresentable_policyParser.ACCEPTING = 35;\r\npresentable_policyParser.SELF = 36;\r\npresentable_policyParser.LICENSE = 37;\r\npresentable_policyParser.PAYING = 38;\r\npresentable_policyParser.PER = 39;\r\npresentable_policyParser.VIEW = 40;\r\npresentable_policyParser.REQUIRE = 41;\r\npresentable_policyParser.NOTHING = 42;\r\npresentable_policyParser.ID = 43;\r\npresentable_policyParser.WS = 44;\r\npresentable_policyParser.INT = 45;\r\npresentable_policyParser.DATE = 46;\r\n\r\npresentable_policyParser.RULE_p = 0;\r\npresentable_policyParser.RULE_segment = 1;\r\npresentable_policyParser.RULE_audience_clause = 2;\r\npresentable_policyParser.RULE_athorize_token_clause = 3;\r\npresentable_policyParser.RULE_audience_individuals_clause = 4;\r\npresentable_policyParser.RULE_audience_groups_clause = 5;\r\npresentable_policyParser.RULE_state_clause = 6;\r\npresentable_policyParser.RULE_current_state_clause = 7;\r\npresentable_policyParser.RULE_target_clause = 8;\r\npresentable_policyParser.RULE_accepting = 9;\r\npresentable_policyParser.RULE_event = 10;\r\npresentable_policyParser.RULE_and_event = 11;\r\npresentable_policyParser.RULE_period_event = 12;\r\npresentable_policyParser.RULE_specific_date_event = 13;\r\npresentable_policyParser.RULE_relative_date_event = 14;\r\npresentable_policyParser.RULE_pricing_agreement_event = 15;\r\npresentable_policyParser.RULE_transaction_event = 16;\r\npresentable_policyParser.RULE_guaranty_event = 17;\r\npresentable_policyParser.RULE_contract_guaranty = 18;\r\npresentable_policyParser.RULE_platform_guaranty = 19;\r\npresentable_policyParser.RULE_signing_event = 20;\r\npresentable_policyParser.RULE_access_count_event = 21;\r\npresentable_policyParser.RULE_visit_increment_event = 22;\r\npresentable_policyParser.RULE_visit_event = 23;\r\npresentable_policyParser.RULE_balance_event = 24;\r\npresentable_policyParser.RULE_balance_greater = 25;\r\npresentable_policyParser.RULE_balance_smaller = 26;\r\npresentable_policyParser.RULE_settlement_event = 27;\r\npresentable_policyParser.RULE_license_resource_id = 28;\r\npresentable_policyParser.RULE_account_id = 29;\r\npresentable_policyParser.RULE_users = 30;\r\npresentable_policyParser.RULE_user_groups = 31;\r\npresentable_policyParser.RULE_and = 32;\r\npresentable_policyParser.RULE_view_unit = 33;\r\npresentable_policyParser.RULE_time_unit = 34;\r\npresentable_policyParser.RULE_start_hour = 35;\r\npresentable_policyParser.RULE_end_hour = 36;\r\n\r\nfunction PContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_p;\r\n    return this;\r\n}\r\n\r\nPContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nPContext.prototype.constructor = PContext;\r\n\r\nPContext.prototype.EOF = function() {\r\n    return this.getToken(presentable_policyParser.EOF, 0);\r\n};\r\n\r\nPContext.prototype.segment = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(SegmentContext);\r\n    } else {\r\n        return this.getTypedRuleContext(SegmentContext,i);\r\n    }\r\n};\r\n\r\nPContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterP(this);\r\n\t}\r\n};\r\n\r\nPContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitP(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.PContext = PContext;\r\n\r\npresentable_policyParser.prototype.p = function() {\r\n\r\n    var localctx = new PContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 0, presentable_policyParser.RULE_p);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 75; \r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        do {\r\n            this.state = 74;\r\n            this.segment();\r\n            this.state = 77; \r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        } while(_la===presentable_policyParser.FOR);\r\n        this.state = 79;\r\n        this.match(presentable_policyParser.EOF);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction SegmentContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_segment;\r\n    return this;\r\n}\r\n\r\nSegmentContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nSegmentContext.prototype.constructor = SegmentContext;\r\n\r\nSegmentContext.prototype.FOR = function() {\r\n    return this.getToken(presentable_policyParser.FOR, 0);\r\n};\r\n\r\nSegmentContext.prototype.athorize_token_clause = function() {\r\n    return this.getTypedRuleContext(Athorize_token_clauseContext,0);\r\n};\r\n\r\nSegmentContext.prototype.audience_clause = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(Audience_clauseContext);\r\n    } else {\r\n        return this.getTypedRuleContext(Audience_clauseContext,i);\r\n    }\r\n};\r\n\r\nSegmentContext.prototype.state_clause = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(State_clauseContext);\r\n    } else {\r\n        return this.getTypedRuleContext(State_clauseContext,i);\r\n    }\r\n};\r\n\r\nSegmentContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterSegment(this);\r\n\t}\r\n};\r\n\r\nSegmentContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitSegment(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.SegmentContext = SegmentContext;\r\n\r\npresentable_policyParser.prototype.segment = function() {\r\n\r\n    var localctx = new SegmentContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 2, presentable_policyParser.RULE_segment);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 81;\r\n        this.match(presentable_policyParser.FOR);\r\n        this.state = 83; \r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        do {\r\n            this.state = 82;\r\n            this.audience_clause();\r\n            this.state = 85; \r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        } while(_la===presentable_policyParser.T__4 || _la===presentable_policyParser.ID);\r\n        this.state = 87;\r\n        this.match(presentable_policyParser.T__0);\r\n        this.state = 91;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        while(_la===presentable_policyParser.IN) {\r\n            this.state = 88;\r\n            this.state_clause();\r\n            this.state = 93;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        }\r\n        this.state = 94;\r\n        this.athorize_token_clause();\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Audience_clauseContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_audience_clause;\r\n    return this;\r\n}\r\n\r\nAudience_clauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAudience_clauseContext.prototype.constructor = Audience_clauseContext;\r\n\r\nAudience_clauseContext.prototype.audience_individuals_clause = function() {\r\n    return this.getTypedRuleContext(Audience_individuals_clauseContext,0);\r\n};\r\n\r\nAudience_clauseContext.prototype.audience_groups_clause = function() {\r\n    return this.getTypedRuleContext(Audience_groups_clauseContext,0);\r\n};\r\n\r\nAudience_clauseContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterAudience_clause(this);\r\n\t}\r\n};\r\n\r\nAudience_clauseContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitAudience_clause(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Audience_clauseContext = Audience_clauseContext;\r\n\r\npresentable_policyParser.prototype.audience_clause = function() {\r\n\r\n    var localctx = new Audience_clauseContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 4, presentable_policyParser.RULE_audience_clause);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.state = 106;\r\n        this._errHandler.sync(this);\r\n        switch(this._input.LA(1)) {\r\n        case presentable_policyParser.ID:\r\n            this.enterOuterAlt(localctx, 1);\r\n            this.state = 96;\r\n            this.audience_individuals_clause();\r\n            this.state = 99;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n            if(_la===presentable_policyParser.T__1) {\r\n                this.state = 97;\r\n                this.match(presentable_policyParser.T__1);\r\n                this.state = 98;\r\n                this.audience_groups_clause();\r\n            }\r\n\r\n            break;\r\n        case presentable_policyParser.T__4:\r\n            this.enterOuterAlt(localctx, 2);\r\n            this.state = 101;\r\n            this.audience_groups_clause();\r\n            this.state = 104;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n            if(_la===presentable_policyParser.T__1) {\r\n                this.state = 102;\r\n                this.match(presentable_policyParser.T__1);\r\n                this.state = 103;\r\n                this.audience_individuals_clause();\r\n            }\r\n\r\n            break;\r\n        default:\r\n            throw new antlr4.error.NoViableAltException(this);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Athorize_token_clauseContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_athorize_token_clause;\r\n    return this;\r\n}\r\n\r\nAthorize_token_clauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAthorize_token_clauseContext.prototype.constructor = Athorize_token_clauseContext;\r\n\r\nAthorize_token_clauseContext.prototype.ID = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(presentable_policyParser.ID);\r\n    } else {\r\n        return this.getToken(presentable_policyParser.ID, i);\r\n    }\r\n};\r\n\r\n\r\nAthorize_token_clauseContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterAthorize_token_clause(this);\r\n\t}\r\n};\r\n\r\nAthorize_token_clauseContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitAthorize_token_clause(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Athorize_token_clauseContext = Athorize_token_clauseContext;\r\n\r\npresentable_policyParser.prototype.athorize_token_clause = function() {\r\n\r\n    var localctx = new Athorize_token_clauseContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 6, presentable_policyParser.RULE_athorize_token_clause);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 108;\r\n        this.match(presentable_policyParser.T__2);\r\n        this.state = 118;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        while(_la===presentable_policyParser.T__3 || _la===presentable_policyParser.ID) {\r\n            this.state = 112;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n            while(_la===presentable_policyParser.T__3) {\r\n                this.state = 109;\r\n                this.match(presentable_policyParser.T__3);\r\n                this.state = 114;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n            }\r\n            this.state = 115;\r\n            this.match(presentable_policyParser.ID);\r\n            this.state = 120;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Audience_individuals_clauseContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_audience_individuals_clause;\r\n    return this;\r\n}\r\n\r\nAudience_individuals_clauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAudience_individuals_clauseContext.prototype.constructor = Audience_individuals_clauseContext;\r\n\r\nAudience_individuals_clauseContext.prototype.users = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(UsersContext);\r\n    } else {\r\n        return this.getTypedRuleContext(UsersContext,i);\r\n    }\r\n};\r\n\r\nAudience_individuals_clauseContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterAudience_individuals_clause(this);\r\n\t}\r\n};\r\n\r\nAudience_individuals_clauseContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitAudience_individuals_clause(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Audience_individuals_clauseContext = Audience_individuals_clauseContext;\r\n\r\npresentable_policyParser.prototype.audience_individuals_clause = function() {\r\n\r\n    var localctx = new Audience_individuals_clauseContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 8, presentable_policyParser.RULE_audience_individuals_clause);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 121;\r\n        this.users();\r\n        this.state = 126;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        while(_la===presentable_policyParser.T__3) {\r\n            this.state = 122;\r\n            this.match(presentable_policyParser.T__3);\r\n            this.state = 123;\r\n            this.users();\r\n            this.state = 128;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Audience_groups_clauseContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_audience_groups_clause;\r\n    return this;\r\n}\r\n\r\nAudience_groups_clauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAudience_groups_clauseContext.prototype.constructor = Audience_groups_clauseContext;\r\n\r\nAudience_groups_clauseContext.prototype.user_groups = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(User_groupsContext);\r\n    } else {\r\n        return this.getTypedRuleContext(User_groupsContext,i);\r\n    }\r\n};\r\n\r\nAudience_groups_clauseContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterAudience_groups_clause(this);\r\n\t}\r\n};\r\n\r\nAudience_groups_clauseContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitAudience_groups_clause(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Audience_groups_clauseContext = Audience_groups_clauseContext;\r\n\r\npresentable_policyParser.prototype.audience_groups_clause = function() {\r\n\r\n    var localctx = new Audience_groups_clauseContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 10, presentable_policyParser.RULE_audience_groups_clause);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 129;\r\n        this.match(presentable_policyParser.T__4);\r\n        this.state = 130;\r\n        this.user_groups();\r\n        this.state = 135;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        while(_la===presentable_policyParser.T__3) {\r\n            this.state = 131;\r\n            this.match(presentable_policyParser.T__3);\r\n            this.state = 132;\r\n            this.user_groups();\r\n            this.state = 137;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction State_clauseContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_state_clause;\r\n    return this;\r\n}\r\n\r\nState_clauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nState_clauseContext.prototype.constructor = State_clauseContext;\r\n\r\nState_clauseContext.prototype.current_state_clause = function() {\r\n    return this.getTypedRuleContext(Current_state_clauseContext,0);\r\n};\r\n\r\nState_clauseContext.prototype.target_clause = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(Target_clauseContext);\r\n    } else {\r\n        return this.getTypedRuleContext(Target_clauseContext,i);\r\n    }\r\n};\r\n\r\nState_clauseContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterState_clause(this);\r\n\t}\r\n};\r\n\r\nState_clauseContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitState_clause(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.State_clauseContext = State_clauseContext;\r\n\r\npresentable_policyParser.prototype.state_clause = function() {\r\n\r\n    var localctx = new State_clauseContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 12, presentable_policyParser.RULE_state_clause);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 138;\r\n        this.current_state_clause();\r\n        this.state = 140; \r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        do {\r\n            this.state = 139;\r\n            this.target_clause();\r\n            this.state = 142; \r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        } while(_la===presentable_policyParser.PROCEED);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Current_state_clauseContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_current_state_clause;\r\n    return this;\r\n}\r\n\r\nCurrent_state_clauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nCurrent_state_clauseContext.prototype.constructor = Current_state_clauseContext;\r\n\r\nCurrent_state_clauseContext.prototype.IN = function() {\r\n    return this.getToken(presentable_policyParser.IN, 0);\r\n};\r\n\r\nCurrent_state_clauseContext.prototype.ID = function() {\r\n    return this.getToken(presentable_policyParser.ID, 0);\r\n};\r\n\r\nCurrent_state_clauseContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterCurrent_state_clause(this);\r\n\t}\r\n};\r\n\r\nCurrent_state_clauseContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitCurrent_state_clause(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Current_state_clauseContext = Current_state_clauseContext;\r\n\r\npresentable_policyParser.prototype.current_state_clause = function() {\r\n\r\n    var localctx = new Current_state_clauseContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 14, presentable_policyParser.RULE_current_state_clause);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 144;\r\n        this.match(presentable_policyParser.IN);\r\n        this.state = 145;\r\n        this.match(presentable_policyParser.ID);\r\n        this.state = 146;\r\n        this.match(presentable_policyParser.T__5);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Target_clauseContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_target_clause;\r\n    return this;\r\n}\r\n\r\nTarget_clauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nTarget_clauseContext.prototype.constructor = Target_clauseContext;\r\n\r\nTarget_clauseContext.prototype.PROCEED = function() {\r\n    return this.getToken(presentable_policyParser.PROCEED, 0);\r\n};\r\n\r\nTarget_clauseContext.prototype.TO = function() {\r\n    return this.getToken(presentable_policyParser.TO, 0);\r\n};\r\n\r\nTarget_clauseContext.prototype.ID = function() {\r\n    return this.getToken(presentable_policyParser.ID, 0);\r\n};\r\n\r\nTarget_clauseContext.prototype.event = function() {\r\n    return this.getTypedRuleContext(EventContext,0);\r\n};\r\n\r\nTarget_clauseContext.prototype.accepting = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(AcceptingContext);\r\n    } else {\r\n        return this.getTypedRuleContext(AcceptingContext,i);\r\n    }\r\n};\r\n\r\nTarget_clauseContext.prototype.and_event = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(And_eventContext);\r\n    } else {\r\n        return this.getTypedRuleContext(And_eventContext,i);\r\n    }\r\n};\r\n\r\nTarget_clauseContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterTarget_clause(this);\r\n\t}\r\n};\r\n\r\nTarget_clauseContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitTarget_clause(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Target_clauseContext = Target_clauseContext;\r\n\r\npresentable_policyParser.prototype.target_clause = function() {\r\n\r\n    var localctx = new Target_clauseContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 16, presentable_policyParser.RULE_target_clause);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 148;\r\n        this.match(presentable_policyParser.PROCEED);\r\n        this.state = 149;\r\n        this.match(presentable_policyParser.TO);\r\n        this.state = 150;\r\n        this.match(presentable_policyParser.ID);\r\n        this.state = 151;\r\n        this.match(presentable_policyParser.ON);\r\n        this.state = 155;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        while(_la===presentable_policyParser.ACCEPTING) {\r\n            this.state = 152;\r\n            this.accepting();\r\n            this.state = 157;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        }\r\n        this.state = 158;\r\n        this.event();\r\n        this.state = 162;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        while(_la===presentable_policyParser.T__6) {\r\n            this.state = 159;\r\n            this.and_event();\r\n            this.state = 164;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction AcceptingContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_accepting;\r\n    return this;\r\n}\r\n\r\nAcceptingContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAcceptingContext.prototype.constructor = AcceptingContext;\r\n\r\n\r\nAcceptingContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterAccepting(this);\r\n\t}\r\n};\r\n\r\nAcceptingContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitAccepting(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.AcceptingContext = AcceptingContext;\r\n\r\npresentable_policyParser.prototype.accepting = function() {\r\n\r\n    var localctx = new AcceptingContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 18, presentable_policyParser.RULE_accepting);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 165;\r\n        this.match(presentable_policyParser.ACCEPTING);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction EventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_event;\r\n    return this;\r\n}\r\n\r\nEventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nEventContext.prototype.constructor = EventContext;\r\n\r\nEventContext.prototype.period_event = function() {\r\n    return this.getTypedRuleContext(Period_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.specific_date_event = function() {\r\n    return this.getTypedRuleContext(Specific_date_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.relative_date_event = function() {\r\n    return this.getTypedRuleContext(Relative_date_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.pricing_agreement_event = function() {\r\n    return this.getTypedRuleContext(Pricing_agreement_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.transaction_event = function() {\r\n    return this.getTypedRuleContext(Transaction_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.guaranty_event = function() {\r\n    return this.getTypedRuleContext(Guaranty_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.signing_event = function() {\r\n    return this.getTypedRuleContext(Signing_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.access_count_event = function() {\r\n    return this.getTypedRuleContext(Access_count_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.balance_event = function() {\r\n    return this.getTypedRuleContext(Balance_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.settlement_event = function() {\r\n    return this.getTypedRuleContext(Settlement_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterEvent(this);\r\n\t}\r\n};\r\n\r\nEventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitEvent(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.EventContext = EventContext;\r\n\r\npresentable_policyParser.prototype.event = function() {\r\n\r\n    var localctx = new EventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 20, presentable_policyParser.RULE_event);\r\n    try {\r\n        this.state = 177;\r\n        this._errHandler.sync(this);\r\n        switch(this._input.LA(1)) {\r\n        case presentable_policyParser.T__7:\r\n            this.enterOuterAlt(localctx, 1);\r\n            this.state = 167;\r\n            this.period_event();\r\n            break;\r\n        case presentable_policyParser.T__8:\r\n            this.enterOuterAlt(localctx, 2);\r\n            this.state = 168;\r\n            this.specific_date_event();\r\n            break;\r\n        case presentable_policyParser.INT:\r\n            this.enterOuterAlt(localctx, 3);\r\n            this.state = 169;\r\n            this.relative_date_event();\r\n            break;\r\n        case presentable_policyParser.T__10:\r\n            this.enterOuterAlt(localctx, 4);\r\n            this.state = 170;\r\n            this.pricing_agreement_event();\r\n            break;\r\n        case presentable_policyParser.T__11:\r\n            this.enterOuterAlt(localctx, 5);\r\n            this.state = 171;\r\n            this.transaction_event();\r\n            break;\r\n        case presentable_policyParser.T__13:\r\n        case presentable_policyParser.T__16:\r\n            this.enterOuterAlt(localctx, 6);\r\n            this.state = 172;\r\n            this.guaranty_event();\r\n            break;\r\n        case presentable_policyParser.LICENSE:\r\n            this.enterOuterAlt(localctx, 7);\r\n            this.state = 173;\r\n            this.signing_event();\r\n            break;\r\n        case presentable_policyParser.T__17:\r\n        case presentable_policyParser.T__18:\r\n            this.enterOuterAlt(localctx, 8);\r\n            this.state = 174;\r\n            this.access_count_event();\r\n            break;\r\n        case presentable_policyParser.T__19:\r\n        case presentable_policyParser.T__20:\r\n            this.enterOuterAlt(localctx, 9);\r\n            this.state = 175;\r\n            this.balance_event();\r\n            break;\r\n        case presentable_policyParser.T__21:\r\n            this.enterOuterAlt(localctx, 10);\r\n            this.state = 176;\r\n            this.settlement_event();\r\n            break;\r\n        default:\r\n            throw new antlr4.error.NoViableAltException(this);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction And_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_and_event;\r\n    return this;\r\n}\r\n\r\nAnd_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAnd_eventContext.prototype.constructor = And_eventContext;\r\n\r\nAnd_eventContext.prototype.event = function() {\r\n    return this.getTypedRuleContext(EventContext,0);\r\n};\r\n\r\nAnd_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterAnd_event(this);\r\n\t}\r\n};\r\n\r\nAnd_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitAnd_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.And_eventContext = And_eventContext;\r\n\r\npresentable_policyParser.prototype.and_event = function() {\r\n\r\n    var localctx = new And_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 22, presentable_policyParser.RULE_and_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 179;\r\n        this.match(presentable_policyParser.T__6);\r\n        this.state = 180;\r\n        this.event();\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Period_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_period_event;\r\n    return this;\r\n}\r\n\r\nPeriod_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nPeriod_eventContext.prototype.constructor = Period_eventContext;\r\n\r\nPeriod_eventContext.prototype.time_unit = function() {\r\n    return this.getTypedRuleContext(Time_unitContext,0);\r\n};\r\n\r\nPeriod_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterPeriod_event(this);\r\n\t}\r\n};\r\n\r\nPeriod_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitPeriod_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Period_eventContext = Period_eventContext;\r\n\r\npresentable_policyParser.prototype.period_event = function() {\r\n\r\n    var localctx = new Period_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 24, presentable_policyParser.RULE_period_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 182;\r\n        this.match(presentable_policyParser.T__7);\r\n        this.state = 183;\r\n        this.time_unit();\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Specific_date_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_specific_date_event;\r\n    return this;\r\n}\r\n\r\nSpecific_date_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nSpecific_date_eventContext.prototype.constructor = Specific_date_eventContext;\r\n\r\nSpecific_date_eventContext.prototype.DATE = function() {\r\n    return this.getToken(presentable_policyParser.DATE, 0);\r\n};\r\n\r\nSpecific_date_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterSpecific_date_event(this);\r\n\t}\r\n};\r\n\r\nSpecific_date_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitSpecific_date_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Specific_date_eventContext = Specific_date_eventContext;\r\n\r\npresentable_policyParser.prototype.specific_date_event = function() {\r\n\r\n    var localctx = new Specific_date_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 26, presentable_policyParser.RULE_specific_date_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 185;\r\n        this.match(presentable_policyParser.T__8);\r\n        this.state = 186;\r\n        this.match(presentable_policyParser.DATE);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Relative_date_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_relative_date_event;\r\n    return this;\r\n}\r\n\r\nRelative_date_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nRelative_date_eventContext.prototype.constructor = Relative_date_eventContext;\r\n\r\nRelative_date_eventContext.prototype.INT = function() {\r\n    return this.getToken(presentable_policyParser.INT, 0);\r\n};\r\n\r\nRelative_date_eventContext.prototype.time_unit = function() {\r\n    return this.getTypedRuleContext(Time_unitContext,0);\r\n};\r\n\r\nRelative_date_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterRelative_date_event(this);\r\n\t}\r\n};\r\n\r\nRelative_date_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitRelative_date_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Relative_date_eventContext = Relative_date_eventContext;\r\n\r\npresentable_policyParser.prototype.relative_date_event = function() {\r\n\r\n    var localctx = new Relative_date_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 28, presentable_policyParser.RULE_relative_date_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 188;\r\n        this.match(presentable_policyParser.INT);\r\n        this.state = 189;\r\n        this.time_unit();\r\n        this.state = 190;\r\n        this.match(presentable_policyParser.T__9);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Pricing_agreement_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_pricing_agreement_event;\r\n    return this;\r\n}\r\n\r\nPricing_agreement_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nPricing_agreement_eventContext.prototype.constructor = Pricing_agreement_eventContext;\r\n\r\n\r\nPricing_agreement_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterPricing_agreement_event(this);\r\n\t}\r\n};\r\n\r\nPricing_agreement_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitPricing_agreement_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Pricing_agreement_eventContext = Pricing_agreement_eventContext;\r\n\r\npresentable_policyParser.prototype.pricing_agreement_event = function() {\r\n\r\n    var localctx = new Pricing_agreement_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 30, presentable_policyParser.RULE_pricing_agreement_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 192;\r\n        this.match(presentable_policyParser.T__10);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Transaction_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_transaction_event;\r\n    return this;\r\n}\r\n\r\nTransaction_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nTransaction_eventContext.prototype.constructor = Transaction_eventContext;\r\n\r\nTransaction_eventContext.prototype.INT = function() {\r\n    return this.getToken(presentable_policyParser.INT, 0);\r\n};\r\n\r\nTransaction_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterTransaction_event(this);\r\n\t}\r\n};\r\n\r\nTransaction_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitTransaction_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Transaction_eventContext = Transaction_eventContext;\r\n\r\npresentable_policyParser.prototype.transaction_event = function() {\r\n\r\n    var localctx = new Transaction_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 32, presentable_policyParser.RULE_transaction_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 194;\r\n        this.match(presentable_policyParser.T__11);\r\n        this.state = 195;\r\n        this.match(presentable_policyParser.INT);\r\n        this.state = 196;\r\n        this.match(presentable_policyParser.T__12);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Guaranty_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_guaranty_event;\r\n    return this;\r\n}\r\n\r\nGuaranty_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nGuaranty_eventContext.prototype.constructor = Guaranty_eventContext;\r\n\r\nGuaranty_eventContext.prototype.contract_guaranty = function() {\r\n    return this.getTypedRuleContext(Contract_guarantyContext,0);\r\n};\r\n\r\nGuaranty_eventContext.prototype.platform_guaranty = function() {\r\n    return this.getTypedRuleContext(Platform_guarantyContext,0);\r\n};\r\n\r\nGuaranty_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterGuaranty_event(this);\r\n\t}\r\n};\r\n\r\nGuaranty_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitGuaranty_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Guaranty_eventContext = Guaranty_eventContext;\r\n\r\npresentable_policyParser.prototype.guaranty_event = function() {\r\n\r\n    var localctx = new Guaranty_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 34, presentable_policyParser.RULE_guaranty_event);\r\n    try {\r\n        this.state = 200;\r\n        this._errHandler.sync(this);\r\n        switch(this._input.LA(1)) {\r\n        case presentable_policyParser.T__13:\r\n            this.enterOuterAlt(localctx, 1);\r\n            this.state = 198;\r\n            this.contract_guaranty();\r\n            break;\r\n        case presentable_policyParser.T__16:\r\n            this.enterOuterAlt(localctx, 2);\r\n            this.state = 199;\r\n            this.platform_guaranty();\r\n            break;\r\n        default:\r\n            throw new antlr4.error.NoViableAltException(this);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Contract_guarantyContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_contract_guaranty;\r\n    return this;\r\n}\r\n\r\nContract_guarantyContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nContract_guarantyContext.prototype.constructor = Contract_guarantyContext;\r\n\r\nContract_guarantyContext.prototype.INT = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(presentable_policyParser.INT);\r\n    } else {\r\n        return this.getToken(presentable_policyParser.INT, i);\r\n    }\r\n};\r\n\r\n\r\nContract_guarantyContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterContract_guaranty(this);\r\n\t}\r\n};\r\n\r\nContract_guarantyContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitContract_guaranty(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Contract_guarantyContext = Contract_guarantyContext;\r\n\r\npresentable_policyParser.prototype.contract_guaranty = function() {\r\n\r\n    var localctx = new Contract_guarantyContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 36, presentable_policyParser.RULE_contract_guaranty);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 202;\r\n        this.match(presentable_policyParser.T__13);\r\n        this.state = 203;\r\n        this.match(presentable_policyParser.INT);\r\n        this.state = 204;\r\n        this.match(presentable_policyParser.T__14);\r\n        this.state = 205;\r\n        this.match(presentable_policyParser.INT);\r\n        this.state = 206;\r\n        this.match(presentable_policyParser.T__15);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Platform_guarantyContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_platform_guaranty;\r\n    return this;\r\n}\r\n\r\nPlatform_guarantyContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nPlatform_guarantyContext.prototype.constructor = Platform_guarantyContext;\r\n\r\nPlatform_guarantyContext.prototype.INT = function() {\r\n    return this.getToken(presentable_policyParser.INT, 0);\r\n};\r\n\r\nPlatform_guarantyContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterPlatform_guaranty(this);\r\n\t}\r\n};\r\n\r\nPlatform_guarantyContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitPlatform_guaranty(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Platform_guarantyContext = Platform_guarantyContext;\r\n\r\npresentable_policyParser.prototype.platform_guaranty = function() {\r\n\r\n    var localctx = new Platform_guarantyContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 38, presentable_policyParser.RULE_platform_guaranty);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 208;\r\n        this.match(presentable_policyParser.T__16);\r\n        this.state = 209;\r\n        this.match(presentable_policyParser.INT);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Signing_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_signing_event;\r\n    return this;\r\n}\r\n\r\nSigning_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nSigning_eventContext.prototype.constructor = Signing_eventContext;\r\n\r\nSigning_eventContext.prototype.LICENSE = function() {\r\n    return this.getToken(presentable_policyParser.LICENSE, 0);\r\n};\r\n\r\nSigning_eventContext.prototype.license_resource_id = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(License_resource_idContext);\r\n    } else {\r\n        return this.getTypedRuleContext(License_resource_idContext,i);\r\n    }\r\n};\r\n\r\nSigning_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterSigning_event(this);\r\n\t}\r\n};\r\n\r\nSigning_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitSigning_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Signing_eventContext = Signing_eventContext;\r\n\r\npresentable_policyParser.prototype.signing_event = function() {\r\n\r\n    var localctx = new Signing_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 40, presentable_policyParser.RULE_signing_event);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 211;\r\n        this.match(presentable_policyParser.LICENSE);\r\n        this.state = 219; \r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        do {\r\n            this.state = 215;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n            while(_la===presentable_policyParser.T__3) {\r\n                this.state = 212;\r\n                this.match(presentable_policyParser.T__3);\r\n                this.state = 217;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n            }\r\n            this.state = 218;\r\n            this.license_resource_id();\r\n            this.state = 221; \r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        } while(_la===presentable_policyParser.T__3 || _la===presentable_policyParser.ID);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Access_count_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_access_count_event;\r\n    return this;\r\n}\r\n\r\nAccess_count_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAccess_count_eventContext.prototype.constructor = Access_count_eventContext;\r\n\r\nAccess_count_eventContext.prototype.visit_increment_event = function() {\r\n    return this.getTypedRuleContext(Visit_increment_eventContext,0);\r\n};\r\n\r\nAccess_count_eventContext.prototype.visit_event = function() {\r\n    return this.getTypedRuleContext(Visit_eventContext,0);\r\n};\r\n\r\nAccess_count_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterAccess_count_event(this);\r\n\t}\r\n};\r\n\r\nAccess_count_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitAccess_count_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Access_count_eventContext = Access_count_eventContext;\r\n\r\npresentable_policyParser.prototype.access_count_event = function() {\r\n\r\n    var localctx = new Access_count_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 42, presentable_policyParser.RULE_access_count_event);\r\n    try {\r\n        this.state = 225;\r\n        this._errHandler.sync(this);\r\n        switch(this._input.LA(1)) {\r\n        case presentable_policyParser.T__17:\r\n            this.enterOuterAlt(localctx, 1);\r\n            this.state = 223;\r\n            this.visit_increment_event();\r\n            break;\r\n        case presentable_policyParser.T__18:\r\n            this.enterOuterAlt(localctx, 2);\r\n            this.state = 224;\r\n            this.visit_event();\r\n            break;\r\n        default:\r\n            throw new antlr4.error.NoViableAltException(this);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Visit_increment_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_visit_increment_event;\r\n    return this;\r\n}\r\n\r\nVisit_increment_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nVisit_increment_eventContext.prototype.constructor = Visit_increment_eventContext;\r\n\r\nVisit_increment_eventContext.prototype.INT = function() {\r\n    return this.getToken(presentable_policyParser.INT, 0);\r\n};\r\n\r\nVisit_increment_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterVisit_increment_event(this);\r\n\t}\r\n};\r\n\r\nVisit_increment_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitVisit_increment_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Visit_increment_eventContext = Visit_increment_eventContext;\r\n\r\npresentable_policyParser.prototype.visit_increment_event = function() {\r\n\r\n    var localctx = new Visit_increment_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 44, presentable_policyParser.RULE_visit_increment_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 227;\r\n        this.match(presentable_policyParser.T__17);\r\n        this.state = 228;\r\n        this.match(presentable_policyParser.INT);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Visit_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_visit_event;\r\n    return this;\r\n}\r\n\r\nVisit_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nVisit_eventContext.prototype.constructor = Visit_eventContext;\r\n\r\nVisit_eventContext.prototype.INT = function() {\r\n    return this.getToken(presentable_policyParser.INT, 0);\r\n};\r\n\r\nVisit_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterVisit_event(this);\r\n\t}\r\n};\r\n\r\nVisit_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitVisit_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Visit_eventContext = Visit_eventContext;\r\n\r\npresentable_policyParser.prototype.visit_event = function() {\r\n\r\n    var localctx = new Visit_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 46, presentable_policyParser.RULE_visit_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 230;\r\n        this.match(presentable_policyParser.T__18);\r\n        this.state = 231;\r\n        this.match(presentable_policyParser.INT);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Balance_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_balance_event;\r\n    return this;\r\n}\r\n\r\nBalance_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nBalance_eventContext.prototype.constructor = Balance_eventContext;\r\n\r\nBalance_eventContext.prototype.balance_greater = function() {\r\n    return this.getTypedRuleContext(Balance_greaterContext,0);\r\n};\r\n\r\nBalance_eventContext.prototype.balance_smaller = function() {\r\n    return this.getTypedRuleContext(Balance_smallerContext,0);\r\n};\r\n\r\nBalance_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterBalance_event(this);\r\n\t}\r\n};\r\n\r\nBalance_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitBalance_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Balance_eventContext = Balance_eventContext;\r\n\r\npresentable_policyParser.prototype.balance_event = function() {\r\n\r\n    var localctx = new Balance_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 48, presentable_policyParser.RULE_balance_event);\r\n    try {\r\n        this.state = 235;\r\n        this._errHandler.sync(this);\r\n        switch(this._input.LA(1)) {\r\n        case presentable_policyParser.T__19:\r\n            this.enterOuterAlt(localctx, 1);\r\n            this.state = 233;\r\n            this.balance_greater();\r\n            break;\r\n        case presentable_policyParser.T__20:\r\n            this.enterOuterAlt(localctx, 2);\r\n            this.state = 234;\r\n            this.balance_smaller();\r\n            break;\r\n        default:\r\n            throw new antlr4.error.NoViableAltException(this);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Balance_greaterContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_balance_greater;\r\n    return this;\r\n}\r\n\r\nBalance_greaterContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nBalance_greaterContext.prototype.constructor = Balance_greaterContext;\r\n\r\nBalance_greaterContext.prototype.INT = function() {\r\n    return this.getToken(presentable_policyParser.INT, 0);\r\n};\r\n\r\nBalance_greaterContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterBalance_greater(this);\r\n\t}\r\n};\r\n\r\nBalance_greaterContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitBalance_greater(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Balance_greaterContext = Balance_greaterContext;\r\n\r\npresentable_policyParser.prototype.balance_greater = function() {\r\n\r\n    var localctx = new Balance_greaterContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 50, presentable_policyParser.RULE_balance_greater);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 237;\r\n        this.match(presentable_policyParser.T__19);\r\n        this.state = 238;\r\n        this.match(presentable_policyParser.INT);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Balance_smallerContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_balance_smaller;\r\n    return this;\r\n}\r\n\r\nBalance_smallerContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nBalance_smallerContext.prototype.constructor = Balance_smallerContext;\r\n\r\nBalance_smallerContext.prototype.INT = function() {\r\n    return this.getToken(presentable_policyParser.INT, 0);\r\n};\r\n\r\nBalance_smallerContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterBalance_smaller(this);\r\n\t}\r\n};\r\n\r\nBalance_smallerContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitBalance_smaller(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Balance_smallerContext = Balance_smallerContext;\r\n\r\npresentable_policyParser.prototype.balance_smaller = function() {\r\n\r\n    var localctx = new Balance_smallerContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 52, presentable_policyParser.RULE_balance_smaller);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 240;\r\n        this.match(presentable_policyParser.T__20);\r\n        this.state = 241;\r\n        this.match(presentable_policyParser.INT);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Settlement_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_settlement_event;\r\n    return this;\r\n}\r\n\r\nSettlement_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nSettlement_eventContext.prototype.constructor = Settlement_eventContext;\r\n\r\n\r\nSettlement_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterSettlement_event(this);\r\n\t}\r\n};\r\n\r\nSettlement_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitSettlement_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Settlement_eventContext = Settlement_eventContext;\r\n\r\npresentable_policyParser.prototype.settlement_event = function() {\r\n\r\n    var localctx = new Settlement_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 54, presentable_policyParser.RULE_settlement_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 243;\r\n        this.match(presentable_policyParser.T__21);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction License_resource_idContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_license_resource_id;\r\n    return this;\r\n}\r\n\r\nLicense_resource_idContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nLicense_resource_idContext.prototype.constructor = License_resource_idContext;\r\n\r\nLicense_resource_idContext.prototype.ID = function() {\r\n    return this.getToken(presentable_policyParser.ID, 0);\r\n};\r\n\r\nLicense_resource_idContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterLicense_resource_id(this);\r\n\t}\r\n};\r\n\r\nLicense_resource_idContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitLicense_resource_id(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.License_resource_idContext = License_resource_idContext;\r\n\r\npresentable_policyParser.prototype.license_resource_id = function() {\r\n\r\n    var localctx = new License_resource_idContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 56, presentable_policyParser.RULE_license_resource_id);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 245;\r\n        this.match(presentable_policyParser.ID);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Account_idContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_account_id;\r\n    return this;\r\n}\r\n\r\nAccount_idContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAccount_idContext.prototype.constructor = Account_idContext;\r\n\r\nAccount_idContext.prototype.ID = function() {\r\n    return this.getToken(presentable_policyParser.ID, 0);\r\n};\r\n\r\nAccount_idContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterAccount_id(this);\r\n\t}\r\n};\r\n\r\nAccount_idContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitAccount_id(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Account_idContext = Account_idContext;\r\n\r\npresentable_policyParser.prototype.account_id = function() {\r\n\r\n    var localctx = new Account_idContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 58, presentable_policyParser.RULE_account_id);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 247;\r\n        this.match(presentable_policyParser.ID);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction UsersContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_users;\r\n    return this;\r\n}\r\n\r\nUsersContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nUsersContext.prototype.constructor = UsersContext;\r\n\r\nUsersContext.prototype.ID = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(presentable_policyParser.ID);\r\n    } else {\r\n        return this.getToken(presentable_policyParser.ID, i);\r\n    }\r\n};\r\n\r\n\r\nUsersContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterUsers(this);\r\n\t}\r\n};\r\n\r\nUsersContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitUsers(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.UsersContext = UsersContext;\r\n\r\npresentable_policyParser.prototype.users = function() {\r\n\r\n    var localctx = new UsersContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 60, presentable_policyParser.RULE_users);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 249;\r\n        this.match(presentable_policyParser.ID);\r\n        this.state = 254;\r\n        this._errHandler.sync(this);\r\n        var _alt = this._interp.adaptivePredict(this._input,19,this._ctx)\r\n        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {\r\n            if(_alt===1) {\r\n                this.state = 250;\r\n                this.match(presentable_policyParser.T__3);\r\n                this.state = 251;\r\n                this.match(presentable_policyParser.ID); \r\n            }\r\n            this.state = 256;\r\n            this._errHandler.sync(this);\r\n            _alt = this._interp.adaptivePredict(this._input,19,this._ctx);\r\n        }\r\n\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction User_groupsContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_user_groups;\r\n    return this;\r\n}\r\n\r\nUser_groupsContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nUser_groupsContext.prototype.constructor = User_groupsContext;\r\n\r\nUser_groupsContext.prototype.ID = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(presentable_policyParser.ID);\r\n    } else {\r\n        return this.getToken(presentable_policyParser.ID, i);\r\n    }\r\n};\r\n\r\n\r\nUser_groupsContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterUser_groups(this);\r\n\t}\r\n};\r\n\r\nUser_groupsContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitUser_groups(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.User_groupsContext = User_groupsContext;\r\n\r\npresentable_policyParser.prototype.user_groups = function() {\r\n\r\n    var localctx = new User_groupsContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 62, presentable_policyParser.RULE_user_groups);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 257;\r\n        this.match(presentable_policyParser.ID);\r\n        this.state = 262;\r\n        this._errHandler.sync(this);\r\n        var _alt = this._interp.adaptivePredict(this._input,20,this._ctx)\r\n        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {\r\n            if(_alt===1) {\r\n                this.state = 258;\r\n                this.match(presentable_policyParser.T__3);\r\n                this.state = 259;\r\n                this.match(presentable_policyParser.ID); \r\n            }\r\n            this.state = 264;\r\n            this._errHandler.sync(this);\r\n            _alt = this._interp.adaptivePredict(this._input,20,this._ctx);\r\n        }\r\n\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction AndContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_and;\r\n    return this;\r\n}\r\n\r\nAndContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAndContext.prototype.constructor = AndContext;\r\n\r\n\r\nAndContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterAnd(this);\r\n\t}\r\n};\r\n\r\nAndContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitAnd(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.AndContext = AndContext;\r\n\r\npresentable_policyParser.prototype.and = function() {\r\n\r\n    var localctx = new AndContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 64, presentable_policyParser.RULE_and);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 265;\r\n        this.match(presentable_policyParser.T__1);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction View_unitContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_view_unit;\r\n    return this;\r\n}\r\n\r\nView_unitContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nView_unitContext.prototype.constructor = View_unitContext;\r\n\r\n\r\nView_unitContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterView_unit(this);\r\n\t}\r\n};\r\n\r\nView_unitContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitView_unit(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.View_unitContext = View_unitContext;\r\n\r\npresentable_policyParser.prototype.view_unit = function() {\r\n\r\n    var localctx = new View_unitContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 66, presentable_policyParser.RULE_view_unit);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 267;\r\n        _la = this._input.LA(1);\r\n        if(!(_la===presentable_policyParser.T__22 || _la===presentable_policyParser.T__23)) {\r\n        this._errHandler.recoverInline(this);\r\n        }\r\n        else {\r\n        \tthis._errHandler.reportMatch(this);\r\n            this.consume();\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Time_unitContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_time_unit;\r\n    return this;\r\n}\r\n\r\nTime_unitContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nTime_unitContext.prototype.constructor = Time_unitContext;\r\n\r\n\r\nTime_unitContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterTime_unit(this);\r\n\t}\r\n};\r\n\r\nTime_unitContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitTime_unit(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Time_unitContext = Time_unitContext;\r\n\r\npresentable_policyParser.prototype.time_unit = function() {\r\n\r\n    var localctx = new Time_unitContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 68, presentable_policyParser.RULE_time_unit);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 269;\r\n        _la = this._input.LA(1);\r\n        if(!((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << presentable_policyParser.T__15) | (1 << presentable_policyParser.T__24) | (1 << presentable_policyParser.T__25) | (1 << presentable_policyParser.T__26))) !== 0))) {\r\n        this._errHandler.recoverInline(this);\r\n        }\r\n        else {\r\n        \tthis._errHandler.reportMatch(this);\r\n            this.consume();\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Start_hourContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_start_hour;\r\n    return this;\r\n}\r\n\r\nStart_hourContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nStart_hourContext.prototype.constructor = Start_hourContext;\r\n\r\nStart_hourContext.prototype.INT = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(presentable_policyParser.INT);\r\n    } else {\r\n        return this.getToken(presentable_policyParser.INT, i);\r\n    }\r\n};\r\n\r\n\r\nStart_hourContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterStart_hour(this);\r\n\t}\r\n};\r\n\r\nStart_hourContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitStart_hour(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Start_hourContext = Start_hourContext;\r\n\r\npresentable_policyParser.prototype.start_hour = function() {\r\n\r\n    var localctx = new Start_hourContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 70, presentable_policyParser.RULE_start_hour);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 271;\r\n        this.match(presentable_policyParser.INT);\r\n        this.state = 272;\r\n        this.match(presentable_policyParser.T__5);\r\n        this.state = 273;\r\n        this.match(presentable_policyParser.INT);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction End_hourContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_end_hour;\r\n    return this;\r\n}\r\n\r\nEnd_hourContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nEnd_hourContext.prototype.constructor = End_hourContext;\r\n\r\nEnd_hourContext.prototype.INT = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(presentable_policyParser.INT);\r\n    } else {\r\n        return this.getToken(presentable_policyParser.INT, i);\r\n    }\r\n};\r\n\r\n\r\nEnd_hourContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterEnd_hour(this);\r\n\t}\r\n};\r\n\r\nEnd_hourContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitEnd_hour(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.End_hourContext = End_hourContext;\r\n\r\npresentable_policyParser.prototype.end_hour = function() {\r\n\r\n    var localctx = new End_hourContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 72, presentable_policyParser.RULE_end_hour);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 275;\r\n        this.match(presentable_policyParser.INT);\r\n        this.state = 276;\r\n        this.match(presentable_policyParser.T__5);\r\n        this.state = 277;\r\n        this.match(presentable_policyParser.INT);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nexports.presentable_policyParser = presentable_policyParser;\r\n\n\n/***/ }),\n\n/***/ \"j/5l\":\n/***/ (function(module, exports) {\n\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\n// A token has properties: text, type, line, character position in the line\n// (so we can ignore tabs), token channel, index, and source from which\n// we obtained this token.\n\nfunction Token() {\n\tthis.source = null;\n\tthis.type = null; // token type of the token\n\tthis.channel = null; // The parser ignores everything not on DEFAULT_CHANNEL\n\tthis.start = null; // optional; return -1 if not implemented.\n\tthis.stop = null; // optional; return -1 if not implemented.\n\tthis.tokenIndex = null; // from 0..n-1 of the token object in the input stream\n\tthis.line = null; // line=1..n of the 1st character\n\tthis.column = null; // beginning of the line at which it occurs, 0..n-1\n\tthis._text = null; // text of the token.\n\treturn this;\n}\n\nToken.INVALID_TYPE = 0;\n\n// During lookahead operations, this \"token\" signifies we hit rule end ATN state\n// and did not follow it despite needing to.\nToken.EPSILON = -2;\n\nToken.MIN_USER_TOKEN_TYPE = 1;\n\nToken.EOF = -1;\n\n// All tokens go to the parser (unless skip() is called in that rule)\n// on a particular \"channel\". The parser tunes to a particular channel\n// so that whitespace etc... can go to the parser on a \"hidden\" channel.\n\nToken.DEFAULT_CHANNEL = 0;\n\n// Anything on different channel than DEFAULT_CHANNEL is not parsed\n// by parser.\n\nToken.HIDDEN_CHANNEL = 1;\n\n// Explicitly set the text for this token. If {code text} is not\n// {@code null}, then {@link //getText} will return this value rather than\n// extracting the text from the input.\n//\n// @param text The explicit text of the token, or {@code null} if the text\n// should be obtained from the input along with the start and stop indexes\n// of the token.\n\nObject.defineProperty(Token.prototype, \"text\", {\n\tget : function() {\n\t\treturn this._text;\n\t},\n\tset : function(text) {\n\t\tthis._text = text;\n\t}\n});\n\nToken.prototype.getTokenSource = function() {\n\treturn this.source[0];\n};\n\nToken.prototype.getInputStream = function() {\n\treturn this.source[1];\n};\n\nfunction CommonToken(source, type, channel, start, stop) {\n\tToken.call(this);\n\tthis.source = source !== undefined ? source : CommonToken.EMPTY_SOURCE;\n\tthis.type = type !== undefined ? type : null;\n\tthis.channel = channel !== undefined ? channel : Token.DEFAULT_CHANNEL;\n\tthis.start = start !== undefined ? start : -1;\n\tthis.stop = stop !== undefined ? stop : -1;\n\tthis.tokenIndex = -1;\n\tif (this.source[0] !== null) {\n\t\tthis.line = source[0].line;\n\t\tthis.column = source[0].column;\n\t} else {\n\t\tthis.column = -1;\n\t}\n\treturn this;\n}\n\nCommonToken.prototype = Object.create(Token.prototype);\nCommonToken.prototype.constructor = CommonToken;\n\n// An empty {@link Pair} which is used as the default value of\n// {@link //source} for tokens that do not have a source.\nCommonToken.EMPTY_SOURCE = [ null, null ];\n\n// Constructs a new {@link CommonToken} as a copy of another {@link Token}.\n//\n// <p>\n// If {@code oldToken} is also a {@link CommonToken} instance, the newly\n// constructed token will share a reference to the {@link //text} field and\n// the {@link Pair} stored in {@link //source}. Otherwise, {@link //text} will\n// be assigned the result of calling {@link //getText}, and {@link //source}\n// will be constructed from the result of {@link Token//getTokenSource} and\n// {@link Token//getInputStream}.</p>\n//\n// @param oldToken The token to copy.\n//\nCommonToken.prototype.clone = function() {\n\tvar t = new CommonToken(this.source, this.type, this.channel, this.start,\n\t\t\tthis.stop);\n\tt.tokenIndex = this.tokenIndex;\n\tt.line = this.line;\n\tt.column = this.column;\n\tt.text = this.text;\n\treturn t;\n};\n\nObject.defineProperty(CommonToken.prototype, \"text\", {\n\tget : function() {\n\t\tif (this._text !== null) {\n\t\t\treturn this._text;\n\t\t}\n\t\tvar input = this.getInputStream();\n\t\tif (input === null) {\n\t\t\treturn null;\n\t\t}\n\t\tvar n = input.size;\n\t\tif (this.start < n && this.stop < n) {\n\t\t\treturn input.getText(this.start, this.stop);\n\t\t} else {\n\t\t\treturn \"<EOF>\";\n\t\t}\n\t},\n\tset : function(text) {\n\t\tthis._text = text;\n\t}\n});\n\nCommonToken.prototype.toString = function() {\n\tvar txt = this.text;\n\tif (txt !== null) {\n\t\ttxt = txt.replace(/\\n/g, \"\\\\n\").replace(/\\r/g, \"\\\\r\").replace(/\\t/g, \"\\\\t\");\n\t} else {\n\t\ttxt = \"<no text>\";\n\t}\n\treturn \"[@\" + this.tokenIndex + \",\" + this.start + \":\" + this.stop + \"='\" +\n\t\t\ttxt + \"',<\" + this.type + \">\" +\n\t\t\t(this.channel > 0 ? \",channel=\" + this.channel : \"\") + \",\" +\n\t\t\tthis.line + \":\" + this.column + \"]\";\n};\n\nexports.Token = Token;\nexports.CommonToken = CommonToken;\n\n\n/***/ }),\n\n/***/ \"j0Qz\":\n/***/ (function(module, exports) {\n\n//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\n// The following images show the relation of states and\n// {@link ATNState//transitions} for various grammar constructs.\n//\n// <ul>\n//\n// <li>Solid edges marked with an &//0949; indicate a required\n// {@link EpsilonTransition}.</li>\n//\n// <li>Dashed edges indicate locations where any transition derived from\n// {@link Transition} might appear.</li>\n//\n// <li>Dashed nodes are place holders for either a sequence of linked\n// {@link BasicState} states or the inclusion of a block representing a nested\n// construct in one of the forms below.</li>\n//\n// <li>Nodes showing multiple outgoing alternatives with a {@code ...} support\n// any number of alternatives (one or more). Nodes without the {@code ...} only\n// support the exact number of alternatives shown in the diagram.</li>\n//\n// </ul>\n//\n// <h2>Basic Blocks</h2>\n//\n// <h3>Rule</h3>\n//\n// <embed src=\"images/Rule.svg\" type=\"image/svg+xml\"/>\n//\n// <h3>Block of 1 or more alternatives</h3>\n//\n// <embed src=\"images/Block.svg\" type=\"image/svg+xml\"/>\n//\n// <h2>Greedy Loops</h2>\n//\n// <h3>Greedy Closure: {@code (...)*}</h3>\n//\n// <embed src=\"images/ClosureGreedy.svg\" type=\"image/svg+xml\"/>\n//\n// <h3>Greedy Positive Closure: {@code (...)+}</h3>\n//\n// <embed src=\"images/PositiveClosureGreedy.svg\" type=\"image/svg+xml\"/>\n//\n// <h3>Greedy Optional: {@code (...)?}</h3>\n//\n// <embed src=\"images/OptionalGreedy.svg\" type=\"image/svg+xml\"/>\n//\n// <h2>Non-Greedy Loops</h2>\n//\n// <h3>Non-Greedy Closure: {@code (...)*?}</h3>\n//\n// <embed src=\"images/ClosureNonGreedy.svg\" type=\"image/svg+xml\"/>\n//\n// <h3>Non-Greedy Positive Closure: {@code (...)+?}</h3>\n//\n// <embed src=\"images/PositiveClosureNonGreedy.svg\" type=\"image/svg+xml\"/>\n//\n// <h3>Non-Greedy Optional: {@code (...)??}</h3>\n//\n// <embed src=\"images/OptionalNonGreedy.svg\" type=\"image/svg+xml\"/>\n//\n\nvar INITIAL_NUM_TRANSITIONS = 4;\n\nfunction ATNState() {\n    // Which ATN are we in?\n    this.atn = null;\n    this.stateNumber = ATNState.INVALID_STATE_NUMBER;\n    this.stateType = null;\n    this.ruleIndex = 0; // at runtime, we don't have Rule objects\n    this.epsilonOnlyTransitions = false;\n    // Track the transitions emanating from this ATN state.\n    this.transitions = [];\n    // Used to cache lookahead during parsing, not used during construction\n    this.nextTokenWithinRule = null;\n    return this;\n}\n\n// constants for serialization\nATNState.INVALID_TYPE = 0;\nATNState.BASIC = 1;\nATNState.RULE_START = 2;\nATNState.BLOCK_START = 3;\nATNState.PLUS_BLOCK_START = 4;\nATNState.STAR_BLOCK_START = 5;\nATNState.TOKEN_START = 6;\nATNState.RULE_STOP = 7;\nATNState.BLOCK_END = 8;\nATNState.STAR_LOOP_BACK = 9;\nATNState.STAR_LOOP_ENTRY = 10;\nATNState.PLUS_LOOP_BACK = 11;\nATNState.LOOP_END = 12;\n\nATNState.serializationNames = [\n            \"INVALID\",\n            \"BASIC\",\n            \"RULE_START\",\n            \"BLOCK_START\",\n            \"PLUS_BLOCK_START\",\n            \"STAR_BLOCK_START\",\n            \"TOKEN_START\",\n            \"RULE_STOP\",\n            \"BLOCK_END\",\n            \"STAR_LOOP_BACK\",\n            \"STAR_LOOP_ENTRY\",\n            \"PLUS_LOOP_BACK\",\n            \"LOOP_END\" ];\n\nATNState.INVALID_STATE_NUMBER = -1;\n\nATNState.prototype.toString = function() {\n\treturn this.stateNumber;\n};\n\nATNState.prototype.equals = function(other) {\n    if (other instanceof ATNState) {\n        return this.stateNumber===other.stateNumber;\n    } else {\n        return false;\n    }\n};\n\nATNState.prototype.isNonGreedyExitState = function() {\n    return false;\n};\n\n\nATNState.prototype.addTransition = function(trans, index) {\n\tif(index===undefined) {\n\t\tindex = -1;\n\t}\n    if (this.transitions.length===0) {\n        this.epsilonOnlyTransitions = trans.isEpsilon;\n    } else if(this.epsilonOnlyTransitions !== trans.isEpsilon) {\n        this.epsilonOnlyTransitions = false;\n    }\n    if (index===-1) {\n        this.transitions.push(trans);\n    } else {\n        this.transitions.splice(index, 1, trans);\n    }\n};\n\nfunction BasicState() {\n\tATNState.call(this);\n    this.stateType = ATNState.BASIC;\n    return this;\n}\n\nBasicState.prototype = Object.create(ATNState.prototype);\nBasicState.prototype.constructor = BasicState;\n\n\nfunction DecisionState() {\n\tATNState.call(this);\n    this.decision = -1;\n    this.nonGreedy = false;\n    return this;\n}\n\nDecisionState.prototype = Object.create(ATNState.prototype);\nDecisionState.prototype.constructor = DecisionState;\n\n\n//  The start of a regular {@code (...)} block.\nfunction BlockStartState() {\n\tDecisionState.call(this);\n\tthis.endState = null;\n\treturn this;\n}\n\nBlockStartState.prototype = Object.create(DecisionState.prototype);\nBlockStartState.prototype.constructor = BlockStartState;\n\n\nfunction BasicBlockStartState() {\n\tBlockStartState.call(this);\n\tthis.stateType = ATNState.BLOCK_START;\n\treturn this;\n}\n\nBasicBlockStartState.prototype = Object.create(BlockStartState.prototype);\nBasicBlockStartState.prototype.constructor = BasicBlockStartState;\n\n\n// Terminal node of a simple {@code (a|b|c)} block.\nfunction BlockEndState() {\n\tATNState.call(this);\n\tthis.stateType = ATNState.BLOCK_END;\n    this.startState = null;\n    return this;\n}\n\nBlockEndState.prototype = Object.create(ATNState.prototype);\nBlockEndState.prototype.constructor = BlockEndState;\n\n\n// The last node in the ATN for a rule, unless that rule is the start symbol.\n//  In that case, there is one transition to EOF. Later, we might encode\n//  references to all calls to this rule to compute FOLLOW sets for\n//  error handling.\n//\nfunction RuleStopState() {\n\tATNState.call(this);\n    this.stateType = ATNState.RULE_STOP;\n    return this;\n}\n\nRuleStopState.prototype = Object.create(ATNState.prototype);\nRuleStopState.prototype.constructor = RuleStopState;\n\nfunction RuleStartState() {\n\tATNState.call(this);\n\tthis.stateType = ATNState.RULE_START;\n\tthis.stopState = null;\n\tthis.isPrecedenceRule = false;\n\treturn this;\n}\n\nRuleStartState.prototype = Object.create(ATNState.prototype);\nRuleStartState.prototype.constructor = RuleStartState;\n\n// Decision state for {@code A+} and {@code (A|B)+}.  It has two transitions:\n//  one to the loop back to start of the block and one to exit.\n//\nfunction PlusLoopbackState() {\n\tDecisionState.call(this);\n\tthis.stateType = ATNState.PLUS_LOOP_BACK;\n\treturn this;\n}\n\nPlusLoopbackState.prototype = Object.create(DecisionState.prototype);\nPlusLoopbackState.prototype.constructor = PlusLoopbackState;\n\n\n// Start of {@code (A|B|...)+} loop. Technically a decision state, but\n//  we don't use for code generation; somebody might need it, so I'm defining\n//  it for completeness. In reality, the {@link PlusLoopbackState} node is the\n//  real decision-making note for {@code A+}.\n//\nfunction PlusBlockStartState() {\n\tBlockStartState.call(this);\n\tthis.stateType = ATNState.PLUS_BLOCK_START;\n    this.loopBackState = null;\n    return this;\n}\n\nPlusBlockStartState.prototype = Object.create(BlockStartState.prototype);\nPlusBlockStartState.prototype.constructor = PlusBlockStartState;\n\n// The block that begins a closure loop.\nfunction StarBlockStartState() {\n\tBlockStartState.call(this);\n\tthis.stateType = ATNState.STAR_BLOCK_START;\n\treturn this;\n}\n\nStarBlockStartState.prototype = Object.create(BlockStartState.prototype);\nStarBlockStartState.prototype.constructor = StarBlockStartState;\n\n\nfunction StarLoopbackState() {\n\tATNState.call(this);\n\tthis.stateType = ATNState.STAR_LOOP_BACK;\n\treturn this;\n}\n\nStarLoopbackState.prototype = Object.create(ATNState.prototype);\nStarLoopbackState.prototype.constructor = StarLoopbackState;\n\n\nfunction StarLoopEntryState() {\n\tDecisionState.call(this);\n\tthis.stateType = ATNState.STAR_LOOP_ENTRY;\n    this.loopBackState = null;\n    // Indicates whether this state can benefit from a precedence DFA during SLL decision making.\n    this.isPrecedenceDecision = null;\n    return this;\n}\n\nStarLoopEntryState.prototype = Object.create(DecisionState.prototype);\nStarLoopEntryState.prototype.constructor = StarLoopEntryState;\n\n\n// Mark the end of a * or + loop.\nfunction LoopEndState() {\n\tATNState.call(this);\n\tthis.stateType = ATNState.LOOP_END;\n\tthis.loopBackState = null;\n\treturn this;\n}\n\nLoopEndState.prototype = Object.create(ATNState.prototype);\nLoopEndState.prototype.constructor = LoopEndState;\n\n\n// The Tokens rule start state linking to each lexer rule start state */\nfunction TokensStartState() {\n\tDecisionState.call(this);\n\tthis.stateType = ATNState.TOKEN_START;\n\treturn this;\n}\n\nTokensStartState.prototype = Object.create(DecisionState.prototype);\nTokensStartState.prototype.constructor = TokensStartState;\n\nexports.ATNState = ATNState;\nexports.BasicState = BasicState;\nexports.DecisionState = DecisionState;\nexports.BlockStartState = BlockStartState;\nexports.BlockEndState = BlockEndState;\nexports.LoopEndState = LoopEndState;\nexports.RuleStartState = RuleStartState;\nexports.RuleStopState = RuleStopState;\nexports.TokensStartState = TokensStartState;\nexports.PlusLoopbackState = PlusLoopbackState;\nexports.StarLoopbackState = StarLoopbackState;\nexports.StarLoopEntryState = StarLoopEntryState;\nexports.PlusBlockStartState = PlusBlockStartState;\nexports.StarBlockStartState = StarBlockStartState;\nexports.BasicBlockStartState = BasicBlockStartState;\n\n\n/***/ }),\n\n/***/ \"k1zP\":\n/***/ (function(module, exports, __webpack_require__) {\n\n//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\nvar Token = __webpack_require__(\"j/5l\").Token;\nvar Errors = __webpack_require__(\"5d5Q\");\nvar NoViableAltException = Errors.NoViableAltException;\nvar InputMismatchException = Errors.InputMismatchException;\nvar FailedPredicateException = Errors.FailedPredicateException;\nvar ParseCancellationException = Errors.ParseCancellationException;\nvar ATNState = __webpack_require__(\"j0Qz\").ATNState;\nvar Interval = __webpack_require__(\"T+Yw\").Interval;\nvar IntervalSet = __webpack_require__(\"T+Yw\").IntervalSet;\n\nfunction ErrorStrategy() {\n\n}\n\nErrorStrategy.prototype.reset = function(recognizer){\n};\n\nErrorStrategy.prototype.recoverInline = function(recognizer){\n};\n\nErrorStrategy.prototype.recover = function(recognizer, e){\n};\n\nErrorStrategy.prototype.sync = function(recognizer){\n};\n\nErrorStrategy.prototype.inErrorRecoveryMode = function(recognizer){\n};\n\nErrorStrategy.prototype.reportError = function(recognizer){\n};\n\n\n\n// This is the default implementation of {@link ANTLRErrorStrategy} used for\n// error reporting and recovery in ANTLR parsers.\n//\nfunction DefaultErrorStrategy() {\n\tErrorStrategy.call(this);\n    // Indicates whether the error strategy is currently \"recovering from an\n    // error\". This is used to suppress reporting multiple error messages while\n    // attempting to recover from a detected syntax error.\n    //\n    // @see //inErrorRecoveryMode\n    //\n    this.errorRecoveryMode = false;\n\n    // The index into the input stream where the last error occurred.\n    // This is used to prevent infinite loops where an error is found\n    // but no token is consumed during recovery...another error is found,\n    // ad nauseum. This is a failsafe mechanism to guarantee that at least\n    // one token/tree node is consumed for two errors.\n    //\n    this.lastErrorIndex = -1;\n    this.lastErrorStates = null;\n    return this;\n}\n\nDefaultErrorStrategy.prototype = Object.create(ErrorStrategy.prototype);\nDefaultErrorStrategy.prototype.constructor = DefaultErrorStrategy;\n\n// <p>The default implementation simply calls {@link //endErrorCondition} to\n// ensure that the handler is not in error recovery mode.</p>\nDefaultErrorStrategy.prototype.reset = function(recognizer) {\n    this.endErrorCondition(recognizer);\n};\n\n//\n// This method is called to enter error recovery mode when a recognition\n// exception is reported.\n//\n// @param recognizer the parser instance\n//\nDefaultErrorStrategy.prototype.beginErrorCondition = function(recognizer) {\n    this.errorRecoveryMode = true;\n};\n\nDefaultErrorStrategy.prototype.inErrorRecoveryMode = function(recognizer) {\n    return this.errorRecoveryMode;\n};\n\n//\n// This method is called to leave error recovery mode after recovering from\n// a recognition exception.\n//\n// @param recognizer\n//\nDefaultErrorStrategy.prototype.endErrorCondition = function(recognizer) {\n    this.errorRecoveryMode = false;\n    this.lastErrorStates = null;\n    this.lastErrorIndex = -1;\n};\n\n//\n// {@inheritDoc}\n//\n// <p>The default implementation simply calls {@link //endErrorCondition}.</p>\n//\nDefaultErrorStrategy.prototype.reportMatch = function(recognizer) {\n    this.endErrorCondition(recognizer);\n};\n\n//\n// {@inheritDoc}\n//\n// <p>The default implementation returns immediately if the handler is already\n// in error recovery mode. Otherwise, it calls {@link //beginErrorCondition}\n// and dispatches the reporting task based on the runtime type of {@code e}\n// according to the following table.</p>\n//\n// <ul>\n// <li>{@link NoViableAltException}: Dispatches the call to\n// {@link //reportNoViableAlternative}</li>\n// <li>{@link InputMismatchException}: Dispatches the call to\n// {@link //reportInputMismatch}</li>\n// <li>{@link FailedPredicateException}: Dispatches the call to\n// {@link //reportFailedPredicate}</li>\n// <li>All other types: calls {@link Parser//notifyErrorListeners} to report\n// the exception</li>\n// </ul>\n//\nDefaultErrorStrategy.prototype.reportError = function(recognizer, e) {\n   // if we've already reported an error and have not matched a token\n   // yet successfully, don't report any errors.\n    if(this.inErrorRecoveryMode(recognizer)) {\n        return; // don't report spurious errors\n    }\n    this.beginErrorCondition(recognizer);\n    if ( e instanceof NoViableAltException ) {\n        this.reportNoViableAlternative(recognizer, e);\n    } else if ( e instanceof InputMismatchException ) {\n        this.reportInputMismatch(recognizer, e);\n    } else if ( e instanceof FailedPredicateException ) {\n        this.reportFailedPredicate(recognizer, e);\n    } else {\n        console.log(\"unknown recognition error type: \" + e.constructor.name);\n        console.log(e.stack);\n        recognizer.notifyErrorListeners(e.getOffendingToken(), e.getMessage(), e);\n    }\n};\n//\n// {@inheritDoc}\n//\n// <p>The default implementation resynchronizes the parser by consuming tokens\n// until we find one in the resynchronization set--loosely the set of tokens\n// that can follow the current rule.</p>\n//\nDefaultErrorStrategy.prototype.recover = function(recognizer, e) {\n    if (this.lastErrorIndex===recognizer.getInputStream().index &&\n        this.lastErrorStates !== null && this.lastErrorStates.indexOf(recognizer.state)>=0) {\n\t\t// uh oh, another error at same token index and previously-visited\n\t\t// state in ATN; must be a case where LT(1) is in the recovery\n\t\t// token set so nothing got consumed. Consume a single token\n\t\t// at least to prevent an infinite loop; this is a failsafe.\n\t\trecognizer.consume();\n    }\n    this.lastErrorIndex = recognizer._input.index;\n    if (this.lastErrorStates === null) {\n        this.lastErrorStates = [];\n    }\n    this.lastErrorStates.push(recognizer.state);\n    var followSet = this.getErrorRecoverySet(recognizer);\n    this.consumeUntil(recognizer, followSet);\n};\n\n// The default implementation of {@link ANTLRErrorStrategy//sync} makes sure\n// that the current lookahead symbol is consistent with what were expecting\n// at this point in the ATN. You can call this anytime but ANTLR only\n// generates code to check before subrules/loops and each iteration.\n//\n// <p>Implements Jim Idle's magic sync mechanism in closures and optional\n// subrules. E.g.,</p>\n//\n// <pre>\n// a : sync ( stuff sync )* ;\n// sync : {consume to what can follow sync} ;\n// </pre>\n//\n// At the start of a sub rule upon error, {@link //sync} performs single\n// token deletion, if possible. If it can't do that, it bails on the current\n// rule and uses the default error recovery, which consumes until the\n// resynchronization set of the current rule.\n//\n// <p>If the sub rule is optional ({@code (...)?}, {@code (...)*}, or block\n// with an empty alternative), then the expected set includes what follows\n// the subrule.</p>\n//\n// <p>During loop iteration, it consumes until it sees a token that can start a\n// sub rule or what follows loop. Yes, that is pretty aggressive. We opt to\n// stay in the loop as long as possible.</p>\n//\n// <p><strong>ORIGINS</strong></p>\n//\n// <p>Previous versions of ANTLR did a poor job of their recovery within loops.\n// A single mismatch token or missing token would force the parser to bail\n// out of the entire rules surrounding the loop. So, for rule</p>\n//\n// <pre>\n// classDef : 'class' ID '{' member* '}'\n// </pre>\n//\n// input with an extra token between members would force the parser to\n// consume until it found the next class definition rather than the next\n// member definition of the current class.\n//\n// <p>This functionality cost a little bit of effort because the parser has to\n// compare token set at the start of the loop and at each iteration. If for\n// some reason speed is suffering for you, you can turn off this\n// functionality by simply overriding this method as a blank { }.</p>\n//\nDefaultErrorStrategy.prototype.sync = function(recognizer) {\n    // If already recovering, don't try to sync\n    if (this.inErrorRecoveryMode(recognizer)) {\n        return;\n    }\n    var s = recognizer._interp.atn.states[recognizer.state];\n    var la = recognizer.getTokenStream().LA(1);\n    // try cheaper subset first; might get lucky. seems to shave a wee bit off\n    var nextTokens = recognizer.atn.nextTokens(s);\n    if (nextTokens.contains(Token.EPSILON) || nextTokens.contains(la)) {\n        return;\n    }\n    switch (s.stateType) {\n    case ATNState.BLOCK_START:\n    case ATNState.STAR_BLOCK_START:\n    case ATNState.PLUS_BLOCK_START:\n    case ATNState.STAR_LOOP_ENTRY:\n       // report error and recover if possible\n        if( this.singleTokenDeletion(recognizer) !== null) {\n            return;\n        } else {\n            throw new InputMismatchException(recognizer);\n        }\n        break;\n    case ATNState.PLUS_LOOP_BACK:\n    case ATNState.STAR_LOOP_BACK:\n        this.reportUnwantedToken(recognizer);\n        var expecting = new IntervalSet();\n        expecting.addSet(recognizer.getExpectedTokens());\n        var whatFollowsLoopIterationOrRule = expecting.addSet(this.getErrorRecoverySet(recognizer));\n        this.consumeUntil(recognizer, whatFollowsLoopIterationOrRule);\n        break;\n    default:\n        // do nothing if we can't identify the exact kind of ATN state\n    }\n};\n\n// This is called by {@link //reportError} when the exception is a\n// {@link NoViableAltException}.\n//\n// @see //reportError\n//\n// @param recognizer the parser instance\n// @param e the recognition exception\n//\nDefaultErrorStrategy.prototype.reportNoViableAlternative = function(recognizer, e) {\n    var tokens = recognizer.getTokenStream();\n    var input;\n    if(tokens !== null) {\n        if (e.startToken.type===Token.EOF) {\n            input = \"<EOF>\";\n        } else {\n            input = tokens.getText(new Interval(e.startToken.tokenIndex, e.offendingToken.tokenIndex));\n        }\n    } else {\n        input = \"<unknown input>\";\n    }\n    var msg = \"no viable alternative at input \" + this.escapeWSAndQuote(input);\n    recognizer.notifyErrorListeners(msg, e.offendingToken, e);\n};\n\n//\n// This is called by {@link //reportError} when the exception is an\n// {@link InputMismatchException}.\n//\n// @see //reportError\n//\n// @param recognizer the parser instance\n// @param e the recognition exception\n//\nDefaultErrorStrategy.prototype.reportInputMismatch = function(recognizer, e) {\n    var msg = \"mismatched input \" + this.getTokenErrorDisplay(e.offendingToken) +\n          \" expecting \" + e.getExpectedTokens().toString(recognizer.literalNames, recognizer.symbolicNames);\n    recognizer.notifyErrorListeners(msg, e.offendingToken, e);\n};\n\n//\n// This is called by {@link //reportError} when the exception is a\n// {@link FailedPredicateException}.\n//\n// @see //reportError\n//\n// @param recognizer the parser instance\n// @param e the recognition exception\n//\nDefaultErrorStrategy.prototype.reportFailedPredicate = function(recognizer, e) {\n    var ruleName = recognizer.ruleNames[recognizer._ctx.ruleIndex];\n    var msg = \"rule \" + ruleName + \" \" + e.message;\n    recognizer.notifyErrorListeners(msg, e.offendingToken, e);\n};\n\n// This method is called to report a syntax error which requires the removal\n// of a token from the input stream. At the time this method is called, the\n// erroneous symbol is current {@code LT(1)} symbol and has not yet been\n// removed from the input stream. When this method returns,\n// {@code recognizer} is in error recovery mode.\n//\n// <p>This method is called when {@link //singleTokenDeletion} identifies\n// single-token deletion as a viable recovery strategy for a mismatched\n// input error.</p>\n//\n// <p>The default implementation simply returns if the handler is already in\n// error recovery mode. Otherwise, it calls {@link //beginErrorCondition} to\n// enter error recovery mode, followed by calling\n// {@link Parser//notifyErrorListeners}.</p>\n//\n// @param recognizer the parser instance\n//\nDefaultErrorStrategy.prototype.reportUnwantedToken = function(recognizer) {\n    if (this.inErrorRecoveryMode(recognizer)) {\n        return;\n    }\n    this.beginErrorCondition(recognizer);\n    var t = recognizer.getCurrentToken();\n    var tokenName = this.getTokenErrorDisplay(t);\n    var expecting = this.getExpectedTokens(recognizer);\n    var msg = \"extraneous input \" + tokenName + \" expecting \" +\n        expecting.toString(recognizer.literalNames, recognizer.symbolicNames);\n    recognizer.notifyErrorListeners(msg, t, null);\n};\n// This method is called to report a syntax error which requires the\n// insertion of a missing token into the input stream. At the time this\n// method is called, the missing token has not yet been inserted. When this\n// method returns, {@code recognizer} is in error recovery mode.\n//\n// <p>This method is called when {@link //singleTokenInsertion} identifies\n// single-token insertion as a viable recovery strategy for a mismatched\n// input error.</p>\n//\n// <p>The default implementation simply returns if the handler is already in\n// error recovery mode. Otherwise, it calls {@link //beginErrorCondition} to\n// enter error recovery mode, followed by calling\n// {@link Parser//notifyErrorListeners}.</p>\n//\n// @param recognizer the parser instance\n//\nDefaultErrorStrategy.prototype.reportMissingToken = function(recognizer) {\n    if ( this.inErrorRecoveryMode(recognizer)) {\n        return;\n    }\n    this.beginErrorCondition(recognizer);\n    var t = recognizer.getCurrentToken();\n    var expecting = this.getExpectedTokens(recognizer);\n    var msg = \"missing \" + expecting.toString(recognizer.literalNames, recognizer.symbolicNames) +\n          \" at \" + this.getTokenErrorDisplay(t);\n    recognizer.notifyErrorListeners(msg, t, null);\n};\n\n// <p>The default implementation attempts to recover from the mismatched input\n// by using single token insertion and deletion as described below. If the\n// recovery attempt fails, this method throws an\n// {@link InputMismatchException}.</p>\n//\n// <p><strong>EXTRA TOKEN</strong> (single token deletion)</p>\n//\n// <p>{@code LA(1)} is not what we are looking for. If {@code LA(2)} has the\n// right token, however, then assume {@code LA(1)} is some extra spurious\n// token and delete it. Then consume and return the next token (which was\n// the {@code LA(2)} token) as the successful result of the match operation.</p>\n//\n// <p>This recovery strategy is implemented by {@link\n// //singleTokenDeletion}.</p>\n//\n// <p><strong>MISSING TOKEN</strong> (single token insertion)</p>\n//\n// <p>If current token (at {@code LA(1)}) is consistent with what could come\n// after the expected {@code LA(1)} token, then assume the token is missing\n// and use the parser's {@link TokenFactory} to create it on the fly. The\n// \"insertion\" is performed by returning the created token as the successful\n// result of the match operation.</p>\n//\n// <p>This recovery strategy is implemented by {@link\n// //singleTokenInsertion}.</p>\n//\n// <p><strong>EXAMPLE</strong></p>\n//\n// <p>For example, Input {@code i=(3;} is clearly missing the {@code ')'}. When\n// the parser returns from the nested call to {@code expr}, it will have\n// call chain:</p>\n//\n// <pre>\n// stat &rarr; expr &rarr; atom\n// </pre>\n//\n// and it will be trying to match the {@code ')'} at this point in the\n// derivation:\n//\n// <pre>\n// =&gt; ID '=' '(' INT ')' ('+' atom)* ';'\n// ^\n// </pre>\n//\n// The attempt to match {@code ')'} will fail when it sees {@code ';'} and\n// call {@link //recoverInline}. To recover, it sees that {@code LA(1)==';'}\n// is in the set of tokens that can follow the {@code ')'} token reference\n// in rule {@code atom}. It can assume that you forgot the {@code ')'}.\n//\nDefaultErrorStrategy.prototype.recoverInline = function(recognizer) {\n    // SINGLE TOKEN DELETION\n    var matchedSymbol = this.singleTokenDeletion(recognizer);\n    if (matchedSymbol !== null) {\n        // we have deleted the extra token.\n        // now, move past ttype token as if all were ok\n        recognizer.consume();\n        return matchedSymbol;\n    }\n    // SINGLE TOKEN INSERTION\n    if (this.singleTokenInsertion(recognizer)) {\n        return this.getMissingSymbol(recognizer);\n    }\n    // even that didn't work; must throw the exception\n    throw new InputMismatchException(recognizer);\n};\n\n//\n// This method implements the single-token insertion inline error recovery\n// strategy. It is called by {@link //recoverInline} if the single-token\n// deletion strategy fails to recover from the mismatched input. If this\n// method returns {@code true}, {@code recognizer} will be in error recovery\n// mode.\n//\n// <p>This method determines whether or not single-token insertion is viable by\n// checking if the {@code LA(1)} input symbol could be successfully matched\n// if it were instead the {@code LA(2)} symbol. If this method returns\n// {@code true}, the caller is responsible for creating and inserting a\n// token with the correct type to produce this behavior.</p>\n//\n// @param recognizer the parser instance\n// @return {@code true} if single-token insertion is a viable recovery\n// strategy for the current mismatched input, otherwise {@code false}\n//\nDefaultErrorStrategy.prototype.singleTokenInsertion = function(recognizer) {\n    var currentSymbolType = recognizer.getTokenStream().LA(1);\n    // if current token is consistent with what could come after current\n    // ATN state, then we know we're missing a token; error recovery\n    // is free to conjure up and insert the missing token\n    var atn = recognizer._interp.atn;\n    var currentState = atn.states[recognizer.state];\n    var next = currentState.transitions[0].target;\n    var expectingAtLL2 = atn.nextTokens(next, recognizer._ctx);\n    if (expectingAtLL2.contains(currentSymbolType) ){\n        this.reportMissingToken(recognizer);\n        return true;\n    } else {\n        return false;\n    }\n};\n\n// This method implements the single-token deletion inline error recovery\n// strategy. It is called by {@link //recoverInline} to attempt to recover\n// from mismatched input. If this method returns null, the parser and error\n// handler state will not have changed. If this method returns non-null,\n// {@code recognizer} will <em>not</em> be in error recovery mode since the\n// returned token was a successful match.\n//\n// <p>If the single-token deletion is successful, this method calls\n// {@link //reportUnwantedToken} to report the error, followed by\n// {@link Parser//consume} to actually \"delete\" the extraneous token. Then,\n// before returning {@link //reportMatch} is called to signal a successful\n// match.</p>\n//\n// @param recognizer the parser instance\n// @return the successfully matched {@link Token} instance if single-token\n// deletion successfully recovers from the mismatched input, otherwise\n// {@code null}\n//\nDefaultErrorStrategy.prototype.singleTokenDeletion = function(recognizer) {\n    var nextTokenType = recognizer.getTokenStream().LA(2);\n    var expecting = this.getExpectedTokens(recognizer);\n    if (expecting.contains(nextTokenType)) {\n        this.reportUnwantedToken(recognizer);\n        // print(\"recoverFromMismatchedToken deleting \" \\\n        // + str(recognizer.getTokenStream().LT(1)) \\\n        // + \" since \" + str(recognizer.getTokenStream().LT(2)) \\\n        // + \" is what we want\", file=sys.stderr)\n        recognizer.consume(); // simply delete extra token\n        // we want to return the token we're actually matching\n        var matchedSymbol = recognizer.getCurrentToken();\n        this.reportMatch(recognizer); // we know current token is correct\n        return matchedSymbol;\n    } else {\n        return null;\n    }\n};\n\n// Conjure up a missing token during error recovery.\n//\n// The recognizer attempts to recover from single missing\n// symbols. But, actions might refer to that missing symbol.\n// For example, x=ID {f($x);}. The action clearly assumes\n// that there has been an identifier matched previously and that\n// $x points at that token. If that token is missing, but\n// the next token in the stream is what we want we assume that\n// this token is missing and we keep going. Because we\n// have to return some token to replace the missing token,\n// we have to conjure one up. This method gives the user control\n// over the tokens returned for missing tokens. Mostly,\n// you will want to create something special for identifier\n// tokens. For literals such as '{' and ',', the default\n// action in the parser or tree parser works. It simply creates\n// a CommonToken of the appropriate type. The text will be the token.\n// If you change what tokens must be created by the lexer,\n// override this method to create the appropriate tokens.\n//\nDefaultErrorStrategy.prototype.getMissingSymbol = function(recognizer) {\n    var currentSymbol = recognizer.getCurrentToken();\n    var expecting = this.getExpectedTokens(recognizer);\n    var expectedTokenType = expecting.first(); // get any element\n    var tokenText;\n    if (expectedTokenType===Token.EOF) {\n        tokenText = \"<missing EOF>\";\n    } else {\n        tokenText = \"<missing \" + recognizer.literalNames[expectedTokenType] + \">\";\n    }\n    var current = currentSymbol;\n    var lookback = recognizer.getTokenStream().LT(-1);\n    if (current.type===Token.EOF && lookback !== null) {\n        current = lookback;\n    }\n    return recognizer.getTokenFactory().create(current.source,\n        expectedTokenType, tokenText, Token.DEFAULT_CHANNEL,\n        -1, -1, current.line, current.column);\n};\n\nDefaultErrorStrategy.prototype.getExpectedTokens = function(recognizer) {\n    return recognizer.getExpectedTokens();\n};\n\n// How should a token be displayed in an error message? The default\n// is to display just the text, but during development you might\n// want to have a lot of information spit out. Override in that case\n// to use t.toString() (which, for CommonToken, dumps everything about\n// the token). This is better than forcing you to override a method in\n// your token objects because you don't have to go modify your lexer\n// so that it creates a new Java type.\n//\nDefaultErrorStrategy.prototype.getTokenErrorDisplay = function(t) {\n    if (t === null) {\n        return \"<no token>\";\n    }\n    var s = t.text;\n    if (s === null) {\n        if (t.type===Token.EOF) {\n            s = \"<EOF>\";\n        } else {\n            s = \"<\" + t.type + \">\";\n        }\n    }\n    return this.escapeWSAndQuote(s);\n};\n\nDefaultErrorStrategy.prototype.escapeWSAndQuote = function(s) {\n    s = s.replace(/\\n/g,\"\\\\n\");\n    s = s.replace(/\\r/g,\"\\\\r\");\n    s = s.replace(/\\t/g,\"\\\\t\");\n    return \"'\" + s + \"'\";\n};\n\n// Compute the error recovery set for the current rule. During\n// rule invocation, the parser pushes the set of tokens that can\n// follow that rule reference on the stack; this amounts to\n// computing FIRST of what follows the rule reference in the\n// enclosing rule. See LinearApproximator.FIRST().\n// This local follow set only includes tokens\n// from within the rule; i.e., the FIRST computation done by\n// ANTLR stops at the end of a rule.\n//\n// EXAMPLE\n//\n// When you find a \"no viable alt exception\", the input is not\n// consistent with any of the alternatives for rule r. The best\n// thing to do is to consume tokens until you see something that\n// can legally follow a call to r//or* any rule that called r.\n// You don't want the exact set of viable next tokens because the\n// input might just be missing a token--you might consume the\n// rest of the input looking for one of the missing tokens.\n//\n// Consider grammar:\n//\n// a : '[' b ']'\n// | '(' b ')'\n// ;\n// b : c '^' INT ;\n// c : ID\n// | INT\n// ;\n//\n// At each rule invocation, the set of tokens that could follow\n// that rule is pushed on a stack. Here are the various\n// context-sensitive follow sets:\n//\n// FOLLOW(b1_in_a) = FIRST(']') = ']'\n// FOLLOW(b2_in_a) = FIRST(')') = ')'\n// FOLLOW(c_in_b) = FIRST('^') = '^'\n//\n// Upon erroneous input \"[]\", the call chain is\n//\n// a -> b -> c\n//\n// and, hence, the follow context stack is:\n//\n// depth follow set start of rule execution\n// 0 <EOF> a (from main())\n// 1 ']' b\n// 2 '^' c\n//\n// Notice that ')' is not included, because b would have to have\n// been called from a different context in rule a for ')' to be\n// included.\n//\n// For error recovery, we cannot consider FOLLOW(c)\n// (context-sensitive or otherwise). We need the combined set of\n// all context-sensitive FOLLOW sets--the set of all tokens that\n// could follow any reference in the call chain. We need to\n// resync to one of those tokens. Note that FOLLOW(c)='^' and if\n// we resync'd to that token, we'd consume until EOF. We need to\n// sync to context-sensitive FOLLOWs for a, b, and c: {']','^'}.\n// In this case, for input \"[]\", LA(1) is ']' and in the set, so we would\n// not consume anything. After printing an error, rule c would\n// return normally. Rule b would not find the required '^' though.\n// At this point, it gets a mismatched token error and throws an\n// exception (since LA(1) is not in the viable following token\n// set). The rule exception handler tries to recover, but finds\n// the same recovery set and doesn't consume anything. Rule b\n// exits normally returning to rule a. Now it finds the ']' (and\n// with the successful match exits errorRecovery mode).\n//\n// So, you can see that the parser walks up the call chain looking\n// for the token that was a member of the recovery set.\n//\n// Errors are not generated in errorRecovery mode.\n//\n// ANTLR's error recovery mechanism is based upon original ideas:\n//\n// \"Algorithms + Data Structures = Programs\" by Niklaus Wirth\n//\n// and\n//\n// \"A note on error recovery in recursive descent parsers\":\n// http://portal.acm.org/citation.cfm?id=947902.947905\n//\n// Later, Josef Grosch had some good ideas:\n//\n// \"Efficient and Comfortable Error Recovery in Recursive Descent\n// Parsers\":\n// ftp://www.cocolab.com/products/cocktail/doca4.ps/ell.ps.zip\n//\n// Like Grosch I implement context-sensitive FOLLOW sets that are combined\n// at run-time upon error to avoid overhead during parsing.\n//\nDefaultErrorStrategy.prototype.getErrorRecoverySet = function(recognizer) {\n    var atn = recognizer._interp.atn;\n    var ctx = recognizer._ctx;\n    var recoverSet = new IntervalSet();\n    while (ctx !== null && ctx.invokingState>=0) {\n        // compute what follows who invoked us\n        var invokingState = atn.states[ctx.invokingState];\n        var rt = invokingState.transitions[0];\n        var follow = atn.nextTokens(rt.followState);\n        recoverSet.addSet(follow);\n        ctx = ctx.parentCtx;\n    }\n    recoverSet.removeOne(Token.EPSILON);\n    return recoverSet;\n};\n\n// Consume tokens until one matches the given token set.//\nDefaultErrorStrategy.prototype.consumeUntil = function(recognizer, set) {\n    var ttype = recognizer.getTokenStream().LA(1);\n    while( ttype !== Token.EOF && !set.contains(ttype)) {\n        recognizer.consume();\n        ttype = recognizer.getTokenStream().LA(1);\n    }\n};\n\n//\n// This implementation of {@link ANTLRErrorStrategy} responds to syntax errors\n// by immediately canceling the parse operation with a\n// {@link ParseCancellationException}. The implementation ensures that the\n// {@link ParserRuleContext//exception} field is set for all parse tree nodes\n// that were not completed prior to encountering the error.\n//\n// <p>\n// This error strategy is useful in the following scenarios.</p>\n//\n// <ul>\n// <li><strong>Two-stage parsing:</strong> This error strategy allows the first\n// stage of two-stage parsing to immediately terminate if an error is\n// encountered, and immediately fall back to the second stage. In addition to\n// avoiding wasted work by attempting to recover from errors here, the empty\n// implementation of {@link BailErrorStrategy//sync} improves the performance of\n// the first stage.</li>\n// <li><strong>Silent validation:</strong> When syntax errors are not being\n// reported or logged, and the parse result is simply ignored if errors occur,\n// the {@link BailErrorStrategy} avoids wasting work on recovering from errors\n// when the result will be ignored either way.</li>\n// </ul>\n//\n// <p>\n// {@code myparser.setErrorHandler(new BailErrorStrategy());}</p>\n//\n// @see Parser//setErrorHandler(ANTLRErrorStrategy)\n//\nfunction BailErrorStrategy() {\n\tDefaultErrorStrategy.call(this);\n\treturn this;\n}\n\nBailErrorStrategy.prototype = Object.create(DefaultErrorStrategy.prototype);\nBailErrorStrategy.prototype.constructor = BailErrorStrategy;\n\n// Instead of recovering from exception {@code e}, re-throw it wrapped\n// in a {@link ParseCancellationException} so it is not caught by the\n// rule function catches. Use {@link Exception//getCause()} to get the\n// original {@link RecognitionException}.\n//\nBailErrorStrategy.prototype.recover = function(recognizer, e) {\n    var context = recognizer._ctx;\n    while (context !== null) {\n        context.exception = e;\n        context = context.parentCtx;\n    }\n    throw new ParseCancellationException(e);\n};\n\n// Make sure we don't attempt to recover inline; if the parser\n// successfully recovers, it won't throw an exception.\n//\nBailErrorStrategy.prototype.recoverInline = function(recognizer) {\n    this.recover(recognizer, new InputMismatchException(recognizer));\n};\n\n// Make sure we don't attempt to recover from problems in subrules.//\nBailErrorStrategy.prototype.sync = function(recognizer) {\n    // pass\n};\n\nexports.BailErrorStrategy = BailErrorStrategy;\nexports.DefaultErrorStrategy = DefaultErrorStrategy;\n\n\n/***/ }),\n\n/***/ \"k2M1\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports.policyLexer = __webpack_require__(\"NwDQ\").presentable_policyLexer;\r\nexports.policyParser = __webpack_require__(\"iUzR\").presentable_policyParser;\r\nexports.policyListener = __webpack_require__(\"LPMK\").presentable_policyListener;\r\n\n\n/***/ }),\n\n/***/ \"kIFb\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CONTRACT_STATUS\", function() { return CONTRACT_STATUS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CONTRACT_STATUS_TIPS\", function() { return CONTRACT_STATUS_TIPS; });\nvar CONTRACT_STATUS = {\n  uncreated: -1,\n  initial: 1,\n  running: 2,\n  activated: 3,\n  userTerminated: 4,\n  sysTerminated: 5,\n  terminated: 6\n};\n\nvar CONTRACT_STATUS_TIPS = {\n  '-1': '未创建合同',\n  1: '未开始执行',\n  2: '执行中',\n  3: '生效中',\n  4: '用户终止',\n  5: '系统终止',\n  6: '合同已终止'\n};\n\n/***/ }),\n\n/***/ \"kQ4V\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_index_vue__ = __webpack_require__(\"6S+M\");\n/* empty harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_afdd11ca_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_index_vue__ = __webpack_require__(\"szxE\");\nfunction injectStyle (ssrContext) {\n  __webpack_require__(\"/tJ5\")\n}\nvar normalizeComponent = __webpack_require__(\"VU/8\")\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-afdd11ca\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_index_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_afdd11ca_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_index_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ \"kQsE\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise__ = __webpack_require__(\"//Fk\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_typeof__ = __webpack_require__(\"pFYg\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_typeof___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_typeof__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_assign__ = __webpack_require__(\"woOf\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_assign___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_assign__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_TableView_index_vue__ = __webpack_require__(\"1G+u\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__config_index__ = __webpack_require__(\"2uFj\");\n\n\n\n\n\n\nvar STATUS_TIPS = __WEBPACK_IMPORTED_MODULE_4__config_index__[\"a\" /* default */].PRESENTABLE_STATUS_TIPS;\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'presentables',\n  data: function data() {\n    return {\n      resourceList: [],\n      query: ''\n    };\n  },\n\n  components: {\n    TableView: __WEBPACK_IMPORTED_MODULE_3__components_TableView_index_vue__[\"a\" /* default */]\n  },\n\n  mounted: function mounted() {},\n\n  methods: {\n    queryHandler: function queryHandler() {\n      this.$message.warning('待开发');\n    },\n    formatHandler: function formatHandler(list) {\n      list.forEach(function (item) {\n        item._statusInfo = STATUS_TIPS[item.status];\n      });\n      return list;\n    },\n    mergeResourceData: function mergeResourceData(contracts, data) {\n      var dataMap = {};\n      data.forEach(function (p) {\n        dataMap[p.resourceId] = p;\n      });\n\n      contracts.forEach(function (contract) {\n        var item = dataMap[contract.resourceId] || null;\n        if (item) {\n          __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_assign___default()(contract, {\n            resourceDetail: item\n          });\n        }\n      });\n    },\n    mergePersentableData: function mergePersentableData(contracts, data) {\n      var dataMap = {};\n      data.forEach(function (p) {\n        dataMap[p.contractId] = p;\n      });\n      contracts.forEach(function (contract) {\n        var item = dataMap[contract.contractId] || null;\n        if (item && item.presentableId) {\n          __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_assign___default()(contract, {\n            presentableDetail: item\n          });\n        }\n      });\n    },\n    loader: function loader() {\n      var _this = this;\n\n      var self = this;\n      return function (param) {\n        var nodeId = self.$route.params.nodeId;\n        if ((typeof param === 'undefined' ? 'undefined' : __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_typeof___default()(param)) === 'object') {\n          __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_assign___default()(param, {\n            partyTwo: nodeId\n          });\n          param = {\n            params: param\n          };\n        }\n        return self.loadContracts(param).then(function (res) {\n          var contracts = res.data.data.dataList;\n          if (!contracts.length) {\n            return res;\n          }\n\n          var contractIds = [];\n          var resourceIds = [];\n          contracts.forEach(function (c) {\n            contractIds.push(c.contractId);\n            resourceIds.push(c.resourceId);\n          });\n\n          return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise___default.a.all([_this.loadResourceData(resourceIds), self.loadPresentables({\n            contractIds: contractIds.join(','),\n            nodeId: nodeId\n          })]).then(function (responses) {\n            var resourcesData = responses[0];\n            var presentables = responses[1];\n            self.mergeResourceData(contracts, resourcesData);\n            self.mergePersentableData(contracts, presentables);\n            console.log(contracts);\n            return res;\n          });\n        });\n      };\n    },\n    loadResourceData: function loadResourceData(resIds) {\n      var _this2 = this;\n\n      var promiseList = resIds.map(function (resId) {\n        return _this2.$services.resource.get(resId).then(function (res) {\n          return res.getData();\n        });\n      });\n\n      return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise___default.a.all(promiseList);\n    },\n    loadContracts: function loadContracts(param) {\n      var _this3 = this;\n\n      return this.$services.contract.get(param || {}).then(function (res) {\n        return res;\n      }).catch(function (err) {\n        _this3.$message.error(err.response.errorMsg || err);\n      });\n    },\n    loadPresentables: function loadPresentables(param) {\n      var _this4 = this;\n\n      return this.$services.presentables.get({ params: param }).then(function (res) {\n        return res.getData();\n      }).catch(function (err) {\n        _this4.$message.error(err.response.errorMsg || err);\n      });\n    },\n    handlePresentable: function handlePresentable(row, type, hash) {\n      var query = {\n        presentableId: row.presentableDetail && row.presentableDetail.presentableId,\n        contractId: row.contractId\n      };\n      type = type || 'detail';\n      hash = hash && '#' + hash || '';\n\n      if (!hash && !row.presentableDetail) {\n        hash = '#presentable';\n      }\n      var path = '/node/' + this.$route.params.nodeId + '/presentable/' + type + hash;\n      this.$router.push({\n        path: path,\n        query: query\n      });\n    }\n  }\n});\n\n/***/ }),\n\n/***/ \"lISv\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_index_vue__ = __webpack_require__(\"803e\");\n/* empty harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_f9f08148_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_index_vue__ = __webpack_require__(\"tdq/\");\nfunction injectStyle (ssrContext) {\n  __webpack_require__(\"HwOZ\")\n}\nvar normalizeComponent = __webpack_require__(\"VU/8\")\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-f9f08148\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_index_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_f9f08148_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_index_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ \"lL/Q\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[(_vm.contractDetail)?_c('div',[_c('ul',{staticClass:\"p-detail\"},[_c('li',[_c('label',{staticClass:\"item-title\"},[_vm._v(\"contract Id\")]),_vm._v(\" \"),_c('span',{staticClass:\"item-detail\"},[_vm._v(_vm._s(_vm.contractDetail.contractId))])]),_vm._v(\" \"),_c('li',[_c('label',{staticClass:\"item-title\"},[_vm._v(\"合同状态：\")]),_vm._v(\" \"),_c('span',{staticClass:\"item-detail\"},[_vm._v(_vm._s(_vm.formatContractDetail.statusTip))])]),_vm._v(\" \"),_c('li',[_c('label',{staticClass:\"item-title\"},[_vm._v(\"合同甲方：\")]),_vm._v(\" \"),_c('span',{staticClass:\"item-detail\"},[_vm._v(_vm._s(_vm.contractDetail.partyOne))])]),_vm._v(\" \"),_c('li',[_c('label',{staticClass:\"item-title\"},[_vm._v(\"合同乙方：\")]),_vm._v(\" \"),_c('span',{staticClass:\"item-detail\"},[_vm._v(_vm._s(_vm.contractDetail.partyTwo))])]),_vm._v(\" \"),_c('li',[_c('label',{staticClass:\"item-title\"},[_vm._v(\"合同创建时间：\")]),_vm._v(\" \"),_c('span',{staticClass:\"item-detail\"},[_vm._v(_vm._s(_vm._f(\"fmtDate\")(_vm.contractDetail.createDate)))])]),_vm._v(\" \"),_c('li',[_c('label',{staticClass:\"item-title\"},[_vm._v(\"合同当前状态：\")]),_vm._v(\" \"),_c('span',{staticClass:\"item-detail\"},[_c('el-tag',{attrs:{\"type\":_vm.contractDetail.status===3?'success':'info'}},[_vm._v(\"\\n          \"+_vm._s(_vm.contractDetail.fsmState)+\"\\n          \")])],1)]),_vm._v(\" \"),_c('li',[_c('label',{staticClass:\"item-title\"},[_vm._v(\"合同详情：\")]),_vm._v(\" \"),_c('pre',{staticClass:\"item-detail\"},[_vm._v(_vm._s(_vm.contractDetail.policySegment.segmentText))])]),_vm._v(\" \"),_c('li',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.formatContractDetail.events.length),expression:\"formatContractDetail.events.length\"}]},[_c('label',{staticClass:\"item-title\"},[_vm._v(\"合同事件：\")]),_vm._v(\" \"),_c('el-select',{staticClass:\"item-detail\",attrs:{\"placeholder\":\"请选择\"},model:{value:(_vm.selectedContractEvent),callback:function ($$v) {_vm.selectedContractEvent=$$v},expression:\"selectedContractEvent\"}},_vm._l((_vm.formatContractDetail.events),function(event,index){return _c('el-option',{key:Math.random(),attrs:{\"label\":event.desc,\"value\":index},domProps:{\"innerHTML\":_vm._s(event.desc)}})})),_vm._v(\" \"),_c('el-button',{attrs:{\"disabled\":_vm.selectedContractEvent === ''},on:{\"click\":_vm.executeContractHandler}},[_vm._v(\"trigger\")])],1)])]):_vm._e()])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ \"mbce\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar getKeys = __webpack_require__(\"lktj\");\nvar toIObject = __webpack_require__(\"TcQ7\");\nvar isEnum = __webpack_require__(\"NpIQ\").f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) if (isEnum.call(O, key = keys[i++])) {\n      result.push(isEntries ? [key, O[key]] : O[key]);\n    } return result;\n  };\n};\n\n\n/***/ }),\n\n/***/ \"mywV\":\n/***/ (function(module, exports) {\n\nfunction Extend(that) {\r\n  that.syntaxError = function(recognizer, offendingSymbol, line, column, msg, e) {\r\n    this.errorMsg = msg;\r\n  };\r\n}\r\nmodule.exports = Extend;\r\n\n\n/***/ }),\n\n/***/ \"o7dJ\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"FZ+f\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \".step-row[data-v-f9f08148]{color:#409eff;margin-bottom:9px}.step-title[data-v-f9f08148]{display:inline-block;font-size:14px;margin-left:6px}.step-circle[data-v-f9f08148]{border:2px solid;border-radius:50%;width:24px;height:24px;font-size:14px;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-sizing:border-box;box-sizing:border-box}.el-icon-circle-close-outline[data-v-f9f08148]{padding:5px;cursor:pointer}.icon-tip[data-v-f9f08148]{margin-left:6px;font-size:16px;color:#67c23a;vertical-align:middle}.form-ft[data-v-f9f08148]{border-top:1px solid #ccc;padding-top:15px;text-align:center;margin-top:15px}.p-name[data-v-f9f08148]{margin-bottom:15px;margin-top:12px}.op-step[data-v-f9f08148]{margin-bottom:15px}\", \"\", {\"version\":3,\"sources\":[\"/Users/daizecheng/workplace/freelog/console/client/src/views/node/presentable/create/index.vue\"],\"names\":[],\"mappings\":\"AACA,2BACE,cAAe,AACf,iBAAmB,CACpB,AACD,6BACE,qBAAsB,AACtB,eAAgB,AAChB,eAAiB,CAClB,AACD,8BACE,iBAAkB,AAClB,kBAAmB,AACnB,WAAY,AACZ,YAAa,AACb,eAAgB,AAChB,2BAA4B,AAC5B,2BAA4B,AAC5B,oBAAqB,AACrB,wBAAyB,AACrB,qBAAsB,AAClB,uBAAwB,AAChC,yBAA0B,AACtB,sBAAuB,AACnB,mBAAoB,AAC5B,8BAA+B,AACvB,qBAAuB,CAChC,AACD,+CACE,YAAa,AACb,cAAgB,CACjB,AACD,2BACE,gBAAiB,AACjB,eAAgB,AAChB,cAAe,AACf,qBAAuB,CACxB,AACD,0BACE,0BAA2B,AAC3B,iBAAkB,AAClB,kBAAmB,AACnB,eAAiB,CAClB,AACD,yBACE,mBAAoB,AACpB,eAAiB,CAClB,AACD,0BACE,kBAAoB,CACrB\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.step-row[data-v-f9f08148] {\\n  color: #409EFF;\\n  margin-bottom: 9px;\\n}\\n.step-title[data-v-f9f08148] {\\n  display: inline-block;\\n  font-size: 14px;\\n  margin-left: 6px;\\n}\\n.step-circle[data-v-f9f08148] {\\n  border: 2px solid;\\n  border-radius: 50%;\\n  width: 24px;\\n  height: 24px;\\n  font-size: 14px;\\n  display: -webkit-inline-box;\\n  display: -ms-inline-flexbox;\\n  display: inline-flex;\\n  -webkit-box-pack: center;\\n      -ms-flex-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  -webkit-box-sizing: border-box;\\n          box-sizing: border-box;\\n}\\n.el-icon-circle-close-outline[data-v-f9f08148] {\\n  padding: 5px;\\n  cursor: pointer;\\n}\\n.icon-tip[data-v-f9f08148] {\\n  margin-left: 6px;\\n  font-size: 16px;\\n  color: #67C23A;\\n  vertical-align: middle;\\n}\\n.form-ft[data-v-f9f08148] {\\n  border-top: 1px solid #ccc;\\n  padding-top: 15px;\\n  text-align: center;\\n  margin-top: 15px;\\n}\\n.p-name[data-v-f9f08148] {\\n  margin-bottom: 15px;\\n  margin-top: 12px;\\n}\\n.op-step[data-v-f9f08148] {\\n  margin-bottom: 15px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"ojA3\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(\"Xttn\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(\"rjj0\")(\"30fcdd4e\", content, true);\n\n/***/ }),\n\n/***/ \"pHgc\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nexports.ATN = __webpack_require__(\"7y1Z\").ATN;\nexports.ATNDeserializer = __webpack_require__(\"3Rtt\").ATNDeserializer;\nexports.LexerATNSimulator = __webpack_require__(\"WcIR\").LexerATNSimulator;\nexports.ParserATNSimulator = __webpack_require__(\"+1pv\").ParserATNSimulator;\nexports.PredictionMode = __webpack_require__(\"LYMb\").PredictionMode;\n\n\n/***/ }),\n\n/***/ \"pNox\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"FZ+f\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \".query-input[data-v-afdd11ca]{margin-bottom:15px;width:50%}.presentable-detail-expand[data-v-afdd11ca]{font-size:0}.presentable-detail-expand label[data-v-afdd11ca]{width:90px;color:#99a9bf}.presentable-detail-expand .el-form-item[data-v-afdd11ca]{margin-right:0;margin-bottom:0;width:50%}.resource-list[data-v-afdd11ca]{width:100%;min-height:600px}\", \"\", {\"version\":3,\"sources\":[\"/Users/daizecheng/workplace/freelog/console/client/src/views/node/presentables/index.vue\"],\"names\":[],\"mappings\":\"AACA,8BACE,mBAAoB,AACpB,SAAW,CACZ,AACD,4CACE,WAAa,CACd,AACD,kDACE,WAAY,AACZ,aAAe,CAChB,AACD,0DACE,eAAgB,AAChB,gBAAiB,AACjB,SAAW,CACZ,AACD,gCACE,WAAY,AACZ,gBAAkB,CACnB\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.query-input[data-v-afdd11ca] {\\n  margin-bottom: 15px;\\n  width: 50%;\\n}\\n.presentable-detail-expand[data-v-afdd11ca] {\\n  font-size: 0;\\n}\\n.presentable-detail-expand label[data-v-afdd11ca] {\\n  width: 90px;\\n  color: #99a9bf;\\n}\\n.presentable-detail-expand .el-form-item[data-v-afdd11ca] {\\n  margin-right: 0;\\n  margin-bottom: 0;\\n  width: 50%;\\n}\\n.resource-list[data-v-afdd11ca] {\\n  width: 100%;\\n  min-height: 600px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"pr/i\":\n/***/ (function(module, exports) {\n\n/*! https://mths.be/fromcodepoint v0.2.1 by @mathias */\nif (!String.fromCodePoint) {\n\t(function() {\n\t\tvar defineProperty = (function() {\n\t\t\t// IE 8 only supports `Object.defineProperty` on DOM elements\n\t\t\ttry {\n\t\t\t\tvar object = {};\n\t\t\t\tvar $defineProperty = Object.defineProperty;\n\t\t\t\tvar result = $defineProperty(object, object, object) && $defineProperty;\n\t\t\t} catch(error) {}\n\t\t\treturn result;\n\t\t}());\n\t\tvar stringFromCharCode = String.fromCharCode;\n\t\tvar floor = Math.floor;\n\t\tvar fromCodePoint = function(_) {\n\t\t\tvar MAX_SIZE = 0x4000;\n\t\t\tvar codeUnits = [];\n\t\t\tvar highSurrogate;\n\t\t\tvar lowSurrogate;\n\t\t\tvar index = -1;\n\t\t\tvar length = arguments.length;\n\t\t\tif (!length) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tvar result = '';\n\t\t\twhile (++index < length) {\n\t\t\t\tvar codePoint = Number(arguments[index]);\n\t\t\t\tif (\n\t\t\t\t\t!isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n\t\t\t\t\tcodePoint < 0 || // not a valid Unicode code point\n\t\t\t\t\tcodePoint > 0x10FFFF || // not a valid Unicode code point\n\t\t\t\t\tfloor(codePoint) != codePoint // not an integer\n\t\t\t\t) {\n\t\t\t\t\tthrow RangeError('Invalid code point: ' + codePoint);\n\t\t\t\t}\n\t\t\t\tif (codePoint <= 0xFFFF) { // BMP code point\n\t\t\t\t\tcodeUnits.push(codePoint);\n\t\t\t\t} else { // Astral code point; split in surrogate halves\n\t\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\t\tcodePoint -= 0x10000;\n\t\t\t\t\thighSurrogate = (codePoint >> 10) + 0xD800;\n\t\t\t\t\tlowSurrogate = (codePoint % 0x400) + 0xDC00;\n\t\t\t\t\tcodeUnits.push(highSurrogate, lowSurrogate);\n\t\t\t\t}\n\t\t\t\tif (index + 1 == length || codeUnits.length > MAX_SIZE) {\n\t\t\t\t\tresult += stringFromCharCode.apply(null, codeUnits);\n\t\t\t\t\tcodeUnits.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t};\n\t\tif (defineProperty) {\n\t\t\tdefineProperty(String, 'fromCodePoint', {\n\t\t\t\t'value': fromCodePoint,\n\t\t\t\t'configurable': true,\n\t\t\t\t'writable': true\n\t\t\t});\n\t\t} else {\n\t\t\tString.fromCodePoint = fromCodePoint;\n\t\t}\n\t}());\n}\n\n\n/***/ }),\n\n/***/ \"qBNV\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(\"NYxO\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__views_node_presentable_steps_index_vue__ = __webpack_require__(\"0AMZ\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_presentable_policy_compiler__ = __webpack_require__(\"I+6F\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_presentable_policy_compiler___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_presentable_policy_compiler__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__tags_index_vue__ = __webpack_require__(\"ItGU\");\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'presentable-editor',\n  data: function data() {\n    return {\n      resourceType: '',\n      validateLoading: false,\n      submitLoading: false,\n      options: [{ value: 'widget', label: 'widget' }, { value: 'file', label: 'file' }],\n      step: {\n        active: 1\n      },\n      headers: {},\n      formData: {\n        presentableTags: [],\n        userPolicy: 'For userAuserB in the following states:\\n    in initial :\\n      proceed to activate on accepting license licenseA\\n    in activate :\\n      proceed to suspend on visit of 20000\\n        I agree to authorize token in activate',\n        presentableName: ''\n      },\n      rules: {\n        presentableName: [{ required: true, message: '请输入活动名称', trigger: 'blur' }, { min: 3, max: 30, message: '长度在 3 到 5 个字符', trigger: 'blur' }]\n      }\n    };\n  },\n\n  computed: Object(__WEBPACK_IMPORTED_MODULE_0_vuex__[\"b\" /* mapGetters */])({\n    session: 'session'\n  }),\n  components: {\n    PresentableSteps: __WEBPACK_IMPORTED_MODULE_1__views_node_presentable_steps_index_vue__[\"a\" /* default */],\n    PresentableTags: __WEBPACK_IMPORTED_MODULE_3__tags_index_vue__[\"a\" /* default */]\n  },\n  mounted: function mounted() {\n    this.headers.Authorization = 'Bearer ' + this.session.token;\n  },\n\n  methods: {\n    errorHandler: function errorHandler(err, file) {\n      switch (err.status) {\n        case 400:\n          this.$message.error('不支持的文件类型');\n          break;\n        case 401:\n          this.$message.error('权限未经验证');\n          break;\n      }\n    },\n    nextAction: function nextAction() {\n      console.log('successfully upload!');\n    },\n    validate: function validate(formName) {\n      var _this = this;\n\n      this.formData.userPolicy = __WEBPACK_IMPORTED_MODULE_2_presentable_policy_compiler___default.a.compile(this.formData.userPolicy, 'beautify').stringArray.splice(1).join(' ').replace(/\\n\\s/g, '\\n');\n      // this.validateLoading = true;\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          _this.$message.success('通过校验');\n        } else {\n          _this.$message.error('未通过校验');\n          return false;\n        }\n      });\n    },\n    submit: function submit() {\n      var _this2 = this;\n\n      this.submitLoading = true;\n      if (!this.$route.query.contractId) {\n        this.$message.error('没有资源Id, 请重新选择');\n      }\n\n      var nodeId = parseInt(this.$route.params.nodeId);\n      var formData = this.formData;\n      this.$services.presentables.post({\n        name: formData.presentableName,\n        nodeId: nodeId,\n        contractId: this.$route.query.contractId,\n        policyText: btoa(formData.userPolicy),\n        languageType: 'freelog_policy_lang',\n        userDefinedTags: formData.presentableTags.join(',')\n      }).then(function (res) {\n        var data = res.getData();\n        _this2.submitLoading = false;\n        if (!data) {\n          _this2.$message.error(res.data.msg);\n        } else {\n          _this2.$message.success('presentable创建成功');\n          _this2.step = {\n            active: 3\n          };\n          _this2.$router.push({\n            path: '/node/' + nodeId + '/presentable/detail#presentable',\n            query: { presentableId: data.presentableId }\n          });\n        }\n      }).catch(function (err) {\n        _this2.submitLoading = false;\n        _this2.$message.error(err.response.errorMsg);\n      });\n    }\n  }\n});\n\n/***/ }),\n\n/***/ \"qFmK\":\n/***/ (function(module, exports) {\n\n//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n// Provides an empty default implementation of {@link ANTLRErrorListener}. The\n// default implementation of each method does nothing, but can be overridden as\n// necessary.\n\nfunction ErrorListener() {\n\treturn this;\n}\n\nErrorListener.prototype.syntaxError = function(recognizer, offendingSymbol, line, column, msg, e) {\n};\n\nErrorListener.prototype.reportAmbiguity = function(recognizer, dfa, startIndex, stopIndex, exact, ambigAlts, configs) {\n};\n\nErrorListener.prototype.reportAttemptingFullContext = function(recognizer, dfa, startIndex, stopIndex, conflictingAlts, configs) {\n};\n\nErrorListener.prototype.reportContextSensitivity = function(recognizer, dfa, startIndex, stopIndex, prediction, configs) {\n};\n\nfunction ConsoleErrorListener() {\n\tErrorListener.call(this);\n\treturn this;\n}\n\nConsoleErrorListener.prototype = Object.create(ErrorListener.prototype);\nConsoleErrorListener.prototype.constructor = ConsoleErrorListener;\n\n//\n// Provides a default instance of {@link ConsoleErrorListener}.\n//\nConsoleErrorListener.INSTANCE = new ConsoleErrorListener();\n\n//\n// {@inheritDoc}\n//\n// <p>\n// This implementation prints messages to {@link System//err} containing the\n// values of {@code line}, {@code charPositionInLine}, and {@code msg} using\n// the following format.</p>\n//\n// <pre>\n// line <em>line</em>:<em>charPositionInLine</em> <em>msg</em>\n// </pre>\n//\nConsoleErrorListener.prototype.syntaxError = function(recognizer, offendingSymbol, line, column, msg, e) {\n    console.error(\"line \" + line + \":\" + column + \" \" + msg);\n};\n\nfunction ProxyErrorListener(delegates) {\n\tErrorListener.call(this);\n    if (delegates===null) {\n        throw \"delegates\";\n    }\n    this.delegates = delegates;\n\treturn this;\n}\n\nProxyErrorListener.prototype = Object.create(ErrorListener.prototype);\nProxyErrorListener.prototype.constructor = ProxyErrorListener;\n\nProxyErrorListener.prototype.syntaxError = function(recognizer, offendingSymbol, line, column, msg, e) {\n    this.delegates.map(function(d) { d.syntaxError(recognizer, offendingSymbol, line, column, msg, e); });\n};\n\nProxyErrorListener.prototype.reportAmbiguity = function(recognizer, dfa, startIndex, stopIndex, exact, ambigAlts, configs) {\n    this.delegates.map(function(d) { d.reportAmbiguity(recognizer, dfa, startIndex, stopIndex, exact, ambigAlts, configs); });\n};\n\nProxyErrorListener.prototype.reportAttemptingFullContext = function(recognizer, dfa, startIndex, stopIndex, conflictingAlts, configs) {\n\tthis.delegates.map(function(d) { d.reportAttemptingFullContext(recognizer, dfa, startIndex, stopIndex, conflictingAlts, configs); });\n};\n\nProxyErrorListener.prototype.reportContextSensitivity = function(recognizer, dfa, startIndex, stopIndex, prediction, configs) {\n\tthis.delegates.map(function(d) { d.reportContextSensitivity(recognizer, dfa, startIndex, stopIndex, prediction, configs); });\n};\n\nexports.ErrorListener = ErrorListener;\nexports.ConsoleErrorListener = ConsoleErrorListener;\nexports.ProxyErrorListener = ProxyErrorListener;\n\n\n\n/***/ }),\n\n/***/ \"r5zv\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__index__ = __webpack_require__(\"hi6K\");\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__index__[\"a\" /* default */]);\n\n/***/ }),\n\n/***/ \"rBJF\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_index_vue__ = __webpack_require__(\"r5zv\");\n/* empty harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_6983dd12_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_index_vue__ = __webpack_require__(\"2LyA\");\nfunction injectStyle (ssrContext) {\n  __webpack_require__(\"ojA3\")\n}\nvar normalizeComponent = __webpack_require__(\"VU/8\")\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-6983dd12\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_index_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_6983dd12_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_index_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ \"rQCC\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__index__ = __webpack_require__(\"PG49\");\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__index__[\"a\" /* default */]);\n\n/***/ }),\n\n/***/ \"rdLu\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (true) {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n      return _;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n}.call(this));\n\n\n/***/ }),\n\n/***/ \"sfob\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_assign__ = __webpack_require__(\"woOf\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_assign___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_assign__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__config_index__ = __webpack_require__(\"2uFj\");\n\n\n\nvar CONTRACT_STATUS_TIPS = __WEBPACK_IMPORTED_MODULE_1__config_index__[\"a\" /* default */].CONTRACT_STATUS_TIPS;\n\n\nvar contractEventsMap = {\n  signing: function signing(params) {\n    return '进入协议签署页面';\n  },\n  contractGuaranty: function contractGuaranty() {\n    return '进入支付保证金';\n  },\n  period: function period() {\n    return '周期性支付';\n  },\n  arrivalDate: function arrivalDate(params) {\n    if (params[0] == 1) {\n      return '到达日期' + params[1] + '进入下一个状态';\n    } else if (params[0] == 0) {\n      return params[1] + '天后进入下一个状态';\n    }\n  }\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'presentable-contract-detail',\n  data: function data() {\n    return {\n      selectedContractEvent: '',\n      formatContractDetail: null\n    };\n  },\n\n  props: {\n    contractDetail: Object\n  },\n  watch: {\n    contractDetail: 'formatData'\n  },\n  methods: {\n    formatData: function formatData() {\n      var detail = this.contractDetail;\n      var formatContractDetail = {};\n\n      formatContractDetail.statusTip = CONTRACT_STATUS_TIPS[detail.status];\n      formatContractDetail.events = this.resolveContractEvents(detail);\n      this.formatContractDetail = formatContractDetail;\n    },\n    resolveContractEvents: function resolveContractEvents(detail) {\n      var events = [];\n      var fsmState = detail.fsmState;\n      var stateTransitionMap = detail.policySegment.fsmDescription;\n      var corresponseEvents = [];\n\n      stateTransitionMap.forEach(function (transition) {\n        if (transition.currentState === fsmState) {\n          corresponseEvents.push(transition);\n        }\n      });\n\n      var pushEvent = function pushEvent(event) {\n        var eventFn = contractEventsMap[event.type] || function () {\n          return 'no event handler';\n        };\n        events.push({\n          desc: eventFn(event.type),\n          type: event.type,\n          params: event\n        });\n      };\n\n      corresponseEvents.forEach(function (transition) {\n        if (transition.event.type === 'compoundEvents') {\n          transition.event.params.forEach(pushEvent);\n        } else {\n          pushEvent(transition.event);\n        }\n      });\n\n      console.log(events);\n      return events;\n    },\n    loadContractDetail: function loadContractDetail(param) {\n      var _this = this;\n\n      return this.$services.contract.get(param || {}).then(function (res) {\n        return res.getData();\n      }).catch(function (err) {\n        _this.$message.error(err.response.errorMsg || err);\n      });\n    },\n    updateContractDetail: function updateContractDetail() {\n      var _this2 = this;\n\n      this.loadContractDetail(this.contractDetail.contractId).then(function (contract) {\n        __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_assign___default()(_this2.contractDetail, contract);\n        _this2.formatData();\n      });\n    },\n    executeContractHandler: function executeContractHandler() {\n      var _this3 = this;\n\n      var selectedContractEvent = this.formatContractDetail.events[this.selectedContractEvent];\n      console.log(selectedContractEvent);\n      //test\n      this.$services.eventTest.post({\n        contractId: this.contractDetail.contractId,\n        eventId: selectedContractEvent.params.eventId\n      }).then(function () {\n        _this3.selectedContractEvent = '';\n        _this3.updateContractDetail();\n        _this3.$message.success('执行成功');\n      });\n\n      //todo\n      // this.$axios.post('//api.freelog.com/v1/contracts/test', {\n      //   contractId: this.contractDetail.contractId,\n      //   eventId: selectedContractEvent.params.eventId\n      // }).then((res) => {\n      //   console.log(res.getData())\n      //    this.updateContractDetail()\n      // }).catch((err) => {\n      //   this.$message.error((err.response && err.response.errorMsg) || err)\n      // });\n    }\n  }\n});\n\n/***/ }),\n\n/***/ \"szxE\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('el-input',{staticClass:\"query-input\",attrs:{\"placeholder\":\"请输入搜索内容\"},model:{value:(_vm.query),callback:function ($$v) {_vm.query=$$v},expression:\"query\"}},[_c('el-button',{attrs:{\"slot\":\"append\",\"icon\":\"el-icon-search\",\"type\":\"primary\"},on:{\"click\":_vm.queryHandler},slot:\"append\"})],1),_vm._v(\" \"),_c('table-view',{staticClass:\"resource-list\",attrs:{\"loader\":_vm.loader(),\"formatHandler\":_vm.formatHandler}},[_c('el-table-column',{attrs:{\"align\":\"center\",\"label\":\"presentable name\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.presentableDetail)?_c('span',[_vm._v(_vm._s(scope.row.presentableDetail.name))]):_c('span',[_vm._v(\"-\")])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"resourceDetail.resourceName\",\"label\":\"resource name\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"resourceDetail.resourceType\",\"label\":\"resource type\",\"align\":\"center\",\"width\":\"150px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"align\":\"center\",\"label\":\"create date\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',[_vm._v(_vm._s(_vm._f(\"fmtDate\")(scope.row.createDate)))])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"contractId\",\"align\":\"center\",\"label\":\"合同 ID\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"resourceId\",\"label\":\"resourceId\",\"align\":\"center\",\"width\":\"350px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"status\",\"align\":\"center\",\"width\":\"120px\",\"label\":\"合同状态\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-tag',{attrs:{\"type\":scope.row._statusInfo.type}},[_vm._v(_vm._s(scope.row._statusInfo.text))])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"\",\"width\":\"250px\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"small\"},on:{\"click\":function($event){_vm.handlePresentable(scope.row,'detail')}}},[_vm._v(\"查看详情\\n        \")]),_vm._v(\" \"),(!scope.row.presentableDetail)?_c('el-button',{attrs:{\"size\":\"small\"},on:{\"click\":function($event){_vm.handlePresentable(scope.row, 'edit')}}},[_vm._v(\"去创建user\\n          policy\\n        \")]):(scope.row.status===1 || scope.row.status===2)?_c('el-button',{attrs:{\"size\":\"small\"},on:{\"click\":function($event){_vm.handlePresentable(scope.row, 'detail', 'contract')}}},[_vm._v(\"去执行合同\\n        \")]):_vm._e()]}}])})],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ \"tJvw\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__index__ = __webpack_require__(\"F0r5\");\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__index__[\"a\" /* default */]);\n\n/***/ }),\n\n/***/ \"tdq/\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('presentable-steps',{attrs:{\"active\":0}}),_vm._v(\" \"),_c('el-alert',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.done),expression:\"done\"}],attrs:{\"title\":\"该资源已创建过presentable\",\"type\":\"success\",\"show-icon\":\"\"}}),_vm._v(\" \"),_c('el-tabs',{attrs:{\"type\":\"border-card\"},model:{value:(_vm.activeName),callback:function ($$v) {_vm.activeName=$$v},expression:\"activeName\"}},[_vm._l((_vm.tabList),function(tabData,indexOuter){return _c('el-tab-pane',{key:indexOuter,attrs:{\"name\":tabData.resourceId}},[_c('span',{attrs:{\"slot\":\"label\"},slot:\"label\"},[_vm._v(\"\\n        \"+_vm._s(tabData.resourceName)+\"\\n\\n        \"),_c('el-tooltip',{directives:[{name:\"show\",rawName:\"v-show\",value:(tabData.checked),expression:\"tabData.checked\"}],staticClass:\"item\",attrs:{\"effect\":\"dark\",\"content\":\"已选中合同\",\"placement\":\"top\"}},[_c('i',{staticClass:\"el-icon-circle-check-outline icon-tip\"})]),_vm._v(\" \"),_c('el-tooltip',{directives:[{name:\"show\",rawName:\"v-show\",value:(tabData.created),expression:\"tabData.created\"}],staticClass:\"item\",attrs:{\"effect\":\"dark\",\"content\":\"已创建过合同\",\"placement\":\"top\"}},[_c('i',{staticClass:\"el-icon-circle-check icon-tip\"})])],1),_vm._v(\" \"),_c('div',{staticClass:\"p-name\"},[_c('label',[_vm._v(\"presentable name:\")]),_vm._v(\" \"),_c('el-input',{staticStyle:{\"width\":\"400px\"},attrs:{\"placeholder\":\"请输入presentable名\"},model:{value:(tabData.presentableName),callback:function ($$v) {_vm.$set(tabData, \"presentableName\", $$v)},expression:\"tabData.presentableName\"}})],1),_vm._v(\" \"),_c('div',{staticClass:\"step-1 op-step\"},[_c('div',{staticClass:\"step-row\"},[_c('div',{staticClass:\"step-circle\"},[_vm._v(\"1\")]),_vm._v(\" \"),_c('div',{staticClass:\"step-title\"},[_vm._v(\"选择合同segment\")])]),_vm._v(\" \"),_c('el-table',{attrs:{\"data\":tabData.data.policy}},[_c('el-table-column',{attrs:{\"type\":\"expand\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('pre',[_vm._v(_vm._s(scope.row._formatSegmentText))])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"segmentId\",\"prop\":\"segmentId\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(props){return [_c('el-radio',{attrs:{\"label\":props.$index},on:{\"change\":function($event){_vm.segmentChangeHandler(tabData)}},model:{value:(tabData.selected),callback:function ($$v) {_vm.$set(tabData, \"selected\", $$v)},expression:\"tabData.selected\"}},[_c('span',{attrs:{\"title\":\"placeholder\"}})]),_vm._v(\" \"),_c('el-tooltip',{directives:[{name:\"show\",rawName:\"v-show\",value:(props.row.created),expression:\"props.row.created\"}],staticClass:\"item\",attrs:{\"effect\":\"dark\",\"content\":\"该策略已经创建过合同\",\"placement\":\"top\"}},[_c('i',{staticClass:\"el-icon-info\"})]),_vm._v(\" \"),_c('el-tooltip',{directives:[{name:\"show\",rawName:\"v-show\",value:(tabData.selected===props.$index),expression:\"tabData.selected===props.$index\"}],staticClass:\"item\",attrs:{\"effect\":\"dark\",\"content\":\"取消选择\",\"placement\":\"top\"}},[_c('i',{staticClass:\"el-icon-circle-close-outline\",on:{\"click\":function($event){_vm.segmentChangeHandler(tabData, false)}}})])]}}])})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"step-2 op-step\"},[_c('div',{staticClass:\"step-row\"},[_c('div',{staticClass:\"step-circle\"},[_vm._v(\"2\")]),_vm._v(\" \"),_c('div',{staticClass:\"step-title\"},[_vm._v(\"创建user policy\")])]),_vm._v(\" \"),_c('presentable-policy',{model:{value:(tabData.userPolicy),callback:function ($$v) {_vm.$set(tabData, \"userPolicy\", $$v)},expression:\"tabData.userPolicy\"}})],1)])}),_vm._v(\" \"),_c('div',{staticClass:\"form-ft\"},[_c('el-button',{attrs:{\"disabled\":!_vm.selected},on:{\"click\":_vm.submit}},[_vm._v(\"提交\")])],1)],2)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ \"uY8j\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"FZ+f\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \".upload-container[data-v-d708ef40]{width:20%;margin:auto}.gap[data-v-d708ef40]{margin-bottom:12px}\", \"\", {\"version\":3,\"sources\":[\"/Users/daizecheng/workplace/freelog/console/client/src/views/node/presentable/edit/index.vue\"],\"names\":[],\"mappings\":\"AACA,mCACE,UAAW,AACX,WAAa,CACd,AACD,sBACE,kBAAoB,CACrB\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.upload-container[data-v-d708ef40] {\\n  width: 20%;\\n  margin: auto;\\n}\\n.gap[data-v-d708ef40] {\\n  margin-bottom: 12px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"ucRY\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// Generated from policy.g4 by ANTLR 4.7\r\n// jshint ignore: start\r\nvar antlr4 = __webpack_require__(\"9C8F\");\r\n\r\n\r\nvar serializedATN = [\"\\u0003\\u608b\\ua72a\\u8133\\ub9ed\\u417c\\u3be7\\u7786\\u5964\",\r\n    \"\\u00027\\u0283\\b\\u0001\\u0004\\u0002\\t\\u0002\\u0004\\u0003\\t\\u0003\\u0004\",\r\n    \"\\u0004\\t\\u0004\\u0004\\u0005\\t\\u0005\\u0004\\u0006\\t\\u0006\\u0004\\u0007\\t\",\r\n    \"\\u0007\\u0004\\b\\t\\b\\u0004\\t\\t\\t\\u0004\\n\\t\\n\\u0004\\u000b\\t\\u000b\\u0004\",\r\n    \"\\f\\t\\f\\u0004\\r\\t\\r\\u0004\\u000e\\t\\u000e\\u0004\\u000f\\t\\u000f\\u0004\\u0010\",\r\n    \"\\t\\u0010\\u0004\\u0011\\t\\u0011\\u0004\\u0012\\t\\u0012\\u0004\\u0013\\t\\u0013\",\r\n    \"\\u0004\\u0014\\t\\u0014\\u0004\\u0015\\t\\u0015\\u0004\\u0016\\t\\u0016\\u0004\\u0017\",\r\n    \"\\t\\u0017\\u0004\\u0018\\t\\u0018\\u0004\\u0019\\t\\u0019\\u0004\\u001a\\t\\u001a\",\r\n    \"\\u0004\\u001b\\t\\u001b\\u0004\\u001c\\t\\u001c\\u0004\\u001d\\t\\u001d\\u0004\\u001e\",\r\n    \"\\t\\u001e\\u0004\\u001f\\t\\u001f\\u0004 \\t \\u0004!\\t!\\u0004\\\"\\t\\\"\\u0004#\",\r\n    \"\\t#\\u0004$\\t$\\u0004%\\t%\\u0004&\\t&\\u0004\\'\\t\\'\\u0004(\\t(\\u0004)\\t)\\u0004\",\r\n    \"*\\t*\\u0004+\\t+\\u0004,\\t,\\u0004-\\t-\\u0004.\\t.\\u0004/\\t/\\u00040\\t0\\u0004\",\r\n    \"1\\t1\\u00042\\t2\\u00043\\t3\\u00044\\t4\\u00045\\t5\\u00046\\t6\\u0003\\u0002\\u0003\",\r\n    \"\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\",\r\n    \"\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\",\r\n    \"\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\",\r\n    \"\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\",\r\n    \"\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\",\r\n    \"\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\",\r\n    \"\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\",\r\n    \"\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\",\r\n    \"\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\",\r\n    \"\\u0004\\u0003\\u0004\\u0003\\u0005\\u0003\\u0005\\u0003\\u0005\\u0003\\u0005\\u0003\",\r\n    \"\\u0005\\u0003\\u0005\\u0003\\u0005\\u0003\\u0005\\u0003\\u0005\\u0003\\u0006\\u0003\",\r\n    \"\\u0006\\u0003\\u0007\\u0003\\u0007\\u0003\\u0007\\u0003\\u0007\\u0003\\u0007\\u0003\",\r\n    \"\\u0007\\u0003\\u0007\\u0003\\b\\u0003\\b\\u0003\\b\\u0003\\b\\u0003\\b\\u0003\\b\\u0003\",\r\n    \"\\b\\u0003\\b\\u0003\\b\\u0003\\b\\u0003\\b\\u0003\\t\\u0003\\t\\u0003\\t\\u0003\\t\\u0003\",\r\n    \"\\t\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\",\r\n    \"\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\",\r\n    \"\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\u000b\\u0003\",\r\n    \"\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\",\r\n    \"\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\",\r\n    \"\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\",\r\n    \"\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\",\r\n    \"\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\",\r\n    \"\\f\\u0003\\f\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\",\r\n    \"\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\",\r\n    \"\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\",\r\n    \"\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\",\r\n    \"\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\\u000f\\u0003\\u000f\",\r\n    \"\\u0003\\u000f\\u0003\\u000f\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\",\r\n    \"\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\",\r\n    \"\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\",\r\n    \"\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0011\",\r\n    \"\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\",\r\n    \"\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\",\r\n    \"\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\",\r\n    \"\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\",\r\n    \"\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\",\r\n    \"\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\",\r\n    \"\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\",\r\n    \"\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\",\r\n    \"\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\",\r\n    \"\\u0003\\u0013\\u0003\\u0013\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\",\r\n    \"\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\",\r\n    \"\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\",\r\n    \"\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\",\r\n    \"\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\",\r\n    \"\\u0003\\u0014\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\",\r\n    \"\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\",\r\n    \"\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0016\",\r\n    \"\\u0003\\u0016\\u0003\\u0017\\u0003\\u0017\\u0003\\u0018\\u0003\\u0018\\u0003\\u0019\",\r\n    \"\\u0003\\u0019\\u0003\\u0019\\u0003\\u0019\\u0003\\u0019\\u0003\\u0019\\u0003\\u0019\",\r\n    \"\\u0003\\u0019\\u0003\\u0019\\u0003\\u0019\\u0003\\u0019\\u0003\\u0019\\u0003\\u0019\",\r\n    \"\\u0003\\u0019\\u0003\\u0019\\u0003\\u001a\\u0003\\u001a\\u0003\\u001a\\u0003\\u001a\",\r\n    \"\\u0003\\u001a\\u0003\\u001a\\u0003\\u001a\\u0003\\u001a\\u0003\\u001a\\u0003\\u001a\",\r\n    \"\\u0003\\u001b\\u0003\\u001b\\u0003\\u001b\\u0003\\u001b\\u0003\\u001b\\u0003\\u001b\",\r\n    \"\\u0003\\u001b\\u0003\\u001b\\u0003\\u001b\\u0003\\u001b\\u0003\\u001b\\u0003\\u001c\",\r\n    \"\\u0003\\u001c\\u0003\\u001c\\u0003\\u001c\\u0003\\u001c\\u0003\\u001c\\u0003\\u001c\",\r\n    \"\\u0003\\u001c\\u0003\\u001c\\u0003\\u001c\\u0003\\u001c\\u0003\\u001c\\u0003\\u001c\",\r\n    \"\\u0003\\u001c\\u0003\\u001c\\u0003\\u001d\\u0003\\u001d\\u0003\\u001d\\u0003\\u001d\",\r\n    \"\\u0003\\u001e\\u0003\\u001e\\u0003\\u001e\\u0003\\u001e\\u0003\\u001e\\u0003\\u001e\",\r\n    \"\\u0003\\u001e\\u0003\\u001e\\u0003\\u001e\\u0003\\u001f\\u0003\\u001f\\u0003\\u001f\",\r\n    \"\\u0003\\u001f\\u0003\\u001f\\u0003\\u001f\\u0003\\u001f\\u0003\\u001f\\u0003\\u001f\",\r\n    \"\\u0003 \\u0003 \\u0003 \\u0003 \\u0003 \\u0003!\\u0003!\\u0003!\\u0003!\\u0003\",\r\n    \"!\\u0003\\\"\\u0003\\\"\\u0003\\\"\\u0003\\\"\\u0003\\\"\\u0003\\\"\\u0003#\\u0003#\\u0003\",\r\n    \"#\\u0003#\\u0003$\\u0003$\\u0003$\\u0003$\\u0003$\\u0003$\\u0003$\\u0003$\\u0003\",\r\n    \"$\\u0003$\\u0003$\\u0003%\\u0003%\\u0003%\\u0003%\\u0003%\\u0003%\\u0003&\\u0003\",\r\n    \"&\\u0003&\\u0003&\\u0003&\\u0003&\\u0003&\\u0003&\\u0003\\'\\u0003\\'\\u0003\\'\",\r\n    \"\\u0003(\\u0003(\\u0003(\\u0003)\\u0003)\\u0003)\\u0003*\\u0003*\\u0003*\\u0003\",\r\n    \"*\\u0003*\\u0003*\\u0003*\\u0003*\\u0003*\\u0003*\\u0003+\\u0003+\\u0003+\\u0003\",\r\n    \"+\\u0003+\\u0003+\\u0003+\\u0003+\\u0005+\\u023e\\n+\\u0003,\\u0003,\\u0003,\\u0003\",\r\n    \",\\u0003,\\u0003,\\u0003,\\u0003,\\u0003-\\u0003-\\u0003-\\u0003-\\u0003-\\u0003\",\r\n    \"-\\u0003-\\u0003.\\u0003.\\u0003.\\u0003.\\u0003/\\u0003/\\u0003/\\u0003/\\u0003\",\r\n    \"/\\u00030\\u00030\\u00030\\u00030\\u00030\\u00030\\u00030\\u00030\\u00031\\u0003\",\r\n    \"1\\u00031\\u00031\\u00031\\u00031\\u00031\\u00031\\u00032\\u00062\\u0269\\n2\\r\",\r\n    \"2\\u000e2\\u026a\\u00033\\u00063\\u026e\\n3\\r3\\u000e3\\u026f\\u00034\\u00064\",\r\n    \"\\u0273\\n4\\r4\\u000e4\\u0274\\u00035\\u00065\\u0278\\n5\\r5\\u000e5\\u0279\\u0003\",\r\n    \"5\\u00035\\u00036\\u00036\\u00036\\u00036\\u00036\\u00036\\u0002\\u00027\\u0003\",\r\n    \"\\u0003\\u0005\\u0004\\u0007\\u0005\\t\\u0006\\u000b\\u0007\\r\\b\\u000f\\t\\u0011\",\r\n    \"\\n\\u0013\\u000b\\u0015\\f\\u0017\\r\\u0019\\u000e\\u001b\\u000f\\u001d\\u0010\\u001f\",\r\n    \"\\u0011!\\u0012#\\u0013%\\u0014\\'\\u0015)\\u0016+\\u0017-\\u0018/\\u00191\\u001a\",\r\n    \"3\\u001b5\\u001c7\\u001d9\\u001e;\\u001f= ?!A\\\"C#E$G%I&K\\'M(O)Q*S+U,W-Y.\",\r\n    \"[/]0_1a2c3e4g5i6k7\\u0003\\u0002\\u0006\\u0005\\u0002C\\\\aac|\\u0003\\u0002\",\r\n    \"2;\\u0005\\u00022;C\\\\c|\\u0005\\u0002\\u000b\\f\\u000f\\u000f\\\"\\\"\\u0002\\u0287\",\r\n    \"\\u0002\\u0003\\u0003\\u0002\\u0002\\u0002\\u0002\\u0005\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0002\\u0007\\u0003\\u0002\\u0002\\u0002\\u0002\\t\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0002\\u000b\\u0003\\u0002\\u0002\\u0002\\u0002\\r\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0002\\u000f\\u0003\\u0002\\u0002\\u0002\\u0002\\u0011\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0002\\u0013\\u0003\\u0002\\u0002\\u0002\\u0002\\u0015\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0002\\u0017\\u0003\\u0002\\u0002\\u0002\\u0002\\u0019\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0002\\u001b\\u0003\\u0002\\u0002\\u0002\\u0002\\u001d\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0002\\u001f\\u0003\\u0002\\u0002\\u0002\\u0002!\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0002#\\u0003\\u0002\\u0002\\u0002\\u0002%\\u0003\\u0002\\u0002\\u0002\\u0002\",\r\n    \"\\'\\u0003\\u0002\\u0002\\u0002\\u0002)\\u0003\\u0002\\u0002\\u0002\\u0002+\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0002-\\u0003\\u0002\\u0002\\u0002\\u0002/\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u00021\\u0003\\u0002\\u0002\\u0002\\u00023\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00025\\u0003\\u0002\\u0002\\u0002\\u00027\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00029\\u0003\\u0002\\u0002\\u0002\\u0002;\\u0003\\u0002\\u0002\\u0002\\u0002\",\r\n    \"=\\u0003\\u0002\\u0002\\u0002\\u0002?\\u0003\\u0002\\u0002\\u0002\\u0002A\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0002C\\u0003\\u0002\\u0002\\u0002\\u0002E\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0002G\\u0003\\u0002\\u0002\\u0002\\u0002I\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0002K\\u0003\\u0002\\u0002\\u0002\\u0002M\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0002O\\u0003\\u0002\\u0002\\u0002\\u0002Q\\u0003\\u0002\\u0002\\u0002\\u0002\",\r\n    \"S\\u0003\\u0002\\u0002\\u0002\\u0002U\\u0003\\u0002\\u0002\\u0002\\u0002W\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0002Y\\u0003\\u0002\\u0002\\u0002\\u0002[\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0002]\\u0003\\u0002\\u0002\\u0002\\u0002_\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0002a\\u0003\\u0002\\u0002\\u0002\\u0002c\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0002e\\u0003\\u0002\\u0002\\u0002\\u0002g\\u0003\\u0002\\u0002\\u0002\\u0002\",\r\n    \"i\\u0003\\u0002\\u0002\\u0002\\u0002k\\u0003\\u0002\\u0002\\u0002\\u0003m\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0005\\u0086\\u0003\\u0002\\u0002\\u0002\\u0007\\u00a4\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\t\\u00a6\\u0003\\u0002\\u0002\\u0002\\u000b\\u00af\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\r\\u00b1\\u0003\\u0002\\u0002\\u0002\\u000f\\u00b8\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0011\\u00c3\\u0003\\u0002\\u0002\\u0002\\u0013\\u00c8\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0015\\u00e0\\u0003\\u0002\\u0002\\u0002\\u0017\\u00f6\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0019\\u0105\\u0003\\u0002\\u0002\\u0002\\u001b\\u011a\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u001d\\u0127\\u0003\\u0002\\u0002\\u0002\\u001f\\u012b\\u0003\",\r\n    \"\\u0002\\u0002\\u0002!\\u0140\\u0003\\u0002\\u0002\\u0002#\\u0153\\u0003\\u0002\",\r\n    \"\\u0002\\u0002%\\u015c\\u0003\\u0002\\u0002\\u0002\\'\\u0179\\u0003\\u0002\\u0002\",\r\n    \"\\u0002)\\u0196\\u0003\\u0002\\u0002\\u0002+\\u01a6\\u0003\\u0002\\u0002\\u0002\",\r\n    \"-\\u01a8\\u0003\\u0002\\u0002\\u0002/\\u01aa\\u0003\\u0002\\u0002\\u00021\\u01ac\",\r\n    \"\\u0003\\u0002\\u0002\\u00023\\u01bb\\u0003\\u0002\\u0002\\u00025\\u01c5\\u0003\",\r\n    \"\\u0002\\u0002\\u00027\\u01d0\\u0003\\u0002\\u0002\\u00029\\u01df\\u0003\\u0002\",\r\n    \"\\u0002\\u0002;\\u01e3\\u0003\\u0002\\u0002\\u0002=\\u01ec\\u0003\\u0002\\u0002\",\r\n    \"\\u0002?\\u01f5\\u0003\\u0002\\u0002\\u0002A\\u01fa\\u0003\\u0002\\u0002\\u0002\",\r\n    \"C\\u01ff\\u0003\\u0002\\u0002\\u0002E\\u0205\\u0003\\u0002\\u0002\\u0002G\\u0209\",\r\n    \"\\u0003\\u0002\\u0002\\u0002I\\u0214\\u0003\\u0002\\u0002\\u0002K\\u021a\\u0003\",\r\n    \"\\u0002\\u0002\\u0002M\\u0222\\u0003\\u0002\\u0002\\u0002O\\u0225\\u0003\\u0002\",\r\n    \"\\u0002\\u0002Q\\u0228\\u0003\\u0002\\u0002\\u0002S\\u022b\\u0003\\u0002\\u0002\",\r\n    \"\\u0002U\\u023d\\u0003\\u0002\\u0002\\u0002W\\u023f\\u0003\\u0002\\u0002\\u0002\",\r\n    \"Y\\u0247\\u0003\\u0002\\u0002\\u0002[\\u024e\\u0003\\u0002\\u0002\\u0002]\\u0252\",\r\n    \"\\u0003\\u0002\\u0002\\u0002_\\u0257\\u0003\\u0002\\u0002\\u0002a\\u025f\\u0003\",\r\n    \"\\u0002\\u0002\\u0002c\\u0268\\u0003\\u0002\\u0002\\u0002e\\u026d\\u0003\\u0002\",\r\n    \"\\u0002\\u0002g\\u0272\\u0003\\u0002\\u0002\\u0002i\\u0277\\u0003\\u0002\\u0002\",\r\n    \"\\u0002k\\u027d\\u0003\\u0002\\u0002\\u0002mn\\u0007k\\u0002\\u0002no\\u0007p\",\r\n    \"\\u0002\\u0002op\\u0007\\\"\\u0002\\u0002pq\\u0007v\\u0002\\u0002qr\\u0007j\\u0002\",\r\n    \"\\u0002rs\\u0007g\\u0002\\u0002st\\u0007\\\"\\u0002\\u0002tu\\u0007h\\u0002\\u0002\",\r\n    \"uv\\u0007q\\u0002\\u0002vw\\u0007n\\u0002\\u0002wx\\u0007n\\u0002\\u0002xy\\u0007\",\r\n    \"q\\u0002\\u0002yz\\u0007y\\u0002\\u0002z{\\u0007k\\u0002\\u0002{|\\u0007p\\u0002\",\r\n    \"\\u0002|}\\u0007i\\u0002\\u0002}~\\u0007\\\"\\u0002\\u0002~\\u007f\\u0007u\\u0002\",\r\n    \"\\u0002\\u007f\\u0080\\u0007v\\u0002\\u0002\\u0080\\u0081\\u0007c\\u0002\\u0002\",\r\n    \"\\u0081\\u0082\\u0007v\\u0002\\u0002\\u0082\\u0083\\u0007g\\u0002\\u0002\\u0083\",\r\n    \"\\u0084\\u0007u\\u0002\\u0002\\u0084\\u0085\\u0007<\\u0002\\u0002\\u0085\\u0004\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0086\\u0087\\u0007K\\u0002\\u0002\\u0087\\u0088\",\r\n    \"\\u0007\\\"\\u0002\\u0002\\u0088\\u0089\\u0007c\\u0002\\u0002\\u0089\\u008a\\u0007\",\r\n    \"i\\u0002\\u0002\\u008a\\u008b\\u0007t\\u0002\\u0002\\u008b\\u008c\\u0007g\\u0002\",\r\n    \"\\u0002\\u008c\\u008d\\u0007g\\u0002\\u0002\\u008d\\u008e\\u0007\\\"\\u0002\\u0002\",\r\n    \"\\u008e\\u008f\\u0007v\\u0002\\u0002\\u008f\\u0090\\u0007q\\u0002\\u0002\\u0090\",\r\n    \"\\u0091\\u0007\\\"\\u0002\\u0002\\u0091\\u0092\\u0007c\\u0002\\u0002\\u0092\\u0093\",\r\n    \"\\u0007w\\u0002\\u0002\\u0093\\u0094\\u0007v\\u0002\\u0002\\u0094\\u0095\\u0007\",\r\n    \"j\\u0002\\u0002\\u0095\\u0096\\u0007q\\u0002\\u0002\\u0096\\u0097\\u0007t\\u0002\",\r\n    \"\\u0002\\u0097\\u0098\\u0007k\\u0002\\u0002\\u0098\\u0099\\u0007|\\u0002\\u0002\",\r\n    \"\\u0099\\u009a\\u0007g\\u0002\\u0002\\u009a\\u009b\\u0007\\\"\\u0002\\u0002\\u009b\",\r\n    \"\\u009c\\u0007v\\u0002\\u0002\\u009c\\u009d\\u0007q\\u0002\\u0002\\u009d\\u009e\",\r\n    \"\\u0007m\\u0002\\u0002\\u009e\\u009f\\u0007g\\u0002\\u0002\\u009f\\u00a0\\u0007\",\r\n    \"p\\u0002\\u0002\\u00a0\\u00a1\\u0007\\\"\\u0002\\u0002\\u00a1\\u00a2\\u0007k\\u0002\",\r\n    \"\\u0002\\u00a2\\u00a3\\u0007p\\u0002\\u0002\\u00a3\\u0006\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00a4\\u00a5\\u0007.\\u0002\\u0002\\u00a5\\b\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00a6\\u00a7\\u0007w\\u0002\\u0002\\u00a7\\u00a8\\u0007u\\u0002\\u0002\\u00a8\",\r\n    \"\\u00a9\\u0007g\\u0002\\u0002\\u00a9\\u00aa\\u0007t\\u0002\\u0002\\u00aa\\u00ab\",\r\n    \"\\u0007u\\u0002\\u0002\\u00ab\\u00ac\\u0007\\\"\\u0002\\u0002\\u00ac\\u00ad\\u0007\",\r\n    \"k\\u0002\\u0002\\u00ad\\u00ae\\u0007p\\u0002\\u0002\\u00ae\\n\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00af\\u00b0\\u0007<\\u0002\\u0002\\u00b0\\f\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00b1\\u00b2\\u0007c\\u0002\\u0002\\u00b2\\u00b3\\u0007p\\u0002\\u0002\\u00b3\",\r\n    \"\\u00b4\\u0007f\\u0002\\u0002\\u00b4\\u00b5\\u0007\\\"\\u0002\\u0002\\u00b5\\u00b6\",\r\n    \"\\u0007q\\u0002\\u0002\\u00b6\\u00b7\\u0007p\\u0002\\u0002\\u00b7\\u000e\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00b8\\u00b9\\u0007v\\u0002\\u0002\\u00b9\\u00ba\\u0007\",\r\n    \"j\\u0002\\u0002\\u00ba\\u00bb\\u0007g\\u0002\\u0002\\u00bb\\u00bc\\u0007\\\"\\u0002\",\r\n    \"\\u0002\\u00bc\\u00bd\\u0007g\\u0002\\u0002\\u00bd\\u00be\\u0007p\\u0002\\u0002\",\r\n    \"\\u00be\\u00bf\\u0007f\\u0002\\u0002\\u00bf\\u00c0\\u0007\\\"\\u0002\\u0002\\u00c0\",\r\n    \"\\u00c1\\u0007q\\u0002\\u0002\\u00c1\\u00c2\\u0007h\\u0002\\u0002\\u00c2\\u0010\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u00c3\\u00c4\\u0007f\\u0002\\u0002\\u00c4\\u00c5\",\r\n    \"\\u0007c\\u0002\\u0002\\u00c5\\u00c6\\u0007v\\u0002\\u0002\\u00c6\\u00c7\\u0007\",\r\n    \"g\\u0002\\u0002\\u00c7\\u0012\\u0003\\u0002\\u0002\\u0002\\u00c8\\u00c9\\u0007\",\r\n    \"c\\u0002\\u0002\\u00c9\\u00ca\\u0007h\\u0002\\u0002\\u00ca\\u00cb\\u0007v\\u0002\",\r\n    \"\\u0002\\u00cb\\u00cc\\u0007g\\u0002\\u0002\\u00cc\\u00cd\\u0007t\\u0002\\u0002\",\r\n    \"\\u00cd\\u00ce\\u0007\\\"\\u0002\\u0002\\u00ce\\u00cf\\u0007e\\u0002\\u0002\\u00cf\",\r\n    \"\\u00d0\\u0007q\\u0002\\u0002\\u00d0\\u00d1\\u0007p\\u0002\\u0002\\u00d1\\u00d2\",\r\n    \"\\u0007v\\u0002\\u0002\\u00d2\\u00d3\\u0007t\\u0002\\u0002\\u00d3\\u00d4\\u0007\",\r\n    \"c\\u0002\\u0002\\u00d4\\u00d5\\u0007e\\u0002\\u0002\\u00d5\\u00d6\\u0007v\\u0002\",\r\n    \"\\u0002\\u00d6\\u00d7\\u0007\\\"\\u0002\\u0002\\u00d7\\u00d8\\u0007e\\u0002\\u0002\",\r\n    \"\\u00d8\\u00d9\\u0007t\\u0002\\u0002\\u00d9\\u00da\\u0007g\\u0002\\u0002\\u00da\",\r\n    \"\\u00db\\u0007c\\u0002\\u0002\\u00db\\u00dc\\u0007v\\u0002\\u0002\\u00dc\\u00dd\",\r\n    \"\\u0007k\\u0002\\u0002\\u00dd\\u00de\\u0007q\\u0002\\u0002\\u00de\\u00df\\u0007\",\r\n    \"p\\u0002\\u0002\\u00df\\u0014\\u0003\\u0002\\u0002\\u0002\\u00e0\\u00e1\\u0007\",\r\n    \"r\\u0002\\u0002\\u00e1\\u00e2\\u0007t\\u0002\\u0002\\u00e2\\u00e3\\u0007k\\u0002\",\r\n    \"\\u0002\\u00e3\\u00e4\\u0007e\\u0002\\u0002\\u00e4\\u00e5\\u0007g\\u0002\\u0002\",\r\n    \"\\u00e5\\u00e6\\u0007\\\"\\u0002\\u0002\\u00e6\\u00e7\\u0007r\\u0002\\u0002\\u00e7\",\r\n    \"\\u00e8\\u0007t\\u0002\\u0002\\u00e8\\u00e9\\u0007k\\u0002\\u0002\\u00e9\\u00ea\",\r\n    \"\\u0007e\\u0002\\u0002\\u00ea\\u00eb\\u0007g\\u0002\\u0002\\u00eb\\u00ec\\u0007\",\r\n    \"G\\u0002\\u0002\\u00ec\\u00ed\\u0007z\\u0002\\u0002\\u00ed\\u00ee\\u0007r\\u0002\",\r\n    \"\\u0002\\u00ee\\u00ef\\u0007t\\u0002\\u0002\\u00ef\\u00f0\\u0007g\\u0002\\u0002\",\r\n    \"\\u00f0\\u00f1\\u0007u\\u0002\\u0002\\u00f1\\u00f2\\u0007u\\u0002\\u0002\\u00f2\",\r\n    \"\\u00f3\\u0007k\\u0002\\u0002\\u00f3\\u00f4\\u0007q\\u0002\\u0002\\u00f4\\u00f5\",\r\n    \"\\u0007p\\u0002\\u0002\\u00f5\\u0016\\u0003\\u0002\\u0002\\u0002\\u00f6\\u00f7\",\r\n    \"\\u0007v\\u0002\\u0002\\u00f7\\u00f8\\u0007t\\u0002\\u0002\\u00f8\\u00f9\\u0007\",\r\n    \"c\\u0002\\u0002\\u00f9\\u00fa\\u0007p\\u0002\\u0002\\u00fa\\u00fb\\u0007u\\u0002\",\r\n    \"\\u0002\\u00fb\\u00fc\\u0007c\\u0002\\u0002\\u00fc\\u00fd\\u0007e\\u0002\\u0002\",\r\n    \"\\u00fd\\u00fe\\u0007v\\u0002\\u0002\\u00fe\\u00ff\\u0007k\\u0002\\u0002\\u00ff\",\r\n    \"\\u0100\\u0007q\\u0002\\u0002\\u0100\\u0101\\u0007p\\u0002\\u0002\\u0101\\u0102\",\r\n    \"\\u0007\\\"\\u0002\\u0002\\u0102\\u0103\\u0007q\\u0002\\u0002\\u0103\\u0104\\u0007\",\r\n    \"h\\u0002\\u0002\\u0104\\u0018\\u0003\\u0002\\u0002\\u0002\\u0105\\u0106\\u0007\",\r\n    \"e\\u0002\\u0002\\u0106\\u0107\\u0007q\\u0002\\u0002\\u0107\\u0108\\u0007p\\u0002\",\r\n    \"\\u0002\\u0108\\u0109\\u0007v\\u0002\\u0002\\u0109\\u010a\\u0007t\\u0002\\u0002\",\r\n    \"\\u010a\\u010b\\u0007c\\u0002\\u0002\\u010b\\u010c\\u0007e\\u0002\\u0002\\u010c\",\r\n    \"\\u010d\\u0007v\\u0002\\u0002\\u010d\\u010e\\u0007a\\u0002\\u0002\\u010e\\u010f\",\r\n    \"\\u0007i\\u0002\\u0002\\u010f\\u0110\\u0007w\\u0002\\u0002\\u0110\\u0111\\u0007\",\r\n    \"c\\u0002\\u0002\\u0111\\u0112\\u0007t\\u0002\\u0002\\u0112\\u0113\\u0007c\\u0002\",\r\n    \"\\u0002\\u0113\\u0114\\u0007p\\u0002\\u0002\\u0114\\u0115\\u0007v\\u0002\\u0002\",\r\n    \"\\u0115\\u0116\\u0007{\\u0002\\u0002\\u0116\\u0117\\u0007\\\"\\u0002\\u0002\\u0117\",\r\n    \"\\u0118\\u0007q\\u0002\\u0002\\u0118\\u0119\\u0007h\\u0002\\u0002\\u0119\\u001a\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u011a\\u011b\\u0007t\\u0002\\u0002\\u011b\\u011c\",\r\n    \"\\u0007g\\u0002\\u0002\\u011c\\u011d\\u0007h\\u0002\\u0002\\u011d\\u011e\\u0007\",\r\n    \"w\\u0002\\u0002\\u011e\\u011f\\u0007p\\u0002\\u0002\\u011f\\u0120\\u0007f\\u0002\",\r\n    \"\\u0002\\u0120\\u0121\\u0007\\\"\\u0002\\u0002\\u0121\\u0122\\u0007c\\u0002\\u0002\",\r\n    \"\\u0122\\u0123\\u0007h\\u0002\\u0002\\u0123\\u0124\\u0007v\\u0002\\u0002\\u0124\",\r\n    \"\\u0125\\u0007g\\u0002\\u0002\\u0125\\u0126\\u0007t\\u0002\\u0002\\u0126\\u001c\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0127\\u0128\\u0007f\\u0002\\u0002\\u0128\\u0129\",\r\n    \"\\u0007c\\u0002\\u0002\\u0129\\u012a\\u0007{\\u0002\\u0002\\u012a\\u001e\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u012b\\u012c\\u0007r\\u0002\\u0002\\u012c\\u012d\\u0007\",\r\n    \"n\\u0002\\u0002\\u012d\\u012e\\u0007c\\u0002\\u0002\\u012e\\u012f\\u0007v\\u0002\",\r\n    \"\\u0002\\u012f\\u0130\\u0007h\\u0002\\u0002\\u0130\\u0131\\u0007q\\u0002\\u0002\",\r\n    \"\\u0131\\u0132\\u0007t\\u0002\\u0002\\u0132\\u0133\\u0007o\\u0002\\u0002\\u0133\",\r\n    \"\\u0134\\u0007a\\u0002\\u0002\\u0134\\u0135\\u0007i\\u0002\\u0002\\u0135\\u0136\",\r\n    \"\\u0007w\\u0002\\u0002\\u0136\\u0137\\u0007c\\u0002\\u0002\\u0137\\u0138\\u0007\",\r\n    \"t\\u0002\\u0002\\u0138\\u0139\\u0007c\\u0002\\u0002\\u0139\\u013a\\u0007p\\u0002\",\r\n    \"\\u0002\\u013a\\u013b\\u0007v\\u0002\\u0002\\u013b\\u013c\\u0007{\\u0002\\u0002\",\r\n    \"\\u013c\\u013d\\u0007\\\"\\u0002\\u0002\\u013d\\u013e\\u0007q\\u0002\\u0002\\u013e\",\r\n    \"\\u013f\\u0007h\\u0002\\u0002\\u013f \\u0003\\u0002\\u0002\\u0002\\u0140\\u0141\",\r\n    \"\\u0007x\\u0002\\u0002\\u0141\\u0142\\u0007k\\u0002\\u0002\\u0142\\u0143\\u0007\",\r\n    \"u\\u0002\\u0002\\u0143\\u0144\\u0007k\\u0002\\u0002\\u0144\\u0145\\u0007v\\u0002\",\r\n    \"\\u0002\\u0145\\u0146\\u0007a\\u0002\\u0002\\u0146\\u0147\\u0007k\\u0002\\u0002\",\r\n    \"\\u0147\\u0148\\u0007p\\u0002\\u0002\\u0148\\u0149\\u0007e\\u0002\\u0002\\u0149\",\r\n    \"\\u014a\\u0007t\\u0002\\u0002\\u014a\\u014b\\u0007g\\u0002\\u0002\\u014b\\u014c\",\r\n    \"\\u0007o\\u0002\\u0002\\u014c\\u014d\\u0007g\\u0002\\u0002\\u014d\\u014e\\u0007\",\r\n    \"p\\u0002\\u0002\\u014e\\u014f\\u0007v\\u0002\\u0002\\u014f\\u0150\\u0007\\\"\\u0002\",\r\n    \"\\u0002\\u0150\\u0151\\u0007q\\u0002\\u0002\\u0151\\u0152\\u0007h\\u0002\\u0002\",\r\n    \"\\u0152\\\"\\u0003\\u0002\\u0002\\u0002\\u0153\\u0154\\u0007x\\u0002\\u0002\\u0154\",\r\n    \"\\u0155\\u0007k\\u0002\\u0002\\u0155\\u0156\\u0007u\\u0002\\u0002\\u0156\\u0157\",\r\n    \"\\u0007k\\u0002\\u0002\\u0157\\u0158\\u0007v\\u0002\\u0002\\u0158\\u0159\\u0007\",\r\n    \"\\\"\\u0002\\u0002\\u0159\\u015a\\u0007q\\u0002\\u0002\\u015a\\u015b\\u0007h\\u0002\",\r\n    \"\\u0002\\u015b$\\u0003\\u0002\\u0002\\u0002\\u015c\\u015d\\u0007c\\u0002\\u0002\",\r\n    \"\\u015d\\u015e\\u0007e\\u0002\\u0002\\u015e\\u015f\\u0007e\\u0002\\u0002\\u015f\",\r\n    \"\\u0160\\u0007q\\u0002\\u0002\\u0160\\u0161\\u0007w\\u0002\\u0002\\u0161\\u0162\",\r\n    \"\\u0007p\\u0002\\u0002\\u0162\\u0163\\u0007v\\u0002\\u0002\\u0163\\u0164\\u0007\",\r\n    \"a\\u0002\\u0002\\u0164\\u0165\\u0007d\\u0002\\u0002\\u0165\\u0166\\u0007c\\u0002\",\r\n    \"\\u0002\\u0166\\u0167\\u0007n\\u0002\\u0002\\u0167\\u0168\\u0007c\\u0002\\u0002\",\r\n    \"\\u0168\\u0169\\u0007p\\u0002\\u0002\\u0169\\u016a\\u0007e\\u0002\\u0002\\u016a\",\r\n    \"\\u016b\\u0007g\\u0002\\u0002\\u016b\\u016c\\u0007\\\"\\u0002\\u0002\\u016c\\u016d\",\r\n    \"\\u0007i\\u0002\\u0002\\u016d\\u016e\\u0007t\\u0002\\u0002\\u016e\\u016f\\u0007\",\r\n    \"g\\u0002\\u0002\\u016f\\u0170\\u0007c\\u0002\\u0002\\u0170\\u0171\\u0007v\\u0002\",\r\n    \"\\u0002\\u0171\\u0172\\u0007g\\u0002\\u0002\\u0172\\u0173\\u0007t\\u0002\\u0002\",\r\n    \"\\u0173\\u0174\\u0007\\\"\\u0002\\u0002\\u0174\\u0175\\u0007v\\u0002\\u0002\\u0175\",\r\n    \"\\u0176\\u0007j\\u0002\\u0002\\u0176\\u0177\\u0007c\\u0002\\u0002\\u0177\\u0178\",\r\n    \"\\u0007p\\u0002\\u0002\\u0178&\\u0003\\u0002\\u0002\\u0002\\u0179\\u017a\\u0007\",\r\n    \"c\\u0002\\u0002\\u017a\\u017b\\u0007e\\u0002\\u0002\\u017b\\u017c\\u0007e\\u0002\",\r\n    \"\\u0002\\u017c\\u017d\\u0007q\\u0002\\u0002\\u017d\\u017e\\u0007w\\u0002\\u0002\",\r\n    \"\\u017e\\u017f\\u0007p\\u0002\\u0002\\u017f\\u0180\\u0007v\\u0002\\u0002\\u0180\",\r\n    \"\\u0181\\u0007a\\u0002\\u0002\\u0181\\u0182\\u0007d\\u0002\\u0002\\u0182\\u0183\",\r\n    \"\\u0007c\\u0002\\u0002\\u0183\\u0184\\u0007n\\u0002\\u0002\\u0184\\u0185\\u0007\",\r\n    \"c\\u0002\\u0002\\u0185\\u0186\\u0007p\\u0002\\u0002\\u0186\\u0187\\u0007e\\u0002\",\r\n    \"\\u0002\\u0187\\u0188\\u0007g\\u0002\\u0002\\u0188\\u0189\\u0007\\\"\\u0002\\u0002\",\r\n    \"\\u0189\\u018a\\u0007u\\u0002\\u0002\\u018a\\u018b\\u0007o\\u0002\\u0002\\u018b\",\r\n    \"\\u018c\\u0007c\\u0002\\u0002\\u018c\\u018d\\u0007n\\u0002\\u0002\\u018d\\u018e\",\r\n    \"\\u0007n\\u0002\\u0002\\u018e\\u018f\\u0007g\\u0002\\u0002\\u018f\\u0190\\u0007\",\r\n    \"t\\u0002\\u0002\\u0190\\u0191\\u0007\\\"\\u0002\\u0002\\u0191\\u0192\\u0007v\\u0002\",\r\n    \"\\u0002\\u0192\\u0193\\u0007j\\u0002\\u0002\\u0193\\u0194\\u0007c\\u0002\\u0002\",\r\n    \"\\u0194\\u0195\\u0007p\\u0002\\u0002\\u0195(\\u0003\\u0002\\u0002\\u0002\\u0196\",\r\n    \"\\u0197\\u0007c\\u0002\\u0002\\u0197\\u0198\\u0007e\\u0002\\u0002\\u0198\\u0199\",\r\n    \"\\u0007e\\u0002\\u0002\\u0199\\u019a\\u0007q\\u0002\\u0002\\u019a\\u019b\\u0007\",\r\n    \"w\\u0002\\u0002\\u019b\\u019c\\u0007p\\u0002\\u0002\\u019c\\u019d\\u0007v\\u0002\",\r\n    \"\\u0002\\u019d\\u019e\\u0007a\\u0002\\u0002\\u019e\\u019f\\u0007u\\u0002\\u0002\",\r\n    \"\\u019f\\u01a0\\u0007g\\u0002\\u0002\\u01a0\\u01a1\\u0007v\\u0002\\u0002\\u01a1\",\r\n    \"\\u01a2\\u0007v\\u0002\\u0002\\u01a2\\u01a3\\u0007n\\u0002\\u0002\\u01a3\\u01a4\",\r\n    \"\\u0007g\\u0002\\u0002\\u01a4\\u01a5\\u0007f\\u0002\\u0002\\u01a5*\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u01a6\\u01a7\\u00070\\u0002\\u0002\\u01a7,\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u01a8\\u01a9\\u0007B\\u0002\\u0002\\u01a9.\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u01aa\\u01ab\\u0007a\\u0002\\u0002\\u01ab0\\u0003\\u0002\\u0002\\u0002\\u01ac\",\r\n    \"\\u01ad\\u0007T\\u0002\\u0002\\u01ad\\u01ae\\u0007g\\u0002\\u0002\\u01ae\\u01af\",\r\n    \"\\u0007i\\u0002\\u0002\\u01af\\u01b0\\u0007k\\u0002\\u0002\\u01b0\\u01b1\\u0007\",\r\n    \"u\\u0002\\u0002\\u01b1\\u01b2\\u0007v\\u0002\\u0002\\u01b2\\u01b3\\u0007g\\u0002\",\r\n    \"\\u0002\\u01b3\\u01b4\\u0007t\\u0002\\u0002\\u01b4\\u01b5\\u0007g\\u0002\\u0002\",\r\n    \"\\u01b5\\u01b6\\u0007f\\u0002\\u0002\\u01b6\\u01b7\\u0007W\\u0002\\u0002\\u01b7\",\r\n    \"\\u01b8\\u0007u\\u0002\\u0002\\u01b8\\u01b9\\u0007g\\u0002\\u0002\\u01b9\\u01ba\",\r\n    \"\\u0007t\\u0002\\u0002\\u01ba2\\u0003\\u0002\\u0002\\u0002\\u01bb\\u01bc\\u0007\",\r\n    \"N\\u0002\\u0002\\u01bc\\u01bd\\u0007q\\u0002\\u0002\\u01bd\\u01be\\u0007i\\u0002\",\r\n    \"\\u0002\\u01be\\u01bf\\u0007k\\u0002\\u0002\\u01bf\\u01c0\\u0007p\\u0002\\u0002\",\r\n    \"\\u01c0\\u01c1\\u0007W\\u0002\\u0002\\u01c1\\u01c2\\u0007u\\u0002\\u0002\\u01c2\",\r\n    \"\\u01c3\\u0007g\\u0002\\u0002\\u01c3\\u01c4\\u0007t\\u0002\\u0002\\u01c44\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u01c5\\u01c6\\u0007C\\u0002\\u0002\\u01c6\\u01c7\\u0007\",\r\n    \"n\\u0002\\u0002\\u01c7\\u01c8\\u0007n\\u0002\\u0002\\u01c8\\u01c9\\u0007X\\u0002\",\r\n    \"\\u0002\\u01c9\\u01ca\\u0007k\\u0002\\u0002\\u01ca\\u01cb\\u0007u\\u0002\\u0002\",\r\n    \"\\u01cb\\u01cc\\u0007k\\u0002\\u0002\\u01cc\\u01cd\\u0007v\\u0002\\u0002\\u01cd\",\r\n    \"\\u01ce\\u0007g\\u0002\\u0002\\u01ce\\u01cf\\u0007t\\u0002\\u0002\\u01cf6\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u01d0\\u01d1\\u0007T\\u0002\\u0002\\u01d1\\u01d2\\u0007\",\r\n    \"g\\u0002\\u0002\\u01d2\\u01d3\\u0007i\\u0002\\u0002\\u01d3\\u01d4\\u0007k\\u0002\",\r\n    \"\\u0002\\u01d4\\u01d5\\u0007u\\u0002\\u0002\\u01d5\\u01d6\\u0007v\\u0002\\u0002\",\r\n    \"\\u01d6\\u01d7\\u0007g\\u0002\\u0002\\u01d7\\u01d8\\u0007t\\u0002\\u0002\\u01d8\",\r\n    \"\\u01d9\\u0007g\\u0002\\u0002\\u01d9\\u01da\\u0007f\\u0002\\u0002\\u01da\\u01db\",\r\n    \"\\u0007P\\u0002\\u0002\\u01db\\u01dc\\u0007q\\u0002\\u0002\\u01dc\\u01dd\\u0007\",\r\n    \"f\\u0002\\u0002\\u01dd\\u01de\\u0007g\\u0002\\u0002\\u01de8\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u01df\\u01e0\\u0007c\\u0002\\u0002\\u01e0\\u01e1\\u0007p\\u0002\\u0002\",\r\n    \"\\u01e1\\u01e2\\u0007f\\u0002\\u0002\\u01e2:\\u0003\\u0002\\u0002\\u0002\\u01e3\",\r\n    \"\\u01e4\\u0007k\\u0002\\u0002\\u01e4\\u01e5\\u0007p\\u0002\\u0002\\u01e5\\u01e6\",\r\n    \"\\u0007\\\"\\u0002\\u0002\\u01e6\\u01e7\\u0007v\\u0002\\u0002\\u01e7\\u01e8\\u0007\",\r\n    \"q\\u0002\\u0002\\u01e8\\u01e9\\u0007v\\u0002\\u0002\\u01e9\\u01ea\\u0007c\\u0002\",\r\n    \"\\u0002\\u01ea\\u01eb\\u0007n\\u0002\\u0002\\u01eb<\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u01ec\\u01ed\\u0007r\\u0002\\u0002\\u01ed\\u01ee\\u0007g\\u0002\\u0002\\u01ee\",\r\n    \"\\u01ef\\u0007t\\u0002\\u0002\\u01ef\\u01f0\\u0007\\\"\\u0002\\u0002\\u01f0\\u01f1\",\r\n    \"\\u0007x\\u0002\\u0002\\u01f1\\u01f2\\u0007k\\u0002\\u0002\\u01f2\\u01f3\\u0007\",\r\n    \"g\\u0002\\u0002\\u01f3\\u01f4\\u0007y\\u0002\\u0002\\u01f4>\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u01f5\\u01f6\\u0007{\\u0002\\u0002\\u01f6\\u01f7\\u0007g\\u0002\\u0002\",\r\n    \"\\u01f7\\u01f8\\u0007c\\u0002\\u0002\\u01f8\\u01f9\\u0007t\\u0002\\u0002\\u01f9\",\r\n    \"@\\u0003\\u0002\\u0002\\u0002\\u01fa\\u01fb\\u0007y\\u0002\\u0002\\u01fb\\u01fc\",\r\n    \"\\u0007g\\u0002\\u0002\\u01fc\\u01fd\\u0007g\\u0002\\u0002\\u01fd\\u01fe\\u0007\",\r\n    \"m\\u0002\\u0002\\u01feB\\u0003\\u0002\\u0002\\u0002\\u01ff\\u0200\\u0007e\\u0002\",\r\n    \"\\u0002\\u0200\\u0201\\u0007{\\u0002\\u0002\\u0201\\u0202\\u0007e\\u0002\\u0002\",\r\n    \"\\u0202\\u0203\\u0007n\\u0002\\u0002\\u0203\\u0204\\u0007g\\u0002\\u0002\\u0204\",\r\n    \"D\\u0003\\u0002\\u0002\\u0002\\u0205\\u0206\\u0007H\\u0002\\u0002\\u0206\\u0207\",\r\n    \"\\u0007q\\u0002\\u0002\\u0207\\u0208\\u0007t\\u0002\\u0002\\u0208F\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0209\\u020a\\u0007w\\u0002\\u0002\\u020a\\u020b\\u0007u\\u0002\",\r\n    \"\\u0002\\u020b\\u020c\\u0007g\\u0002\\u0002\\u020c\\u020d\\u0007t\\u0002\\u0002\",\r\n    \"\\u020d\\u020e\\u0007i\\u0002\\u0002\\u020e\\u020f\\u0007t\\u0002\\u0002\\u020f\",\r\n    \"\\u0210\\u0007q\\u0002\\u0002\\u0210\\u0211\\u0007w\\u0002\\u0002\\u0211\\u0212\",\r\n    \"\\u0007r\\u0002\\u0002\\u0212\\u0213\\u0007u\\u0002\\u0002\\u0213H\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0214\\u0215\\u0007w\\u0002\\u0002\\u0215\\u0216\\u0007u\\u0002\",\r\n    \"\\u0002\\u0216\\u0217\\u0007g\\u0002\\u0002\\u0217\\u0218\\u0007t\\u0002\\u0002\",\r\n    \"\\u0218\\u0219\\u0007u\\u0002\\u0002\\u0219J\\u0003\\u0002\\u0002\\u0002\\u021a\",\r\n    \"\\u021b\\u0007r\\u0002\\u0002\\u021b\\u021c\\u0007t\\u0002\\u0002\\u021c\\u021d\",\r\n    \"\\u0007q\\u0002\\u0002\\u021d\\u021e\\u0007e\\u0002\\u0002\\u021e\\u021f\\u0007\",\r\n    \"g\\u0002\\u0002\\u021f\\u0220\\u0007g\\u0002\\u0002\\u0220\\u0221\\u0007f\\u0002\",\r\n    \"\\u0002\\u0221L\\u0003\\u0002\\u0002\\u0002\\u0222\\u0223\\u0007v\\u0002\\u0002\",\r\n    \"\\u0223\\u0224\\u0007q\\u0002\\u0002\\u0224N\\u0003\\u0002\\u0002\\u0002\\u0225\",\r\n    \"\\u0226\\u0007k\\u0002\\u0002\\u0226\\u0227\\u0007p\\u0002\\u0002\\u0227P\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0228\\u0229\\u0007q\\u0002\\u0002\\u0229\\u022a\\u0007\",\r\n    \"p\\u0002\\u0002\\u022aR\\u0003\\u0002\\u0002\\u0002\\u022b\\u022c\\u0007c\\u0002\",\r\n    \"\\u0002\\u022c\\u022d\\u0007e\\u0002\\u0002\\u022d\\u022e\\u0007e\\u0002\\u0002\",\r\n    \"\\u022e\\u022f\\u0007g\\u0002\\u0002\\u022f\\u0230\\u0007r\\u0002\\u0002\\u0230\",\r\n    \"\\u0231\\u0007v\\u0002\\u0002\\u0231\\u0232\\u0007k\\u0002\\u0002\\u0232\\u0233\",\r\n    \"\\u0007p\\u0002\\u0002\\u0233\\u0234\\u0007i\\u0002\\u0002\\u0234T\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0235\\u0236\\u0007u\\u0002\\u0002\\u0236\\u0237\\u0007g\\u0002\",\r\n    \"\\u0002\\u0237\\u0238\\u0007n\\u0002\\u0002\\u0238\\u023e\\u0007h\\u0002\\u0002\",\r\n    \"\\u0239\\u023a\\u0007U\\u0002\\u0002\\u023a\\u023b\\u0007G\\u0002\\u0002\\u023b\",\r\n    \"\\u023c\\u0007N\\u0002\\u0002\\u023c\\u023e\\u0007H\\u0002\\u0002\\u023d\\u0235\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u023d\\u0239\\u0003\\u0002\\u0002\\u0002\\u023eV\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u023f\\u0240\\u0007n\\u0002\\u0002\\u0240\\u0241\",\r\n    \"\\u0007k\\u0002\\u0002\\u0241\\u0242\\u0007e\\u0002\\u0002\\u0242\\u0243\\u0007\",\r\n    \"g\\u0002\\u0002\\u0243\\u0244\\u0007p\\u0002\\u0002\\u0244\\u0245\\u0007u\\u0002\",\r\n    \"\\u0002\\u0245\\u0246\\u0007g\\u0002\\u0002\\u0246X\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0247\\u0248\\u0007r\\u0002\\u0002\\u0248\\u0249\\u0007c\\u0002\\u0002\\u0249\",\r\n    \"\\u024a\\u0007{\\u0002\\u0002\\u024a\\u024b\\u0007k\\u0002\\u0002\\u024b\\u024c\",\r\n    \"\\u0007p\\u0002\\u0002\\u024c\\u024d\\u0007i\\u0002\\u0002\\u024dZ\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u024e\\u024f\\u0007r\\u0002\\u0002\\u024f\\u0250\\u0007g\\u0002\",\r\n    \"\\u0002\\u0250\\u0251\\u0007t\\u0002\\u0002\\u0251\\\\\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0252\\u0253\\u0007x\\u0002\\u0002\\u0253\\u0254\\u0007k\\u0002\\u0002\\u0254\",\r\n    \"\\u0255\\u0007g\\u0002\\u0002\\u0255\\u0256\\u0007y\\u0002\\u0002\\u0256^\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0257\\u0258\\u0007t\\u0002\\u0002\\u0258\\u0259\\u0007\",\r\n    \"g\\u0002\\u0002\\u0259\\u025a\\u0007s\\u0002\\u0002\\u025a\\u025b\\u0007w\\u0002\",\r\n    \"\\u0002\\u025b\\u025c\\u0007k\\u0002\\u0002\\u025c\\u025d\\u0007t\\u0002\\u0002\",\r\n    \"\\u025d\\u025e\\u0007g\\u0002\\u0002\\u025e`\\u0003\\u0002\\u0002\\u0002\\u025f\",\r\n    \"\\u0260\\u0007p\\u0002\\u0002\\u0260\\u0261\\u0007q\\u0002\\u0002\\u0261\\u0262\",\r\n    \"\\u0007v\\u0002\\u0002\\u0262\\u0263\\u0007j\\u0002\\u0002\\u0263\\u0264\\u0007\",\r\n    \"k\\u0002\\u0002\\u0264\\u0265\\u0007p\\u0002\\u0002\\u0265\\u0266\\u0007i\\u0002\",\r\n    \"\\u0002\\u0266b\\u0003\\u0002\\u0002\\u0002\\u0267\\u0269\\t\\u0002\\u0002\\u0002\",\r\n    \"\\u0268\\u0267\\u0003\\u0002\\u0002\\u0002\\u0269\\u026a\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u026a\\u0268\\u0003\\u0002\\u0002\\u0002\\u026a\\u026b\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u026bd\\u0003\\u0002\\u0002\\u0002\\u026c\\u026e\\t\\u0003\\u0002\\u0002\\u026d\",\r\n    \"\\u026c\\u0003\\u0002\\u0002\\u0002\\u026e\\u026f\\u0003\\u0002\\u0002\\u0002\\u026f\",\r\n    \"\\u026d\\u0003\\u0002\\u0002\\u0002\\u026f\\u0270\\u0003\\u0002\\u0002\\u0002\\u0270\",\r\n    \"f\\u0003\\u0002\\u0002\\u0002\\u0271\\u0273\\t\\u0004\\u0002\\u0002\\u0272\\u0271\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0273\\u0274\\u0003\\u0002\\u0002\\u0002\\u0274\\u0272\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0274\\u0275\\u0003\\u0002\\u0002\\u0002\\u0275h\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0276\\u0278\\t\\u0005\\u0002\\u0002\\u0277\\u0276\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0278\\u0279\\u0003\\u0002\\u0002\\u0002\\u0279\\u0277\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0279\\u027a\\u0003\\u0002\\u0002\\u0002\\u027a\\u027b\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u027b\\u027c\\b5\\u0002\\u0002\\u027cj\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u027d\\u027e\\u0005e3\\u0002\\u027e\\u027f\\u0007/\\u0002\\u0002\",\r\n    \"\\u027f\\u0280\\u0005e3\\u0002\\u0280\\u0281\\u0007/\\u0002\\u0002\\u0281\\u0282\",\r\n    \"\\u0005e3\\u0002\\u0282l\\u0003\\u0002\\u0002\\u0002\\t\\u0002\\u023d\\u0268\\u026a\",\r\n    \"\\u026f\\u0274\\u0279\\u0003\\b\\u0002\\u0002\"].join(\"\");\r\n\r\n\r\nvar atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);\r\n\r\nvar decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });\r\n\r\nfunction policyLexer(input) {\r\n\tantlr4.Lexer.call(this, input);\r\n    this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());\r\n    return this;\r\n}\r\n\r\npolicyLexer.prototype = Object.create(antlr4.Lexer.prototype);\r\npolicyLexer.prototype.constructor = policyLexer;\r\n\r\npolicyLexer.EOF = antlr4.Token.EOF;\r\npolicyLexer.T__0 = 1;\r\npolicyLexer.T__1 = 2;\r\npolicyLexer.T__2 = 3;\r\npolicyLexer.T__3 = 4;\r\npolicyLexer.T__4 = 5;\r\npolicyLexer.T__5 = 6;\r\npolicyLexer.T__6 = 7;\r\npolicyLexer.T__7 = 8;\r\npolicyLexer.T__8 = 9;\r\npolicyLexer.T__9 = 10;\r\npolicyLexer.T__10 = 11;\r\npolicyLexer.T__11 = 12;\r\npolicyLexer.T__12 = 13;\r\npolicyLexer.T__13 = 14;\r\npolicyLexer.T__14 = 15;\r\npolicyLexer.T__15 = 16;\r\npolicyLexer.T__16 = 17;\r\npolicyLexer.T__17 = 18;\r\npolicyLexer.T__18 = 19;\r\npolicyLexer.T__19 = 20;\r\npolicyLexer.T__20 = 21;\r\npolicyLexer.T__21 = 22;\r\npolicyLexer.T__22 = 23;\r\npolicyLexer.T__23 = 24;\r\npolicyLexer.T__24 = 25;\r\npolicyLexer.T__25 = 26;\r\npolicyLexer.T__26 = 27;\r\npolicyLexer.T__27 = 28;\r\npolicyLexer.T__28 = 29;\r\npolicyLexer.T__29 = 30;\r\npolicyLexer.T__30 = 31;\r\npolicyLexer.T__31 = 32;\r\npolicyLexer.T__32 = 33;\r\npolicyLexer.FOR = 34;\r\npolicyLexer.USERGROUPS = 35;\r\npolicyLexer.USERS = 36;\r\npolicyLexer.PROCEED = 37;\r\npolicyLexer.TO = 38;\r\npolicyLexer.IN = 39;\r\npolicyLexer.ON = 40;\r\npolicyLexer.ACCEPTING = 41;\r\npolicyLexer.SELF = 42;\r\npolicyLexer.LICENSE = 43;\r\npolicyLexer.PAYING = 44;\r\npolicyLexer.PER = 45;\r\npolicyLexer.VIEW = 46;\r\npolicyLexer.REQUIRE = 47;\r\npolicyLexer.NOTHING = 48;\r\npolicyLexer.ID = 49;\r\npolicyLexer.INT = 50;\r\npolicyLexer.FEATHERACCOUNT = 51;\r\npolicyLexer.WS = 52;\r\npolicyLexer.DATE = 53;\r\n\r\npolicyLexer.prototype.channelNames = [ \"DEFAULT_TOKEN_CHANNEL\", \"HIDDEN\" ];\r\n\r\npolicyLexer.prototype.modeNames = [ \"DEFAULT_MODE\" ];\r\n\r\npolicyLexer.prototype.literalNames = [ null, \"'in the following states:'\", \r\n                                       \"'I agree to authorize token in'\", \r\n                                       \"','\", \"'users in'\", \"':'\", \"'and on'\", \r\n                                       \"'the end of'\", \"'date'\", \"'after contract creation'\", \r\n                                       \"'price priceExpression'\", \"'transaction of'\", \r\n                                       \"'contract_guaranty of'\", \"'refund after'\", \r\n                                       \"'day'\", \"'platform_guaranty of'\", \r\n                                       \"'visit_increment of'\", \"'visit of'\", \r\n                                       \"'account_balance greater than'\", \r\n                                       \"'account_balance smaller than'\", \r\n                                       \"'account_settled'\", \"'.'\", \"'@'\", \r\n                                       \"'_'\", \"'RegisteredUser'\", \"'LoginUser'\", \r\n                                       \"'AllVisiter'\", \"'RegisteredNode'\", \r\n                                       \"'and'\", \"'in total'\", \"'per view'\", \r\n                                       \"'year'\", \"'week'\", \"'cycle'\", \"'For'\", \r\n                                       \"'usergroups'\", \"'users'\", \"'proceed'\", \r\n                                       \"'to'\", \"'in'\", \"'on'\", \"'accepting'\", \r\n                                       null, \"'license'\", \"'paying'\", \"'per'\", \r\n                                       \"'view'\", \"'require'\", \"'nothing'\" ];\r\n\r\npolicyLexer.prototype.symbolicNames = [ null, null, null, null, null, null, \r\n                                        null, null, null, null, null, null, \r\n                                        null, null, null, null, null, null, \r\n                                        null, null, null, null, null, null, \r\n                                        null, null, null, null, null, null, \r\n                                        null, null, null, null, \"FOR\", \"USERGROUPS\", \r\n                                        \"USERS\", \"PROCEED\", \"TO\", \"IN\", \r\n                                        \"ON\", \"ACCEPTING\", \"SELF\", \"LICENSE\", \r\n                                        \"PAYING\", \"PER\", \"VIEW\", \"REQUIRE\", \r\n                                        \"NOTHING\", \"ID\", \"INT\", \"FEATHERACCOUNT\", \r\n                                        \"WS\", \"DATE\" ];\r\n\r\npolicyLexer.prototype.ruleNames = [ \"T__0\", \"T__1\", \"T__2\", \"T__3\", \"T__4\", \r\n                                    \"T__5\", \"T__6\", \"T__7\", \"T__8\", \"T__9\", \r\n                                    \"T__10\", \"T__11\", \"T__12\", \"T__13\", \r\n                                    \"T__14\", \"T__15\", \"T__16\", \"T__17\", \r\n                                    \"T__18\", \"T__19\", \"T__20\", \"T__21\", \r\n                                    \"T__22\", \"T__23\", \"T__24\", \"T__25\", \r\n                                    \"T__26\", \"T__27\", \"T__28\", \"T__29\", \r\n                                    \"T__30\", \"T__31\", \"T__32\", \"FOR\", \"USERGROUPS\", \r\n                                    \"USERS\", \"PROCEED\", \"TO\", \"IN\", \"ON\", \r\n                                    \"ACCEPTING\", \"SELF\", \"LICENSE\", \"PAYING\", \r\n                                    \"PER\", \"VIEW\", \"REQUIRE\", \"NOTHING\", \r\n                                    \"ID\", \"INT\", \"FEATHERACCOUNT\", \"WS\", \r\n                                    \"DATE\" ];\r\n\r\npolicyLexer.prototype.grammarFileName = \"policy.g4\";\r\n\r\n\r\n\r\nexports.policyLexer = policyLexer;\r\n\r\n\n\n/***/ }),\n\n/***/ \"uruK\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar policyListener = __webpack_require__(\"k2M1\").policyListener;\nvar _ = __webpack_require__(\"rdLu\");\nvar indentLevel = 2;\n\nvar Beautify = function (_policyListener) {\n  _inherits(Beautify, _policyListener);\n\n  function Beautify() {\n    _classCallCheck(this, Beautify);\n\n    var _this = _possibleConstructorReturn(this, (Beautify.__proto__ || Object.getPrototypeOf(Beautify)).call(this));\n\n    _this.errorMsg = null;\n    _this.stringArray = [];\n    _this._nextIndent = ' ';\n    return _this;\n  }\n\n  _createClass(Beautify, [{\n    key: 'addIndent',\n    value: function addIndent() {\n      var _this2 = this;\n\n      _.each(_.range(indentLevel), function () {\n        _this2._nextIndent += \" \";\n      });\n    }\n  }, {\n    key: 'deleteIndent',\n    value: function deleteIndent() {\n      this._nextIndent = this._nextIndent.slice(0, Number('-' + indentLevel));\n    }\n  }, {\n    key: 'enterSegment',\n    value: function enterSegment(ctx) {\n      this.stringArray.push('\\n');\n      this.stringArray.push('For');\n    }\n  }, {\n    key: 'exitSegment',\n    value: function exitSegment(ctx) {\n      this.deleteIndent();\n    }\n  }, {\n    key: 'enterAudience_clause',\n    value: function enterAudience_clause(ctx) {\n      _.map(ctx.children, function (child) {\n        // this.stringArray.push(child.getText());\n        // console.log(child.getText());\n      });\n    }\n  }, {\n    key: 'exitAudience_clause',\n    value: function exitAudience_clause(ctx) {\n      this.stringArray.push('in the following states:');\n      this.addIndent();\n      this.stringArray.push(this._nextIndent);\n    }\n  }, {\n    key: 'enterState_clause',\n    value: function enterState_clause(ctx) {\n      this.stringArray.push('\\n');\n      this.stringArray.push(this._nextIndent);\n    }\n  }, {\n    key: 'enterCurrent_state_clause',\n    value: function enterCurrent_state_clause(ctx) {\n      var _this3 = this;\n\n      _.map(ctx.children, function (child) {\n        _this3.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterTarget_clause',\n    value: function enterTarget_clause(ctx) {\n      this.stringArray.push('\\n');\n      this.addIndent();\n      this.stringArray.push(this._nextIndent);\n      this.stringArray = this.stringArray.concat(['proceed to', ctx.ID().getText(), 'on']);\n    }\n  }, {\n    key: 'exitTarget_clause',\n    value: function exitTarget_clause() {\n      this.deleteIndent();\n    }\n  }, {\n    key: 'enterAccepting',\n    value: function enterAccepting(ctx) {\n      this.stringArray.push('accepting');\n    }\n  }, {\n    key: 'enterAnd_event',\n    value: function enterAnd_event(ctx) {\n      this.stringArray.push('and on');\n    }\n  }, {\n    key: 'enterPeriod_event',\n    value: function enterPeriod_event(ctx) {\n      var _this4 = this;\n\n      _.map(ctx.children, function (child) {\n        _this4.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterSpecific_date_event',\n    value: function enterSpecific_date_event(ctx) {\n      var _this5 = this;\n\n      _.map(ctx.children, function (child) {\n        _this5.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterRelative_date_event',\n    value: function enterRelative_date_event(ctx) {\n      var _this6 = this;\n\n      _.map(ctx.children, function (child) {\n        _this6.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterPricing_agreement_event',\n    value: function enterPricing_agreement_event(ctx) {\n      var _this7 = this;\n\n      _.map(ctx.children, function (child) {\n        _this7.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterTransaction_event',\n    value: function enterTransaction_event(ctx) {\n      var _this8 = this;\n\n      _.map(ctx.children, function (child) {\n        _this8.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterContract_guaranty',\n    value: function enterContract_guaranty(ctx) {\n      var _this9 = this;\n\n      _.map(ctx.children, function (child) {\n        _this9.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterPlatform_guaranty',\n    value: function enterPlatform_guaranty(ctx) {\n      var _this10 = this;\n\n      _.map(ctx.children, function (child) {\n        _this10.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterSigning_event',\n    value: function enterSigning_event(ctx) {\n      var _this11 = this;\n\n      _.map(ctx.children, function (child) {\n        _this11.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterSettlement_event',\n    value: function enterSettlement_event(ctx) {\n      var _this12 = this;\n\n      _.map(ctx.children, function (child) {\n        _this12.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterVisit_increment_event',\n    value: function enterVisit_increment_event(ctx) {\n      var _this13 = this;\n\n      _.map(ctx.children, function (child) {\n        _this13.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterVisit_event',\n    value: function enterVisit_event(ctx) {\n      var _this14 = this;\n\n      _.map(ctx.children, function (child) {\n        _this14.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterBalance_greater',\n    value: function enterBalance_greater(ctx) {\n      var _this15 = this;\n\n      _.map(ctx.children, function (child) {\n        _this15.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterBalance_smaller',\n    value: function enterBalance_smaller(ctx) {\n      var _this16 = this;\n\n      _.map(ctx.children, function (child) {\n        _this16.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterUsers',\n    value: function enterUsers(ctx) {\n      for (var i = 0; i < ctx.getChildCount(); i++) {\n        this.stringArray.push(ctx.getChild(i).getText());\n      }\n    }\n  }, {\n    key: 'enterUser_groups',\n    value: function enterUser_groups(ctx) {\n      this.stringArray.push('users in');\n      for (var i = 0; i < ctx.getChildCount(); i++) {\n        this.stringArray.push(ctx.getChild(i).getText());\n      }\n    }\n  }, {\n    key: 'enterAthorize_token_clause',\n    value: function enterAthorize_token_clause(ctx) {\n      var _this17 = this;\n\n      this.stringArray.push('\\n');\n      this.stringArray.push(this._nextIndent);\n      _.map(ctx.children, function (child) {\n        _this17.stringArray.push(child.getText());\n      });\n    }\n  }]);\n\n  return Beautify;\n}(policyListener);\n\n;\n\nmodule.exports = Beautify;\n\n\n/***/ }),\n\n/***/ \"us/S\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(\"Xd32\"), __esModule: true };\n\n/***/ }),\n\n/***/ \"wADU\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(\"wThA\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(\"rjj0\")(\"f4e22d62\", content, true);\n\n/***/ }),\n\n/***/ \"wMEt\":\n/***/ (function(module, exports, __webpack_require__) {\n\n//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n//\n// Specialized {@link Set}{@code <}{@link ATNConfig}{@code >} that can track\n// info about the set, with support for combining similar configurations using a\n// graph-structured stack.\n///\n\nvar ATN = __webpack_require__(\"7y1Z\").ATN;\nvar Utils = __webpack_require__(\"bz+k\");\nvar Hash = Utils.Hash;\nvar Set = Utils.Set;\nvar SemanticContext = __webpack_require__(\"wQJ6\").SemanticContext;\nvar merge = __webpack_require__(\"YFoD\").merge;\n\nfunction hashATNConfig(c) {\n\treturn c.hashCodeForConfigSet();\n}\n\nfunction equalATNConfigs(a, b) {\n\tif ( a===b ) {\n\t\treturn true;\n\t} else if ( a===null || b===null ) {\n\t\treturn false;\n\t} else\n       return a.equalsForConfigSet(b);\n }\n\n\nfunction ATNConfigSet(fullCtx) {\n\t//\n\t// The reason that we need this is because we don't want the hash map to use\n\t// the standard hash code and equals. We need all configurations with the\n\t// same\n\t// {@code (s,i,_,semctx)} to be equal. Unfortunately, this key effectively\n\t// doubles\n\t// the number of objects associated with ATNConfigs. The other solution is\n\t// to\n\t// use a hash table that lets us specify the equals/hashcode operation.\n\t// All configs but hashed by (s, i, _, pi) not including context. Wiped out\n\t// when we go readonly as this set becomes a DFA state.\n\tthis.configLookup = new Set(hashATNConfig, equalATNConfigs);\n\t// Indicates that this configuration set is part of a full context\n\t// LL prediction. It will be used to determine how to merge $. With SLL\n\t// it's a wildcard whereas it is not for LL context merge.\n\tthis.fullCtx = fullCtx === undefined ? true : fullCtx;\n\t// Indicates that the set of configurations is read-only. Do not\n\t// allow any code to manipulate the set; DFA states will point at\n\t// the sets and they must not change. This does not protect the other\n\t// fields; in particular, conflictingAlts is set after\n\t// we've made this readonly.\n\tthis.readOnly = false;\n\t// Track the elements as they are added to the set; supports get(i)///\n\tthis.configs = [];\n\n\t// TODO: these fields make me pretty uncomfortable but nice to pack up info\n\t// together, saves recomputation\n\t// TODO: can we track conflicts as they are added to save scanning configs\n\t// later?\n\tthis.uniqueAlt = 0;\n\tthis.conflictingAlts = null;\n\n\t// Used in parser and lexer. In lexer, it indicates we hit a pred\n\t// while computing a closure operation. Don't make a DFA state from this.\n\tthis.hasSemanticContext = false;\n\tthis.dipsIntoOuterContext = false;\n\n\tthis.cachedHashCode = -1;\n\n\treturn this;\n}\n\n// Adding a new config means merging contexts with existing configs for\n// {@code (s, i, pi, _)}, where {@code s} is the\n// {@link ATNConfig//state}, {@code i} is the {@link ATNConfig//alt}, and\n// {@code pi} is the {@link ATNConfig//semanticContext}. We use\n// {@code (s,i,pi)} as key.\n//\n// <p>This method updates {@link //dipsIntoOuterContext} and\n// {@link //hasSemanticContext} when necessary.</p>\n// /\nATNConfigSet.prototype.add = function(config, mergeCache) {\n\tif (mergeCache === undefined) {\n\t\tmergeCache = null;\n\t}\n\tif (this.readOnly) {\n\t\tthrow \"This set is readonly\";\n\t}\n\tif (config.semanticContext !== SemanticContext.NONE) {\n\t\tthis.hasSemanticContext = true;\n\t}\n\tif (config.reachesIntoOuterContext > 0) {\n\t\tthis.dipsIntoOuterContext = true;\n\t}\n\tvar existing = this.configLookup.add(config);\n\tif (existing === config) {\n\t\tthis.cachedHashCode = -1;\n\t\tthis.configs.push(config); // track order here\n\t\treturn true;\n\t}\n\t// a previous (s,i,pi,_), merge with it and save result\n\tvar rootIsWildcard = !this.fullCtx;\n\tvar merged = merge(existing.context, config.context, rootIsWildcard, mergeCache);\n\t// no need to check for existing.context, config.context in cache\n\t// since only way to create new graphs is \"call rule\" and here. We\n\t// cache at both places.\n\texisting.reachesIntoOuterContext = Math.max( existing.reachesIntoOuterContext, config.reachesIntoOuterContext);\n\t// make sure to preserve the precedence filter suppression during the merge\n\tif (config.precedenceFilterSuppressed) {\n\t\texisting.precedenceFilterSuppressed = true;\n\t}\n\texisting.context = merged; // replace context; no need to alt mapping\n\treturn true;\n};\n\nATNConfigSet.prototype.getStates = function() {\n\tvar states = new Set();\n\tfor (var i = 0; i < this.configs.length; i++) {\n\t\tstates.add(this.configs[i].state);\n\t}\n\treturn states;\n};\n\nATNConfigSet.prototype.getPredicates = function() {\n\tvar preds = [];\n\tfor (var i = 0; i < this.configs.length; i++) {\n\t\tvar c = this.configs[i].semanticContext;\n\t\tif (c !== SemanticContext.NONE) {\n\t\t\tpreds.push(c.semanticContext);\n\t\t}\n\t}\n\treturn preds;\n};\n\nObject.defineProperty(ATNConfigSet.prototype, \"items\", {\n\tget : function() {\n\t\treturn this.configs;\n\t}\n});\n\nATNConfigSet.prototype.optimizeConfigs = function(interpreter) {\n\tif (this.readOnly) {\n\t\tthrow \"This set is readonly\";\n\t}\n\tif (this.configLookup.length === 0) {\n\t\treturn;\n\t}\n\tfor (var i = 0; i < this.configs.length; i++) {\n\t\tvar config = this.configs[i];\n\t\tconfig.context = interpreter.getCachedContext(config.context);\n\t}\n};\n\nATNConfigSet.prototype.addAll = function(coll) {\n\tfor (var i = 0; i < coll.length; i++) {\n\t\tthis.add(coll[i]);\n\t}\n\treturn false;\n};\n\nATNConfigSet.prototype.equals = function(other) {\n\treturn this === other ||\n\t\t(other instanceof ATNConfigSet &&\n\t\tUtils.equalArrays(this.configs, other.configs) &&\n\t\tthis.fullCtx === other.fullCtx &&\n\t\tthis.uniqueAlt === other.uniqueAlt &&\n\t\tthis.conflictingAlts === other.conflictingAlts &&\n\t\tthis.hasSemanticContext === other.hasSemanticContext &&\n\t\tthis.dipsIntoOuterContext === other.dipsIntoOuterContext);\n};\n\nATNConfigSet.prototype.hashCode = function() {\n    var hash = new Hash();\n    this.updateHashCode(hash);\n    return hash.finish();\n};\n\n\nATNConfigSet.prototype.updateHashCode = function(hash) {\n\tif (this.readOnly) {\n\t\tif (this.cachedHashCode === -1) {\n            var hash = new Hash();\n            hash.update(this.configs);\n\t\t\tthis.cachedHashCode = hash.finish();\n\t\t}\n        hash.update(this.cachedHashCode);\n\t} else {\n        hash.update(this.configs);\n\t}\n};\n\n\nObject.defineProperty(ATNConfigSet.prototype, \"length\", {\n\tget : function() {\n\t\treturn this.configs.length;\n\t}\n});\n\nATNConfigSet.prototype.isEmpty = function() {\n\treturn this.configs.length === 0;\n};\n\nATNConfigSet.prototype.contains = function(item) {\n\tif (this.configLookup === null) {\n\t\tthrow \"This method is not implemented for readonly sets.\";\n\t}\n\treturn this.configLookup.contains(item);\n};\n\nATNConfigSet.prototype.containsFast = function(item) {\n\tif (this.configLookup === null) {\n\t\tthrow \"This method is not implemented for readonly sets.\";\n\t}\n\treturn this.configLookup.containsFast(item);\n};\n\nATNConfigSet.prototype.clear = function() {\n\tif (this.readOnly) {\n\t\tthrow \"This set is readonly\";\n\t}\n\tthis.configs = [];\n\tthis.cachedHashCode = -1;\n\tthis.configLookup = new Set();\n};\n\nATNConfigSet.prototype.setReadonly = function(readOnly) {\n\tthis.readOnly = readOnly;\n\tif (readOnly) {\n\t\tthis.configLookup = null; // can't mod, no need for lookup cache\n\t}\n};\n\nATNConfigSet.prototype.toString = function() {\n\treturn Utils.arrayToString(this.configs) +\n\t\t(this.hasSemanticContext ? \",hasSemanticContext=\" + this.hasSemanticContext : \"\") +\n\t\t(this.uniqueAlt !== ATN.INVALID_ALT_NUMBER ? \",uniqueAlt=\" + this.uniqueAlt : \"\") +\n\t\t(this.conflictingAlts !== null ? \",conflictingAlts=\" + this.conflictingAlts : \"\") +\n\t\t(this.dipsIntoOuterContext ? \",dipsIntoOuterContext\" : \"\");\n};\n\nfunction OrderedATNConfigSet() {\n\tATNConfigSet.call(this);\n\tthis.configLookup = new Set();\n\treturn this;\n}\n\nOrderedATNConfigSet.prototype = Object.create(ATNConfigSet.prototype);\nOrderedATNConfigSet.prototype.constructor = OrderedATNConfigSet;\n\nexports.ATNConfigSet = ATNConfigSet;\nexports.OrderedATNConfigSet = OrderedATNConfigSet;\n\n\n/***/ }),\n\n/***/ \"wQJ6\":\n/***/ (function(module, exports, __webpack_require__) {\n\n//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\n// A tree structure used to record the semantic context in which\n//  an ATN configuration is valid.  It's either a single predicate,\n//  a conjunction {@code p1&&p2}, or a sum of products {@code p1||p2}.\n//\n//  <p>I have scoped the {@link AND}, {@link OR}, and {@link Predicate} subclasses of\n//  {@link SemanticContext} within the scope of this outer class.</p>\n//\n\nvar Set = __webpack_require__(\"bz+k\").Set;\nvar Hash = __webpack_require__(\"bz+k\").Hash;\n\nfunction SemanticContext() {\n\treturn this;\n}\n\nSemanticContext.prototype.hashCode = function() {\n    var hash = new Hash();\n    this.updateHashCode(hash);\n    return hash.finish();\n};\n\n// For context independent predicates, we evaluate them without a local\n// context (i.e., null context). That way, we can evaluate them without\n// having to create proper rule-specific context during prediction (as\n// opposed to the parser, which creates them naturally). In a practical\n// sense, this avoids a cast exception from RuleContext to myruleContext.\n//\n// <p>For context dependent predicates, we must pass in a local context so that\n// references such as $arg evaluate properly as _localctx.arg. We only\n// capture context dependent predicates in the context in which we begin\n// prediction, so we passed in the outer context here in case of context\n// dependent predicate evaluation.</p>\n//\nSemanticContext.prototype.evaluate = function(parser, outerContext) {\n};\n\n//\n// Evaluate the precedence predicates for the context and reduce the result.\n//\n// @param parser The parser instance.\n// @param outerContext The current parser context object.\n// @return The simplified semantic context after precedence predicates are\n// evaluated, which will be one of the following values.\n// <ul>\n// <li>{@link //NONE}: if the predicate simplifies to {@code true} after\n// precedence predicates are evaluated.</li>\n// <li>{@code null}: if the predicate simplifies to {@code false} after\n// precedence predicates are evaluated.</li>\n// <li>{@code this}: if the semantic context is not changed as a result of\n// precedence predicate evaluation.</li>\n// <li>A non-{@code null} {@link SemanticContext}: the new simplified\n// semantic context after precedence predicates are evaluated.</li>\n// </ul>\n//\nSemanticContext.prototype.evalPrecedence = function(parser, outerContext) {\n\treturn this;\n};\n\nSemanticContext.andContext = function(a, b) {\n\tif (a === null || a === SemanticContext.NONE) {\n\t\treturn b;\n\t}\n\tif (b === null || b === SemanticContext.NONE) {\n\t\treturn a;\n\t}\n\tvar result = new AND(a, b);\n\tif (result.opnds.length === 1) {\n\t\treturn result.opnds[0];\n\t} else {\n\t\treturn result;\n\t}\n};\n\nSemanticContext.orContext = function(a, b) {\n\tif (a === null) {\n\t\treturn b;\n\t}\n\tif (b === null) {\n\t\treturn a;\n\t}\n\tif (a === SemanticContext.NONE || b === SemanticContext.NONE) {\n\t\treturn SemanticContext.NONE;\n\t}\n\tvar result = new OR(a, b);\n\tif (result.opnds.length === 1) {\n\t\treturn result.opnds[0];\n\t} else {\n\t\treturn result;\n\t}\n};\n\nfunction Predicate(ruleIndex, predIndex, isCtxDependent) {\n\tSemanticContext.call(this);\n\tthis.ruleIndex = ruleIndex === undefined ? -1 : ruleIndex;\n\tthis.predIndex = predIndex === undefined ? -1 : predIndex;\n\tthis.isCtxDependent = isCtxDependent === undefined ? false : isCtxDependent; // e.g., $i ref in pred\n\treturn this;\n}\n\nPredicate.prototype = Object.create(SemanticContext.prototype);\nPredicate.prototype.constructor = Predicate;\n\n//The default {@link SemanticContext}, which is semantically equivalent to\n//a predicate of the form {@code {true}?}.\n//\nSemanticContext.NONE = new Predicate();\n\n\nPredicate.prototype.evaluate = function(parser, outerContext) {\n\tvar localctx = this.isCtxDependent ? outerContext : null;\n\treturn parser.sempred(localctx, this.ruleIndex, this.predIndex);\n};\n\nPredicate.prototype.updateHashCode = function(hash) {\n\thash.update(this.ruleIndex, this.predIndex, this.isCtxDependent);\n};\n\nPredicate.prototype.equals = function(other) {\n\tif (this === other) {\n\t\treturn true;\n\t} else if (!(other instanceof Predicate)) {\n\t\treturn false;\n\t} else {\n\t\treturn this.ruleIndex === other.ruleIndex &&\n\t\t\t\tthis.predIndex === other.predIndex &&\n\t\t\t\tthis.isCtxDependent === other.isCtxDependent;\n\t}\n};\n\nPredicate.prototype.toString = function() {\n\treturn \"{\" + this.ruleIndex + \":\" + this.predIndex + \"}?\";\n};\n\nfunction PrecedencePredicate(precedence) {\n\tSemanticContext.call(this);\n\tthis.precedence = precedence === undefined ? 0 : precedence;\n}\n\nPrecedencePredicate.prototype = Object.create(SemanticContext.prototype);\nPrecedencePredicate.prototype.constructor = PrecedencePredicate;\n\nPrecedencePredicate.prototype.evaluate = function(parser, outerContext) {\n\treturn parser.precpred(outerContext, this.precedence);\n};\n\nPrecedencePredicate.prototype.evalPrecedence = function(parser, outerContext) {\n\tif (parser.precpred(outerContext, this.precedence)) {\n\t\treturn SemanticContext.NONE;\n\t} else {\n\t\treturn null;\n\t}\n};\n\nPrecedencePredicate.prototype.compareTo = function(other) {\n\treturn this.precedence - other.precedence;\n};\n\nPrecedencePredicate.prototype.updateHashCode = function(hash) {\n    hash.update(31);\n};\n\nPrecedencePredicate.prototype.equals = function(other) {\n\tif (this === other) {\n\t\treturn true;\n\t} else if (!(other instanceof PrecedencePredicate)) {\n\t\treturn false;\n\t} else {\n\t\treturn this.precedence === other.precedence;\n\t}\n};\n\nPrecedencePredicate.prototype.toString = function() {\n\treturn \"{\"+this.precedence+\">=prec}?\";\n};\n\n\n\nPrecedencePredicate.filterPrecedencePredicates = function(set) {\n\tvar result = [];\n\tset.values().map( function(context) {\n\t\tif (context instanceof PrecedencePredicate) {\n\t\t\tresult.push(context);\n\t\t}\n\t});\n\treturn result;\n};\n\n\n// A semantic context which is true whenever none of the contained contexts\n// is false.\n//\nfunction AND(a, b) {\n\tSemanticContext.call(this);\n\tvar operands = new Set();\n\tif (a instanceof AND) {\n\t\ta.opnds.map(function(o) {\n\t\t\toperands.add(o);\n\t\t});\n\t} else {\n\t\toperands.add(a);\n\t}\n\tif (b instanceof AND) {\n\t\tb.opnds.map(function(o) {\n\t\t\toperands.add(o);\n\t\t});\n\t} else {\n\t\toperands.add(b);\n\t}\n\tvar precedencePredicates = PrecedencePredicate.filterPrecedencePredicates(operands);\n\tif (precedencePredicates.length > 0) {\n\t\t// interested in the transition with the lowest precedence\n\t\tvar reduced = null;\n\t\tprecedencePredicates.map( function(p) {\n\t\t\tif(reduced===null || p.precedence<reduced.precedence) {\n\t\t\t\treduced = p;\n\t\t\t}\n\t\t});\n\t\toperands.add(reduced);\n\t}\n\tthis.opnds = operands.values();\n\treturn this;\n}\n\nAND.prototype = Object.create(SemanticContext.prototype);\nAND.prototype.constructor = AND;\n\nAND.prototype.equals = function(other) {\n\tif (this === other) {\n\t\treturn true;\n\t} else if (!(other instanceof AND)) {\n\t\treturn false;\n\t} else {\n\t\treturn this.opnds === other.opnds;\n\t}\n};\n\nAND.prototype.updateHashCode = function(hash) {\n    hash.update(this.opnds, \"AND\");\n};\n//\n// {@inheritDoc}\n//\n// <p>\n// The evaluation of predicates by this context is short-circuiting, but\n// unordered.</p>\n//\nAND.prototype.evaluate = function(parser, outerContext) {\n\tfor (var i = 0; i < this.opnds.length; i++) {\n\t\tif (!this.opnds[i].evaluate(parser, outerContext)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n};\n\nAND.prototype.evalPrecedence = function(parser, outerContext) {\n\tvar differs = false;\n\tvar operands = [];\n\tfor (var i = 0; i < this.opnds.length; i++) {\n\t\tvar context = this.opnds[i];\n\t\tvar evaluated = context.evalPrecedence(parser, outerContext);\n\t\tdiffers |= (evaluated !== context);\n\t\tif (evaluated === null) {\n\t\t\t// The AND context is false if any element is false\n\t\t\treturn null;\n\t\t} else if (evaluated !== SemanticContext.NONE) {\n\t\t\t// Reduce the result by skipping true elements\n\t\t\toperands.push(evaluated);\n\t\t}\n\t}\n\tif (!differs) {\n\t\treturn this;\n\t}\n\tif (operands.length === 0) {\n\t\t// all elements were true, so the AND context is true\n\t\treturn SemanticContext.NONE;\n\t}\n\tvar result = null;\n\toperands.map(function(o) {\n\t\tresult = result === null ? o : SemanticContext.andContext(result, o);\n\t});\n\treturn result;\n};\n\nAND.prototype.toString = function() {\n\tvar s = \"\";\n\tthis.opnds.map(function(o) {\n\t\ts += \"&& \" + o.toString();\n\t});\n\treturn s.length > 3 ? s.slice(3) : s;\n};\n\n//\n// A semantic context which is true whenever at least one of the contained\n// contexts is true.\n//\nfunction OR(a, b) {\n\tSemanticContext.call(this);\n\tvar operands = new Set();\n\tif (a instanceof OR) {\n\t\ta.opnds.map(function(o) {\n\t\t\toperands.add(o);\n\t\t});\n\t} else {\n\t\toperands.add(a);\n\t}\n\tif (b instanceof OR) {\n\t\tb.opnds.map(function(o) {\n\t\t\toperands.add(o);\n\t\t});\n\t} else {\n\t\toperands.add(b);\n\t}\n\n\tvar precedencePredicates = PrecedencePredicate.filterPrecedencePredicates(operands);\n\tif (precedencePredicates.length > 0) {\n\t\t// interested in the transition with the highest precedence\n\t\tvar s = precedencePredicates.sort(function(a, b) {\n\t\t\treturn a.compareTo(b);\n\t\t});\n\t\tvar reduced = s[s.length-1];\n\t\toperands.add(reduced);\n\t}\n\tthis.opnds = operands.values();\n\treturn this;\n}\n\nOR.prototype = Object.create(SemanticContext.prototype);\nOR.prototype.constructor = OR;\n\nOR.prototype.constructor = function(other) {\n\tif (this === other) {\n\t\treturn true;\n\t} else if (!(other instanceof OR)) {\n\t\treturn false;\n\t} else {\n\t\treturn this.opnds === other.opnds;\n\t}\n};\n\nOR.prototype.updateHashCode = function(hash) {\n    hash.update(this.opnds, \"OR\");\n};\n\n// <p>\n// The evaluation of predicates by this context is short-circuiting, but\n// unordered.</p>\n//\nOR.prototype.evaluate = function(parser, outerContext) {\n\tfor (var i = 0; i < this.opnds.length; i++) {\n\t\tif (this.opnds[i].evaluate(parser, outerContext)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n};\n\nOR.prototype.evalPrecedence = function(parser, outerContext) {\n\tvar differs = false;\n\tvar operands = [];\n\tfor (var i = 0; i < this.opnds.length; i++) {\n\t\tvar context = this.opnds[i];\n\t\tvar evaluated = context.evalPrecedence(parser, outerContext);\n\t\tdiffers |= (evaluated !== context);\n\t\tif (evaluated === SemanticContext.NONE) {\n\t\t\t// The OR context is true if any element is true\n\t\t\treturn SemanticContext.NONE;\n\t\t} else if (evaluated !== null) {\n\t\t\t// Reduce the result by skipping false elements\n\t\t\toperands.push(evaluated);\n\t\t}\n\t}\n\tif (!differs) {\n\t\treturn this;\n\t}\n\tif (operands.length === 0) {\n\t\t// all elements were false, so the OR context is false\n\t\treturn null;\n\t}\n\tvar result = null;\n\toperands.map(function(o) {\n\t\treturn result === null ? o : SemanticContext.orContext(result, o);\n\t});\n\treturn result;\n};\n\nOR.prototype.toString = function() {\n\tvar s = \"\";\n\tthis.opnds.map(function(o) {\n\t\ts += \"|| \" + o.toString();\n\t});\n\treturn s.length > 3 ? s.slice(3) : s;\n};\n\nexports.SemanticContext = SemanticContext;\nexports.PrecedencePredicate = PrecedencePredicate;\nexports.Predicate = Predicate;\n\n\n/***/ }),\n\n/***/ \"wThA\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"FZ+f\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \".el-tag+.el-tag[data-v-09f5c69c]{margin-left:10px}.button-new-tag[data-v-09f5c69c]{margin-left:10px;height:32px;line-height:30px;padding-top:0;padding-bottom:0}.input-new-tag[data-v-09f5c69c]{width:90px;margin-left:10px;vertical-align:bottom}\", \"\", {\"version\":3,\"sources\":[\"/Users/daizecheng/workplace/freelog/console/client/src/views/node/presentable/tags/index.vue\"],\"names\":[],\"mappings\":\"AACA,iCACE,gBAAkB,CACnB,AACD,iCACE,iBAAkB,AAClB,YAAa,AACb,iBAAkB,AAClB,cAAe,AACf,gBAAkB,CACnB,AACD,gCACE,WAAY,AACZ,iBAAkB,AAClB,qBAAuB,CACxB\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.el-tag + .el-tag[data-v-09f5c69c] {\\n  margin-left: 10px;\\n}\\n.button-new-tag[data-v-09f5c69c] {\\n  margin-left: 10px;\\n  height: 32px;\\n  line-height: 30px;\\n  padding-top: 0;\\n  padding-bottom: 0;\\n}\\n.input-new-tag[data-v-09f5c69c] {\\n  width: 90px;\\n  margin-left: 10px;\\n  vertical-align: bottom;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"wf8X\":\n/***/ (function(module, exports, __webpack_require__) {\n\n//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\n//\n//  This is an InputStream that is loaded from a file all at once\n//  when you construct the object.\n//\nvar InputStream = __webpack_require__(\"4iSB\").InputStream;\nvar isNodeJs = typeof window === 'undefined' && typeof importScripts === 'undefined';\nvar fs = isNodeJs ? __webpack_require__(\"Ya8g\") : null;\n\nfunction FileStream(fileName, decodeToUnicodeCodePoints) {\n\tvar data = fs.readFileSync(fileName, \"utf8\");\n\tInputStream.call(this, data, decodeToUnicodeCodePoints);\n\tthis.fileName = fileName;\n\treturn this;\n}\n\nFileStream.prototype = Object.create(InputStream.prototype);\nFileStream.prototype.constructor = FileStream;\n\nexports.FileStream = FileStream;\n\n\n/***/ }),\n\n/***/ \"xs1j\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(\"bCSO\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(\"rjj0\")(\"2ce55a32\", content, true);\n\n/***/ }),\n\n/***/ \"y2Ps\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nexports.RecognitionException = __webpack_require__(\"5d5Q\").RecognitionException;\nexports.NoViableAltException = __webpack_require__(\"5d5Q\").NoViableAltException;\nexports.LexerNoViableAltException = __webpack_require__(\"5d5Q\").LexerNoViableAltException;\nexports.InputMismatchException = __webpack_require__(\"5d5Q\").InputMismatchException;\nexports.FailedPredicateException = __webpack_require__(\"5d5Q\").FailedPredicateException;\nexports.DiagnosticErrorListener = __webpack_require__(\"B0bK\").DiagnosticErrorListener;\nexports.BailErrorStrategy = __webpack_require__(\"k1zP\").BailErrorStrategy;\nexports.ErrorListener = __webpack_require__(\"qFmK\").ErrorListener;\n\n\n/***/ }),\n\n/***/ \"yEAX\":\n/***/ (function(module, exports, __webpack_require__) {\n\n//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\n// A tuple: (ATN state, predicted alt, syntactic, semantic context).\n//  The syntactic context is a graph-structured stack node whose\n//  path(s) to the root is the rule invocation(s)\n//  chain used to arrive at the state.  The semantic context is\n//  the tree of semantic predicates encountered before reaching\n//  an ATN state.\n///\n\nvar DecisionState = __webpack_require__(\"j0Qz\").DecisionState;\nvar SemanticContext = __webpack_require__(\"wQJ6\").SemanticContext;\nvar Hash = __webpack_require__(\"bz+k\").Hash;\n\n\nfunction checkParams(params, isCfg) {\n\tif(params===null) {\n\t\tvar result = { state:null, alt:null, context:null, semanticContext:null };\n\t\tif(isCfg) {\n\t\t\tresult.reachesIntoOuterContext = 0;\n\t\t}\n\t\treturn result;\n\t} else {\n\t\tvar props = {};\n\t\tprops.state = params.state || null;\n\t\tprops.alt = (params.alt === undefined) ? null : params.alt;\n\t\tprops.context = params.context || null;\n\t\tprops.semanticContext = params.semanticContext || null;\n\t\tif(isCfg) {\n\t\t\tprops.reachesIntoOuterContext = params.reachesIntoOuterContext || 0;\n\t\t\tprops.precedenceFilterSuppressed = params.precedenceFilterSuppressed || false;\n\t\t}\n\t\treturn props;\n\t}\n}\n\nfunction ATNConfig(params, config) {\n\tthis.checkContext(params, config);\n\tparams = checkParams(params);\n\tconfig = checkParams(config, true);\n    // The ATN state associated with this configuration///\n    this.state = params.state!==null ? params.state : config.state;\n    // What alt (or lexer rule) is predicted by this configuration///\n    this.alt = params.alt!==null ? params.alt : config.alt;\n    // The stack of invoking states leading to the rule/states associated\n    //  with this config.  We track only those contexts pushed during\n    //  execution of the ATN simulator.\n    this.context = params.context!==null ? params.context : config.context;\n    this.semanticContext = params.semanticContext!==null ? params.semanticContext :\n        (config.semanticContext!==null ? config.semanticContext : SemanticContext.NONE);\n    // We cannot execute predicates dependent upon local context unless\n    // we know for sure we are in the correct context. Because there is\n    // no way to do this efficiently, we simply cannot evaluate\n    // dependent predicates unless we are in the rule that initially\n    // invokes the ATN simulator.\n    //\n    // closure() tracks the depth of how far we dip into the\n    // outer context: depth &gt; 0.  Note that it may not be totally\n    // accurate depth since I don't ever decrement. TODO: make it a boolean then\n    this.reachesIntoOuterContext = config.reachesIntoOuterContext;\n    this.precedenceFilterSuppressed = config.precedenceFilterSuppressed;\n    return this;\n}\n\nATNConfig.prototype.checkContext = function(params, config) {\n\tif((params.context===null || params.context===undefined) &&\n\t\t\t(config===null || config.context===null || config.context===undefined)) {\n\t\tthis.context = null;\n\t}\n};\n\n\nATNConfig.prototype.hashCode = function() {\n    var hash = new Hash();\n    this.updateHashCode(hash);\n    return hash.finish();\n};\n\n\nATNConfig.prototype.updateHashCode = function(hash) {\n    hash.update(this.state.stateNumber, this.alt, this.context, this.semanticContext);\n};\n\n// An ATN configuration is equal to another if both have\n//  the same state, they predict the same alternative, and\n//  syntactic/semantic contexts are the same.\n\nATNConfig.prototype.equals = function(other) {\n    if (this === other) {\n        return true;\n    } else if (! (other instanceof ATNConfig)) {\n        return false;\n    } else {\n        return this.state.stateNumber===other.state.stateNumber &&\n            this.alt===other.alt &&\n            (this.context===null ? other.context===null : this.context.equals(other.context)) &&\n            this.semanticContext.equals(other.semanticContext) &&\n            this.precedenceFilterSuppressed===other.precedenceFilterSuppressed;\n    }\n};\n\n\nATNConfig.prototype.hashCodeForConfigSet = function() {\n    var hash = new Hash();\n    hash.update(this.state.stateNumber, this.alt, this.semanticContext);\n    return hash.finish();\n};\n\n\nATNConfig.prototype.equalsForConfigSet = function(other) {\n    if (this === other) {\n        return true;\n    } else if (! (other instanceof ATNConfig)) {\n        return false;\n    } else {\n        return this.state.stateNumber===other.state.stateNumber &&\n            this.alt===other.alt &&\n            this.semanticContext.equals(other.semanticContext);\n    }\n};\n\n\nATNConfig.prototype.toString = function() {\n    return \"(\" + this.state + \",\" + this.alt +\n        (this.context!==null ? \",[\" + this.context.toString() + \"]\" : \"\") +\n        (this.semanticContext !== SemanticContext.NONE ?\n                (\",\" + this.semanticContext.toString())\n                : \"\") +\n        (this.reachesIntoOuterContext>0 ?\n                (\",up=\" + this.reachesIntoOuterContext)\n                : \"\") + \")\";\n};\n\n\nfunction LexerATNConfig(params, config) {\n\tATNConfig.call(this, params, config);\n\n    // This is the backing field for {@link //getLexerActionExecutor}.\n\tvar lexerActionExecutor = params.lexerActionExecutor || null;\n    this.lexerActionExecutor = lexerActionExecutor || (config!==null ? config.lexerActionExecutor : null);\n    this.passedThroughNonGreedyDecision = config!==null ? this.checkNonGreedyDecision(config, this.state) : false;\n    return this;\n}\n\nLexerATNConfig.prototype = Object.create(ATNConfig.prototype);\nLexerATNConfig.prototype.constructor = LexerATNConfig;\n\nLexerATNConfig.prototype.updateHashCode = function(hash) {\n    hash.update(this.state.stateNumber, this.alt, this.context, this.semanticContext, this.passedThroughNonGreedyDecision, this.lexerActionExecutor);\n};\n\nLexerATNConfig.prototype.equals = function(other) {\n    return this === other ||\n            (other instanceof LexerATNConfig &&\n            this.passedThroughNonGreedyDecision == other.passedThroughNonGreedyDecision &&\n            (this.lexerActionExecutor ? this.lexerActionExecutor.equals(other.lexerActionExecutor) : !other.lexerActionExecutor) &&\n            ATNConfig.prototype.equals.call(this, other));\n};\n\nLexerATNConfig.prototype.hashCodeForConfigSet = LexerATNConfig.prototype.hashCode;\n\nLexerATNConfig.prototype.equalsForConfigSet = LexerATNConfig.prototype.equals;\n\n\nLexerATNConfig.prototype.checkNonGreedyDecision = function(source, target) {\n    return source.passedThroughNonGreedyDecision ||\n        (target instanceof DecisionState) && target.nonGreedy;\n};\n\nexports.ATNConfig = ATNConfig;\nexports.LexerATNConfig = LexerATNConfig;\n\n/***/ }),\n\n/***/ \"yyaC\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__index__ = __webpack_require__(\"AEih\");\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__index__[\"a\" /* default */]);\n\n/***/ }),\n\n/***/ \"z7tt\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-input',{staticClass:\"gap\",attrs:{\"spellcheck\":\"false\",\"type\":\"textarea\",\"rows\":15,\"placeholder\":\"请输入policy\"},on:{\"change\":_vm.textChange},model:{value:(_vm.policyText),callback:function ($$v) {_vm.policyText=$$v},expression:\"policyText\"}}),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.validate}},[_vm._v(\"格式校验\")])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/2.ab65ceb6c07e0c15ee0b.js","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\n//\n// The embodiment of the adaptive LL(*), ALL(*), parsing strategy.\n//\n// <p>\n// The basic complexity of the adaptive strategy makes it harder to understand.\n// We begin with ATN simulation to build paths in a DFA. Subsequent prediction\n// requests go through the DFA first. If they reach a state without an edge for\n// the current symbol, the algorithm fails over to the ATN simulation to\n// complete the DFA path for the current input (until it finds a conflict state\n// or uniquely predicting state).</p>\n//\n// <p>\n// All of that is done without using the outer context because we want to create\n// a DFA that is not dependent upon the rule invocation stack when we do a\n// prediction. One DFA works in all contexts. We avoid using context not\n// necessarily because it's slower, although it can be, but because of the DFA\n// caching problem. The closure routine only considers the rule invocation stack\n// created during prediction beginning in the decision rule. For example, if\n// prediction occurs without invoking another rule's ATN, there are no context\n// stacks in the configurations. When lack of context leads to a conflict, we\n// don't know if it's an ambiguity or a weakness in the strong LL(*) parsing\n// strategy (versus full LL(*)).</p>\n//\n// <p>\n// When SLL yields a configuration set with conflict, we rewind the input and\n// retry the ATN simulation, this time using full outer context without adding\n// to the DFA. Configuration context stacks will be the full invocation stacks\n// from the start rule. If we get a conflict using full context, then we can\n// definitively say we have a true ambiguity for that input sequence. If we\n// don't get a conflict, it implies that the decision is sensitive to the outer\n// context. (It is not context-sensitive in the sense of context-sensitive\n// grammars.)</p>\n//\n// <p>\n// The next time we reach this DFA state with an SLL conflict, through DFA\n// simulation, we will again retry the ATN simulation using full context mode.\n// This is slow because we can't save the results and have to \"interpret\" the\n// ATN each time we get that input.</p>\n//\n// <p>\n// <strong>CACHING FULL CONTEXT PREDICTIONS</strong></p>\n//\n// <p>\n// We could cache results from full context to predicted alternative easily and\n// that saves a lot of time but doesn't work in presence of predicates. The set\n// of visible predicates from the ATN start state changes depending on the\n// context, because closure can fall off the end of a rule. I tried to cache\n// tuples (stack context, semantic context, predicted alt) but it was slower\n// than interpreting and much more complicated. Also required a huge amount of\n// memory. The goal is not to create the world's fastest parser anyway. I'd like\n// to keep this algorithm simple. By launching multiple threads, we can improve\n// the speed of parsing across a large number of files.</p>\n//\n// <p>\n// There is no strict ordering between the amount of input used by SLL vs LL,\n// which makes it really hard to build a cache for full context. Let's say that\n// we have input A B C that leads to an SLL conflict with full context X. That\n// implies that using X we might only use A B but we could also use A B C D to\n// resolve conflict. Input A B C D could predict alternative 1 in one position\n// in the input and A B C E could predict alternative 2 in another position in\n// input. The conflicting SLL configurations could still be non-unique in the\n// full context prediction, which would lead us to requiring more input than the\n// original A B C.\tTo make a\tprediction cache work, we have to track\tthe exact\n// input\tused during the previous prediction. That amounts to a cache that maps\n// X to a specific DFA for that context.</p>\n//\n// <p>\n// Something should be done for left-recursive expression predictions. They are\n// likely LL(1) + pred eval. Easier to do the whole SLL unless error and retry\n// with full LL thing Sam does.</p>\n//\n// <p>\n// <strong>AVOIDING FULL CONTEXT PREDICTION</strong></p>\n//\n// <p>\n// We avoid doing full context retry when the outer context is empty, we did not\n// dip into the outer context by falling off the end of the decision state rule,\n// or when we force SLL mode.</p>\n//\n// <p>\n// As an example of the not dip into outer context case, consider as super\n// constructor calls versus function calls. One grammar might look like\n// this:</p>\n//\n// <pre>\n// ctorBody\n//   : '{' superCall? stat* '}'\n//   ;\n// </pre>\n//\n// <p>\n// Or, you might see something like</p>\n//\n// <pre>\n// stat\n//   : superCall ';'\n//   | expression ';'\n//   | ...\n//   ;\n// </pre>\n//\n// <p>\n// In both cases I believe that no closure operations will dip into the outer\n// context. In the first case ctorBody in the worst case will stop at the '}'.\n// In the 2nd case it should stop at the ';'. Both cases should stay within the\n// entry rule and not dip into the outer context.</p>\n//\n// <p>\n// <strong>PREDICATES</strong></p>\n//\n// <p>\n// Predicates are always evaluated if present in either SLL or LL both. SLL and\n// LL simulation deals with predicates differently. SLL collects predicates as\n// it performs closure operations like ANTLR v3 did. It delays predicate\n// evaluation until it reaches and accept state. This allows us to cache the SLL\n// ATN simulation whereas, if we had evaluated predicates on-the-fly during\n// closure, the DFA state configuration sets would be different and we couldn't\n// build up a suitable DFA.</p>\n//\n// <p>\n// When building a DFA accept state during ATN simulation, we evaluate any\n// predicates and return the sole semantically valid alternative. If there is\n// more than 1 alternative, we report an ambiguity. If there are 0 alternatives,\n// we throw an exception. Alternatives without predicates act like they have\n// true predicates. The simple way to think about it is to strip away all\n// alternatives with false predicates and choose the minimum alternative that\n// remains.</p>\n//\n// <p>\n// When we start in the DFA and reach an accept state that's predicated, we test\n// those and return the minimum semantically viable alternative. If no\n// alternatives are viable, we throw an exception.</p>\n//\n// <p>\n// During full LL ATN simulation, closure always evaluates predicates and\n// on-the-fly. This is crucial to reducing the configuration set size during\n// closure. It hits a landmine when parsing with the Java grammar, for example,\n// without this on-the-fly evaluation.</p>\n//\n// <p>\n// <strong>SHARING DFA</strong></p>\n//\n// <p>\n// All instances of the same parser share the same decision DFAs through a\n// static field. Each instance gets its own ATN simulator but they share the\n// same {@link //decisionToDFA} field. They also share a\n// {@link PredictionContextCache} object that makes sure that all\n// {@link PredictionContext} objects are shared among the DFA states. This makes\n// a big size difference.</p>\n//\n// <p>\n// <strong>THREAD SAFETY</strong></p>\n//\n// <p>\n// The {@link ParserATNSimulator} locks on the {@link //decisionToDFA} field when\n// it adds a new DFA object to that array. {@link //addDFAEdge}\n// locks on the DFA for the current decision when setting the\n// {@link DFAState//edges} field. {@link //addDFAState} locks on\n// the DFA for the current decision when looking up a DFA state to see if it\n// already exists. We must make sure that all requests to add DFA states that\n// are equivalent result in the same shared DFA object. This is because lots of\n// threads will be trying to update the DFA at once. The\n// {@link //addDFAState} method also locks inside the DFA lock\n// but this time on the shared context cache when it rebuilds the\n// configurations' {@link PredictionContext} objects using cached\n// subgraphs/nodes. No other locking occurs, even during DFA simulation. This is\n// safe as long as we can guarantee that all threads referencing\n// {@code s.edge[t]} get the same physical target {@link DFAState}, or\n// {@code null}. Once into the DFA, the DFA simulation does not reference the\n// {@link DFA//states} map. It follows the {@link DFAState//edges} field to new\n// targets. The DFA simulator will either find {@link DFAState//edges} to be\n// {@code null}, to be non-{@code null} and {@code dfa.edges[t]} null, or\n// {@code dfa.edges[t]} to be non-null. The\n// {@link //addDFAEdge} method could be racing to set the field\n// but in either case the DFA simulator works; if {@code null}, and requests ATN\n// simulation. It could also race trying to get {@code dfa.edges[t]}, but either\n// way it will work because it's not doing a test and set operation.</p>\n//\n// <p>\n// <strong>Starting with SLL then failing to combined SLL/LL (Two-Stage\n// Parsing)</strong></p>\n//\n// <p>\n// Sam pointed out that if SLL does not give a syntax error, then there is no\n// point in doing full LL, which is slower. We only have to try LL if we get a\n// syntax error. For maximum speed, Sam starts the parser set to pure SLL\n// mode with the {@link BailErrorStrategy}:</p>\n//\n// <pre>\n// parser.{@link Parser//getInterpreter() getInterpreter()}.{@link //setPredictionMode setPredictionMode}{@code (}{@link PredictionMode//SLL}{@code )};\n// parser.{@link Parser//setErrorHandler setErrorHandler}(new {@link BailErrorStrategy}());\n// </pre>\n//\n// <p>\n// If it does not get a syntax error, then we're done. If it does get a syntax\n// error, we need to retry with the combined SLL/LL strategy.</p>\n//\n// <p>\n// The reason this works is as follows. If there are no SLL conflicts, then the\n// grammar is SLL (at least for that input set). If there is an SLL conflict,\n// the full LL analysis must yield a set of viable alternatives which is a\n// subset of the alternatives reported by SLL. If the LL set is a singleton,\n// then the grammar is LL but not SLL. If the LL set is the same size as the SLL\n// set, the decision is SLL. If the LL set has size &gt; 1, then that decision\n// is truly ambiguous on the current input. If the LL set is smaller, then the\n// SLL conflict resolution might choose an alternative that the full LL would\n// rule out as a possibility based upon better context information. If that's\n// the case, then the SLL parse will definitely get an error because the full LL\n// analysis says it's not viable. If SLL conflict resolution chooses an\n// alternative within the LL set, them both SLL and LL would choose the same\n// alternative because they both choose the minimum of multiple conflicting\n// alternatives.</p>\n//\n// <p>\n// Let's say we have a set of SLL conflicting alternatives {@code {1, 2, 3}} and\n// a smaller LL set called <em>s</em>. If <em>s</em> is {@code {2, 3}}, then SLL\n// parsing will get an error because SLL will pursue alternative 1. If\n// <em>s</em> is {@code {1, 2}} or {@code {1, 3}} then both SLL and LL will\n// choose the same alternative because alternative one is the minimum of either\n// set. If <em>s</em> is {@code {2}} or {@code {3}} then SLL will get a syntax\n// error. If <em>s</em> is {@code {1}} then SLL will succeed.</p>\n//\n// <p>\n// Of course, if the input is invalid, then we will get an error for sure in\n// both SLL and LL parsing. Erroneous input will therefore require 2 passes over\n// the input.</p>\n//\n\nvar Utils = require('./../Utils');\nvar Set = Utils.Set;\nvar BitSet = Utils.BitSet;\nvar DoubleDict = Utils.DoubleDict;\nvar ATN = require('./ATN').ATN;\nvar ATNState = require('./ATNState').ATNState;\nvar ATNConfig = require('./ATNConfig').ATNConfig;\nvar ATNConfigSet = require('./ATNConfigSet').ATNConfigSet;\nvar Token = require('./../Token').Token;\nvar DFAState = require('./../dfa/DFAState').DFAState;\nvar PredPrediction = require('./../dfa/DFAState').PredPrediction;\nvar ATNSimulator = require('./ATNSimulator').ATNSimulator;\nvar PredictionMode = require('./PredictionMode').PredictionMode;\nvar RuleContext = require('./../RuleContext').RuleContext;\nvar ParserRuleContext = require('./../ParserRuleContext').ParserRuleContext;\nvar SemanticContext = require('./SemanticContext').SemanticContext;\nvar StarLoopEntryState = require('./ATNState').StarLoopEntryState;\nvar RuleStopState = require('./ATNState').RuleStopState;\nvar PredictionContext = require('./../PredictionContext').PredictionContext;\nvar Interval = require('./../IntervalSet').Interval;\nvar Transitions = require('./Transition');\nvar Transition = Transitions.Transition;\nvar SetTransition = Transitions.SetTransition;\nvar NotSetTransition = Transitions.NotSetTransition;\nvar RuleTransition = Transitions.RuleTransition;\nvar ActionTransition = Transitions.ActionTransition;\nvar NoViableAltException = require('./../error/Errors').NoViableAltException;\n\nvar SingletonPredictionContext = require('./../PredictionContext').SingletonPredictionContext;\nvar predictionContextFromRuleContext = require('./../PredictionContext').predictionContextFromRuleContext;\n\nfunction ParserATNSimulator(parser, atn, decisionToDFA, sharedContextCache) {\n\tATNSimulator.call(this, atn, sharedContextCache);\n    this.parser = parser;\n    this.decisionToDFA = decisionToDFA;\n    // SLL, LL, or LL + exact ambig detection?//\n    this.predictionMode = PredictionMode.LL;\n    // LAME globals to avoid parameters!!!!! I need these down deep in predTransition\n    this._input = null;\n    this._startIndex = 0;\n    this._outerContext = null;\n    this._dfa = null;\n    // Each prediction operation uses a cache for merge of prediction contexts.\n    //  Don't keep around as it wastes huge amounts of memory. DoubleKeyMap\n    //  isn't synchronized but we're ok since two threads shouldn't reuse same\n    //  parser/atnsim object because it can only handle one input at a time.\n    //  This maps graphs a and b to merged result c. (a,b)&rarr;c. We can avoid\n    //  the merge if we ever see a and b again.  Note that (b,a)&rarr;c should\n    //  also be examined during cache lookup.\n    //\n    this.mergeCache = null;\n    return this;\n}\n\nParserATNSimulator.prototype = Object.create(ATNSimulator.prototype);\nParserATNSimulator.prototype.constructor = ParserATNSimulator;\n\nParserATNSimulator.prototype.debug = false;\nParserATNSimulator.prototype.debug_closure = false;\nParserATNSimulator.prototype.debug_add = false;\nParserATNSimulator.prototype.debug_list_atn_decisions = false;\nParserATNSimulator.prototype.dfa_debug = false;\nParserATNSimulator.prototype.retry_debug = false;\n\n\nParserATNSimulator.prototype.reset = function() {\n};\n\nParserATNSimulator.prototype.adaptivePredict = function(input, decision, outerContext) {\n    if (this.debug || this.debug_list_atn_decisions) {\n        console.log(\"adaptivePredict decision \" + decision +\n                               \" exec LA(1)==\" + this.getLookaheadName(input) +\n                               \" line \" + input.LT(1).line + \":\" +\n                               input.LT(1).column);\n    }\n    this._input = input;\n    this._startIndex = input.index;\n    this._outerContext = outerContext;\n\n    var dfa = this.decisionToDFA[decision];\n    this._dfa = dfa;\n    var m = input.mark();\n    var index = input.index;\n\n    // Now we are certain to have a specific decision's DFA\n    // But, do we still need an initial state?\n    try {\n        var s0;\n        if (dfa.precedenceDfa) {\n            // the start state for a precedence DFA depends on the current\n            // parser precedence, and is provided by a DFA method.\n            s0 = dfa.getPrecedenceStartState(this.parser.getPrecedence());\n        } else {\n            // the start state for a \"regular\" DFA is just s0\n            s0 = dfa.s0;\n        }\n        if (s0===null) {\n            if (outerContext===null) {\n                outerContext = RuleContext.EMPTY;\n            }\n            if (this.debug || this.debug_list_atn_decisions) {\n                console.log(\"predictATN decision \" + dfa.decision +\n                                   \" exec LA(1)==\" + this.getLookaheadName(input) +\n                                   \", outerContext=\" + outerContext.toString(this.parser.ruleNames));\n            }\n\n            var fullCtx = false;\n            var s0_closure = this.computeStartState(dfa.atnStartState, RuleContext.EMPTY, fullCtx);\n\n            if( dfa.precedenceDfa) {\n                // If this is a precedence DFA, we use applyPrecedenceFilter\n                // to convert the computed start state to a precedence start\n                // state. We then use DFA.setPrecedenceStartState to set the\n                // appropriate start state for the precedence level rather\n                // than simply setting DFA.s0.\n                //\n                dfa.s0.configs = s0_closure; // not used for prediction but useful to know start configs anyway\n                s0_closure = this.applyPrecedenceFilter(s0_closure);\n                s0 = this.addDFAState(dfa, new DFAState(null, s0_closure));\n                dfa.setPrecedenceStartState(this.parser.getPrecedence(), s0);\n            } else {\n                s0 = this.addDFAState(dfa, new DFAState(null, s0_closure));\n                dfa.s0 = s0;\n            }\n        }\n        var alt = this.execATN(dfa, s0, input, index, outerContext);\n        if (this.debug) {\n            console.log(\"DFA after predictATN: \" + dfa.toString(this.parser.literalNames));\n        }\n        return alt;\n    } finally {\n        this._dfa = null;\n        this.mergeCache = null; // wack cache after each prediction\n        input.seek(index);\n        input.release(m);\n    }\n};\n// Performs ATN simulation to compute a predicted alternative based\n//  upon the remaining input, but also updates the DFA cache to avoid\n//  having to traverse the ATN again for the same input sequence.\n\n// There are some key conditions we're looking for after computing a new\n// set of ATN configs (proposed DFA state):\n      // if the set is empty, there is no viable alternative for current symbol\n      // does the state uniquely predict an alternative?\n      // does the state have a conflict that would prevent us from\n      //   putting it on the work list?\n\n// We also have some key operations to do:\n      // add an edge from previous DFA state to potentially new DFA state, D,\n      //   upon current symbol but only if adding to work list, which means in all\n      //   cases except no viable alternative (and possibly non-greedy decisions?)\n      // collecting predicates and adding semantic context to DFA accept states\n      // adding rule context to context-sensitive DFA accept states\n      // consuming an input symbol\n      // reporting a conflict\n      // reporting an ambiguity\n      // reporting a context sensitivity\n      // reporting insufficient predicates\n\n// cover these cases:\n//    dead end\n//    single alt\n//    single alt + preds\n//    conflict\n//    conflict + preds\n//\nParserATNSimulator.prototype.execATN = function(dfa, s0, input, startIndex, outerContext ) {\n    if (this.debug || this.debug_list_atn_decisions) {\n        console.log(\"execATN decision \" + dfa.decision +\n                \" exec LA(1)==\" + this.getLookaheadName(input) +\n                \" line \" + input.LT(1).line + \":\" + input.LT(1).column);\n    }\n    var alt;\n    var previousD = s0;\n\n    if (this.debug) {\n        console.log(\"s0 = \" + s0);\n    }\n    var t = input.LA(1);\n    while(true) { // while more work\n        var D = this.getExistingTargetState(previousD, t);\n        if(D===null) {\n            D = this.computeTargetState(dfa, previousD, t);\n        }\n        if(D===ATNSimulator.ERROR) {\n            // if any configs in previous dipped into outer context, that\n            // means that input up to t actually finished entry rule\n            // at least for SLL decision. Full LL doesn't dip into outer\n            // so don't need special case.\n            // We will get an error no matter what so delay until after\n            // decision; better error message. Also, no reachable target\n            // ATN states in SLL implies LL will also get nowhere.\n            // If conflict in states that dip out, choose min since we\n            // will get error no matter what.\n            var e = this.noViableAlt(input, outerContext, previousD.configs, startIndex);\n            input.seek(startIndex);\n            alt = this.getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(previousD.configs, outerContext);\n            if(alt!==ATN.INVALID_ALT_NUMBER) {\n                return alt;\n            } else {\n                throw e;\n            }\n        }\n        if(D.requiresFullContext && this.predictionMode !== PredictionMode.SLL) {\n            // IF PREDS, MIGHT RESOLVE TO SINGLE ALT => SLL (or syntax error)\n            var conflictingAlts = null;\n            if (D.predicates!==null) {\n                if (this.debug) {\n                    console.log(\"DFA state has preds in DFA sim LL failover\");\n                }\n                var conflictIndex = input.index;\n                if(conflictIndex !== startIndex) {\n                    input.seek(startIndex);\n                }\n                conflictingAlts = this.evalSemanticContext(D.predicates, outerContext, true);\n                if (conflictingAlts.length===1) {\n                    if(this.debug) {\n                        console.log(\"Full LL avoided\");\n                    }\n                    return conflictingAlts.minValue();\n                }\n                if (conflictIndex !== startIndex) {\n                    // restore the index so reporting the fallback to full\n                    // context occurs with the index at the correct spot\n                    input.seek(conflictIndex);\n                }\n            }\n            if (this.dfa_debug) {\n                console.log(\"ctx sensitive state \" + outerContext +\" in \" + D);\n            }\n            var fullCtx = true;\n            var s0_closure = this.computeStartState(dfa.atnStartState, outerContext, fullCtx);\n            this.reportAttemptingFullContext(dfa, conflictingAlts, D.configs, startIndex, input.index);\n            alt = this.execATNWithFullContext(dfa, D, s0_closure, input, startIndex, outerContext);\n            return alt;\n        }\n        if (D.isAcceptState) {\n            if (D.predicates===null) {\n                return D.prediction;\n            }\n            var stopIndex = input.index;\n            input.seek(startIndex);\n            var alts = this.evalSemanticContext(D.predicates, outerContext, true);\n            if (alts.length===0) {\n                throw this.noViableAlt(input, outerContext, D.configs, startIndex);\n            } else if (alts.length===1) {\n                return alts.minValue();\n            } else {\n                // report ambiguity after predicate evaluation to make sure the correct set of ambig alts is reported.\n                this.reportAmbiguity(dfa, D, startIndex, stopIndex, false, alts, D.configs);\n                return alts.minValue();\n            }\n        }\n        previousD = D;\n\n        if (t !== Token.EOF) {\n            input.consume();\n            t = input.LA(1);\n        }\n    }\n};\n//\n// Get an existing target state for an edge in the DFA. If the target state\n// for the edge has not yet been computed or is otherwise not available,\n// this method returns {@code null}.\n//\n// @param previousD The current DFA state\n// @param t The next input symbol\n// @return The existing target DFA state for the given input symbol\n// {@code t}, or {@code null} if the target state for this edge is not\n// already cached\n//\nParserATNSimulator.prototype.getExistingTargetState = function(previousD, t) {\n    var edges = previousD.edges;\n    if (edges===null) {\n        return null;\n    } else {\n        return edges[t + 1] || null;\n    }\n};\n//\n// Compute a target state for an edge in the DFA, and attempt to add the\n// computed state and corresponding edge to the DFA.\n//\n// @param dfa The DFA\n// @param previousD The current DFA state\n// @param t The next input symbol\n//\n// @return The computed target DFA state for the given input symbol\n// {@code t}. If {@code t} does not lead to a valid DFA state, this method\n// returns {@link //ERROR}.\n//\nParserATNSimulator.prototype.computeTargetState = function(dfa, previousD, t) {\n   var reach = this.computeReachSet(previousD.configs, t, false);\n    if(reach===null) {\n        this.addDFAEdge(dfa, previousD, t, ATNSimulator.ERROR);\n        return ATNSimulator.ERROR;\n    }\n    // create new target state; we'll add to DFA after it's complete\n    var D = new DFAState(null, reach);\n\n    var predictedAlt = this.getUniqueAlt(reach);\n\n    if (this.debug) {\n        var altSubSets = PredictionMode.getConflictingAltSubsets(reach);\n        console.log(\"SLL altSubSets=\" + Utils.arrayToString(altSubSets) +\n                    \", previous=\" + previousD.configs +\n                    \", configs=\" + reach +\n                    \", predict=\" + predictedAlt +\n                    \", allSubsetsConflict=\" +\n                    PredictionMode.allSubsetsConflict(altSubSets) + \", conflictingAlts=\" +\n                    this.getConflictingAlts(reach));\n    }\n    if (predictedAlt!==ATN.INVALID_ALT_NUMBER) {\n        // NO CONFLICT, UNIQUELY PREDICTED ALT\n        D.isAcceptState = true;\n        D.configs.uniqueAlt = predictedAlt;\n        D.prediction = predictedAlt;\n    } else if (PredictionMode.hasSLLConflictTerminatingPrediction(this.predictionMode, reach)) {\n        // MORE THAN ONE VIABLE ALTERNATIVE\n        D.configs.conflictingAlts = this.getConflictingAlts(reach);\n        D.requiresFullContext = true;\n        // in SLL-only mode, we will stop at this state and return the minimum alt\n        D.isAcceptState = true;\n        D.prediction = D.configs.conflictingAlts.minValue();\n    }\n    if (D.isAcceptState && D.configs.hasSemanticContext) {\n        this.predicateDFAState(D, this.atn.getDecisionState(dfa.decision));\n        if( D.predicates!==null) {\n            D.prediction = ATN.INVALID_ALT_NUMBER;\n        }\n    }\n    // all adds to dfa are done after we've created full D state\n    D = this.addDFAEdge(dfa, previousD, t, D);\n    return D;\n};\n\nParserATNSimulator.prototype.predicateDFAState = function(dfaState, decisionState) {\n    // We need to test all predicates, even in DFA states that\n    // uniquely predict alternative.\n    var nalts = decisionState.transitions.length;\n    // Update DFA so reach becomes accept state with (predicate,alt)\n    // pairs if preds found for conflicting alts\n    var altsToCollectPredsFrom = this.getConflictingAltsOrUniqueAlt(dfaState.configs);\n    var altToPred = this.getPredsForAmbigAlts(altsToCollectPredsFrom, dfaState.configs, nalts);\n    if (altToPred!==null) {\n        dfaState.predicates = this.getPredicatePredictions(altsToCollectPredsFrom, altToPred);\n        dfaState.prediction = ATN.INVALID_ALT_NUMBER; // make sure we use preds\n    } else {\n        // There are preds in configs but they might go away\n        // when OR'd together like {p}? || NONE == NONE. If neither\n        // alt has preds, resolve to min alt\n        dfaState.prediction = altsToCollectPredsFrom.minValue();\n    }\n};\n\n// comes back with reach.uniqueAlt set to a valid alt\nParserATNSimulator.prototype.execATNWithFullContext = function(dfa, D, // how far we got before failing over\n                                     s0,\n                                     input,\n                                     startIndex,\n                                     outerContext) {\n    if (this.debug || this.debug_list_atn_decisions) {\n        console.log(\"execATNWithFullContext \"+s0);\n    }\n    var fullCtx = true;\n    var foundExactAmbig = false;\n    var reach = null;\n    var previous = s0;\n    input.seek(startIndex);\n    var t = input.LA(1);\n    var predictedAlt = -1;\n    while (true) { // while more work\n        reach = this.computeReachSet(previous, t, fullCtx);\n        if (reach===null) {\n            // if any configs in previous dipped into outer context, that\n            // means that input up to t actually finished entry rule\n            // at least for LL decision. Full LL doesn't dip into outer\n            // so don't need special case.\n            // We will get an error no matter what so delay until after\n            // decision; better error message. Also, no reachable target\n            // ATN states in SLL implies LL will also get nowhere.\n            // If conflict in states that dip out, choose min since we\n            // will get error no matter what.\n            var e = this.noViableAlt(input, outerContext, previous, startIndex);\n            input.seek(startIndex);\n            var alt = this.getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(previous, outerContext);\n            if(alt!==ATN.INVALID_ALT_NUMBER) {\n                return alt;\n            } else {\n                throw e;\n            }\n        }\n        var altSubSets = PredictionMode.getConflictingAltSubsets(reach);\n        if(this.debug) {\n            console.log(\"LL altSubSets=\" + altSubSets + \", predict=\" +\n                  PredictionMode.getUniqueAlt(altSubSets) + \", resolvesToJustOneViableAlt=\" +\n                  PredictionMode.resolvesToJustOneViableAlt(altSubSets));\n        }\n        reach.uniqueAlt = this.getUniqueAlt(reach);\n        // unique prediction?\n        if(reach.uniqueAlt!==ATN.INVALID_ALT_NUMBER) {\n            predictedAlt = reach.uniqueAlt;\n            break;\n        } else if (this.predictionMode !== PredictionMode.LL_EXACT_AMBIG_DETECTION) {\n            predictedAlt = PredictionMode.resolvesToJustOneViableAlt(altSubSets);\n            if(predictedAlt !== ATN.INVALID_ALT_NUMBER) {\n                break;\n            }\n        } else {\n            // In exact ambiguity mode, we never try to terminate early.\n            // Just keeps scarfing until we know what the conflict is\n            if (PredictionMode.allSubsetsConflict(altSubSets) && PredictionMode.allSubsetsEqual(altSubSets)) {\n                foundExactAmbig = true;\n                predictedAlt = PredictionMode.getSingleViableAlt(altSubSets);\n                break;\n            }\n            // else there are multiple non-conflicting subsets or\n            // we're not sure what the ambiguity is yet.\n            // So, keep going.\n        }\n        previous = reach;\n        if( t !== Token.EOF) {\n            input.consume();\n            t = input.LA(1);\n        }\n    }\n    // If the configuration set uniquely predicts an alternative,\n    // without conflict, then we know that it's a full LL decision\n    // not SLL.\n    if (reach.uniqueAlt !== ATN.INVALID_ALT_NUMBER ) {\n        this.reportContextSensitivity(dfa, predictedAlt, reach, startIndex, input.index);\n        return predictedAlt;\n    }\n    // We do not check predicates here because we have checked them\n    // on-the-fly when doing full context prediction.\n\n    //\n    // In non-exact ambiguity detection mode, we might\tactually be able to\n    // detect an exact ambiguity, but I'm not going to spend the cycles\n    // needed to check. We only emit ambiguity warnings in exact ambiguity\n    // mode.\n    //\n    // For example, we might know that we have conflicting configurations.\n    // But, that does not mean that there is no way forward without a\n    // conflict. It's possible to have nonconflicting alt subsets as in:\n\n    // altSubSets=[{1, 2}, {1, 2}, {1}, {1, 2}]\n\n    // from\n    //\n    //    [(17,1,[5 $]), (13,1,[5 10 $]), (21,1,[5 10 $]), (11,1,[$]),\n    //     (13,2,[5 10 $]), (21,2,[5 10 $]), (11,2,[$])]\n    //\n    // In this case, (17,1,[5 $]) indicates there is some next sequence that\n    // would resolve this without conflict to alternative 1. Any other viable\n    // next sequence, however, is associated with a conflict.  We stop\n    // looking for input because no amount of further lookahead will alter\n    // the fact that we should predict alternative 1.  We just can't say for\n    // sure that there is an ambiguity without looking further.\n\n    this.reportAmbiguity(dfa, D, startIndex, input.index, foundExactAmbig, null, reach);\n\n    return predictedAlt;\n};\n\nParserATNSimulator.prototype.computeReachSet = function(closure, t, fullCtx) {\n    if (this.debug) {\n        console.log(\"in computeReachSet, starting closure: \" + closure);\n    }\n    if( this.mergeCache===null) {\n        this.mergeCache = new DoubleDict();\n    }\n    var intermediate = new ATNConfigSet(fullCtx);\n\n    // Configurations already in a rule stop state indicate reaching the end\n    // of the decision rule (local context) or end of the start rule (full\n    // context). Once reached, these configurations are never updated by a\n    // closure operation, so they are handled separately for the performance\n    // advantage of having a smaller intermediate set when calling closure.\n    //\n    // For full-context reach operations, separate handling is required to\n    // ensure that the alternative matching the longest overall sequence is\n    // chosen when multiple such configurations can match the input.\n\n    var skippedStopStates = null;\n\n    // First figure out where we can reach on input t\n    for (var i=0; i<closure.items.length;i++) {\n        var c = closure.items[i];\n        if(this.debug_add) {\n            console.log(\"testing \" + this.getTokenName(t) + \" at \" + c);\n        }\n        if (c.state instanceof RuleStopState) {\n            if (fullCtx || t === Token.EOF) {\n                if (skippedStopStates===null) {\n                    skippedStopStates = [];\n                }\n                skippedStopStates.push(c);\n                if(this.debug_add) {\n                    console.log(\"added \" + c + \" to skippedStopStates\");\n                }\n            }\n            continue;\n        }\n        for(var j=0;j<c.state.transitions.length;j++) {\n            var trans = c.state.transitions[j];\n            var target = this.getReachableTarget(trans, t);\n            if (target!==null) {\n                var cfg = new ATNConfig({state:target}, c);\n                intermediate.add(cfg, this.mergeCache);\n                if(this.debug_add) {\n                    console.log(\"added \" + cfg + \" to intermediate\");\n                }\n            }\n        }\n    }\n    // Now figure out where the reach operation can take us...\n    var reach = null;\n\n    // This block optimizes the reach operation for intermediate sets which\n    // trivially indicate a termination state for the overall\n    // adaptivePredict operation.\n    //\n    // The conditions assume that intermediate\n    // contains all configurations relevant to the reach set, but this\n    // condition is not true when one or more configurations have been\n    // withheld in skippedStopStates, or when the current symbol is EOF.\n    //\n    if (skippedStopStates===null && t!==Token.EOF) {\n        if (intermediate.items.length===1) {\n            // Don't pursue the closure if there is just one state.\n            // It can only have one alternative; just add to result\n            // Also don't pursue the closure if there is unique alternative\n            // among the configurations.\n            reach = intermediate;\n        } else if (this.getUniqueAlt(intermediate)!==ATN.INVALID_ALT_NUMBER) {\n            // Also don't pursue the closure if there is unique alternative\n            // among the configurations.\n            reach = intermediate;\n        }\n    }\n    // If the reach set could not be trivially determined, perform a closure\n    // operation on the intermediate set to compute its initial value.\n    //\n    if (reach===null) {\n        reach = new ATNConfigSet(fullCtx);\n        var closureBusy = new Set();\n        var treatEofAsEpsilon = t === Token.EOF;\n        for (var k=0; k<intermediate.items.length;k++) {\n            this.closure(intermediate.items[k], reach, closureBusy, false, fullCtx, treatEofAsEpsilon);\n        }\n    }\n    if (t === Token.EOF) {\n        // After consuming EOF no additional input is possible, so we are\n        // only interested in configurations which reached the end of the\n        // decision rule (local context) or end of the start rule (full\n        // context). Update reach to contain only these configurations. This\n        // handles both explicit EOF transitions in the grammar and implicit\n        // EOF transitions following the end of the decision or start rule.\n        //\n        // When reach==intermediate, no closure operation was performed. In\n        // this case, removeAllConfigsNotInRuleStopState needs to check for\n        // reachable rule stop states as well as configurations already in\n        // a rule stop state.\n        //\n        // This is handled before the configurations in skippedStopStates,\n        // because any configurations potentially added from that list are\n        // already guaranteed to meet this condition whether or not it's\n        // required.\n        //\n        reach = this.removeAllConfigsNotInRuleStopState(reach, reach === intermediate);\n    }\n    // If skippedStopStates!==null, then it contains at least one\n    // configuration. For full-context reach operations, these\n    // configurations reached the end of the start rule, in which case we\n    // only add them back to reach if no configuration during the current\n    // closure operation reached such a state. This ensures adaptivePredict\n    // chooses an alternative matching the longest overall sequence when\n    // multiple alternatives are viable.\n    //\n    if (skippedStopStates!==null && ( (! fullCtx) || (! PredictionMode.hasConfigInRuleStopState(reach)))) {\n        for (var l=0; l<skippedStopStates.length;l++) {\n            reach.add(skippedStopStates[l], this.mergeCache);\n        }\n    }\n    if (reach.items.length===0) {\n        return null;\n    } else {\n        return reach;\n    }\n};\n//\n// Return a configuration set containing only the configurations from\n// {@code configs} which are in a {@link RuleStopState}. If all\n// configurations in {@code configs} are already in a rule stop state, this\n// method simply returns {@code configs}.\n//\n// <p>When {@code lookToEndOfRule} is true, this method uses\n// {@link ATN//nextTokens} for each configuration in {@code configs} which is\n// not already in a rule stop state to see if a rule stop state is reachable\n// from the configuration via epsilon-only transitions.</p>\n//\n// @param configs the configuration set to update\n// @param lookToEndOfRule when true, this method checks for rule stop states\n// reachable by epsilon-only transitions from each configuration in\n// {@code configs}.\n//\n// @return {@code configs} if all configurations in {@code configs} are in a\n// rule stop state, otherwise return a new configuration set containing only\n// the configurations from {@code configs} which are in a rule stop state\n//\nParserATNSimulator.prototype.removeAllConfigsNotInRuleStopState = function(configs, lookToEndOfRule) {\n    if (PredictionMode.allConfigsInRuleStopStates(configs)) {\n        return configs;\n    }\n    var result = new ATNConfigSet(configs.fullCtx);\n    for(var i=0; i<configs.items.length;i++) {\n        var config = configs.items[i];\n        if (config.state instanceof RuleStopState) {\n            result.add(config, this.mergeCache);\n            continue;\n        }\n        if (lookToEndOfRule && config.state.epsilonOnlyTransitions) {\n            var nextTokens = this.atn.nextTokens(config.state);\n            if (nextTokens.contains(Token.EPSILON)) {\n                var endOfRuleState = this.atn.ruleToStopState[config.state.ruleIndex];\n                result.add(new ATNConfig({state:endOfRuleState}, config), this.mergeCache);\n            }\n        }\n    }\n    return result;\n};\n\nParserATNSimulator.prototype.computeStartState = function(p, ctx, fullCtx) {\n    // always at least the implicit call to start rule\n    var initialContext = predictionContextFromRuleContext(this.atn, ctx);\n    var configs = new ATNConfigSet(fullCtx);\n    for(var i=0;i<p.transitions.length;i++) {\n        var target = p.transitions[i].target;\n        var c = new ATNConfig({ state:target, alt:i+1, context:initialContext }, null);\n        var closureBusy = new Set();\n        this.closure(c, configs, closureBusy, true, fullCtx, false);\n    }\n    return configs;\n};\n\n//\n// This method transforms the start state computed by\n// {@link //computeStartState} to the special start state used by a\n// precedence DFA for a particular precedence value. The transformation\n// process applies the following changes to the start state's configuration\n// set.\n//\n// <ol>\n// <li>Evaluate the precedence predicates for each configuration using\n// {@link SemanticContext//evalPrecedence}.</li>\n// <li>Remove all configurations which predict an alternative greater than\n// 1, for which another configuration that predicts alternative 1 is in the\n// same ATN state with the same prediction context. This transformation is\n// valid for the following reasons:\n// <ul>\n// <li>The closure block cannot contain any epsilon transitions which bypass\n// the body of the closure, so all states reachable via alternative 1 are\n// part of the precedence alternatives of the transformed left-recursive\n// rule.</li>\n// <li>The \"primary\" portion of a left recursive rule cannot contain an\n// epsilon transition, so the only way an alternative other than 1 can exist\n// in a state that is also reachable via alternative 1 is by nesting calls\n// to the left-recursive rule, with the outer calls not being at the\n// preferred precedence level.</li>\n// </ul>\n// </li>\n// </ol>\n//\n// <p>\n// The prediction context must be considered by this filter to address\n// situations like the following.\n// </p>\n// <code>\n// <pre>\n// grammar TA;\n// prog: statement* EOF;\n// statement: letterA | statement letterA 'b' ;\n// letterA: 'a';\n// </pre>\n// </code>\n// <p>\n// If the above grammar, the ATN state immediately before the token\n// reference {@code 'a'} in {@code letterA} is reachable from the left edge\n// of both the primary and closure blocks of the left-recursive rule\n// {@code statement}. The prediction context associated with each of these\n// configurations distinguishes between them, and prevents the alternative\n// which stepped out to {@code prog} (and then back in to {@code statement}\n// from being eliminated by the filter.\n// </p>\n//\n// @param configs The configuration set computed by\n// {@link //computeStartState} as the start state for the DFA.\n// @return The transformed configuration set representing the start state\n// for a precedence DFA at a particular precedence level (determined by\n// calling {@link Parser//getPrecedence}).\n//\nParserATNSimulator.prototype.applyPrecedenceFilter = function(configs) {\n\tvar config;\n\tvar statesFromAlt1 = [];\n    var configSet = new ATNConfigSet(configs.fullCtx);\n    for(var i=0; i<configs.items.length; i++) {\n        config = configs.items[i];\n        // handle alt 1 first\n        if (config.alt !== 1) {\n            continue;\n        }\n        var updatedContext = config.semanticContext.evalPrecedence(this.parser, this._outerContext);\n        if (updatedContext===null) {\n            // the configuration was eliminated\n            continue;\n        }\n        statesFromAlt1[config.state.stateNumber] = config.context;\n        if (updatedContext !== config.semanticContext) {\n            configSet.add(new ATNConfig({semanticContext:updatedContext}, config), this.mergeCache);\n        } else {\n            configSet.add(config, this.mergeCache);\n        }\n    }\n    for(i=0; i<configs.items.length; i++) {\n        config = configs.items[i];\n        if (config.alt === 1) {\n            // already handled\n            continue;\n        }\n        // In the future, this elimination step could be updated to also\n        // filter the prediction context for alternatives predicting alt>1\n        // (basically a graph subtraction algorithm).\n\t\tif (!config.precedenceFilterSuppressed) {\n            var context = statesFromAlt1[config.state.stateNumber] || null;\n            if (context!==null && context.equals(config.context)) {\n                // eliminated\n                continue;\n            }\n\t\t}\n        configSet.add(config, this.mergeCache);\n    }\n    return configSet;\n};\n\nParserATNSimulator.prototype.getReachableTarget = function(trans, ttype) {\n    if (trans.matches(ttype, 0, this.atn.maxTokenType)) {\n        return trans.target;\n    } else {\n        return null;\n    }\n};\n\nParserATNSimulator.prototype.getPredsForAmbigAlts = function(ambigAlts, configs, nalts) {\n    // REACH=[1|1|[]|0:0, 1|2|[]|0:1]\n    // altToPred starts as an array of all null contexts. The entry at index i\n    // corresponds to alternative i. altToPred[i] may have one of three values:\n    //   1. null: no ATNConfig c is found such that c.alt==i\n    //   2. SemanticContext.NONE: At least one ATNConfig c exists such that\n    //      c.alt==i and c.semanticContext==SemanticContext.NONE. In other words,\n    //      alt i has at least one unpredicated config.\n    //   3. Non-NONE Semantic Context: There exists at least one, and for all\n    //      ATNConfig c such that c.alt==i, c.semanticContext!=SemanticContext.NONE.\n    //\n    // From this, it is clear that NONE||anything==NONE.\n    //\n    var altToPred = [];\n    for(var i=0;i<configs.items.length;i++) {\n        var c = configs.items[i];\n        if(ambigAlts.contains( c.alt )) {\n            altToPred[c.alt] = SemanticContext.orContext(altToPred[c.alt] || null, c.semanticContext);\n        }\n    }\n    var nPredAlts = 0;\n    for (i =1;i< nalts+1;i++) {\n        var pred = altToPred[i] || null;\n        if (pred===null) {\n            altToPred[i] = SemanticContext.NONE;\n        } else if (pred !== SemanticContext.NONE) {\n            nPredAlts += 1;\n        }\n    }\n    // nonambig alts are null in altToPred\n    if (nPredAlts===0) {\n        altToPred = null;\n    }\n    if (this.debug) {\n        console.log(\"getPredsForAmbigAlts result \" + Utils.arrayToString(altToPred));\n    }\n    return altToPred;\n};\n\nParserATNSimulator.prototype.getPredicatePredictions = function(ambigAlts, altToPred) {\n    var pairs = [];\n    var containsPredicate = false;\n    for (var i=1; i<altToPred.length;i++) {\n        var pred = altToPred[i];\n        // unpredicated is indicated by SemanticContext.NONE\n        if( ambigAlts!==null && ambigAlts.contains( i )) {\n            pairs.push(new PredPrediction(pred, i));\n        }\n        if (pred !== SemanticContext.NONE) {\n            containsPredicate = true;\n        }\n    }\n    if (! containsPredicate) {\n        return null;\n    }\n    return pairs;\n};\n\n//\n// This method is used to improve the localization of error messages by\n// choosing an alternative rather than throwing a\n// {@link NoViableAltException} in particular prediction scenarios where the\n// {@link //ERROR} state was reached during ATN simulation.\n//\n// <p>\n// The default implementation of this method uses the following\n// algorithm to identify an ATN configuration which successfully parsed the\n// decision entry rule. Choosing such an alternative ensures that the\n// {@link ParserRuleContext} returned by the calling rule will be complete\n// and valid, and the syntax error will be reported later at a more\n// localized location.</p>\n//\n// <ul>\n// <li>If a syntactically valid path or paths reach the end of the decision rule and\n// they are semantically valid if predicated, return the min associated alt.</li>\n// <li>Else, if a semantically invalid but syntactically valid path exist\n// or paths exist, return the minimum associated alt.\n// </li>\n// <li>Otherwise, return {@link ATN//INVALID_ALT_NUMBER}.</li>\n// </ul>\n//\n// <p>\n// In some scenarios, the algorithm described above could predict an\n// alternative which will result in a {@link FailedPredicateException} in\n// the parser. Specifically, this could occur if the <em>only</em> configuration\n// capable of successfully parsing to the end of the decision rule is\n// blocked by a semantic predicate. By choosing this alternative within\n// {@link //adaptivePredict} instead of throwing a\n// {@link NoViableAltException}, the resulting\n// {@link FailedPredicateException} in the parser will identify the specific\n// predicate which is preventing the parser from successfully parsing the\n// decision rule, which helps developers identify and correct logic errors\n// in semantic predicates.\n// </p>\n//\n// @param configs The ATN configurations which were valid immediately before\n// the {@link //ERROR} state was reached\n// @param outerContext The is the \\gamma_0 initial parser context from the paper\n// or the parser stack at the instant before prediction commences.\n//\n// @return The value to return from {@link //adaptivePredict}, or\n// {@link ATN//INVALID_ALT_NUMBER} if a suitable alternative was not\n// identified and {@link //adaptivePredict} should report an error instead.\n//\nParserATNSimulator.prototype.getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule = function(configs, outerContext) {\n    var cfgs = this.splitAccordingToSemanticValidity(configs, outerContext);\n    var semValidConfigs = cfgs[0];\n    var semInvalidConfigs = cfgs[1];\n    var alt = this.getAltThatFinishedDecisionEntryRule(semValidConfigs);\n    if (alt!==ATN.INVALID_ALT_NUMBER) { // semantically/syntactically viable path exists\n        return alt;\n    }\n    // Is there a syntactically valid path with a failed pred?\n    if (semInvalidConfigs.items.length>0) {\n        alt = this.getAltThatFinishedDecisionEntryRule(semInvalidConfigs);\n        if (alt!==ATN.INVALID_ALT_NUMBER) { // syntactically viable path exists\n            return alt;\n        }\n    }\n    return ATN.INVALID_ALT_NUMBER;\n};\n\nParserATNSimulator.prototype.getAltThatFinishedDecisionEntryRule = function(configs) {\n    var alts = [];\n    for(var i=0;i<configs.items.length; i++) {\n        var c = configs.items[i];\n        if (c.reachesIntoOuterContext>0 || ((c.state instanceof RuleStopState) && c.context.hasEmptyPath())) {\n            if(alts.indexOf(c.alt)<0) {\n                alts.push(c.alt);\n            }\n        }\n    }\n    if (alts.length===0) {\n        return ATN.INVALID_ALT_NUMBER;\n    } else {\n        return Math.min.apply(null, alts);\n    }\n};\n// Walk the list of configurations and split them according to\n//  those that have preds evaluating to true/false.  If no pred, assume\n//  true pred and include in succeeded set.  Returns Pair of sets.\n//\n//  Create a new set so as not to alter the incoming parameter.\n//\n//  Assumption: the input stream has been restored to the starting point\n//  prediction, which is where predicates need to evaluate.\n//\nParserATNSimulator.prototype.splitAccordingToSemanticValidity = function( configs, outerContext) {\n    var succeeded = new ATNConfigSet(configs.fullCtx);\n    var failed = new ATNConfigSet(configs.fullCtx);\n    for(var i=0;i<configs.items.length; i++) {\n        var c = configs.items[i];\n        if (c.semanticContext !== SemanticContext.NONE) {\n            var predicateEvaluationResult = c.semanticContext.evaluate(this.parser, outerContext);\n            if (predicateEvaluationResult) {\n                succeeded.add(c);\n            } else {\n                failed.add(c);\n            }\n        } else {\n            succeeded.add(c);\n        }\n    }\n    return [succeeded, failed];\n};\n\n// Look through a list of predicate/alt pairs, returning alts for the\n//  pairs that win. A {@code NONE} predicate indicates an alt containing an\n//  unpredicated config which behaves as \"always true.\" If !complete\n//  then we stop at the first predicate that evaluates to true. This\n//  includes pairs with null predicates.\n//\nParserATNSimulator.prototype.evalSemanticContext = function(predPredictions, outerContext, complete) {\n    var predictions = new BitSet();\n    for(var i=0;i<predPredictions.length;i++) {\n    \tvar pair = predPredictions[i];\n        if (pair.pred === SemanticContext.NONE) {\n            predictions.add(pair.alt);\n            if (! complete) {\n                break;\n            }\n            continue;\n        }\n        var predicateEvaluationResult = pair.pred.evaluate(this.parser, outerContext);\n        if (this.debug || this.dfa_debug) {\n            console.log(\"eval pred \" + pair + \"=\" + predicateEvaluationResult);\n        }\n        if (predicateEvaluationResult) {\n            if (this.debug || this.dfa_debug) {\n                console.log(\"PREDICT \" + pair.alt);\n            }\n            predictions.add(pair.alt);\n            if (! complete) {\n                break;\n            }\n        }\n    }\n    return predictions;\n};\n\n// TODO: If we are doing predicates, there is no point in pursuing\n//     closure operations if we reach a DFA state that uniquely predicts\n//     alternative. We will not be caching that DFA state and it is a\n//     waste to pursue the closure. Might have to advance when we do\n//     ambig detection thought :(\n//\n\nParserATNSimulator.prototype.closure = function(config, configs, closureBusy, collectPredicates, fullCtx, treatEofAsEpsilon) {\n    var initialDepth = 0;\n    this.closureCheckingStopState(config, configs, closureBusy, collectPredicates,\n                             fullCtx, initialDepth, treatEofAsEpsilon);\n};\n\n\nParserATNSimulator.prototype.closureCheckingStopState = function(config, configs, closureBusy, collectPredicates, fullCtx, depth, treatEofAsEpsilon) {\n    if (this.debug || this.debug_closure) {\n        console.log(\"closure(\" + config.toString(this.parser,true) + \")\");\n        // console.log(\"configs(\" + configs.toString() + \")\");\n        if(config.reachesIntoOuterContext>50) {\n            throw \"problem\";\n        }\n    }\n    if (config.state instanceof RuleStopState) {\n        // We hit rule end. If we have context info, use it\n        // run thru all possible stack tops in ctx\n        if (! config.context.isEmpty()) {\n            for ( var i =0; i<config.context.length; i++) {\n                if (config.context.getReturnState(i) === PredictionContext.EMPTY_RETURN_STATE) {\n                    if (fullCtx) {\n                        configs.add(new ATNConfig({state:config.state, context:PredictionContext.EMPTY}, config), this.mergeCache);\n                        continue;\n                    } else {\n                        // we have no context info, just chase follow links (if greedy)\n                        if (this.debug) {\n                            console.log(\"FALLING off rule \" + this.getRuleName(config.state.ruleIndex));\n                        }\n                        this.closure_(config, configs, closureBusy, collectPredicates,\n                                 fullCtx, depth, treatEofAsEpsilon);\n                    }\n                    continue;\n                }\n                var returnState = this.atn.states[config.context.getReturnState(i)];\n                var newContext = config.context.getParent(i); // \"pop\" return state\n                var parms = {state:returnState, alt:config.alt, context:newContext, semanticContext:config.semanticContext};\n                var c = new ATNConfig(parms, null);\n                // While we have context to pop back from, we may have\n                // gotten that context AFTER having falling off a rule.\n                // Make sure we track that we are now out of context.\n                c.reachesIntoOuterContext = config.reachesIntoOuterContext;\n                this.closureCheckingStopState(c, configs, closureBusy, collectPredicates, fullCtx, depth - 1, treatEofAsEpsilon);\n            }\n            return;\n        } else if( fullCtx) {\n            // reached end of start rule\n            configs.add(config, this.mergeCache);\n            return;\n        } else {\n            // else if we have no context info, just chase follow links (if greedy)\n            if (this.debug) {\n                console.log(\"FALLING off rule \" + this.getRuleName(config.state.ruleIndex));\n            }\n        }\n    }\n    this.closure_(config, configs, closureBusy, collectPredicates, fullCtx, depth, treatEofAsEpsilon);\n};\n\n\n// Do the actual work of walking epsilon edges//\nParserATNSimulator.prototype.closure_ = function(config, configs, closureBusy, collectPredicates, fullCtx, depth, treatEofAsEpsilon) {\n    var p = config.state;\n    // optimization\n    if (! p.epsilonOnlyTransitions) {\n        configs.add(config, this.mergeCache);\n        // make sure to not return here, because EOF transitions can act as\n        // both epsilon transitions and non-epsilon transitions.\n    }\n    for(var i = 0;i<p.transitions.length; i++) {\n        if(i==0 && this.canDropLoopEntryEdgeInLeftRecursiveRule(config))\n            continue;\n\n        var t = p.transitions[i];\n        var continueCollecting = collectPredicates && !(t instanceof ActionTransition);\n        var c = this.getEpsilonTarget(config, t, continueCollecting, depth === 0, fullCtx, treatEofAsEpsilon);\n        if (c!==null) {\n\t\t\tif (!t.isEpsilon && closureBusy.add(c)!==c){\n\t\t\t\t// avoid infinite recursion for EOF* and EOF+\n\t\t\t\tcontinue;\n\t\t\t}\n            var newDepth = depth;\n            if ( config.state instanceof RuleStopState) {\n                // target fell off end of rule; mark resulting c as having dipped into outer context\n                // We can't get here if incoming config was rule stop and we had context\n                // track how far we dip into outer context.  Might\n                // come in handy and we avoid evaluating context dependent\n                // preds if this is > 0.\n\n                if (closureBusy.add(c)!==c) {\n                    // avoid infinite recursion for right-recursive rules\n                    continue;\n                }\n\n\t\t\t\tif (this._dfa !== null && this._dfa.precedenceDfa) {\n\t\t\t\t\tif (t.outermostPrecedenceReturn === this._dfa.atnStartState.ruleIndex) {\n\t\t\t\t\t\tc.precedenceFilterSuppressed = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n                c.reachesIntoOuterContext += 1;\n                configs.dipsIntoOuterContext = true; // TODO: can remove? only care when we add to set per middle of this method\n                newDepth -= 1;\n                if (this.debug) {\n                    console.log(\"dips into outer ctx: \" + c);\n                }\n            } else if (t instanceof RuleTransition) {\n                // latch when newDepth goes negative - once we step out of the entry context we can't return\n                if (newDepth >= 0) {\n                    newDepth += 1;\n                }\n            }\n            this.closureCheckingStopState(c, configs, closureBusy, continueCollecting, fullCtx, newDepth, treatEofAsEpsilon);\n        }\n    }\n};\n\n\nParserATNSimulator.prototype.canDropLoopEntryEdgeInLeftRecursiveRule = function(config) {\n    // return False\n    var p = config.state;\n    // First check to see if we are in StarLoopEntryState generated during\n    // left-recursion elimination. For efficiency, also check if\n    // the context has an empty stack case. If so, it would mean\n    // global FOLLOW so we can't perform optimization\n    // Are we the special loop entry/exit state? or SLL wildcard\n    if(p.stateType != ATNState.STAR_LOOP_ENTRY)\n        return false;\n    if(p.stateType != ATNState.STAR_LOOP_ENTRY || !p.isPrecedenceDecision ||\n           config.context.isEmpty() || config.context.hasEmptyPath())\n        return false;\n\n    // Require all return states to return back to the same rule that p is in.\n    var numCtxs = config.context.length;\n    for(var i=0; i<numCtxs; i++) { // for each stack context\n        var returnState = this.atn.states[config.context.getReturnState(i)];\n        if (returnState.ruleIndex != p.ruleIndex)\n            return false;\n    }\n\n    var decisionStartState = p.transitions[0].target;\n    var blockEndStateNum = decisionStartState.endState.stateNumber;\n    var blockEndState = this.atn.states[blockEndStateNum];\n\n    // Verify that the top of each stack context leads to loop entry/exit\n    // state through epsilon edges and w/o leaving rule.\n    for(var i=0; i<numCtxs; i++) { // for each stack context\n        var returnStateNumber = config.context.getReturnState(i);\n        var returnState = this.atn.states[returnStateNumber];\n        // all states must have single outgoing epsilon edge\n        if (returnState.transitions.length != 1 || !returnState.transitions[0].isEpsilon)\n            return false;\n\n        // Look for prefix op case like 'not expr', (' type ')' expr\n        var returnStateTarget = returnState.transitions[0].target;\n        if ( returnState.stateType == ATNState.BLOCK_END && returnStateTarget == p )\n            continue;\n\n        // Look for 'expr op expr' or case where expr's return state is block end\n        // of (...)* internal block; the block end points to loop back\n        // which points to p but we don't need to check that\n        if ( returnState == blockEndState )\n            continue;\n\n        // Look for ternary expr ? expr : expr. The return state points at block end,\n        // which points at loop entry state\n        if ( returnStateTarget == blockEndState )\n            continue;\n\n        // Look for complex prefix 'between expr and expr' case where 2nd expr's\n        // return state points at block end state of (...)* internal block\n        if (returnStateTarget.stateType == ATNState.BLOCK_END && returnStateTarget.transitions.length == 1\n                && returnStateTarget.transitions[0].isEpsilon && returnStateTarget.transitions[0].target == p)\n            continue;\n\n        // anything else ain't conforming\n        return false;\n    }\n    return true;\n};\n\n\nParserATNSimulator.prototype.getRuleName = function( index) {\n    if (this.parser!==null && index>=0) {\n        return this.parser.ruleNames[index];\n    } else {\n        return \"<rule \" + index + \">\";\n    }\n};\n\nParserATNSimulator.prototype.getEpsilonTarget = function(config, t, collectPredicates, inContext, fullCtx, treatEofAsEpsilon) {\n    switch(t.serializationType) {\n    case Transition.RULE:\n        return this.ruleTransition(config, t);\n    case Transition.PRECEDENCE:\n        return this.precedenceTransition(config, t, collectPredicates, inContext, fullCtx);\n    case Transition.PREDICATE:\n        return this.predTransition(config, t, collectPredicates, inContext, fullCtx);\n    case Transition.ACTION:\n        return this.actionTransition(config, t);\n    case Transition.EPSILON:\n        return new ATNConfig({state:t.target}, config);\n    case Transition.ATOM:\n    case Transition.RANGE:\n    case Transition.SET:\n        // EOF transitions act like epsilon transitions after the first EOF\n        // transition is traversed\n        if (treatEofAsEpsilon) {\n            if (t.matches(Token.EOF, 0, 1)) {\n                return new ATNConfig({state: t.target}, config);\n            }\n        }\n        return null;\n    default:\n    \treturn null;\n    }\n};\n\nParserATNSimulator.prototype.actionTransition = function(config, t) {\n    if (this.debug) {\n        var index = t.actionIndex==-1 ? 65535 : t.actionIndex;\n        console.log(\"ACTION edge \" + t.ruleIndex + \":\" + index);\n    }\n    return new ATNConfig({state:t.target}, config);\n};\n\nParserATNSimulator.prototype.precedenceTransition = function(config, pt,  collectPredicates, inContext, fullCtx) {\n    if (this.debug) {\n        console.log(\"PRED (collectPredicates=\" + collectPredicates + \") \" +\n                pt.precedence + \">=_p, ctx dependent=true\");\n        if (this.parser!==null) {\n        \tconsole.log(\"context surrounding pred is \" + Utils.arrayToString(this.parser.getRuleInvocationStack()));\n        }\n    }\n    var c = null;\n    if (collectPredicates && inContext) {\n        if (fullCtx) {\n            // In full context mode, we can evaluate predicates on-the-fly\n            // during closure, which dramatically reduces the size of\n            // the config sets. It also obviates the need to test predicates\n            // later during conflict resolution.\n            var currentPosition = this._input.index;\n            this._input.seek(this._startIndex);\n            var predSucceeds = pt.getPredicate().evaluate(this.parser, this._outerContext);\n            this._input.seek(currentPosition);\n            if (predSucceeds) {\n                c = new ATNConfig({state:pt.target}, config); // no pred context\n            }\n        } else {\n            var newSemCtx = SemanticContext.andContext(config.semanticContext, pt.getPredicate());\n            c = new ATNConfig({state:pt.target, semanticContext:newSemCtx}, config);\n        }\n    } else {\n        c = new ATNConfig({state:pt.target}, config);\n    }\n    if (this.debug) {\n        console.log(\"config from pred transition=\" + c);\n    }\n    return c;\n};\n\nParserATNSimulator.prototype.predTransition = function(config, pt, collectPredicates, inContext, fullCtx) {\n    if (this.debug) {\n        console.log(\"PRED (collectPredicates=\" + collectPredicates + \") \" + pt.ruleIndex +\n                \":\" + pt.predIndex + \", ctx dependent=\" + pt.isCtxDependent);\n        if (this.parser!==null) {\n            console.log(\"context surrounding pred is \" + Utils.arrayToString(this.parser.getRuleInvocationStack()));\n        }\n    }\n    var c = null;\n    if (collectPredicates && ((pt.isCtxDependent && inContext) || ! pt.isCtxDependent)) {\n        if (fullCtx) {\n            // In full context mode, we can evaluate predicates on-the-fly\n            // during closure, which dramatically reduces the size of\n            // the config sets. It also obviates the need to test predicates\n            // later during conflict resolution.\n            var currentPosition = this._input.index;\n            this._input.seek(this._startIndex);\n            var predSucceeds = pt.getPredicate().evaluate(this.parser, this._outerContext);\n            this._input.seek(currentPosition);\n            if (predSucceeds) {\n                c = new ATNConfig({state:pt.target}, config); // no pred context\n            }\n        } else {\n            var newSemCtx = SemanticContext.andContext(config.semanticContext, pt.getPredicate());\n            c = new ATNConfig({state:pt.target, semanticContext:newSemCtx}, config);\n        }\n    } else {\n        c = new ATNConfig({state:pt.target}, config);\n    }\n    if (this.debug) {\n        console.log(\"config from pred transition=\" + c);\n    }\n    return c;\n};\n\nParserATNSimulator.prototype.ruleTransition = function(config, t) {\n    if (this.debug) {\n        console.log(\"CALL rule \" + this.getRuleName(t.target.ruleIndex) + \", ctx=\" + config.context);\n    }\n    var returnState = t.followState;\n    var newContext = SingletonPredictionContext.create(config.context, returnState.stateNumber);\n    return new ATNConfig({state:t.target, context:newContext}, config );\n};\n\nParserATNSimulator.prototype.getConflictingAlts = function(configs) {\n    var altsets = PredictionMode.getConflictingAltSubsets(configs);\n    return PredictionMode.getAlts(altsets);\n};\n\n // Sam pointed out a problem with the previous definition, v3, of\n // ambiguous states. If we have another state associated with conflicting\n // alternatives, we should keep going. For example, the following grammar\n //\n // s : (ID | ID ID?) ';' ;\n //\n // When the ATN simulation reaches the state before ';', it has a DFA\n // state that looks like: [12|1|[], 6|2|[], 12|2|[]]. Naturally\n // 12|1|[] and 12|2|[] conflict, but we cannot stop processing this node\n // because alternative to has another way to continue, via [6|2|[]].\n // The key is that we have a single state that has config's only associated\n // with a single alternative, 2, and crucially the state transitions\n // among the configurations are all non-epsilon transitions. That means\n // we don't consider any conflicts that include alternative 2. So, we\n // ignore the conflict between alts 1 and 2. We ignore a set of\n // conflicting alts when there is an intersection with an alternative\n // associated with a single alt state in the state&rarr;config-list map.\n //\n // It's also the case that we might have two conflicting configurations but\n // also a 3rd nonconflicting configuration for a different alternative:\n // [1|1|[], 1|2|[], 8|3|[]]. This can come about from grammar:\n //\n // a : A | A | A B ;\n //\n // After matching input A, we reach the stop state for rule A, state 1.\n // State 8 is the state right before B. Clearly alternatives 1 and 2\n // conflict and no amount of further lookahead will separate the two.\n // However, alternative 3 will be able to continue and so we do not\n // stop working on this state. In the previous example, we're concerned\n // with states associated with the conflicting alternatives. Here alt\n // 3 is not associated with the conflicting configs, but since we can continue\n // looking for input reasonably, I don't declare the state done. We\n // ignore a set of conflicting alts when we have an alternative\n // that we still need to pursue.\n//\n\nParserATNSimulator.prototype.getConflictingAltsOrUniqueAlt = function(configs) {\n    var conflictingAlts = null;\n    if (configs.uniqueAlt!== ATN.INVALID_ALT_NUMBER) {\n        conflictingAlts = new BitSet();\n        conflictingAlts.add(configs.uniqueAlt);\n    } else {\n        conflictingAlts = configs.conflictingAlts;\n    }\n    return conflictingAlts;\n};\n\nParserATNSimulator.prototype.getTokenName = function( t) {\n    if (t===Token.EOF) {\n        return \"EOF\";\n    }\n    if( this.parser!==null && this.parser.literalNames!==null) {\n        if (t >= this.parser.literalNames.length && t >= this.parser.symbolicNames.length) {\n            console.log(\"\" + t + \" ttype out of range: \" + this.parser.literalNames);\n            console.log(\"\" + this.parser.getInputStream().getTokens());\n        } else {\n            var name = this.parser.literalNames[t] || this.parser.symbolicNames[t];\n            return name + \"<\" + t + \">\";\n        }\n    }\n    return \"\" + t;\n};\n\nParserATNSimulator.prototype.getLookaheadName = function(input) {\n    return this.getTokenName(input.LA(1));\n};\n\n// Used for debugging in adaptivePredict around execATN but I cut\n//  it out for clarity now that alg. works well. We can leave this\n//  \"dead\" code for a bit.\n//\nParserATNSimulator.prototype.dumpDeadEndConfigs = function(nvae) {\n    console.log(\"dead end configs: \");\n    var decs = nvae.getDeadEndConfigs();\n    for(var i=0; i<decs.length; i++) {\n    \tvar c = decs[i];\n        var trans = \"no edges\";\n        if (c.state.transitions.length>0) {\n            var t = c.state.transitions[0];\n            if (t instanceof AtomTransition) {\n                trans = \"Atom \"+ this.getTokenName(t.label);\n            } else if (t instanceof SetTransition) {\n                var neg = (t instanceof NotSetTransition);\n                trans = (neg ? \"~\" : \"\") + \"Set \" + t.set;\n            }\n        }\n        console.error(c.toString(this.parser, true) + \":\" + trans);\n    }\n};\n\nParserATNSimulator.prototype.noViableAlt = function(input, outerContext, configs, startIndex) {\n    return new NoViableAltException(this.parser, input, input.get(startIndex), input.LT(1), configs, outerContext);\n};\n\nParserATNSimulator.prototype.getUniqueAlt = function(configs) {\n    var alt = ATN.INVALID_ALT_NUMBER;\n    for(var i=0;i<configs.items.length;i++) {\n    \tvar c = configs.items[i];\n        if (alt === ATN.INVALID_ALT_NUMBER) {\n            alt = c.alt // found first alt\n        } else if( c.alt!==alt) {\n            return ATN.INVALID_ALT_NUMBER;\n        }\n    }\n    return alt;\n};\n\n//\n// Add an edge to the DFA, if possible. This method calls\n// {@link //addDFAState} to ensure the {@code to} state is present in the\n// DFA. If {@code from} is {@code null}, or if {@code t} is outside the\n// range of edges that can be represented in the DFA tables, this method\n// returns without adding the edge to the DFA.\n//\n// <p>If {@code to} is {@code null}, this method returns {@code null}.\n// Otherwise, this method returns the {@link DFAState} returned by calling\n// {@link //addDFAState} for the {@code to} state.</p>\n//\n// @param dfa The DFA\n// @param from The source state for the edge\n// @param t The input symbol\n// @param to The target state for the edge\n//\n// @return If {@code to} is {@code null}, this method returns {@code null};\n// otherwise this method returns the result of calling {@link //addDFAState}\n// on {@code to}\n//\nParserATNSimulator.prototype.addDFAEdge = function(dfa, from_, t, to) {\n    if( this.debug) {\n        console.log(\"EDGE \" + from_ + \" -> \" + to + \" upon \" + this.getTokenName(t));\n    }\n    if (to===null) {\n        return null;\n    }\n    to = this.addDFAState(dfa, to); // used existing if possible not incoming\n    if (from_===null || t < -1 || t > this.atn.maxTokenType) {\n        return to;\n    }\n    if (from_.edges===null) {\n        from_.edges = [];\n    }\n    from_.edges[t+1] = to; // connect\n\n    if (this.debug) {\n        var literalNames = this.parser===null ? null : this.parser.literalNames;\n        var symbolicNames = this.parser===null ? null : this.parser.symbolicNames;\n        console.log(\"DFA=\\n\" + dfa.toString(literalNames, symbolicNames));\n    }\n    return to;\n};\n//\n// Add state {@code D} to the DFA if it is not already present, and return\n// the actual instance stored in the DFA. If a state equivalent to {@code D}\n// is already in the DFA, the existing state is returned. Otherwise this\n// method returns {@code D} after adding it to the DFA.\n//\n// <p>If {@code D} is {@link //ERROR}, this method returns {@link //ERROR} and\n// does not change the DFA.</p>\n//\n// @param dfa The dfa\n// @param D The DFA state to add\n// @return The state stored in the DFA. This will be either the existing\n// state if {@code D} is already in the DFA, or {@code D} itself if the\n// state was not already present.\n//\nParserATNSimulator.prototype.addDFAState = function(dfa, D) {\n    if (D == ATNSimulator.ERROR) {\n        return D;\n    }\n    var existing = dfa.states.get(D);\n    if(existing!==null) {\n        return existing;\n    }\n    D.stateNumber = dfa.states.length;\n    if (! D.configs.readOnly) {\n        D.configs.optimizeConfigs(this);\n        D.configs.setReadonly(true);\n    }\n    dfa.states.add(D);\n    if (this.debug) {\n        console.log(\"adding new DFA state: \" + D);\n    }\n    return D;\n};\n\nParserATNSimulator.prototype.reportAttemptingFullContext = function(dfa, conflictingAlts, configs, startIndex, stopIndex) {\n    if (this.debug || this.retry_debug) {\n        var interval = new Interval(startIndex, stopIndex + 1);\n        console.log(\"reportAttemptingFullContext decision=\" + dfa.decision + \":\" + configs +\n                           \", input=\" + this.parser.getTokenStream().getText(interval));\n    }\n    if (this.parser!==null) {\n        this.parser.getErrorListenerDispatch().reportAttemptingFullContext(this.parser, dfa, startIndex, stopIndex, conflictingAlts, configs);\n    }\n};\n\nParserATNSimulator.prototype.reportContextSensitivity = function(dfa, prediction, configs, startIndex, stopIndex) {\n    if (this.debug || this.retry_debug) {\n        var interval = new Interval(startIndex, stopIndex + 1);\n        console.log(\"reportContextSensitivity decision=\" + dfa.decision + \":\" + configs +\n                           \", input=\" + this.parser.getTokenStream().getText(interval));\n    }\n    if (this.parser!==null) {\n        this.parser.getErrorListenerDispatch().reportContextSensitivity(this.parser, dfa, startIndex, stopIndex, prediction, configs);\n    }\n};\n\n// If context sensitive parsing, we know it's ambiguity not conflict//\nParserATNSimulator.prototype.reportAmbiguity = function(dfa, D, startIndex, stopIndex,\n                               exact, ambigAlts, configs ) {\n    if (this.debug || this.retry_debug) {\n        var interval = new Interval(startIndex, stopIndex + 1);\n        console.log(\"reportAmbiguity \" + ambigAlts + \":\" + configs +\n                           \", input=\" + this.parser.getTokenStream().getText(interval));\n    }\n    if (this.parser!==null) {\n        this.parser.getErrorListenerDispatch().reportAmbiguity(this.parser, dfa, startIndex, stopIndex, exact, ambigAlts, configs);\n    }\n};\n\nexports.ParserATNSimulator = ParserATNSimulator;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/atn/ParserATNSimulator.js\n// module id = +1pv\n// module chunks = 0 1 2","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar policyListener = require('policy_lang').policyListener;\nvar _ = require('underscore');\nvar indentLevel = 2;\n\nvar Beautify = function (_policyListener) {\n  _inherits(Beautify, _policyListener);\n\n  function Beautify() {\n    _classCallCheck(this, Beautify);\n\n    var _this = _possibleConstructorReturn(this, (Beautify.__proto__ || Object.getPrototypeOf(Beautify)).call(this));\n\n    _this.errorMsg = null;\n    _this.stringArray = [];\n    _this._nextIndent = ' ';\n    return _this;\n  }\n\n  _createClass(Beautify, [{\n    key: 'addIndent',\n    value: function addIndent() {\n      var _this2 = this;\n\n      _.each(_.range(indentLevel), function () {\n        _this2._nextIndent += \" \";\n      });\n    }\n  }, {\n    key: 'deleteIndent',\n    value: function deleteIndent() {\n      this._nextIndent = this._nextIndent.slice(0, Number('-' + indentLevel));\n    }\n  }, {\n    key: 'enterSegment',\n    value: function enterSegment(ctx) {\n      this.stringArray.push('\\n');\n      this.stringArray.push('For');\n    }\n  }, {\n    key: 'exitSegment',\n    value: function exitSegment(ctx) {\n      this.deleteIndent();\n    }\n  }, {\n    key: 'enterAudience_clause',\n    value: function enterAudience_clause(ctx) {\n      _.map(ctx.children, function (child) {\n        // this.stringArray.push(child.getText());\n        // console.log(child.getText());\n      });\n    }\n  }, {\n    key: 'enterAnd',\n    value: function enterAnd(ctx) {\n      this.stringArray.push('and');\n    }\n  }, {\n    key: 'exitAudience_clause',\n    value: function exitAudience_clause(ctx) {\n      this.stringArray.push('in the following states:');\n      this.addIndent();\n      this.stringArray.push(this._nextIndent);\n    }\n  }, {\n    key: 'enterState_clause',\n    value: function enterState_clause(ctx) {\n      this.stringArray.push('\\n');\n      this.stringArray.push(this._nextIndent);\n    }\n  }, {\n    key: 'enterCurrent_state_clause',\n    value: function enterCurrent_state_clause(ctx) {\n      var _this3 = this;\n\n      _.map(ctx.children, function (child) {\n        _this3.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterTarget_clause',\n    value: function enterTarget_clause(ctx) {\n      this.stringArray.push('\\n');\n      this.addIndent();\n      this.stringArray.push(this._nextIndent);\n      this.stringArray = this.stringArray.concat(['proceed to', ctx.ID().getText(), 'on']);\n    }\n  }, {\n    key: 'exitTarget_clause',\n    value: function exitTarget_clause() {\n      this.deleteIndent();\n    }\n  }, {\n    key: 'enterAccepting',\n    value: function enterAccepting(ctx) {\n      this.stringArray.push('accepting');\n    }\n  }, {\n    key: 'enterAnd_event',\n    value: function enterAnd_event(ctx) {\n      this.stringArray.push('and on');\n    }\n  }, {\n    key: 'enterPeriod_event',\n    value: function enterPeriod_event(ctx) {\n      var _this4 = this;\n\n      _.map(ctx.children, function (child) {\n        _this4.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterSpecific_date_event',\n    value: function enterSpecific_date_event(ctx) {\n      var _this5 = this;\n\n      _.map(ctx.children, function (child) {\n        _this5.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterRelative_date_event',\n    value: function enterRelative_date_event(ctx) {\n      var _this6 = this;\n\n      _.map(ctx.children, function (child) {\n        _this6.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterPricing_agreement_event',\n    value: function enterPricing_agreement_event(ctx) {\n      var _this7 = this;\n\n      _.map(ctx.children, function (child) {\n        _this7.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterTransaction_event',\n    value: function enterTransaction_event(ctx) {\n      var _this8 = this;\n\n      _.map(ctx.children, function (child) {\n        _this8.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterContract_guaranty',\n    value: function enterContract_guaranty(ctx) {\n      var _this9 = this;\n\n      _.map(ctx.children, function (child) {\n        _this9.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterPlatform_guaranty',\n    value: function enterPlatform_guaranty(ctx) {\n      var _this10 = this;\n\n      _.map(ctx.children, function (child) {\n        _this10.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterSigning_event',\n    value: function enterSigning_event(ctx) {\n      var _this11 = this;\n\n      _.map(ctx.children, function (child) {\n        _this11.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterSettlement_event',\n    value: function enterSettlement_event(ctx) {\n      var _this12 = this;\n\n      _.map(ctx.children, function (child) {\n        _this12.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterVisit_increment_event',\n    value: function enterVisit_increment_event(ctx) {\n      var _this13 = this;\n\n      _.map(ctx.children, function (child) {\n        _this13.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterVisit_event',\n    value: function enterVisit_event(ctx) {\n      var _this14 = this;\n\n      _.map(ctx.children, function (child) {\n        _this14.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterBalance_greater',\n    value: function enterBalance_greater(ctx) {\n      var _this15 = this;\n\n      _.map(ctx.children, function (child) {\n        _this15.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterBalance_smaller',\n    value: function enterBalance_smaller(ctx) {\n      var _this16 = this;\n\n      _.map(ctx.children, function (child) {\n        _this16.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterUsers',\n    value: function enterUsers(ctx) {\n      this.stringArray.push(ctx.getText());\n      // for (var i = 0; i < ctx.getChildCount(); i++) {\n      //   this.stringArray.push(ctx.getChild(i).getText());\n      // }\n    }\n  }, {\n    key: 'enterUser_groups',\n    value: function enterUser_groups(ctx) {\n      this.stringArray.push('users in');\n      for (var i = 0; i < ctx.getChildCount(); i++) {\n        this.stringArray.push(ctx.getChild(i).getText());\n      }\n    }\n  }, {\n    key: 'enterAthorize_token_clause',\n    value: function enterAthorize_token_clause(ctx) {\n      var _this17 = this;\n\n      this.stringArray.push('\\n');\n      this.stringArray.push(this._nextIndent);\n      _.map(ctx.children, function (child) {\n        _this17.stringArray.push(child.getText());\n      });\n    }\n  }]);\n\n  return Beautify;\n}(policyListener);\n\n;\n\nmodule.exports = Beautify;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/freelog_policy_compiler/BeautifyExtension.js\n// module id = /CDt\n// module chunks = 0 1 2","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\n// Represents an executor for a sequence of lexer actions which traversed during\n// the matching operation of a lexer rule (token).\n//\n// <p>The executor tracks position information for position-dependent lexer actions\n// efficiently, ensuring that actions appearing only at the end of the rule do\n// not cause bloating of the {@link DFA} created for the lexer.</p>\n\nvar hashStuff = require(\"../Utils\").hashStuff;\nvar LexerIndexedCustomAction = require('./LexerAction').LexerIndexedCustomAction;\n\nfunction LexerActionExecutor(lexerActions) {\n\tthis.lexerActions = lexerActions === null ? [] : lexerActions;\n\t// Caches the result of {@link //hashCode} since the hash code is an element\n\t// of the performance-critical {@link LexerATNConfig//hashCode} operation.\n\tthis.cachedHashCode = hashStuff(lexerActions); // \"\".join([str(la) for la in\n\t// lexerActions]))\n\treturn this;\n}\n\n// Creates a {@link LexerActionExecutor} which executes the actions for\n// the input {@code lexerActionExecutor} followed by a specified\n// {@code lexerAction}.\n//\n// @param lexerActionExecutor The executor for actions already traversed by\n// the lexer while matching a token within a particular\n// {@link LexerATNConfig}. If this is {@code null}, the method behaves as\n// though it were an empty executor.\n// @param lexerAction The lexer action to execute after the actions\n// specified in {@code lexerActionExecutor}.\n//\n// @return A {@link LexerActionExecutor} for executing the combine actions\n// of {@code lexerActionExecutor} and {@code lexerAction}.\nLexerActionExecutor.append = function(lexerActionExecutor, lexerAction) {\n\tif (lexerActionExecutor === null) {\n\t\treturn new LexerActionExecutor([ lexerAction ]);\n\t}\n\tvar lexerActions = lexerActionExecutor.lexerActions.concat([ lexerAction ]);\n\treturn new LexerActionExecutor(lexerActions);\n};\n\n// Creates a {@link LexerActionExecutor} which encodes the current offset\n// for position-dependent lexer actions.\n//\n// <p>Normally, when the executor encounters lexer actions where\n// {@link LexerAction//isPositionDependent} returns {@code true}, it calls\n// {@link IntStream//seek} on the input {@link CharStream} to set the input\n// position to the <em>end</em> of the current token. This behavior provides\n// for efficient DFA representation of lexer actions which appear at the end\n// of a lexer rule, even when the lexer rule matches a variable number of\n// characters.</p>\n//\n// <p>Prior to traversing a match transition in the ATN, the current offset\n// from the token start index is assigned to all position-dependent lexer\n// actions which have not already been assigned a fixed offset. By storing\n// the offsets relative to the token start index, the DFA representation of\n// lexer actions which appear in the middle of tokens remains efficient due\n// to sharing among tokens of the same length, regardless of their absolute\n// position in the input stream.</p>\n//\n// <p>If the current executor already has offsets assigned to all\n// position-dependent lexer actions, the method returns {@code this}.</p>\n//\n// @param offset The current offset to assign to all position-dependent\n// lexer actions which do not already have offsets assigned.\n//\n// @return A {@link LexerActionExecutor} which stores input stream offsets\n// for all position-dependent lexer actions.\n// /\nLexerActionExecutor.prototype.fixOffsetBeforeMatch = function(offset) {\n\tvar updatedLexerActions = null;\n\tfor (var i = 0; i < this.lexerActions.length; i++) {\n\t\tif (this.lexerActions[i].isPositionDependent &&\n\t\t\t\t!(this.lexerActions[i] instanceof LexerIndexedCustomAction)) {\n\t\t\tif (updatedLexerActions === null) {\n\t\t\t\tupdatedLexerActions = this.lexerActions.concat([]);\n\t\t\t}\n\t\t\tupdatedLexerActions[i] = new LexerIndexedCustomAction(offset,\n\t\t\t\t\tthis.lexerActions[i]);\n\t\t}\n\t}\n\tif (updatedLexerActions === null) {\n\t\treturn this;\n\t} else {\n\t\treturn new LexerActionExecutor(updatedLexerActions);\n\t}\n};\n\n// Execute the actions encapsulated by this executor within the context of a\n// particular {@link Lexer}.\n//\n// <p>This method calls {@link IntStream//seek} to set the position of the\n// {@code input} {@link CharStream} prior to calling\n// {@link LexerAction//execute} on a position-dependent action. Before the\n// method returns, the input position will be restored to the same position\n// it was in when the method was invoked.</p>\n//\n// @param lexer The lexer instance.\n// @param input The input stream which is the source for the current token.\n// When this method is called, the current {@link IntStream//index} for\n// {@code input} should be the start of the following token, i.e. 1\n// character past the end of the current token.\n// @param startIndex The token start index. This value may be passed to\n// {@link IntStream//seek} to set the {@code input} position to the beginning\n// of the token.\n// /\nLexerActionExecutor.prototype.execute = function(lexer, input, startIndex) {\n\tvar requiresSeek = false;\n\tvar stopIndex = input.index;\n\ttry {\n\t\tfor (var i = 0; i < this.lexerActions.length; i++) {\n\t\t\tvar lexerAction = this.lexerActions[i];\n\t\t\tif (lexerAction instanceof LexerIndexedCustomAction) {\n\t\t\t\tvar offset = lexerAction.offset;\n\t\t\t\tinput.seek(startIndex + offset);\n\t\t\t\tlexerAction = lexerAction.action;\n\t\t\t\trequiresSeek = (startIndex + offset) !== stopIndex;\n\t\t\t} else if (lexerAction.isPositionDependent) {\n\t\t\t\tinput.seek(stopIndex);\n\t\t\t\trequiresSeek = false;\n\t\t\t}\n\t\t\tlexerAction.execute(lexer);\n\t\t}\n\t} finally {\n\t\tif (requiresSeek) {\n\t\t\tinput.seek(stopIndex);\n\t\t}\n\t}\n};\n\nLexerActionExecutor.prototype.hashCode = function() {\n\treturn this.cachedHashCode;\n};\n\nLexerActionExecutor.prototype.updateHashCode = function(hash) {\n    hash.update(this.cachedHashCode);\n};\n\n\nLexerActionExecutor.prototype.equals = function(other) {\n\tif (this === other) {\n\t\treturn true;\n\t} else if (!(other instanceof LexerActionExecutor)) {\n\t\treturn false;\n\t} else if (this.cachedHashCode != other.cachedHashCode) {\n\t\treturn false;\n\t} else if (this.lexerActions.length != other.lexerActions.length) {\n\t\treturn false;\n\t} else {\n\t\tvar numActions = this.lexerActions.length\n\t\tfor (var idx = 0; idx < numActions; ++idx) {\n\t\t\tif (!this.lexerActions[idx].equals(other.lexerActions[idx])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n};\n\nexports.LexerActionExecutor = LexerActionExecutor;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/atn/LexerActionExecutor.js\n// module id = /Z+8\n// module chunks = 0 1 2","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar policy = require('presentable_policy_lang');\nvar policyListener = policy.policyListener;\nvar underscore = require('underscore');\n\n//排列\npermute.permArr = [];\npermute.usedChars = [];\nfunction permute(input) {\n  var i = void 0,\n    ch = void 0;\n  for (i = 0; i < input.length; i++) {\n    ch = input.splice(i, 1)[0];\n    permute.usedChars.push(ch);\n    if (input.length == 0) {\n      permute.permArr.push(permute.usedChars.slice());\n    }\n    permute(input);\n    input.splice(i, 0, ch);\n    permute.usedChars.pop();\n  }\n  return permute.permArr;\n};\n//随机的中间态名称\nfunction genRandomStateName(evt1, evt2, evtName) {\n  return 'autoGenratedState_' + evt1 + '_' + evt2 + '_' + evtName + '_' + (new Date() * Math.random()).toString(36).substring(0, 4);\n};\n\nvar JSONGeneratorExtentionClass = function (_policyListener) {\n  _inherits(JSONGeneratorExtentionClass, _policyListener);\n\n  function JSONGeneratorExtentionClass() {\n    _classCallCheck(this, JSONGeneratorExtentionClass);\n\n    var _this = _possibleConstructorReturn(this, (JSONGeneratorExtentionClass.__proto__ || Object.getPrototypeOf(JSONGeneratorExtentionClass)).call(this));\n\n    _this.errorMsg = null;\n    _this.policy_segments = [];\n    return _this;\n  }\n\n  _createClass(JSONGeneratorExtentionClass, [{\n    key: 'enterP',\n    value: function enterP(ctx) {}\n  }, {\n    key: 'exitP',\n    value: function exitP(ctx) {}\n  }, {\n    key: 'enterStart_hour',\n    value: function enterStart_hour(ctx) {}\n  }, {\n    key: 'exitStart_hour',\n    value: function exitStart_hour(ctx) {}\n  }, {\n    key: 'enterEnd_hour',\n    value: function enterEnd_hour(ctx) {}\n  }, {\n    key: 'exitEnd_hour',\n    value: function exitEnd_hour(ctx) {}\n  }, {\n    key: 'enterSegment',\n    value: function enterSegment(ctx) {\n      //对应一个segment\n      ctx.segment_block = {\n        initialState: 'initial',\n        teminateState: 'terminate',\n        users: [], //暂时只有两种user，个人的和组的\n        states: [],\n        all_occured_states: [],\n        state_transition_table: []\n      };\n    }\n  }, {\n    key: 'exitSegment',\n    value: function exitSegment(ctx) {\n      // this.policy_segments.push(ctx.segment_block);\n    }\n  }, {\n    key: 'enterAudience_clause',\n\n    // 留给下简化版\n    // enterSettlement_clause (ctx) {};\n    // exitSettlement_clause (ctx) {\n    //   //settlement事件\n    //   let settlementForward = {\n    //     type: 'settlementForward',\n    //     params: [3, 'day'],\n    //     eventName: 'settlementForward_3_day'\n    //   };\n    //   let accountSettled = {\n    //     type: 'accountSettled',\n    //     params: [],\n    //     eventName: 'accountSettled'\n    //   };\n    //   //列出所有token states\n    //   let tokenStates = _.reduce( ctx.ID(), (x, y)=> {\n    //     return x.concat(y.getText())\n    //   }, []);\n    //   //获取对应的segment\n    //   let segment = this.policy_segments[this.policy_segments.length-1];\n    //   //检查tokens staets 是否已经出现,并且暂存一起来，如果pass验证，那么就concat进去了\n    //   let tempStates = [];\n    //   let statesOccured = _.every(tokenStates, (el)=> {\n    //     tempStates.push({\n    //       currentState: el,\n    //       event: settlementForward,\n    //       nextState: 'settlement'\n    //     });\n    //     tempStates.push({\n    //       currentState: 'settlement',\n    //       event: accountSettled,\n    //       nextState: el\n    //     });\n    //     return _.contains(segment.all_occured_states, el);\n    //   });\n    //   // //针对当前segment加入结算事件\n    //   if ( statesOccured ) {\n    //     Array.prototype.push.apply(this.policy_segments[this.policy_segments.length-1].state_transition_table, tempStates);\n    //   }\n    // };\n    value: function enterAudience_clause(ctx) {\n      ctx.segment_block = ctx.parentCtx.segment_block;\n    }\n  }, {\n    key: 'exitAudience_clause',\n    value: function exitAudience_clause(ctx) {\n      ctx.parentCtx.segment_block = ctx.segment_block;\n    }\n  }, {\n    key: 'enterAthorize_token_clause',\n    value: function enterAthorize_token_clause(ctx) {\n      ctx.segment_block = ctx.parentCtx.segment_block;\n      ctx.segment_block.activatedStates = [];\n      underscore.each(ctx.ID(), function (state) {\n        ctx.segment_block.activatedStates.push(state.getText());\n      });\n    }\n  }, {\n    key: 'exitAthorize_token_clause',\n    value: function exitAthorize_token_clause(ctx) {\n      this.policy_segments.push(ctx.segment_block);\n    }\n  }, {\n    key: 'enterAudience_individuals_clause',\n    value: function enterAudience_individuals_clause(ctx) {\n      ctx.segment_block = ctx.parentCtx.segment_block;\n      ctx.userObj = {};\n      ctx.userObj.userType = 'individuals';\n    }\n  }, {\n    key: 'exitAudience_individuals_clause',\n    value: function exitAudience_individuals_clause(ctx) {\n      ctx.segment_block.users.push(ctx.userObj);\n      ctx.parentCtx.segment_block = ctx.segment_block;\n    }\n  }, {\n    key: 'enterAudience_groups_clause',\n    value: function enterAudience_groups_clause(ctx) {\n      ctx.segment_block = ctx.parentCtx.segment_block;\n      ctx.userObj = {};\n      ctx.userObj.userType = 'groups';\n    }\n  }, {\n    key: 'exitAudience_groups_clause',\n    value: function exitAudience_groups_clause(ctx) {\n      ctx.segment_block.users.push(ctx.userObj);\n      ctx.parentCtx.segment_block = ctx.segment_block;\n    }\n  }, {\n    key: 'enterState_clause',\n    value: function enterState_clause(ctx) {\n      ctx.segment_block = ctx.parentCtx.segment_block;\n    }\n  }, {\n    key: 'exitState_clause',\n    value: function exitState_clause(ctx) {\n      ctx.parentCtx.segment_block = ctx.segment_block;\n    }\n  }, {\n    key: 'enterCurrent_state_clause',\n    value: function enterCurrent_state_clause(ctx) {\n      ctx.segment_block = ctx.parentCtx.segment_block;\n      ctx.segment_block.states.push(ctx.ID().getText());\n      ctx.segment_block.all_occured_states.push(ctx.ID().getText());\n      ctx.segment_block.all_occured_states = underscore.uniq(ctx.segment_block.all_occured_states);\n    }\n  }, {\n    key: 'exitCurrent_state_clause',\n    value: function exitCurrent_state_clause(ctx) {\n      ctx.parentCtx.segment_block = ctx.segment_block;\n    }\n  }, {\n    key: 'enterTarget_clause',\n    value: function enterTarget_clause(ctx) {\n      ctx.segment_block = ctx.parentCtx.segment_block;\n      //重置state\n      ctx.current_state = ctx.parentCtx.current_state_clause().ID().getText();\n      //next_state\n      ctx.next_state = ctx.ID().getText();\n      //重置event\n      ctx.events = [];\n    }\n  }, {\n    key: 'exitTarget_clause',\n\n\n    // Exit a parse tree produced by policyParser#target_clause.\n    value: function exitTarget_clause(ctx) {\n      var state_transition = void 0;\n      if (ctx.events.length > 1) {\n        state_transition = {\n          currentState: ctx.current_state,\n          event: {\n            type: 'compoundEvents',\n            params: ctx.events\n          },\n          nextState: ctx.next_state\n        };\n      } else {\n        state_transition = {\n          currentState: ctx.current_state,\n          event: ctx.events[0],\n          nextState: ctx.next_state\n        };\n      }\n      ctx.segment_block.state_transition_table.push(state_transition);\n      // //生成中间状态\n      // let tempCurrent = ctx.current_state;\n      // //permute当前events\n      // _.each(permute(ctx.events), (orderedEvts) => {\n      //   tempCurrent = ctx.current_state;\n      //   let path = [];\n      //   while (orderedEvts.length != 0) {\n      //     let event = orderedEvts.pop();\n      //     path.push(event.type);\n      //     let randomStateName = genRandomStateName(ctx.current_state, ctx.next_state,path.join('-'));\n      //     let state_transition = {\n      //       currentState: tempCurrent,\n      //       event: event,\n      //       nextState: ctx.next_state\n      //     };\n      //     if (orderedEvts.length != 0) {\n      //       state_transition.nextState = randomStateName;\n      //       tempCurrent = randomStateName;\n      //       ctx.segment_block.all_occured_states.push(randomStateName); //记录同一个起始state下面所有的target state及中间state\n      //     }\n      //     ctx.segment_block.state_transition_table.push(state_transition);\n      //   }\n      // });\n      //记录同一个curren_state 下的多个target\n      ctx.segment_block.all_occured_states.push(ctx.next_state);\n      ctx.segment_block.all_occured_states = underscore.uniq(ctx.segment_block.all_occured_states);\n      //回传\n      ctx.parentCtx.segment_block = ctx.segment_block;\n    }\n  }, {\n    key: 'enterEvent',\n    value: function enterEvent(ctx) {\n      ctx.events = ctx.parentCtx.events;\n    }\n  }, {\n    key: 'exitEvent',\n    value: function exitEvent(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterAnd_event',\n    value: function enterAnd_event(ctx) {\n      ctx.events = ctx.parentCtx.events;\n    }\n  }, {\n    key: 'exitAnd_event',\n    value: function exitAnd_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterPeriod_event',\n    value: function enterPeriod_event(ctx) {\n      var timeUnit = ctx.time_unit().getText();\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({\n        type: 'period',\n        params: [timeUnit],\n        eventName: 'period_' + timeUnit + '_event'\n      });\n    }\n  }, {\n    key: 'exitPeriod_event',\n    value: function exitPeriod_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterSpecific_date_event',\n    value: function enterSpecific_date_event(ctx) {\n      var date = ctx.DATE().getText();\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({\n        type: 'arrivalDate',\n        params: [1, date],\n        eventName: 'arrivalDate_1_' + date + '_event'\n      });\n    }\n  }, {\n    key: 'exitSpecific_date_event',\n    value: function exitSpecific_date_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterRelative_date_event',\n    value: function enterRelative_date_event(ctx) {\n      var day = Number(ctx.INT().getText());\n      var unit = ctx.time_unit().getText();\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({\n        type: 'arrivalDate',\n        params: [0, day, unit],\n        eventName: 'arrivalDate_0_' + day + '_' + unit + '_event'\n      });\n    }\n  }, {\n    key: 'exitRelative_date_event',\n    value: function exitRelative_date_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterPricing_agreement_event',\n    value: function enterPricing_agreement_event(ctx) {\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({\n        type: 'pricingAgreement',\n        params: [tbd],\n        eventName: 'pricingAgreement'\n      });\n    }\n  }, {\n    key: 'exitPricing_agreement_event',\n    value: function exitPricing_agreement_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterTransaction_event',\n    value: function enterTransaction_event(ctx) {\n      var transactionAmount = Number(ctx.INT().getText());\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({\n        type: 'transaction',\n        params: ['userId', transactionAmount],\n        eventName: 'transaction_userid_' + transactionAmount\n      });\n    }\n  }, {\n    key: 'exitTransaction_event',\n    value: function exitTransaction_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterSigning_event',\n    value: function enterSigning_event(ctx) {\n      ctx.events = ctx.parentCtx.events;\n      var tempLicenseIds = [];\n      underscore.each(ctx.license_resource_id(), function (licensId) {\n        tempLicenseIds.push(licensId.getText());\n      });\n      ctx.events.push({\n        type: 'signing',\n        params: tempLicenseIds,\n        eventName: 'signing_' + tempLicenseIds.join('_')\n      });\n    }\n  }, {\n    key: 'exitSigning_event',\n    value: function exitSigning_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterGuaranty_event',\n    value: function enterGuaranty_event(ctx) {\n      ctx.events = ctx.parentCtx.events;\n    }\n  }, {\n    key: 'exitGuaranty_event',\n    value: function exitGuaranty_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterContract_guaranty',\n    value: function enterContract_guaranty(ctx) {\n      var amount = ctx.INT()[0].getText();\n      var day = ctx.INT()[1].getText();\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({\n        type: 'contractGuaranty',\n        params: [amount, day, 'day'],\n        eventName: 'contractGuaranty_' + amount + '_' + day + '_event'\n      });\n    }\n  }, {\n    key: 'exitContract_guaranty',\n    value: function exitContract_guaranty(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterPlatform_guaranty',\n    value: function enterPlatform_guaranty(ctx) {\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({\n        type: 'platformGuaranty',\n        params: [Number(ctx.INT().getText())],\n        eventName: 'platformGuaranty'\n      });\n    }\n  }, {\n    key: 'exitPlatform_guaranty',\n    value: function exitPlatform_guaranty(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterSettlement_event',\n    value: function enterSettlement_event(ctx) {\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({\n        type: 'accountSettled',\n        params: []\n      });\n    }\n  }, {\n    key: 'exitSettlement_event',\n    value: function exitSettlement_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterAccess_count_event',\n    value: function enterAccess_count_event(ctx) {\n      ctx.events = ctx.parentCtx.events;\n    }\n  }, {\n    key: 'exitAccess_count_event',\n    value: function exitAccess_count_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterVisit_increment_event',\n    value: function enterVisit_increment_event(ctx) {\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({\n        type: 'accessCountIncrement',\n        params: [Number(ctx.INT().getText())]\n      });\n    }\n  }, {\n    key: 'exitVisit_increment_event',\n\n\n    // Exit a parse tree produced by policyParser#visit_increment_event.\n    value: function exitVisit_increment_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterVisit_event',\n    value: function enterVisit_event(ctx) {\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({\n        type: 'accessCount',\n        params: [Number(ctx.INT().getText())]\n      });\n    }\n  }, {\n    key: 'exitVisit_event',\n    value: function exitVisit_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterBalance_event',\n    value: function enterBalance_event(ctx) {\n      ctx.events = ctx.parentCtx.events;\n    }\n  }, {\n    key: 'exitBalance_event',\n    value: function exitBalance_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterBalance_greater',\n\n\n    // Enter a parse tree produced by policyParser#balance_greater.\n    value: function enterBalance_greater(ctx) {\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({ type: 'balance_smaller_event', params: ctx.getText() });\n    }\n  }, {\n    key: 'exitBalance_greater',\n    value: function exitBalance_greater(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterBalance_smaller',\n    value: function enterBalance_smaller(ctx) {\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({ type: 'balance_greater_event', params: ctx.getText() });\n    }\n  }, {\n    key: 'exitBalance_smaller',\n    value: function exitBalance_smaller(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterTime_unit',\n    value: function enterTime_unit(ctx) {}\n  }, {\n    key: 'exitTime_unit',\n    value: function exitTime_unit(ctx) {}\n  }, {\n    key: 'enterState',\n    value: function enterState(ctx) {}\n  }, {\n    key: 'exitState',\n    value: function exitState(ctx) {}\n  }, {\n    key: 'enterLicense_resource_id',\n    value: function enterLicense_resource_id(ctx) {}\n  }, {\n    key: 'exitLicense_resource_id',\n    value: function exitLicense_resource_id(ctx) {}\n  }, {\n    key: 'enterUsers',\n    value: function enterUsers(ctx) {\n      //继承\n      ctx.userObj = ctx.parentCtx.userObj;\n      //新增users\n      ctx.userObj.users = ctx.userObj.users || [];\n      for (var i = 0; i < ctx.getChildCount(); i++) {\n        if (ctx.getChild(i).getText() != ',') {\n          //修改\n          ctx.userObj.users.push(ctx.getChild(i).getText());\n        }\n      }\n    }\n  }, {\n    key: 'exitUsers',\n    value: function exitUsers(ctx) {\n      //回传\n      ctx.parentCtx.userObj = ctx.userObj;\n    }\n  }, {\n    key: 'enterUser_groups',\n    value: function enterUser_groups(ctx) {\n      //继承\n      ctx.userObj = ctx.parentCtx.userObj;\n      //新增users\n      ctx.userObj.users = ctx.userObj.users || [];\n      for (var i = 0; i < ctx.getChildCount(); i++) {\n        if (ctx.getChild(i).getText() != ',') {\n          ctx.userObj.users.push(ctx.getChild(i).getText());\n        }\n      }\n    }\n  }, {\n    key: 'exitUser_groups',\n    value: function exitUser_groups(ctx) {\n      //回传\n      ctx.parentCtx.userObj = ctx.userObj;\n    }\n  }]);\n\n  return JSONGeneratorExtentionClass;\n}(policyListener);\n\n;\n\nmodule.exports = JSONGeneratorExtentionClass;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/presentable_policy_compiler/JSONGeneratorExtension.js\n// module id = /qG2\n// module chunks = 2","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"presentable-steps\"},[_c('el-steps',{attrs:{\"space\":300,\"active\":_vm.active,\"process-status\":_vm.processStatus,\"finish-status\":_vm.finishStatus,\"align-center\":\"\"}},[_c('el-step',{attrs:{\"title\":\"创建合同\",\"description\":\"与资源作者签订资源使用策略\"}}),_vm._v(\" \"),_c('el-step',{attrs:{\"title\":\"创建user policy\",\"description\":\"制定用户查看Presentable的策略\"}}),_vm._v(\" \"),_c('el-step',{attrs:{\"title\":\"完成\",\"description\":\"成功创建Presentable\"}})],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-b9e66b48\",\"hasScoped\":true,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/node/presentable/steps/index.vue\n// module id = /qoj\n// module chunks = 0 2","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-afdd11ca\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/less-loader/dist/cjs.js?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"61d84127\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/vue-style-loader!./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-afdd11ca\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/less-loader/dist/cjs.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/views/node/presentables/index.vue\n// module id = /tJ5\n// module chunks = 2","function injectStyle (ssrContext) {\n  require(\"!!../../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-b9e66b48\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-b9e66b48\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-b9e66b48\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/node/presentable/steps/index.vue\n// module id = 0AMZ\n// module chunks = 0 2","/*! https://mths.be/codepointat v0.2.0 by @mathias */\nif (!String.prototype.codePointAt) {\n\t(function() {\n\t\t'use strict'; // needed to support `apply`/`call` with `undefined`/`null`\n\t\tvar defineProperty = (function() {\n\t\t\t// IE 8 only supports `Object.defineProperty` on DOM elements\n\t\t\ttry {\n\t\t\t\tvar object = {};\n\t\t\t\tvar $defineProperty = Object.defineProperty;\n\t\t\t\tvar result = $defineProperty(object, object, object) && $defineProperty;\n\t\t\t} catch(error) {}\n\t\t\treturn result;\n\t\t}());\n\t\tvar codePointAt = function(position) {\n\t\t\tif (this == null) {\n\t\t\t\tthrow TypeError();\n\t\t\t}\n\t\t\tvar string = String(this);\n\t\t\tvar size = string.length;\n\t\t\t// `ToInteger`\n\t\t\tvar index = position ? Number(position) : 0;\n\t\t\tif (index != index) { // better `isNaN`\n\t\t\t\tindex = 0;\n\t\t\t}\n\t\t\t// Account for out-of-bounds indices:\n\t\t\tif (index < 0 || index >= size) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\t// Get the first code unit\n\t\t\tvar first = string.charCodeAt(index);\n\t\t\tvar second;\n\t\t\tif ( // check if it’s the start of a surrogate pair\n\t\t\t\tfirst >= 0xD800 && first <= 0xDBFF && // high surrogate\n\t\t\t\tsize > index + 1 // there is a next code unit\n\t\t\t) {\n\t\t\t\tsecond = string.charCodeAt(index + 1);\n\t\t\t\tif (second >= 0xDC00 && second <= 0xDFFF) { // low surrogate\n\t\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\t\treturn (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn first;\n\t\t};\n\t\tif (defineProperty) {\n\t\t\tdefineProperty(String.prototype, 'codePointAt', {\n\t\t\t\t'value': codePointAt,\n\t\t\t\t'configurable': true,\n\t\t\t\t'writable': true\n\t\t\t});\n\t\t} else {\n\t\t\tString.prototype.codePointAt = codePointAt;\n\t\t}\n\t}());\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/polyfills/codepointat.js\n// module id = 13lD\n// module chunks = 0 1 2","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-361849fa\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-361849fa\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-361849fa\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/TableView/index.vue\n// module id = 1G+u\n// module chunks = 0 1 2 7","// 20.1.2.3 Number.isInteger(number)\nvar $export = require('./_export');\n\n$export($export.S, 'Number', { isInteger: require('./_is-integer') });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.number.is-integer.js\n// module id = 1alW\n// module chunks = 0 2","exports.policyLexer = require('./gen/policyLexer').policyLexer;\r\nexports.policyParser = require('./gen/policyParser').policyParser;\r\nexports.policyListener = require('./gen/policyListener').policyListener\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/policy_lang/index.js\n// module id = 1sgP\n// module chunks = 0 1 2","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\nvar Token = require('./Token').Token;\nvar ConsoleErrorListener = require('./error/ErrorListener').ConsoleErrorListener;\nvar ProxyErrorListener = require('./error/ErrorListener').ProxyErrorListener;\n\nfunction Recognizer() {\n    this._listeners = [ ConsoleErrorListener.INSTANCE ];\n    this._interp = null;\n    this._stateNumber = -1;\n    return this;\n}\n\nRecognizer.tokenTypeMapCache = {};\nRecognizer.ruleIndexMapCache = {};\n\n\nRecognizer.prototype.checkVersion = function(toolVersion) {\n    var runtimeVersion = \"4.7.1\";\n    if (runtimeVersion!==toolVersion) {\n        console.log(\"ANTLR runtime and generated code versions disagree: \"+runtimeVersion+\"!=\"+toolVersion);\n    }\n};\n\nRecognizer.prototype.addErrorListener = function(listener) {\n    this._listeners.push(listener);\n};\n\nRecognizer.prototype.removeErrorListeners = function() {\n    this._listeners = [];\n};\n\nRecognizer.prototype.getTokenTypeMap = function() {\n    var tokenNames = this.getTokenNames();\n    if (tokenNames===null) {\n        throw(\"The current recognizer does not provide a list of token names.\");\n    }\n    var result = this.tokenTypeMapCache[tokenNames];\n    if(result===undefined) {\n        result = tokenNames.reduce(function(o, k, i) { o[k] = i; });\n        result.EOF = Token.EOF;\n        this.tokenTypeMapCache[tokenNames] = result;\n    }\n    return result;\n};\n\n// Get a map from rule names to rule indexes.\n//\n// <p>Used for XPath and tree pattern compilation.</p>\n//\nRecognizer.prototype.getRuleIndexMap = function() {\n    var ruleNames = this.ruleNames;\n    if (ruleNames===null) {\n        throw(\"The current recognizer does not provide a list of rule names.\");\n    }\n    var result = this.ruleIndexMapCache[ruleNames];\n    if(result===undefined) {\n        result = ruleNames.reduce(function(o, k, i) { o[k] = i; });\n        this.ruleIndexMapCache[ruleNames] = result;\n    }\n    return result;\n};\n\nRecognizer.prototype.getTokenType = function(tokenName) {\n    var ttype = this.getTokenTypeMap()[tokenName];\n    if (ttype !==undefined) {\n        return ttype;\n    } else {\n        return Token.INVALID_TYPE;\n    }\n};\n\n\n// What is the error header, normally line/character position information?//\nRecognizer.prototype.getErrorHeader = function(e) {\n    var line = e.getOffendingToken().line;\n    var column = e.getOffendingToken().column;\n    return \"line \" + line + \":\" + column;\n};\n\n\n// How should a token be displayed in an error message? The default\n//  is to display just the text, but during development you might\n//  want to have a lot of information spit out.  Override in that case\n//  to use t.toString() (which, for CommonToken, dumps everything about\n//  the token). This is better than forcing you to override a method in\n//  your token objects because you don't have to go modify your lexer\n//  so that it creates a new Java type.\n//\n// @deprecated This method is not called by the ANTLR 4 Runtime. Specific\n// implementations of {@link ANTLRErrorStrategy} may provide a similar\n// feature when necessary. For example, see\n// {@link DefaultErrorStrategy//getTokenErrorDisplay}.\n//\nRecognizer.prototype.getTokenErrorDisplay = function(t) {\n    if (t===null) {\n        return \"<no token>\";\n    }\n    var s = t.text;\n    if (s===null) {\n        if (t.type===Token.EOF) {\n            s = \"<EOF>\";\n        } else {\n            s = \"<\" + t.type + \">\";\n        }\n    }\n    s = s.replace(\"\\n\",\"\\\\n\").replace(\"\\r\",\"\\\\r\").replace(\"\\t\",\"\\\\t\");\n    return \"'\" + s + \"'\";\n};\n\nRecognizer.prototype.getErrorListenerDispatch = function() {\n    return new ProxyErrorListener(this._listeners);\n};\n\n// subclass needs to override these if there are sempreds or actions\n// that the ATN interp needs to execute\nRecognizer.prototype.sempred = function(localctx, ruleIndex, actionIndex) {\n    return true;\n};\n\nRecognizer.prototype.precpred = function(localctx , precedence) {\n    return true;\n};\n\n//Indicate that the recognizer has changed internal state that is\n//consistent with the ATN state passed in.  This way we always know\n//where we are in the ATN as the parser goes along. The rule\n//context objects form a stack that lets us see the stack of\n//invoking rules. Combine this and we have complete ATN\n//configuration information.\n\nObject.defineProperty(Recognizer.prototype, \"state\", {\n\tget : function() {\n\t\treturn this._stateNumber;\n\t},\n\tset : function(state) {\n\t\tthis._stateNumber = state;\n\t}\n});\n\n\nexports.Recognizer = Recognizer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/Recognizer.js\n// module id = 2EdO\n// module chunks = 0 1 2","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[(!_vm.detail.presentableId)?_c('presentable-steps',{staticClass:\"presentable-steps\",attrs:{\"active\":1}}):_vm._e(),_vm._v(\" \"),_c('el-tabs',{attrs:{\"tab-position\":_vm.tabPosition},model:{value:(_vm.activeTabName),callback:function ($$v) {_vm.activeTabName=$$v},expression:\"activeTabName\"}},[_c('el-tab-pane',{attrs:{\"label\":\"资源详情\",\"name\":\"resource\"}},[(_vm.detail._resourceDetail)?_c('ul',{staticClass:\"p-detail\"},[_c('li',[_c('label',{staticClass:\"item-title\"},[_vm._v(\"resource Id\")]),_vm._v(\" \"),_c('span',{staticClass:\"item-detail\"},[_vm._v(_vm._s(_vm.detail._resourceDetail.resourceId))])]),_vm._v(\" \"),_c('li',[_c('label',{staticClass:\"item-title\"},[_vm._v(\"resource name\")]),_vm._v(\" \"),_c('span',{staticClass:\"item-detail\"},[_vm._v(_vm._s(_vm.detail._resourceDetail.resourceName))])]),_vm._v(\" \"),_c('li',[_c('label',{staticClass:\"item-title\"},[_vm._v(\"resource type\")]),_vm._v(\" \"),_c('span',{staticClass:\"item-detail\"},[_vm._v(_vm._s(_vm.detail._resourceDetail.resourceType))])]),_vm._v(\" \"),_c('li',[_c('label',{staticClass:\"item-title\"},[_vm._v(\"status\")]),_vm._v(\" \"),_c('span',{staticClass:\"item-detail\"},[_vm._v(_vm._s(_vm.detail._resourceDetail.status))])]),_vm._v(\" \"),_c('li',[_c('label',{staticClass:\"item-title\"},[_vm._v(\"author\")]),_vm._v(\" \"),_c('span',{staticClass:\"item-detail\"},[_vm._v(_vm._s(_vm.detail._resourceDetail.userId))])]),_vm._v(\" \"),_c('li',[_c('label',{staticClass:\"item-title\"},[_vm._v(\"create date\")]),_vm._v(\" \"),_c('span',{staticClass:\"item-detail\"},[_vm._v(_vm._s(_vm._f(\"fmtDate\")(_vm.detail._resourceDetail.createDate)))])])]):_vm._e()]),_vm._v(\" \"),_c('el-tab-pane',{attrs:{\"label\":\"presentable 详情\",\"name\":\"presentable\"}},[(_vm.detail.presentableId)?_c('div',[_c('ul',{staticClass:\"p-detail\"},[_c('li',[_c('label',{staticClass:\"item-title\"},[_vm._v(\"presentable Id\")]),_vm._v(\" \"),_c('span',{staticClass:\"item-detail\"},[_vm._v(_vm._s(_vm.detail.presentableId))])]),_vm._v(\" \"),_c('li',[_c('label',{staticClass:\"item-title\"},[_vm._v(\"create date\")]),_vm._v(\" \"),_c('span',{staticClass:\"item-detail\"},[_vm._v(_vm._s(_vm._f(\"fmtDate\")(_vm.detail.createDate)))])]),_vm._v(\" \"),_c('li',[_c('label',{staticClass:\"item-title\"},[_vm._v(\"presentable name\")]),_vm._v(\" \"),_c('span',{staticClass:\"item-detail\"},[_c('el-input',{model:{value:(_vm.detail.name),callback:function ($$v) {_vm.$set(_vm.detail, \"name\", $$v)},expression:\"detail.name\"}})],1)]),_vm._v(\" \"),_c('li',[_c('label',{staticClass:\"item-title\"},[_vm._v(\"tags\")]),_vm._v(\" \"),_c('div',{staticClass:\"item-detail\"},[_c('presentable-tags',{model:{value:(_vm.detail.tagInfo.userDefined),callback:function ($$v) {_vm.$set(_vm.detail.tagInfo, \"userDefined\", $$v)},expression:\"detail.tagInfo.userDefined\"}})],1)]),_vm._v(\" \"),_c('li',[_c('label',{staticClass:\"item-title\"},[_vm._v(\"use policy\")]),_vm._v(\" \"),_c('div',{staticClass:\"item-detail\",staticStyle:{\"width\":\"500px\"}},[_c('presentable-policy',{model:{value:(_vm.detail._formatSegmentText),callback:function ($$v) {_vm.$set(_vm.detail, \"_formatSegmentText\", $$v)},expression:\"detail._formatSegmentText\"}})],1)]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.updatePresentableHandler}},[_vm._v(\"更新presentable\")])],1)]):_c('div',{staticClass:\"uncreated-policy-tip\"},[_vm._v(\"\\n        还未创建user policy\\n        \"),_c('el-button',{on:{\"click\":_vm.updatePresentableHandler}},[_vm._v(\"创建\")])],1)]),_vm._v(\" \"),_c('el-tab-pane',{attrs:{\"label\":\"合同详情\",\"name\":\"contract\"}},[_c('presentable-contract-detail',{attrs:{\"contractDetail\":_vm.detail._contractDetail}})],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-6983dd12\",\"hasScoped\":true,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/node/presentable/detail/index.vue\n// module id = 2LyA\n// module chunks = 2","import * as contract from './contract'\nimport * as resource from './resource'\nimport * as presentable from './presentable'\n\nexport default {...contract, ...resource, ...presentable}\n\n\n\n// WEBPACK FOOTER //\n// ./src/config/index.js","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nvar Token = require('./../Token').Token;\nvar ATN = require('./ATN').ATN;\nvar ATNType = require('./ATNType').ATNType;\nvar ATNStates = require('./ATNState');\nvar ATNState = ATNStates.ATNState;\nvar BasicState = ATNStates.BasicState;\nvar DecisionState = ATNStates.DecisionState;\nvar BlockStartState = ATNStates.BlockStartState;\nvar BlockEndState = ATNStates.BlockEndState;\nvar LoopEndState = ATNStates.LoopEndState;\nvar RuleStartState = ATNStates.RuleStartState;\nvar RuleStopState = ATNStates.RuleStopState;\nvar TokensStartState = ATNStates.TokensStartState;\nvar PlusLoopbackState = ATNStates.PlusLoopbackState;\nvar StarLoopbackState = ATNStates.StarLoopbackState;\nvar StarLoopEntryState = ATNStates.StarLoopEntryState;\nvar PlusBlockStartState = ATNStates.PlusBlockStartState;\nvar StarBlockStartState = ATNStates.StarBlockStartState;\nvar BasicBlockStartState = ATNStates.BasicBlockStartState;\nvar Transitions = require('./Transition');\nvar Transition = Transitions.Transition;\nvar AtomTransition = Transitions.AtomTransition;\nvar SetTransition = Transitions.SetTransition;\nvar NotSetTransition = Transitions.NotSetTransition;\nvar RuleTransition = Transitions.RuleTransition;\nvar RangeTransition = Transitions.RangeTransition;\nvar ActionTransition = Transitions.ActionTransition;\nvar EpsilonTransition = Transitions.EpsilonTransition;\nvar WildcardTransition = Transitions.WildcardTransition;\nvar PredicateTransition = Transitions.PredicateTransition;\nvar PrecedencePredicateTransition = Transitions.PrecedencePredicateTransition;\nvar IntervalSet = require('./../IntervalSet').IntervalSet;\nvar Interval = require('./../IntervalSet').Interval;\nvar ATNDeserializationOptions = require('./ATNDeserializationOptions').ATNDeserializationOptions;\nvar LexerActions = require('./LexerAction');\nvar LexerActionType = LexerActions.LexerActionType;\nvar LexerSkipAction = LexerActions.LexerSkipAction;\nvar LexerChannelAction = LexerActions.LexerChannelAction;\nvar LexerCustomAction = LexerActions.LexerCustomAction;\nvar LexerMoreAction = LexerActions.LexerMoreAction;\nvar LexerTypeAction = LexerActions.LexerTypeAction;\nvar LexerPushModeAction = LexerActions.LexerPushModeAction;\nvar LexerPopModeAction = LexerActions.LexerPopModeAction;\nvar LexerModeAction = LexerActions.LexerModeAction;\n// This is the earliest supported serialized UUID.\n// stick to serialized version for now, we don't need a UUID instance\nvar BASE_SERIALIZED_UUID = \"AADB8D7E-AEEF-4415-AD2B-8204D6CF042E\";\n\n//\n// This UUID indicates the serialized ATN contains two sets of\n// IntervalSets, where the second set's values are encoded as\n// 32-bit integers to support the full Unicode SMP range up to U+10FFFF.\n//\nvar ADDED_UNICODE_SMP = \"59627784-3BE5-417A-B9EB-8131A7286089\";\n\n// This list contains all of the currently supported UUIDs, ordered by when\n// the feature first appeared in this branch.\nvar SUPPORTED_UUIDS = [ BASE_SERIALIZED_UUID, ADDED_UNICODE_SMP ];\n\nvar SERIALIZED_VERSION = 3;\n\n// This is the current serialized UUID.\nvar SERIALIZED_UUID = ADDED_UNICODE_SMP;\n\nfunction initArray( length, value) {\n\tvar tmp = [];\n\ttmp[length-1] = value;\n\treturn tmp.map(function(i) {return value;});\n}\n\nfunction ATNDeserializer (options) {\n\n    if ( options=== undefined || options === null ) {\n        options = ATNDeserializationOptions.defaultOptions;\n    }\n    this.deserializationOptions = options;\n    this.stateFactories = null;\n    this.actionFactories = null;\n\n    return this;\n}\n\n// Determines if a particular serialized representation of an ATN supports\n// a particular feature, identified by the {@link UUID} used for serializing\n// the ATN at the time the feature was first introduced.\n//\n// @param feature The {@link UUID} marking the first time the feature was\n// supported in the serialized ATN.\n// @param actualUuid The {@link UUID} of the actual serialized ATN which is\n// currently being deserialized.\n// @return {@code true} if the {@code actualUuid} value represents a\n// serialized ATN at or after the feature identified by {@code feature} was\n// introduced; otherwise, {@code false}.\n\nATNDeserializer.prototype.isFeatureSupported = function(feature, actualUuid) {\n    var idx1 = SUPPORTED_UUIDS.indexOf(feature);\n    if (idx1<0) {\n        return false;\n    }\n    var idx2 = SUPPORTED_UUIDS.indexOf(actualUuid);\n    return idx2 >= idx1;\n};\n\nATNDeserializer.prototype.deserialize = function(data) {\n    this.reset(data);\n    this.checkVersion();\n    this.checkUUID();\n    var atn = this.readATN();\n    this.readStates(atn);\n    this.readRules(atn);\n    this.readModes(atn);\n    var sets = [];\n    // First, deserialize sets with 16-bit arguments <= U+FFFF.\n    this.readSets(atn, sets, this.readInt.bind(this));\n    // Next, if the ATN was serialized with the Unicode SMP feature,\n    // deserialize sets with 32-bit arguments <= U+10FFFF.\n    if (this.isFeatureSupported(ADDED_UNICODE_SMP, this.uuid)) {\n        this.readSets(atn, sets, this.readInt32.bind(this));\n    }\n    this.readEdges(atn, sets);\n    this.readDecisions(atn);\n    this.readLexerActions(atn);\n    this.markPrecedenceDecisions(atn);\n    this.verifyATN(atn);\n    if (this.deserializationOptions.generateRuleBypassTransitions && atn.grammarType === ATNType.PARSER ) {\n        this.generateRuleBypassTransitions(atn);\n        // re-verify after modification\n        this.verifyATN(atn);\n    }\n    return atn;\n};\n\nATNDeserializer.prototype.reset = function(data) {\n\tvar adjust = function(c) {\n        var v = c.charCodeAt(0);\n        return v>1  ? v-2 : v + 65533;\n\t};\n    var temp = data.split(\"\").map(adjust);\n    // don't adjust the first value since that's the version number\n    temp[0] = data.charCodeAt(0);\n    this.data = temp;\n    this.pos = 0;\n};\n\nATNDeserializer.prototype.checkVersion = function() {\n    var version = this.readInt();\n    if ( version !== SERIALIZED_VERSION ) {\n        throw (\"Could not deserialize ATN with version \" + version + \" (expected \" + SERIALIZED_VERSION + \").\");\n    }\n};\n\nATNDeserializer.prototype.checkUUID = function() {\n    var uuid = this.readUUID();\n    if (SUPPORTED_UUIDS.indexOf(uuid)<0) {\n        throw (\"Could not deserialize ATN with UUID: \" + uuid +\n                        \" (expected \" + SERIALIZED_UUID + \" or a legacy UUID).\", uuid, SERIALIZED_UUID);\n    }\n    this.uuid = uuid;\n};\n\nATNDeserializer.prototype.readATN = function() {\n    var grammarType = this.readInt();\n    var maxTokenType = this.readInt();\n    return new ATN(grammarType, maxTokenType);\n};\n\nATNDeserializer.prototype.readStates = function(atn) {\n\tvar j, pair, stateNumber;\n    var loopBackStateNumbers = [];\n    var endStateNumbers = [];\n    var nstates = this.readInt();\n    for(var i=0; i<nstates; i++) {\n        var stype = this.readInt();\n        // ignore bad type of states\n        if (stype===ATNState.INVALID_TYPE) {\n            atn.addState(null);\n            continue;\n        }\n        var ruleIndex = this.readInt();\n        if (ruleIndex === 0xFFFF) {\n            ruleIndex = -1;\n        }\n        var s = this.stateFactory(stype, ruleIndex);\n        if (stype === ATNState.LOOP_END) { // special case\n            var loopBackStateNumber = this.readInt();\n            loopBackStateNumbers.push([s, loopBackStateNumber]);\n        } else if(s instanceof BlockStartState) {\n            var endStateNumber = this.readInt();\n            endStateNumbers.push([s, endStateNumber]);\n        }\n        atn.addState(s);\n    }\n    // delay the assignment of loop back and end states until we know all the\n\t// state instances have been initialized\n    for (j=0; j<loopBackStateNumbers.length; j++) {\n        pair = loopBackStateNumbers[j];\n        pair[0].loopBackState = atn.states[pair[1]];\n    }\n\n    for (j=0; j<endStateNumbers.length; j++) {\n        pair = endStateNumbers[j];\n        pair[0].endState = atn.states[pair[1]];\n    }\n\n    var numNonGreedyStates = this.readInt();\n    for (j=0; j<numNonGreedyStates; j++) {\n        stateNumber = this.readInt();\n        atn.states[stateNumber].nonGreedy = true;\n    }\n\n    var numPrecedenceStates = this.readInt();\n    for (j=0; j<numPrecedenceStates; j++) {\n        stateNumber = this.readInt();\n        atn.states[stateNumber].isPrecedenceRule = true;\n    }\n};\n\nATNDeserializer.prototype.readRules = function(atn) {\n    var i;\n    var nrules = this.readInt();\n    if (atn.grammarType === ATNType.LEXER ) {\n        atn.ruleToTokenType = initArray(nrules, 0);\n    }\n    atn.ruleToStartState = initArray(nrules, 0);\n    for (i=0; i<nrules; i++) {\n        var s = this.readInt();\n        var startState = atn.states[s];\n        atn.ruleToStartState[i] = startState;\n        if ( atn.grammarType === ATNType.LEXER ) {\n            var tokenType = this.readInt();\n            if (tokenType === 0xFFFF) {\n                tokenType = Token.EOF;\n            }\n            atn.ruleToTokenType[i] = tokenType;\n        }\n    }\n    atn.ruleToStopState = initArray(nrules, 0);\n    for (i=0; i<atn.states.length; i++) {\n        var state = atn.states[i];\n        if (!(state instanceof RuleStopState)) {\n            continue;\n        }\n        atn.ruleToStopState[state.ruleIndex] = state;\n        atn.ruleToStartState[state.ruleIndex].stopState = state;\n    }\n};\n\nATNDeserializer.prototype.readModes = function(atn) {\n    var nmodes = this.readInt();\n    for (var i=0; i<nmodes; i++) {\n        var s = this.readInt();\n        atn.modeToStartState.push(atn.states[s]);\n    }\n};\n\nATNDeserializer.prototype.readSets = function(atn, sets, readUnicode) {\n    var m = this.readInt();\n    for (var i=0; i<m; i++) {\n        var iset = new IntervalSet();\n        sets.push(iset);\n        var n = this.readInt();\n        var containsEof = this.readInt();\n        if (containsEof!==0) {\n            iset.addOne(-1);\n        }\n        for (var j=0; j<n; j++) {\n            var i1 = readUnicode();\n            var i2 = readUnicode();\n            iset.addRange(i1, i2);\n        }\n    }\n};\n\nATNDeserializer.prototype.readEdges = function(atn, sets) {\n\tvar i, j, state, trans, target;\n    var nedges = this.readInt();\n    for (i=0; i<nedges; i++) {\n        var src = this.readInt();\n        var trg = this.readInt();\n        var ttype = this.readInt();\n        var arg1 = this.readInt();\n        var arg2 = this.readInt();\n        var arg3 = this.readInt();\n        trans = this.edgeFactory(atn, ttype, src, trg, arg1, arg2, arg3, sets);\n        var srcState = atn.states[src];\n        srcState.addTransition(trans);\n    }\n    // edges for rule stop states can be derived, so they aren't serialized\n    for (i=0; i<atn.states.length; i++) {\n        state = atn.states[i];\n        for (j=0; j<state.transitions.length; j++) {\n            var t = state.transitions[j];\n            if (!(t instanceof RuleTransition)) {\n                continue;\n            }\n\t\t\tvar outermostPrecedenceReturn = -1;\n\t\t\tif (atn.ruleToStartState[t.target.ruleIndex].isPrecedenceRule) {\n\t\t\t\tif (t.precedence === 0) {\n\t\t\t\t\toutermostPrecedenceReturn = t.target.ruleIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttrans = new EpsilonTransition(t.followState, outermostPrecedenceReturn);\n            atn.ruleToStopState[t.target.ruleIndex].addTransition(trans);\n        }\n    }\n\n    for (i=0; i<atn.states.length; i++) {\n        state = atn.states[i];\n        if (state instanceof BlockStartState) {\n            // we need to know the end state to set its start state\n            if (state.endState === null) {\n                throw (\"IllegalState\");\n            }\n            // block end states can only be associated to a single block start\n\t\t\t// state\n            if ( state.endState.startState !== null) {\n                throw (\"IllegalState\");\n            }\n            state.endState.startState = state;\n        }\n        if (state instanceof PlusLoopbackState) {\n            for (j=0; j<state.transitions.length; j++) {\n                target = state.transitions[j].target;\n                if (target instanceof PlusBlockStartState) {\n                    target.loopBackState = state;\n                }\n            }\n        } else if (state instanceof StarLoopbackState) {\n            for (j=0; j<state.transitions.length; j++) {\n                target = state.transitions[j].target;\n                if (target instanceof StarLoopEntryState) {\n                    target.loopBackState = state;\n                }\n            }\n        }\n    }\n};\n\nATNDeserializer.prototype.readDecisions = function(atn) {\n    var ndecisions = this.readInt();\n    for (var i=0; i<ndecisions; i++) {\n        var s = this.readInt();\n        var decState = atn.states[s];\n        atn.decisionToState.push(decState);\n        decState.decision = i;\n    }\n};\n\nATNDeserializer.prototype.readLexerActions = function(atn) {\n    if (atn.grammarType === ATNType.LEXER) {\n        var count = this.readInt();\n        atn.lexerActions = initArray(count, null);\n        for (var i=0; i<count; i++) {\n            var actionType = this.readInt();\n            var data1 = this.readInt();\n            if (data1 === 0xFFFF) {\n                data1 = -1;\n            }\n            var data2 = this.readInt();\n            if (data2 === 0xFFFF) {\n                data2 = -1;\n            }\n            var lexerAction = this.lexerActionFactory(actionType, data1, data2);\n            atn.lexerActions[i] = lexerAction;\n        }\n    }\n};\n\nATNDeserializer.prototype.generateRuleBypassTransitions = function(atn) {\n\tvar i;\n    var count = atn.ruleToStartState.length;\n    for(i=0; i<count; i++) {\n        atn.ruleToTokenType[i] = atn.maxTokenType + i + 1;\n    }\n    for(i=0; i<count; i++) {\n        this.generateRuleBypassTransition(atn, i);\n    }\n};\n\nATNDeserializer.prototype.generateRuleBypassTransition = function(atn, idx) {\n\tvar i, state;\n    var bypassStart = new BasicBlockStartState();\n    bypassStart.ruleIndex = idx;\n    atn.addState(bypassStart);\n\n    var bypassStop = new BlockEndState();\n    bypassStop.ruleIndex = idx;\n    atn.addState(bypassStop);\n\n    bypassStart.endState = bypassStop;\n    atn.defineDecisionState(bypassStart);\n\n    bypassStop.startState = bypassStart;\n\n    var excludeTransition = null;\n    var endState = null;\n\n    if (atn.ruleToStartState[idx].isPrecedenceRule) {\n        // wrap from the beginning of the rule to the StarLoopEntryState\n        endState = null;\n        for(i=0; i<atn.states.length; i++) {\n            state = atn.states[i];\n            if (this.stateIsEndStateFor(state, idx)) {\n                endState = state;\n                excludeTransition = state.loopBackState.transitions[0];\n                break;\n            }\n        }\n        if (excludeTransition === null) {\n            throw (\"Couldn't identify final state of the precedence rule prefix section.\");\n        }\n    } else {\n        endState = atn.ruleToStopState[idx];\n    }\n\n    // all non-excluded transitions that currently target end state need to\n\t// target blockEnd instead\n    for(i=0; i<atn.states.length; i++) {\n        state = atn.states[i];\n        for(var j=0; j<state.transitions.length; j++) {\n            var transition = state.transitions[j];\n            if (transition === excludeTransition) {\n                continue;\n            }\n            if (transition.target === endState) {\n                transition.target = bypassStop;\n            }\n        }\n    }\n\n    // all transitions leaving the rule start state need to leave blockStart\n\t// instead\n    var ruleToStartState = atn.ruleToStartState[idx];\n    var count = ruleToStartState.transitions.length;\n    while ( count > 0) {\n        bypassStart.addTransition(ruleToStartState.transitions[count-1]);\n        ruleToStartState.transitions = ruleToStartState.transitions.slice(-1);\n    }\n    // link the new states\n    atn.ruleToStartState[idx].addTransition(new EpsilonTransition(bypassStart));\n    bypassStop.addTransition(new EpsilonTransition(endState));\n\n    var matchState = new BasicState();\n    atn.addState(matchState);\n    matchState.addTransition(new AtomTransition(bypassStop, atn.ruleToTokenType[idx]));\n    bypassStart.addTransition(new EpsilonTransition(matchState));\n};\n\nATNDeserializer.prototype.stateIsEndStateFor = function(state, idx) {\n    if ( state.ruleIndex !== idx) {\n        return null;\n    }\n    if (!( state instanceof StarLoopEntryState)) {\n        return null;\n    }\n    var maybeLoopEndState = state.transitions[state.transitions.length - 1].target;\n    if (!( maybeLoopEndState instanceof LoopEndState)) {\n        return null;\n    }\n    if (maybeLoopEndState.epsilonOnlyTransitions &&\n        (maybeLoopEndState.transitions[0].target instanceof RuleStopState)) {\n        return state;\n    } else {\n        return null;\n    }\n};\n\n//\n// Analyze the {@link StarLoopEntryState} states in the specified ATN to set\n// the {@link StarLoopEntryState//isPrecedenceDecision} field to the\n// correct value.\n//\n// @param atn The ATN.\n//\nATNDeserializer.prototype.markPrecedenceDecisions = function(atn) {\n\tfor(var i=0; i<atn.states.length; i++) {\n\t\tvar state = atn.states[i];\n\t\tif (!( state instanceof StarLoopEntryState)) {\n            continue;\n        }\n        // We analyze the ATN to determine if this ATN decision state is the\n        // decision for the closure block that determines whether a\n        // precedence rule should continue or complete.\n        //\n        if ( atn.ruleToStartState[state.ruleIndex].isPrecedenceRule) {\n            var maybeLoopEndState = state.transitions[state.transitions.length - 1].target;\n            if (maybeLoopEndState instanceof LoopEndState) {\n                if ( maybeLoopEndState.epsilonOnlyTransitions &&\n                        (maybeLoopEndState.transitions[0].target instanceof RuleStopState)) {\n                    state.isPrecedenceDecision = true;\n                }\n            }\n        }\n\t}\n};\n\nATNDeserializer.prototype.verifyATN = function(atn) {\n    if (!this.deserializationOptions.verifyATN) {\n        return;\n    }\n    // verify assumptions\n\tfor(var i=0; i<atn.states.length; i++) {\n        var state = atn.states[i];\n        if (state === null) {\n            continue;\n        }\n        this.checkCondition(state.epsilonOnlyTransitions || state.transitions.length <= 1);\n        if (state instanceof PlusBlockStartState) {\n            this.checkCondition(state.loopBackState !== null);\n        } else  if (state instanceof StarLoopEntryState) {\n            this.checkCondition(state.loopBackState !== null);\n            this.checkCondition(state.transitions.length === 2);\n            if (state.transitions[0].target instanceof StarBlockStartState) {\n                this.checkCondition(state.transitions[1].target instanceof LoopEndState);\n                this.checkCondition(!state.nonGreedy);\n            } else if (state.transitions[0].target instanceof LoopEndState) {\n                this.checkCondition(state.transitions[1].target instanceof StarBlockStartState);\n                this.checkCondition(state.nonGreedy);\n            } else {\n                throw(\"IllegalState\");\n            }\n        } else if (state instanceof StarLoopbackState) {\n            this.checkCondition(state.transitions.length === 1);\n            this.checkCondition(state.transitions[0].target instanceof StarLoopEntryState);\n        } else if (state instanceof LoopEndState) {\n            this.checkCondition(state.loopBackState !== null);\n        } else if (state instanceof RuleStartState) {\n            this.checkCondition(state.stopState !== null);\n        } else if (state instanceof BlockStartState) {\n            this.checkCondition(state.endState !== null);\n        } else if (state instanceof BlockEndState) {\n            this.checkCondition(state.startState !== null);\n        } else if (state instanceof DecisionState) {\n            this.checkCondition(state.transitions.length <= 1 || state.decision >= 0);\n        } else {\n            this.checkCondition(state.transitions.length <= 1 || (state instanceof RuleStopState));\n        }\n\t}\n};\n\nATNDeserializer.prototype.checkCondition = function(condition, message) {\n    if (!condition) {\n        if (message === undefined || message===null) {\n            message = \"IllegalState\";\n        }\n        throw (message);\n    }\n};\n\nATNDeserializer.prototype.readInt = function() {\n    return this.data[this.pos++];\n};\n\nATNDeserializer.prototype.readInt32 = function() {\n    var low = this.readInt();\n    var high = this.readInt();\n    return low | (high << 16);\n};\n\nATNDeserializer.prototype.readLong = function() {\n    var low = this.readInt32();\n    var high = this.readInt32();\n    return (low & 0x00000000FFFFFFFF) | (high << 32);\n};\n\nfunction createByteToHex() {\n\tvar bth = [];\n\tfor (var i = 0; i < 256; i++) {\n\t\tbth[i] = (i + 0x100).toString(16).substr(1).toUpperCase();\n\t}\n\treturn bth;\n}\n\nvar byteToHex = createByteToHex();\n\nATNDeserializer.prototype.readUUID = function() {\n\tvar bb = [];\n\tfor(var i=7;i>=0;i--) {\n\t\tvar int = this.readInt();\n\t\t/* jshint bitwise: false */\n\t\tbb[(2*i)+1] = int & 0xFF;\n\t\tbb[2*i] = (int >> 8) & 0xFF;\n\t}\n    return byteToHex[bb[0]] + byteToHex[bb[1]] +\n    byteToHex[bb[2]] + byteToHex[bb[3]] + '-' +\n    byteToHex[bb[4]] + byteToHex[bb[5]] + '-' +\n    byteToHex[bb[6]] + byteToHex[bb[7]] + '-' +\n    byteToHex[bb[8]] + byteToHex[bb[9]] + '-' +\n    byteToHex[bb[10]] + byteToHex[bb[11]] +\n    byteToHex[bb[12]] + byteToHex[bb[13]] +\n    byteToHex[bb[14]] + byteToHex[bb[15]];\n};\n\nATNDeserializer.prototype.edgeFactory = function(atn, type, src, trg, arg1, arg2, arg3, sets) {\n    var target = atn.states[trg];\n    switch(type) {\n    case Transition.EPSILON:\n        return new EpsilonTransition(target);\n    case Transition.RANGE:\n        return arg3 !== 0 ? new RangeTransition(target, Token.EOF, arg2) : new RangeTransition(target, arg1, arg2);\n    case Transition.RULE:\n        return new RuleTransition(atn.states[arg1], arg2, arg3, target);\n    case Transition.PREDICATE:\n        return new PredicateTransition(target, arg1, arg2, arg3 !== 0);\n    case Transition.PRECEDENCE:\n        return new PrecedencePredicateTransition(target, arg1);\n    case Transition.ATOM:\n        return arg3 !== 0 ? new AtomTransition(target, Token.EOF) : new AtomTransition(target, arg1);\n    case Transition.ACTION:\n        return new ActionTransition(target, arg1, arg2, arg3 !== 0);\n    case Transition.SET:\n        return new SetTransition(target, sets[arg1]);\n    case Transition.NOT_SET:\n        return new NotSetTransition(target, sets[arg1]);\n    case Transition.WILDCARD:\n        return new WildcardTransition(target);\n    default:\n        throw \"The specified transition type: \" + type + \" is not valid.\";\n    }\n};\n\nATNDeserializer.prototype.stateFactory = function(type, ruleIndex) {\n    if (this.stateFactories === null) {\n        var sf = [];\n        sf[ATNState.INVALID_TYPE] = null;\n        sf[ATNState.BASIC] = function() { return new BasicState(); };\n        sf[ATNState.RULE_START] = function() { return new RuleStartState(); };\n        sf[ATNState.BLOCK_START] = function() { return new BasicBlockStartState(); };\n        sf[ATNState.PLUS_BLOCK_START] = function() { return new PlusBlockStartState(); };\n        sf[ATNState.STAR_BLOCK_START] = function() { return new StarBlockStartState(); };\n        sf[ATNState.TOKEN_START] = function() { return new TokensStartState(); };\n        sf[ATNState.RULE_STOP] = function() { return new RuleStopState(); };\n        sf[ATNState.BLOCK_END] = function() { return new BlockEndState(); };\n        sf[ATNState.STAR_LOOP_BACK] = function() { return new StarLoopbackState(); };\n        sf[ATNState.STAR_LOOP_ENTRY] = function() { return new StarLoopEntryState(); };\n        sf[ATNState.PLUS_LOOP_BACK] = function() { return new PlusLoopbackState(); };\n        sf[ATNState.LOOP_END] = function() { return new LoopEndState(); };\n        this.stateFactories = sf;\n    }\n    if (type>this.stateFactories.length || this.stateFactories[type] === null) {\n        throw(\"The specified state type \" + type + \" is not valid.\");\n    } else {\n        var s = this.stateFactories[type]();\n        if (s!==null) {\n            s.ruleIndex = ruleIndex;\n            return s;\n        }\n    }\n};\n\nATNDeserializer.prototype.lexerActionFactory = function(type, data1, data2) {\n    if (this.actionFactories === null) {\n        var af = [];\n        af[LexerActionType.CHANNEL] = function(data1, data2) { return new LexerChannelAction(data1); };\n        af[LexerActionType.CUSTOM] = function(data1, data2) { return new LexerCustomAction(data1, data2); };\n        af[LexerActionType.MODE] = function(data1, data2) { return new LexerModeAction(data1); };\n        af[LexerActionType.MORE] = function(data1, data2) { return LexerMoreAction.INSTANCE; };\n        af[LexerActionType.POP_MODE] = function(data1, data2) { return LexerPopModeAction.INSTANCE; };\n        af[LexerActionType.PUSH_MODE] = function(data1, data2) { return new LexerPushModeAction(data1); };\n        af[LexerActionType.SKIP] = function(data1, data2) { return LexerSkipAction.INSTANCE; };\n        af[LexerActionType.TYPE] = function(data1, data2) { return new LexerTypeAction(data1); };\n        this.actionFactories = af;\n    }\n    if (type>this.actionFactories.length || this.actionFactories[type] === null) {\n        throw(\"The specified lexer action type \" + type + \" is not valid.\");\n    } else {\n        return this.actionFactories[type](data1, data2);\n    }\n};\n\n\nexports.ATNDeserializer = ATNDeserializer;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/atn/ATNDeserializer.js\n// module id = 3Rtt\n// module chunks = 0 1 2","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\nvar Token = require('./Token').Token;\nrequire('./polyfills/codepointat');\nrequire('./polyfills/fromcodepoint');\n\n// Vacuum all input from a string and then treat it like a buffer.\n\nfunction _loadString(stream, decodeToUnicodeCodePoints) {\n\tstream._index = 0;\n\tstream.data = [];\n\tif (stream.decodeToUnicodeCodePoints) {\n\t\tfor (var i = 0; i < stream.strdata.length; ) {\n\t\t\tvar codePoint = stream.strdata.codePointAt(i);\n\t\t\tstream.data.push(codePoint);\n\t\t\ti += codePoint <= 0xFFFF ? 1 : 2;\n\t\t}\n\t} else {\n\t\tfor (var i = 0; i < stream.strdata.length; i++) {\n\t\t\tvar codeUnit = stream.strdata.charCodeAt(i);\n\t\t\tstream.data.push(codeUnit);\n\t\t}\n\t}\n\tstream._size = stream.data.length;\n}\n\n// If decodeToUnicodeCodePoints is true, the input is treated\n// as a series of Unicode code points.\n//\n// Otherwise, the input is treated as a series of 16-bit UTF-16 code\n// units.\nfunction InputStream(data, decodeToUnicodeCodePoints) {\n\tthis.name = \"<empty>\";\n\tthis.strdata = data;\n\tthis.decodeToUnicodeCodePoints = decodeToUnicodeCodePoints || false;\n\t_loadString(this);\n\treturn this;\n}\n\nObject.defineProperty(InputStream.prototype, \"index\", {\n\tget : function() {\n\t\treturn this._index;\n\t}\n});\n\nObject.defineProperty(InputStream.prototype, \"size\", {\n\tget : function() {\n\t\treturn this._size;\n\t}\n});\n\n// Reset the stream so that it's in the same state it was\n// when the object was created *except* the data array is not\n// touched.\n//\nInputStream.prototype.reset = function() {\n\tthis._index = 0;\n};\n\nInputStream.prototype.consume = function() {\n\tif (this._index >= this._size) {\n\t\t// assert this.LA(1) == Token.EOF\n\t\tthrow (\"cannot consume EOF\");\n\t}\n\tthis._index += 1;\n};\n\nInputStream.prototype.LA = function(offset) {\n\tif (offset === 0) {\n\t\treturn 0; // undefined\n\t}\n\tif (offset < 0) {\n\t\toffset += 1; // e.g., translate LA(-1) to use offset=0\n\t}\n\tvar pos = this._index + offset - 1;\n\tif (pos < 0 || pos >= this._size) { // invalid\n\t\treturn Token.EOF;\n\t}\n\treturn this.data[pos];\n};\n\nInputStream.prototype.LT = function(offset) {\n\treturn this.LA(offset);\n};\n\n// mark/release do nothing; we have entire buffer\nInputStream.prototype.mark = function() {\n\treturn -1;\n};\n\nInputStream.prototype.release = function(marker) {\n};\n\n// consume() ahead until p==_index; can't just set p=_index as we must\n// update line and column. If we seek backwards, just set p\n//\nInputStream.prototype.seek = function(_index) {\n\tif (_index <= this._index) {\n\t\tthis._index = _index; // just jump; don't update stream state (line,\n\t\t\t\t\t\t\t\t// ...)\n\t\treturn;\n\t}\n\t// seek forward\n\tthis._index = Math.min(_index, this._size);\n};\n\nInputStream.prototype.getText = function(start, stop) {\n\tif (stop >= this._size) {\n\t\tstop = this._size - 1;\n\t}\n\tif (start >= this._size) {\n\t\treturn \"\";\n\t} else {\n\t\tif (this.decodeToUnicodeCodePoints) {\n\t\t\tvar result = \"\";\n\t\t\tfor (var i = start; i <= stop; i++) {\n\t\t\t\tresult += String.fromCodePoint(this.data[i]);\n\t\t\t}\n\t\t\treturn result;\n\t\t} else {\n\t\t\treturn this.strdata.slice(start, stop + 1);\n\t\t}\n\t}\n};\n\nInputStream.prototype.toString = function() {\n\treturn this.strdata;\n};\n\nexports.InputStream = InputStream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/InputStream.js\n// module id = 4iSB\n// module chunks = 0 1 2","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').isIterable = function (it) {\n  var O = Object(it);\n  return O[ITERATOR] !== undefined\n    || '@@iterator' in O\n    // eslint-disable-next-line no-prototype-builtins\n    || Iterators.hasOwnProperty(classof(O));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/core.is-iterable.js\n// module id = 5PlU\n// module chunks = 0 2","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:\"loading\",rawName:\"v-loading.body\",value:(_vm.loading),expression:\"loading\",modifiers:{\"body\":true}}],staticClass:\"table-view-wrapper\"},[_c('el-table',{staticClass:\"table\",attrs:{\"data\":_vm.tableData,\"stripe\":\"\",\"border\":\"\"}},[_vm._t(\"default\")],2),_vm._v(\" \"),_c('el-pagination',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showPagination),expression:\"showPagination\"}],staticClass:\"pagination\",attrs:{\"background\":true,\"current-page\":_vm.pageMeta.page,\"page-sizes\":[10, 20, 30, 50],\"page-size\":_vm.pageMeta.pageSize,\"layout\":\"total, sizes, prev, pager, next, jumper\",\"total\":_vm.total},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-361849fa\",\"hasScoped\":true,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/TableView/index.vue\n// module id = 5b3W\n// module chunks = 0 1 2 7","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n// The root of the ANTLR exception hierarchy. In general, ANTLR tracks just\n//  3 kinds of errors: prediction errors, failed predicate errors, and\n//  mismatched input errors. In each case, the parser knows where it is\n//  in the input, where it is in the ATN, the rule invocation stack,\n//  and what kind of problem occurred.\n\nvar PredicateTransition = require('./../atn/Transition').PredicateTransition;\n\nfunction RecognitionException(params) {\n\tError.call(this);\n\tif (!!Error.captureStackTrace) {\n        Error.captureStackTrace(this, RecognitionException);\n\t} else {\n\t\tvar stack = new Error().stack;\n\t}\n\tthis.message = params.message;\n    this.recognizer = params.recognizer;\n    this.input = params.input;\n    this.ctx = params.ctx;\n    // The current {@link Token} when an error occurred. Since not all streams\n    // support accessing symbols by index, we have to track the {@link Token}\n    // instance itself.\n    this.offendingToken = null;\n    // Get the ATN state number the parser was in at the time the error\n    // occurred. For {@link NoViableAltException} and\n    // {@link LexerNoViableAltException} exceptions, this is the\n    // {@link DecisionState} number. For others, it is the state whose outgoing\n    // edge we couldn't match.\n    this.offendingState = -1;\n    if (this.recognizer!==null) {\n        this.offendingState = this.recognizer.state;\n    }\n    return this;\n}\n\nRecognitionException.prototype = Object.create(Error.prototype);\nRecognitionException.prototype.constructor = RecognitionException;\n\n// <p>If the state number is not known, this method returns -1.</p>\n\n//\n// Gets the set of input symbols which could potentially follow the\n// previously matched symbol at the time this exception was thrown.\n//\n// <p>If the set of expected tokens is not known and could not be computed,\n// this method returns {@code null}.</p>\n//\n// @return The set of token types that could potentially follow the current\n// state in the ATN, or {@code null} if the information is not available.\n// /\nRecognitionException.prototype.getExpectedTokens = function() {\n    if (this.recognizer!==null) {\n        return this.recognizer.atn.getExpectedTokens(this.offendingState, this.ctx);\n    } else {\n        return null;\n    }\n};\n\nRecognitionException.prototype.toString = function() {\n    return this.message;\n};\n\nfunction LexerNoViableAltException(lexer, input, startIndex, deadEndConfigs) {\n\tRecognitionException.call(this, {message:\"\", recognizer:lexer, input:input, ctx:null});\n    this.startIndex = startIndex;\n    this.deadEndConfigs = deadEndConfigs;\n    return this;\n}\n\nLexerNoViableAltException.prototype = Object.create(RecognitionException.prototype);\nLexerNoViableAltException.prototype.constructor = LexerNoViableAltException;\n\nLexerNoViableAltException.prototype.toString = function() {\n    var symbol = \"\";\n    if (this.startIndex >= 0 && this.startIndex < this.input.size) {\n        symbol = this.input.getText((this.startIndex,this.startIndex));\n    }\n    return \"LexerNoViableAltException\" + symbol;\n};\n\n// Indicates that the parser could not decide which of two or more paths\n// to take based upon the remaining input. It tracks the starting token\n// of the offending input and also knows where the parser was\n// in the various paths when the error. Reported by reportNoViableAlternative()\n//\nfunction NoViableAltException(recognizer, input, startToken, offendingToken, deadEndConfigs, ctx) {\n\tctx = ctx || recognizer._ctx;\n\toffendingToken = offendingToken || recognizer.getCurrentToken();\n\tstartToken = startToken || recognizer.getCurrentToken();\n\tinput = input || recognizer.getInputStream();\n\tRecognitionException.call(this, {message:\"\", recognizer:recognizer, input:input, ctx:ctx});\n    // Which configurations did we try at input.index() that couldn't match\n\t// input.LT(1)?//\n    this.deadEndConfigs = deadEndConfigs;\n    // The token object at the start index; the input stream might\n    // not be buffering tokens so get a reference to it. (At the\n    // time the error occurred, of course the stream needs to keep a\n    // buffer all of the tokens but later we might not have access to those.)\n    this.startToken = startToken;\n    this.offendingToken = offendingToken;\n}\n\nNoViableAltException.prototype = Object.create(RecognitionException.prototype);\nNoViableAltException.prototype.constructor = NoViableAltException;\n\n// This signifies any kind of mismatched input exceptions such as\n// when the current input does not match the expected token.\n//\nfunction InputMismatchException(recognizer) {\n\tRecognitionException.call(this, {message:\"\", recognizer:recognizer, input:recognizer.getInputStream(), ctx:recognizer._ctx});\n    this.offendingToken = recognizer.getCurrentToken();\n}\n\nInputMismatchException.prototype = Object.create(RecognitionException.prototype);\nInputMismatchException.prototype.constructor = InputMismatchException;\n\n// A semantic predicate failed during validation. Validation of predicates\n// occurs when normally parsing the alternative just like matching a token.\n// Disambiguating predicate evaluation occurs when we test a predicate during\n// prediction.\n\nfunction FailedPredicateException(recognizer, predicate, message) {\n\tRecognitionException.call(this, {message:this.formatMessage(predicate,message || null), recognizer:recognizer,\n                         input:recognizer.getInputStream(), ctx:recognizer._ctx});\n    var s = recognizer._interp.atn.states[recognizer.state];\n    var trans = s.transitions[0];\n    if (trans instanceof PredicateTransition) {\n        this.ruleIndex = trans.ruleIndex;\n        this.predicateIndex = trans.predIndex;\n    } else {\n        this.ruleIndex = 0;\n        this.predicateIndex = 0;\n    }\n    this.predicate = predicate;\n    this.offendingToken = recognizer.getCurrentToken();\n    return this;\n}\n\nFailedPredicateException.prototype = Object.create(RecognitionException.prototype);\nFailedPredicateException.prototype.constructor = FailedPredicateException;\n\nFailedPredicateException.prototype.formatMessage = function(predicate, message) {\n    if (message !==null) {\n        return message;\n    } else {\n        return \"failed predicate: {\" + predicate + \"}?\";\n    }\n};\n\nfunction ParseCancellationException() {\n\tError.call(this);\n\tError.captureStackTrace(this, ParseCancellationException);\n\treturn this;\n}\n\nParseCancellationException.prototype = Object.create(Error.prototype);\nParseCancellationException.prototype.constructor = ParseCancellationException;\n\nexports.RecognitionException = RecognitionException;\nexports.NoViableAltException = NoViableAltException;\nexports.LexerNoViableAltException = LexerNoViableAltException;\nexports.InputMismatchException = InputMismatchException;\nexports.FailedPredicateException = FailedPredicateException;\nexports.ParseCancellationException = ParseCancellationException;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/error/Errors.js\n// module id = 5d5Q\n// module chunks = 0 1 2","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\n//  A rule context is a record of a single rule invocation. It knows\n//  which context invoked it, if any. If there is no parent context, then\n//  naturally the invoking state is not valid.  The parent link\n//  provides a chain upwards from the current rule invocation to the root\n//  of the invocation tree, forming a stack. We actually carry no\n//  information about the rule associated with this context (except\n//  when parsing). We keep only the state number of the invoking state from\n//  the ATN submachine that invoked this. Contrast this with the s\n//  pointer inside ParserRuleContext that tracks the current state\n//  being \"executed\" for the current rule.\n//\n//  The parent contexts are useful for computing lookahead sets and\n//  getting error information.\n//\n//  These objects are used during parsing and prediction.\n//  For the special case of parsers, we use the subclass\n//  ParserRuleContext.\n//\n//  @see ParserRuleContext\n///\n\nvar RuleNode = require('./tree/Tree').RuleNode;\nvar INVALID_INTERVAL = require('./tree/Tree').INVALID_INTERVAL;\nvar INVALID_ALT_NUMBER = require('./atn/ATN').INVALID_ALT_NUMBER;\n\nfunction RuleContext(parent, invokingState) {\n\tRuleNode.call(this);\n\t// What context invoked this rule?\n\tthis.parentCtx = parent || null;\n\t// What state invoked the rule associated with this context?\n\t// The \"return address\" is the followState of invokingState\n\t// If parent is null, this should be -1.\n\tthis.invokingState = invokingState || -1;\n\treturn this;\n}\n\nRuleContext.prototype = Object.create(RuleNode.prototype);\nRuleContext.prototype.constructor = RuleContext;\n\nRuleContext.prototype.depth = function() {\n\tvar n = 0;\n\tvar p = this;\n\twhile (p !== null) {\n\t\tp = p.parentCtx;\n\t\tn += 1;\n\t}\n\treturn n;\n};\n\n// A context is empty if there is no invoking state; meaning nobody call\n// current context.\nRuleContext.prototype.isEmpty = function() {\n\treturn this.invokingState === -1;\n};\n\n// satisfy the ParseTree / SyntaxTree interface\n\nRuleContext.prototype.getSourceInterval = function() {\n\treturn INVALID_INTERVAL;\n};\n\nRuleContext.prototype.getRuleContext = function() {\n\treturn this;\n};\n\nRuleContext.prototype.getPayload = function() {\n\treturn this;\n};\n\n// Return the combined text of all child nodes. This method only considers\n// tokens which have been added to the parse tree.\n// <p>\n// Since tokens on hidden channels (e.g. whitespace or comments) are not\n// added to the parse trees, they will not appear in the output of this\n// method.\n// /\nRuleContext.prototype.getText = function() {\n\tif (this.getChildCount() === 0) {\n\t\treturn \"\";\n\t} else {\n\t\treturn this.children.map(function(child) {\n\t\t\treturn child.getText();\n\t\t}).join(\"\");\n\t}\n};\n\n// For rule associated with this parse tree internal node, return\n// the outer alternative number used to match the input. Default\n// implementation does not compute nor store this alt num. Create\n// a subclass of ParserRuleContext with backing field and set\n// option contextSuperClass.\n// to set it.\nRuleContext.prototype.getAltNumber = function() { return INVALID_ALT_NUMBER; }\n\n// Set the outer alternative number for this context node. Default\n// implementation does nothing to avoid backing field overhead for\n// trees that don't need it.  Create\n// a subclass of ParserRuleContext with backing field and set\n// option contextSuperClass.\nRuleContext.prototype.setAltNumber = function(altNumber) { }\n\nRuleContext.prototype.getChild = function(i) {\n\treturn null;\n};\n\nRuleContext.prototype.getChildCount = function() {\n\treturn 0;\n};\n\nRuleContext.prototype.accept = function(visitor) {\n\treturn visitor.visitChildren(this);\n};\n\n//need to manage circular dependencies, so export now\nexports.RuleContext = RuleContext;\nvar Trees = require('./tree/Trees').Trees;\n\n\n// Print out a whole tree, not just a node, in LISP format\n// (root child1 .. childN). Print just a node if this is a leaf.\n//\n\nRuleContext.prototype.toStringTree = function(ruleNames, recog) {\n\treturn Trees.toStringTree(this, ruleNames, recog);\n};\n\nRuleContext.prototype.toString = function(ruleNames, stop) {\n\truleNames = ruleNames || null;\n\tstop = stop || null;\n\tvar p = this;\n\tvar s = \"[\";\n\twhile (p !== null && p !== stop) {\n\t\tif (ruleNames === null) {\n\t\t\tif (!p.isEmpty()) {\n\t\t\t\ts += p.invokingState;\n\t\t\t}\n\t\t} else {\n\t\t\tvar ri = p.ruleIndex;\n\t\t\tvar ruleName = (ri >= 0 && ri < ruleNames.length) ? ruleNames[ri]\n\t\t\t\t\t: \"\" + ri;\n\t\t\ts += ruleName;\n\t\t}\n\t\tif (p.parentCtx !== null && (ruleNames !== null || !p.parentCtx.isEmpty())) {\n\t\t\ts += \" \";\n\t\t}\n\t\tp = p.parentCtx;\n\t}\n\ts += \"]\";\n\treturn s;\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/RuleContext.js\n// module id = 6GCw\n// module chunks = 0 1 2","<template>\n  <section>\n    <el-input placeholder=\"请输入搜索内容\" v-model=\"query\" class=\"query-input\">\n      <el-button slot=\"append\" icon=\"el-icon-search\" type=\"primary\" @click=\"queryHandler\"></el-button>\n    </el-input>\n    <table-view class=\"resource-list\" :loader=\"loader()\" :formatHandler=\"formatHandler\">\n      <el-table-column\n        align=\"center\"\n        label=\"presentable name\">\n        <template slot-scope=\"scope\">\n          <span v-if=\"scope.row.presentableDetail\">{{ scope.row.presentableDetail.name}}</span>\n          <span v-else>-</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        prop=\"resourceDetail.resourceName\"\n        label=\"resource name\">\n      </el-table-column>\n      <el-table-column\n        prop=\"resourceDetail.resourceType\"\n        label=\"resource type\"\n        align=\"center\"\n        width=\"150px\">\n      </el-table-column>\n      <el-table-column\n        align=\"center\"\n        label=\"create date\">\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.createDate | fmtDate}}</span>\n        </template>\n      </el-table-column>\n\n      <!--for test-->\n      <el-table-column\n        prop=\"contractId\"\n        align=\"center\"\n        label=\"合同 ID\">\n      </el-table-column>\n      <el-table-column\n        prop=\"resourceId\"\n        label=\"resourceId\"\n        align=\"center\"\n        width=\"350px\">\n      </el-table-column>\n      <!--for test-->\n\n      <el-table-column\n        prop=\"status\"\n        align=\"center\"\n        width=\"120px\"\n        label=\"合同状态\">\n        <template slot-scope=\"scope\">\n          <el-tag :type=\"scope.row._statusInfo.type\">{{scope.row._statusInfo.text}}</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"\" width=\"250px\">\n        <template slot-scope=\"scope\">\n          <el-button\n            size=\"small\"\n            @click=\"handlePresentable(scope.row,'detail')\">查看详情\n          </el-button>\n          <el-button\n            size=\"small\"\n            @click=\"handlePresentable(scope.row, 'edit')\" v-if=\"!scope.row.presentableDetail\">去创建user\n            policy\n          </el-button>\n          <el-button\n            size=\"small\"\n            @click=\"handlePresentable(scope.row, 'detail', 'contract')\"\n            v-else-if=\"scope.row.status===1 || scope.row.status===2\">去执行合同\n          </el-button>\n        </template>\n      </el-table-column>\n    </table-view>\n  </section>\n</template>\n\n<script>\n  import Presentables from './index'\n\n  export default Presentables\n</script>\n\n<style lang=\"less\" scoped>\n  .query-input {\n    margin-bottom: 15px;\n    width: 50%;\n  }\n\n  .presentable-detail-expand {\n    font-size: 0;\n  }\n\n  .presentable-detail-expand label {\n    width: 90px;\n    color: #99a9bf;\n  }\n\n  .presentable-detail-expand .el-form-item {\n    margin-right: 0;\n    margin-bottom: 0;\n    width: 50%;\n  }\n\n  .resource-list {\n    width: 100%;\n    min-height: 600px;\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/views/node/presentables/index.vue","\nexport default {\n  name: 'presentable-steps',\n  data() {\n    return {\n    }\n  },\n  props: {\n    active: {\n      type: Number,\n      default(){\n        return 0\n      }\n    },\n    processStatus: {\n      type: String,\n      default(){\n        return 'finish'\n      }\n    },\n    finishStatus: {\n      type: String,\n      default(){\n        return 'success'\n      }\n    }\n  },\n\n  mounted() {\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/views/node/presentable/steps/index.js","<template>\n  <section>\n    <div v-if=\"contractDetail\">\n      <ul class=\"p-detail\">\n        <li>\n          <label class=\"item-title\">contract Id</label>\n          <span class=\"item-detail\">{{contractDetail.contractId}}</span>\n        </li>\n        <li>\n          <label class=\"item-title\">合同状态：</label>\n          <span class=\"item-detail\">{{formatContractDetail.statusTip}}</span>\n        </li>\n        <li>\n          <label class=\"item-title\">合同甲方：</label>\n          <span class=\"item-detail\">{{contractDetail.partyOne}}</span>\n        </li>\n        <li>\n          <label class=\"item-title\">合同乙方：</label>\n          <span class=\"item-detail\">{{contractDetail.partyTwo}}</span>\n        </li>\n        <li>\n          <label class=\"item-title\">合同创建时间：</label>\n          <span class=\"item-detail\">{{contractDetail.createDate|fmtDate}}</span>\n        </li>\n        <li>\n          <label class=\"item-title\">合同当前状态：</label>\n          <span class=\"item-detail\">\n            <el-tag :type=\"contractDetail.status===3?'success':'info'\">\n            {{contractDetail.fsmState}}\n            </el-tag>\n          </span>\n        </li>\n        <li>\n          <label class=\"item-title\">合同详情：</label>\n          <pre class=\"item-detail\">{{contractDetail.policySegment.segmentText}}</pre>\n        </li>\n        <li v-show=\"formatContractDetail.events.length\">\n          <label class=\"item-title\">合同事件：</label>\n          <el-select v-model=\"selectedContractEvent\"\n                     class=\"item-detail\"\n                     placeholder=\"请选择\">\n            <el-option\n              v-for=\"(event, index) in formatContractDetail.events\"\n              v-html=\"event.desc\"\n              :key=\"Math.random()\"\n              :label=\"event.desc\"\n              :value=\"index\"\n            >\n            </el-option>\n          </el-select>\n          <el-button :disabled=\"selectedContractEvent === ''\" @click=\"executeContractHandler\">trigger</el-button>\n        </li>\n      </ul>\n    </div>\n  </section>\n</template>\n\n<script>\n  import PresentableContractDetail from './index'\n\n  export default PresentableContractDetail\n</script>\n\n<style lang=\"less\" scoped>\n  @import \"index.less\";\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/views/node/presentable/contract/detail/index.vue","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nvar LL1Analyzer = require('./../LL1Analyzer').LL1Analyzer;\nvar IntervalSet = require('./../IntervalSet').IntervalSet;\n\nfunction ATN(grammarType , maxTokenType) {\n\n    // Used for runtime deserialization of ATNs from strings///\n    // The type of the ATN.\n    this.grammarType = grammarType;\n    // The maximum value for any symbol recognized by a transition in the ATN.\n    this.maxTokenType = maxTokenType;\n    this.states = [];\n    // Each subrule/rule is a decision point and we must track them so we\n    //  can go back later and build DFA predictors for them.  This includes\n    //  all the rules, subrules, optional blocks, ()+, ()* etc...\n    this.decisionToState = [];\n    // Maps from rule index to starting state number.\n    this.ruleToStartState = [];\n    // Maps from rule index to stop state number.\n    this.ruleToStopState = null;\n    this.modeNameToStartState = {};\n    // For lexer ATNs, this maps the rule index to the resulting token type.\n    // For parser ATNs, this maps the rule index to the generated bypass token\n    // type if the\n    // {@link ATNDeserializationOptions//isGenerateRuleBypassTransitions}\n    // deserialization option was specified; otherwise, this is {@code null}.\n    this.ruleToTokenType = null;\n    // For lexer ATNs, this is an array of {@link LexerAction} objects which may\n    // be referenced by action transitions in the ATN.\n    this.lexerActions = null;\n    this.modeToStartState = [];\n\n    return this;\n}\n\n// Compute the set of valid tokens that can occur starting in state {@code s}.\n//  If {@code ctx} is null, the set of tokens will not include what can follow\n//  the rule surrounding {@code s}. In other words, the set will be\n//  restricted to tokens reachable staying within {@code s}'s rule.\nATN.prototype.nextTokensInContext = function(s, ctx) {\n    var anal = new LL1Analyzer(this);\n    return anal.LOOK(s, null, ctx);\n};\n\n// Compute the set of valid tokens that can occur starting in {@code s} and\n// staying in same rule. {@link Token//EPSILON} is in set if we reach end of\n// rule.\nATN.prototype.nextTokensNoContext = function(s) {\n    if (s.nextTokenWithinRule !== null ) {\n        return s.nextTokenWithinRule;\n    }\n    s.nextTokenWithinRule = this.nextTokensInContext(s, null);\n    s.nextTokenWithinRule.readOnly = true;\n    return s.nextTokenWithinRule;\n};\n\nATN.prototype.nextTokens = function(s, ctx) {\n    if ( ctx===undefined ) {\n        return this.nextTokensNoContext(s);\n    } else {\n        return this.nextTokensInContext(s, ctx);\n    }\n};\n\nATN.prototype.addState = function( state) {\n    if ( state !== null ) {\n        state.atn = this;\n        state.stateNumber = this.states.length;\n    }\n    this.states.push(state);\n};\n\nATN.prototype.removeState = function( state) {\n    this.states[state.stateNumber] = null; // just free mem, don't shift states in list\n};\n\nATN.prototype.defineDecisionState = function( s) {\n    this.decisionToState.push(s);\n    s.decision = this.decisionToState.length-1;\n    return s.decision;\n};\n\nATN.prototype.getDecisionState = function( decision) {\n    if (this.decisionToState.length===0) {\n        return null;\n    } else {\n        return this.decisionToState[decision];\n    }\n};\n\n// Computes the set of input symbols which could follow ATN state number\n// {@code stateNumber} in the specified full {@code context}. This method\n// considers the complete parser context, but does not evaluate semantic\n// predicates (i.e. all predicates encountered during the calculation are\n// assumed true). If a path in the ATN exists from the starting state to the\n// {@link RuleStopState} of the outermost context without matching any\n// symbols, {@link Token//EOF} is added to the returned set.\n//\n// <p>If {@code context} is {@code null}, it is treated as\n// {@link ParserRuleContext//EMPTY}.</p>\n//\n// @param stateNumber the ATN state number\n// @param context the full parse context\n// @return The set of potentially valid input symbols which could follow the\n// specified state in the specified context.\n// @throws IllegalArgumentException if the ATN does not contain a state with\n// number {@code stateNumber}\nvar Token = require('./../Token').Token;\n\nATN.prototype.getExpectedTokens = function( stateNumber, ctx ) {\n    if ( stateNumber < 0 || stateNumber >= this.states.length ) {\n        throw(\"Invalid state number.\");\n    }\n    var s = this.states[stateNumber];\n    var following = this.nextTokens(s);\n    if (!following.contains(Token.EPSILON)) {\n        return following;\n    }\n    var expected = new IntervalSet();\n    expected.addSet(following);\n    expected.removeOne(Token.EPSILON);\n    while (ctx !== null && ctx.invokingState >= 0 && following.contains(Token.EPSILON)) {\n        var invokingState = this.states[ctx.invokingState];\n        var rt = invokingState.transitions[0];\n        following = this.nextTokens(rt.followState);\n        expected.addSet(following);\n        expected.removeOne(Token.EPSILON);\n        ctx = ctx.parentCtx;\n    }\n    if (following.contains(Token.EPSILON)) {\n        expected.addOne(Token.EOF);\n    }\n    return expected;\n};\n\nATN.INVALID_ALT_NUMBER = 0;\n\nexports.ATN = ATN;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/atn/ATN.js\n// module id = 7y1Z\n// module chunks = 0 1 2","<template>\n  <section>\n    <presentable-steps :active=\"0\"></presentable-steps>\n    <el-alert\n      title=\"该资源已创建过presentable\"\n      type=\"success\"\n      v-show=\"done\"\n      show-icon>\n    </el-alert>\n    <el-tabs v-model=\"activeName\" type=\"border-card\">\n      <el-tab-pane v-for=\"(tabData, indexOuter) in tabList\"\n                   :key=\"indexOuter\"\n                   :name=\"tabData.resourceId\">\n        <span slot=\"label\">\n          {{tabData.resourceName}}\n\n          <el-tooltip class=\"item\" effect=\"dark\" content=\"已选中合同\" placement=\"top\" v-show=\"tabData.checked\">\n            <i class=\"el-icon-circle-check-outline icon-tip\"></i>\n          </el-tooltip>\n\n          <el-tooltip class=\"item\" effect=\"dark\" content=\"已创建过合同\" placement=\"top\" v-show=\"tabData.created\">\n            <i class=\"el-icon-circle-check icon-tip\"></i>\n          </el-tooltip>\n\n        </span>\n        <div class=\"p-name\">\n          <label>presentable name:</label>\n          <el-input v-model=\"tabData.presentableName\"\n                    style=\"width: 400px\"\n                    placeholder=\"请输入presentable名\"></el-input>\n        </div>\n\n        <div class=\"step-1 op-step\">\n          <div class=\"step-row\">\n            <div class=\"step-circle\">1</div>\n            <div class=\"step-title\">选择合同segment</div>\n          </div>\n          <el-table\n            :data=\"tabData.data.policy\">\n            <el-table-column type=\"expand\">\n              <template slot-scope=\"scope\">\n                <pre>{{scope.row._formatSegmentText}}</pre>\n              </template>\n            </el-table-column>\n            <el-table-column\n              label=\"segmentId\"\n              prop=\"segmentId\">\n            </el-table-column>\n            <el-table-column\n              label=\"\">\n              <template slot-scope=\"props\">\n                <el-radio v-model=\"tabData.selected\"\n                          :label=\"props.$index\"\n                          @change=\"segmentChangeHandler(tabData)\">\n                  <span title=\"placeholder\"></span>\n                </el-radio>\n                <el-tooltip class=\"item\" effect=\"dark\" content=\"该策略已经创建过合同\" placement=\"top\"\n                            v-show=\"props.row.created\">\n                  <i class=\"el-icon-info\"></i>\n                </el-tooltip>\n                <el-tooltip class=\"item\" effect=\"dark\" content=\"取消选择\" placement=\"top\"\n                            v-show=\"tabData.selected===props.$index\">\n                  <i class=\"el-icon-circle-close-outline\"\n                     @click=\"segmentChangeHandler(tabData, false)\"></i>\n                </el-tooltip>\n              </template>\n            </el-table-column>\n          </el-table>\n        </div>\n\n        <div class=\"step-2 op-step\">\n          <div class=\"step-row\">\n            <div class=\"step-circle\">2</div>\n            <div class=\"step-title\">创建user policy</div>\n          </div>\n          <presentable-policy v-model=\"tabData.userPolicy\"></presentable-policy>\n        </div>\n      </el-tab-pane>\n      <div class=\"form-ft\">\n        <el-button @click=\"submit\" :disabled=\"!selected\">提交</el-button>\n      </div>\n    </el-tabs>\n  </section>\n</template>\n\n<script>\n  import NodePolicySignment from './index'\n\n  export default NodePolicySignment\n</script>\n\n<style lang=\"less\" scoped>\n  @import \"index.less\";\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/views/node/presentable/create/index.vue","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\n// Represents the type of recognizer an ATN applies to.\n\nfunction ATNType() {\n\n}\n\nATNType.LEXER = 0;\nATNType.PARSER = 1;\n\nexports.ATNType = ATNType;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/atn/ATNType.js\n// module id = 8Teg\n// module chunks = 0 1 2","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nexports.atn = require('./atn/index');\nexports.codepointat = require('./polyfills/codepointat');\nexports.dfa = require('./dfa/index');\nexports.fromcodepoint = require('./polyfills/fromcodepoint');\nexports.tree = require('./tree/index');\nexports.error = require('./error/index');\nexports.Token = require('./Token').Token;\nexports.CharStreams = require('./CharStreams').CharStreams;\nexports.CommonToken = require('./Token').CommonToken;\nexports.InputStream = require('./InputStream').InputStream;\nexports.FileStream = require('./FileStream').FileStream;\nexports.CommonTokenStream = require('./CommonTokenStream').CommonTokenStream;\nexports.Lexer = require('./Lexer').Lexer;\nexports.Parser = require('./Parser').Parser;\nvar pc = require('./PredictionContext');\nexports.PredictionContextCache = pc.PredictionContextCache;\nexports.ParserRuleContext = require('./ParserRuleContext').ParserRuleContext;\nexports.Interval = require('./IntervalSet').Interval;\nexports.Utils = require('./Utils');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/index.js\n// module id = 9C8F\n// module chunks = 0 1 2","function injectStyle (ssrContext) {\n  require(\"!!../../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-41f78b08\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-41f78b08\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-41f78b08\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/node/presentable/policy/index.vue\n// module id = 9e1m\n// module chunks = 2","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3eb35d32\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../../../node_modules/less-loader/dist/cjs.js?{\\\"sourceMap\\\":true}!../../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"2ca78a95\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/vue-style-loader!./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-3eb35d32\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/less-loader/dist/cjs.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/views/node/presentable/contract/detail/index.vue\n// module id = 9eSa\n// module chunks = 2","import PresentableSteps from '@/views/node/presentable/steps/index.vue'\nimport compiler from 'presentable_policy_compiler'\n\n\nexport default {\n  name: 'presentable-policy',\n  data() {\n    return {\n      policyText: `For userAuserB in the following states:\n    in initial :\n      proceed to activate on accepting license licenseA\n    in activate :\n      proceed to suspend on visit of 20000\n        I agree to authorize token in activate`\n    }\n  },\n  props: {\n    value: String\n  },\n  watch: {\n    value: function () {\n      this.policyText = this.value\n    }\n  },\n  mounted() {\n  },\n  methods: {\n    textChange() {\n      this.$emit('input', this.policyText)\n    },\n    validate() {\n      var myBeautify = compiler.compile(this.policyText, 'beautify')\n      if (!myBeautify.errorMsg) {\n        this.policyText = myBeautify.stringArray.splice(1).join(' ').replace(/\\n\\s/g, '\\n');\n      } else {\n        this.$message.error(myBeautify.errorMsg)\n      }\n    },\n    submit(data) {\n      if (!this.$route.query.contractId) {\n        this.$message.error('没有资源Id, 请重新选择');\n      }\n\n      var nodeId = parseInt(this.$route.params.nodeId)\n\n      Object.assign({\n        name: this.formData.presentableName,\n        nodeId: nodeId,\n        contractId: this.$route.query.contractId,\n        policyText: btoa(this.policyText),\n        languageType: 'freelog_policy_lang'\n      }, data)\n\n      this.$services.presentables.post(data).then((res) => {\n        var data = res.getData()\n        if (!data) {\n          this.$message.error(res.data.msg)\n        } else {\n          this.$message.success('presentable创建成功');\n          this.$router.push({\n            path: `/node/${nodeId}/presentable/detail#presentable`,\n            query: {presentableId: data.presentableId}\n          })\n        }\n      }).catch(this.$error.showErrorMessage)\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/views/node/presentable/policy/index.js","// 20.1.2.3 Number.isInteger(number)\nvar isObject = require('./_is-object');\nvar floor = Math.floor;\nmodule.exports = function isInteger(it) {\n  return !isObject(it) && isFinite(it) && floor(it) === it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_is-integer.js\n// module id = AKgy\n// module chunks = 0 2","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\n//\n// This implementation of {@link ANTLRErrorListener} can be used to identify\n// certain potential correctness and performance problems in grammars. \"Reports\"\n// are made by calling {@link Parser//notifyErrorListeners} with the appropriate\n// message.\n//\n// <ul>\n// <li><b>Ambiguities</b>: These are cases where more than one path through the\n// grammar can match the input.</li>\n// <li><b>Weak context sensitivity</b>: These are cases where full-context\n// prediction resolved an SLL conflict to a unique alternative which equaled the\n// minimum alternative of the SLL conflict.</li>\n// <li><b>Strong (forced) context sensitivity</b>: These are cases where the\n// full-context prediction resolved an SLL conflict to a unique alternative,\n// <em>and</em> the minimum alternative of the SLL conflict was found to not be\n// a truly viable alternative. Two-stage parsing cannot be used for inputs where\n// this situation occurs.</li>\n// </ul>\n\nvar BitSet = require('./../Utils').BitSet;\nvar ErrorListener = require('./ErrorListener').ErrorListener;\nvar Interval = require('./../IntervalSet').Interval;\n\nfunction DiagnosticErrorListener(exactOnly) {\n\tErrorListener.call(this);\n\texactOnly = exactOnly || true;\n\t// whether all ambiguities or only exact ambiguities are reported.\n\tthis.exactOnly = exactOnly;\n\treturn this;\n}\n\nDiagnosticErrorListener.prototype = Object.create(ErrorListener.prototype);\nDiagnosticErrorListener.prototype.constructor = DiagnosticErrorListener;\n\nDiagnosticErrorListener.prototype.reportAmbiguity = function(recognizer, dfa,\n\t\tstartIndex, stopIndex, exact, ambigAlts, configs) {\n\tif (this.exactOnly && !exact) {\n\t\treturn;\n\t}\n\tvar msg = \"reportAmbiguity d=\" +\n\t\t\tthis.getDecisionDescription(recognizer, dfa) +\n\t\t\t\": ambigAlts=\" +\n\t\t\tthis.getConflictingAlts(ambigAlts, configs) +\n\t\t\t\", input='\" +\n\t\t\trecognizer.getTokenStream().getText(new Interval(startIndex, stopIndex)) + \"'\";\n\trecognizer.notifyErrorListeners(msg);\n};\n\nDiagnosticErrorListener.prototype.reportAttemptingFullContext = function(\n\t\trecognizer, dfa, startIndex, stopIndex, conflictingAlts, configs) {\n\tvar msg = \"reportAttemptingFullContext d=\" +\n\t\t\tthis.getDecisionDescription(recognizer, dfa) +\n\t\t\t\", input='\" +\n\t\t\trecognizer.getTokenStream().getText(new Interval(startIndex, stopIndex)) + \"'\";\n\trecognizer.notifyErrorListeners(msg);\n};\n\nDiagnosticErrorListener.prototype.reportContextSensitivity = function(\n\t\trecognizer, dfa, startIndex, stopIndex, prediction, configs) {\n\tvar msg = \"reportContextSensitivity d=\" +\n\t\t\tthis.getDecisionDescription(recognizer, dfa) +\n\t\t\t\", input='\" +\n\t\t\trecognizer.getTokenStream().getText(new Interval(startIndex, stopIndex)) + \"'\";\n\trecognizer.notifyErrorListeners(msg);\n};\n\nDiagnosticErrorListener.prototype.getDecisionDescription = function(recognizer, dfa) {\n\tvar decision = dfa.decision;\n\tvar ruleIndex = dfa.atnStartState.ruleIndex;\n\n\tvar ruleNames = recognizer.ruleNames;\n\tif (ruleIndex < 0 || ruleIndex >= ruleNames.length) {\n\t\treturn \"\" + decision;\n\t}\n\tvar ruleName = ruleNames[ruleIndex] || null;\n\tif (ruleName === null || ruleName.length === 0) {\n\t\treturn \"\" + decision;\n\t}\n\treturn \"\" + decision + \" (\" + ruleName + \")\";\n};\n\n//\n// Computes the set of conflicting or ambiguous alternatives from a\n// configuration set, if that information was not already provided by the\n// parser.\n//\n// @param reportedAlts The set of conflicting or ambiguous alternatives, as\n// reported by the parser.\n// @param configs The conflicting or ambiguous configuration set.\n// @return Returns {@code reportedAlts} if it is not {@code null}, otherwise\n// returns the set of alternatives represented in {@code configs}.\n//\nDiagnosticErrorListener.prototype.getConflictingAlts = function(reportedAlts, configs) {\n\tif (reportedAlts !== null) {\n\t\treturn reportedAlts;\n\t}\n\tvar result = new BitSet();\n\tfor (var i = 0; i < configs.items.length; i++) {\n\t\tresult.add(configs.items[i].alt);\n\t}\n\treturn \"{\" + result.values().join(\", \") + \"}\";\n};\n\nexports.DiagnosticErrorListener = DiagnosticErrorListener;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/error/DiagnosticErrorListener.js\n// module id = B0bK\n// module chunks = 0 1 2","module.exports = { \"default\": require(\"core-js/library/fn/get-iterator\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/get-iterator.js\n// module id = BO1k\n// module chunks = 0 2","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nexports.DFA = require('./DFA').DFA;\nexports.DFASerializer = require('./DFASerializer').DFASerializer;\nexports.LexerDFASerializer = require('./DFASerializer').LexerDFASerializer;\nexports.PredPrediction = require('./DFAState').PredPrediction;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/dfa/index.js\n// module id = CF8A\n// module chunks = 0 1 2","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nvar Tree = require('./Tree');\nexports.Trees = require('./Trees').Trees;\nexports.RuleNode = Tree.RuleNode;\nexports.ParseTreeListener = Tree.ParseTreeListener;\nexports.ParseTreeVisitor = Tree.ParseTreeVisitor;\nexports.ParseTreeWalker = Tree.ParseTreeWalker;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/tree/index.js\n// module id = CLgU\n// module chunks = 0 1 2","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n//* A rule invocation record for parsing.\n//\n//  Contains all of the information about the current rule not stored in the\n//  RuleContext. It handles parse tree children list, Any ATN state\n//  tracing, and the default values available for rule indications:\n//  start, stop, rule index, current alt number, current\n//  ATN state.\n//\n//  Subclasses made for each rule and grammar track the parameters,\n//  return values, locals, and labels specific to that rule. These\n//  are the objects that are returned from rules.\n//\n//  Note text is not an actual field of a rule return value; it is computed\n//  from start and stop using the input stream's toString() method.  I\n//  could add a ctor to this so that we can pass in and store the input\n//  stream, but I'm not sure we want to do that.  It would seem to be undefined\n//  to get the .text property anyway if the rule matches tokens from multiple\n//  input streams.\n//\n//  I do not use getters for fields of objects that are used simply to\n//  group values such as this aggregate.  The getters/setters are there to\n//  satisfy the superclass interface.\n\nvar RuleContext = require('./RuleContext').RuleContext;\nvar Tree = require('./tree/Tree');\nvar INVALID_INTERVAL = Tree.INVALID_INTERVAL;\nvar TerminalNode = Tree.TerminalNode;\nvar TerminalNodeImpl = Tree.TerminalNodeImpl;\nvar ErrorNodeImpl = Tree.ErrorNodeImpl;\nvar Interval = require(\"./IntervalSet\").Interval;\n\nfunction ParserRuleContext(parent, invokingStateNumber) {\n\tparent = parent || null;\n\tinvokingStateNumber = invokingStateNumber || null;\n\tRuleContext.call(this, parent, invokingStateNumber);\n\tthis.ruleIndex = -1;\n    // * If we are debugging or building a parse tree for a visitor,\n    // we need to track all of the tokens and rule invocations associated\n    // with this rule's context. This is empty for parsing w/o tree constr.\n    // operation because we don't the need to track the details about\n    // how we parse this rule.\n    // /\n    this.children = null;\n    this.start = null;\n    this.stop = null;\n    // The exception that forced this rule to return. If the rule successfully\n    // completed, this is {@code null}.\n    this.exception = null;\n}\n\nParserRuleContext.prototype = Object.create(RuleContext.prototype);\nParserRuleContext.prototype.constructor = ParserRuleContext;\n\n// * COPY a ctx (I'm deliberately not using copy constructor)///\nParserRuleContext.prototype.copyFrom = function(ctx) {\n    // from RuleContext\n    this.parentCtx = ctx.parentCtx;\n    this.invokingState = ctx.invokingState;\n    this.children = null;\n    this.start = ctx.start;\n    this.stop = ctx.stop;\n    // copy any error nodes to alt label node\n    if(ctx.children) {\n        this.children = [];\n        // reset parent pointer for any error nodes\n    \tctx.children.map(function(child) {\n    \t\tif (child instanceof ErrorNodeImpl) {\n                this.children.push(child);\n                child.parentCtx = this;\n            }\n\t\t}, this);\n\t}\n};\n\n// Double dispatch methods for listeners\nParserRuleContext.prototype.enterRule = function(listener) {\n};\n\nParserRuleContext.prototype.exitRule = function(listener) {\n};\n\n// * Does not set parent link; other add methods do that///\nParserRuleContext.prototype.addChild = function(child) {\n    if (this.children === null) {\n        this.children = [];\n    }\n    this.children.push(child);\n    return child;\n};\n\n// * Used by enterOuterAlt to toss out a RuleContext previously added as\n// we entered a rule. If we have // label, we will need to remove\n// generic ruleContext object.\n// /\nParserRuleContext.prototype.removeLastChild = function() {\n    if (this.children !== null) {\n        this.children.pop();\n    }\n};\n\nParserRuleContext.prototype.addTokenNode = function(token) {\n    var node = new TerminalNodeImpl(token);\n    this.addChild(node);\n    node.parentCtx = this;\n    return node;\n};\n\nParserRuleContext.prototype.addErrorNode = function(badToken) {\n    var node = new ErrorNodeImpl(badToken);\n    this.addChild(node);\n    node.parentCtx = this;\n    return node;\n};\n\nParserRuleContext.prototype.getChild = function(i, type) {\n\ttype = type || null;\n\tif (this.children === null || i < 0 || i >= this.children.length) {\n\t\treturn null;\n\t}\n\tif (type === null) {\n\t\treturn this.children[i];\n\t} else {\n\t\tfor(var j=0; j<this.children.length; j++) {\n\t\t\tvar child = this.children[j];\n\t\t\tif(child instanceof type) {\n\t\t\t\tif(i===0) {\n\t\t\t\t\treturn child;\n\t\t\t\t} else {\n\t\t\t\t\ti -= 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n    }\n};\n\n\nParserRuleContext.prototype.getToken = function(ttype, i) {\n\tif (this.children === null || i < 0 || i >= this.children.length) {\n\t\treturn null;\n\t}\n\tfor(var j=0; j<this.children.length; j++) {\n\t\tvar child = this.children[j];\n\t\tif (child instanceof TerminalNode) {\n\t\t\tif (child.symbol.type === ttype) {\n\t\t\t\tif(i===0) {\n\t\t\t\t\treturn child;\n\t\t\t\t} else {\n\t\t\t\t\ti -= 1;\n\t\t\t\t}\n\t\t\t}\n        }\n\t}\n    return null;\n};\n\nParserRuleContext.prototype.getTokens = function(ttype ) {\n    if (this.children=== null) {\n        return [];\n    } else {\n\t\tvar tokens = [];\n\t\tfor(var j=0; j<this.children.length; j++) {\n\t\t\tvar child = this.children[j];\n\t\t\tif (child instanceof TerminalNode) {\n\t\t\t\tif (child.symbol.type === ttype) {\n\t\t\t\t\ttokens.push(child);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn tokens;\n    }\n};\n\nParserRuleContext.prototype.getTypedRuleContext = function(ctxType, i) {\n    return this.getChild(i, ctxType);\n};\n\nParserRuleContext.prototype.getTypedRuleContexts = function(ctxType) {\n    if (this.children=== null) {\n        return [];\n    } else {\n\t\tvar contexts = [];\n\t\tfor(var j=0; j<this.children.length; j++) {\n\t\t\tvar child = this.children[j];\n\t\t\tif (child instanceof ctxType) {\n\t\t\t\tcontexts.push(child);\n\t\t\t}\n\t\t}\n\t\treturn contexts;\n\t}\n};\n\nParserRuleContext.prototype.getChildCount = function() {\n\tif (this.children=== null) {\n\t\treturn 0;\n\t} else {\n\t\treturn this.children.length;\n\t}\n};\n\nParserRuleContext.prototype.getSourceInterval = function() {\n    if( this.start === null || this.stop === null) {\n        return INVALID_INTERVAL;\n    } else {\n        return new Interval(this.start.tokenIndex, this.stop.tokenIndex);\n    }\n};\n\nRuleContext.EMPTY = new ParserRuleContext();\n\nfunction InterpreterRuleContext(parent, invokingStateNumber, ruleIndex) {\n\tParserRuleContext.call(parent, invokingStateNumber);\n    this.ruleIndex = ruleIndex;\n    return this;\n}\n\nInterpreterRuleContext.prototype = Object.create(ParserRuleContext.prototype);\nInterpreterRuleContext.prototype.constructor = InterpreterRuleContext;\n\nexports.ParserRuleContext = ParserRuleContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/ParserRuleContext.js\n// module id = EesY\n// module chunks = 0 1 2","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar policy = require('policy_lang');\nvar policyListener = policy.policyListener;\nvar underscore = require('underscore');\n\n//排列\npermute.permArr = [];\npermute.usedChars = [];\nfunction permute(input) {\n  var i = void 0,\n    ch = void 0;\n  for (i = 0; i < input.length; i++) {\n    ch = input.splice(i, 1)[0];\n    permute.usedChars.push(ch);\n    if (input.length == 0) {\n      permute.permArr.push(permute.usedChars.slice());\n    }\n    permute(input);\n    input.splice(i, 0, ch);\n    permute.usedChars.pop();\n  }\n  return permute.permArr;\n};\n//随机的中间态名称\nfunction genRandomStateName(evt1, evt2, evtName) {\n  return 'autoGenratedState_' + evt1 + '_' + evt2 + '_' + evtName + '_' + (new Date() * Math.random()).toString(36).substring(0, 4);\n};\n\nvar JSONGeneratorExtentionClass = function (_policyListener) {\n  _inherits(JSONGeneratorExtentionClass, _policyListener);\n\n  function JSONGeneratorExtentionClass() {\n    _classCallCheck(this, JSONGeneratorExtentionClass);\n\n    var _this = _possibleConstructorReturn(this, (JSONGeneratorExtentionClass.__proto__ || Object.getPrototypeOf(JSONGeneratorExtentionClass)).call(this));\n\n    _this.errorMsg = null;\n    _this.policy_segments = [];\n    return _this;\n  }\n\n  _createClass(JSONGeneratorExtentionClass, [{\n    key: 'enterP',\n    value: function enterP(ctx) {}\n  }, {\n    key: 'exitP',\n    value: function exitP(ctx) {}\n  }, {\n    key: 'enterStart_hour',\n    value: function enterStart_hour(ctx) {}\n  }, {\n    key: 'exitStart_hour',\n    value: function exitStart_hour(ctx) {}\n  }, {\n    key: 'enterEnd_hour',\n    value: function enterEnd_hour(ctx) {}\n  }, {\n    key: 'exitEnd_hour',\n    value: function exitEnd_hour(ctx) {}\n  }, {\n    key: 'enterSegment',\n    value: function enterSegment(ctx) {\n      //对应一个segment\n      ctx.segment_block = {\n        segmentText: ctx.start.source[0]._input.strdata.slice(ctx.start.start, ctx.stop.stop + 1),\n        initialState: 'initial',\n        terminateState: 'terminate',\n        users: [], //暂时只有两种user，个人的和组的\n        states: [],\n        all_occured_states: [],\n        state_transition_table: []\n      };\n    }\n  }, {\n    key: 'exitSegment',\n    value: function exitSegment(ctx) {\n      // this.policy_segments.push(ctx.segment_block);\n    }\n  }, {\n    key: 'enterAudience_clause',\n\n    // 留给下简化版\n    // enterSettlement_clause (ctx) {};\n    // exitSettlement_clause (ctx) {\n    //   //settlement事件\n    //   let settlementForward = {\n    //     type: 'settlementForward',\n    //     params: [3, 'day'],\n    //     eventName: 'settlementForward_3_day'\n    //   };\n    //   let accountSettled = {\n    //     type: 'accountSettled',\n    //     params: [],\n    //     eventName: 'accountSettled'\n    //   };\n    //   //列出所有token states\n    //   let tokenStates = _.reduce( ctx.ID(), (x, y)=> {\n    //     return x.concat(y.getText())\n    //   }, []);\n    //   //获取对应的segment\n    //   let segment = this.policy_segments[this.policy_segments.length-1];\n    //   //检查tokens staets 是否已经出现,并且暂存一起来，如果pass验证，那么就concat进去了\n    //   let tempStates = [];\n    //   let statesOccured = _.every(tokenStates, (el)=> {\n    //     tempStates.push({\n    //       currentState: el,\n    //       event: settlementForward,\n    //       nextState: 'settlement'\n    //     });\n    //     tempStates.push({\n    //       currentState: 'settlement',\n    //       event: accountSettled,\n    //       nextState: el\n    //     });\n    //     return _.contains(segment.all_occured_states, el);\n    //   });\n    //   // //针对当前segment加入结算事件\n    //   if ( statesOccured ) {\n    //     Array.prototype.push.apply(this.policy_segments[this.policy_segments.length-1].state_transition_table, tempStates);\n    //   }\n    // };\n    value: function enterAudience_clause(ctx) {\n      ctx.segment_block = ctx.parentCtx.segment_block;\n    }\n  }, {\n    key: 'exitAudience_clause',\n    value: function exitAudience_clause(ctx) {\n      ctx.parentCtx.segment_block = ctx.segment_block;\n    }\n  }, {\n    key: 'enterAthorize_token_clause',\n    value: function enterAthorize_token_clause(ctx) {\n      ctx.segment_block = ctx.parentCtx.segment_block;\n      ctx.segment_block.activatedStates = [];\n      underscore.each(ctx.ID(), function (state) {\n        ctx.segment_block.activatedStates.push(state.getText());\n      });\n    }\n  }, {\n    key: 'exitAthorize_token_clause',\n    value: function exitAthorize_token_clause(ctx) {\n      this.policy_segments.push(ctx.segment_block);\n    }\n  }, {\n    key: 'enterAudience_individuals_clause',\n    value: function enterAudience_individuals_clause(ctx) {\n      ctx.segment_block = ctx.parentCtx.segment_block;\n      ctx.userObj = {};\n      ctx.userObj.userType = 'individuals';\n    }\n  }, {\n    key: 'exitAudience_individuals_clause',\n    value: function exitAudience_individuals_clause(ctx) {\n      ctx.segment_block.users.push(ctx.userObj);\n      ctx.parentCtx.segment_block = ctx.segment_block;\n    }\n  }, {\n    key: 'enterAudience_groups_clause',\n    value: function enterAudience_groups_clause(ctx) {\n      ctx.segment_block = ctx.parentCtx.segment_block;\n      ctx.userObj = {};\n      ctx.userObj.userType = 'groups';\n    }\n  }, {\n    key: 'exitAudience_groups_clause',\n    value: function exitAudience_groups_clause(ctx) {\n      ctx.segment_block.users.push(ctx.userObj);\n      ctx.parentCtx.segment_block = ctx.segment_block;\n    }\n  }, {\n    key: 'enterState_clause',\n    value: function enterState_clause(ctx) {\n      ctx.segment_block = ctx.parentCtx.segment_block;\n    }\n  }, {\n    key: 'exitState_clause',\n    value: function exitState_clause(ctx) {\n      ctx.parentCtx.segment_block = ctx.segment_block;\n    }\n  }, {\n    key: 'enterCurrent_state_clause',\n    value: function enterCurrent_state_clause(ctx) {\n      ctx.segment_block = ctx.parentCtx.segment_block;\n      ctx.segment_block.states.push(ctx.ID().getText());\n      ctx.segment_block.all_occured_states.push(ctx.ID().getText());\n      ctx.segment_block.all_occured_states = underscore.uniq(ctx.segment_block.all_occured_states);\n    }\n  }, {\n    key: 'exitCurrent_state_clause',\n    value: function exitCurrent_state_clause(ctx) {\n      ctx.parentCtx.segment_block = ctx.segment_block;\n    }\n  }, {\n    key: 'enterTarget_clause',\n    value: function enterTarget_clause(ctx) {\n      ctx.segment_block = ctx.parentCtx.segment_block;\n      //重置state\n      ctx.current_state = ctx.parentCtx.current_state_clause().ID().getText();\n      //next_state\n      ctx.next_state = ctx.ID().getText();\n      //重置event\n      ctx.events = [];\n    }\n  }, {\n    key: 'exitTarget_clause',\n\n\n    // Exit a parse tree produced by policyParser#target_clause.\n    value: function exitTarget_clause(ctx) {\n      var state_transition = void 0;\n      if (ctx.events.length > 1) {\n        state_transition = {\n          currentState: ctx.current_state,\n          event: {\n            type: 'compoundEvents',\n            params: ctx.events\n          },\n          nextState: ctx.next_state\n        };\n      } else {\n        state_transition = {\n          currentState: ctx.current_state,\n          event: ctx.events[0],\n          nextState: ctx.next_state\n        };\n      }\n      ctx.segment_block.state_transition_table.push(state_transition);\n      // //生成中间状态\n      // let tempCurrent = ctx.current_state;\n      // //permute当前events\n      // _.each(permute(ctx.events), (orderedEvts) => {\n      //   tempCurrent = ctx.current_state;\n      //   let path = [];\n      //   while (orderedEvts.length != 0) {\n      //     let event = orderedEvts.pop();\n      //     path.push(event.type);\n      //     let randomStateName = genRandomStateName(ctx.current_state, ctx.next_state,path.join('-'));\n      //     let state_transition = {\n      //       currentState: tempCurrent,\n      //       event: event,\n      //       nextState: ctx.next_state\n      //     };\n      //     if (orderedEvts.length != 0) {\n      //       state_transition.nextState = randomStateName;\n      //       tempCurrent = randomStateName;\n      //       ctx.segment_block.all_occured_states.push(randomStateName); //记录同一个起始state下面所有的target state及中间state\n      //     }\n      //     ctx.segment_block.state_transition_table.push(state_transition);\n      //   }\n      // });\n      //记录同一个curren_state 下的多个target\n      ctx.segment_block.all_occured_states.push(ctx.next_state);\n      ctx.segment_block.all_occured_states = underscore.uniq(ctx.segment_block.all_occured_states);\n      //回传\n      ctx.parentCtx.segment_block = ctx.segment_block;\n    }\n  }, {\n    key: 'enterEvent',\n    value: function enterEvent(ctx) {\n      ctx.events = ctx.parentCtx.events;\n    }\n  }, {\n    key: 'exitEvent',\n    value: function exitEvent(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterAnd_event',\n    value: function enterAnd_event(ctx) {\n      ctx.events = ctx.parentCtx.events;\n    }\n  }, {\n    key: 'exitAnd_event',\n    value: function exitAnd_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterPeriod_event',\n    value: function enterPeriod_event(ctx) {\n      var timeUnit = ctx.time_unit().getText();\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({\n        type: 'period',\n        params: [timeUnit],\n        eventName: 'period_' + timeUnit + '_event'\n      });\n    }\n  }, {\n    key: 'exitPeriod_event',\n    value: function exitPeriod_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterSpecific_date_event',\n    value: function enterSpecific_date_event(ctx) {\n      var date = ctx.DATE().getText();\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({\n        type: 'arrivalDate',\n        params: [1, date],\n        eventName: 'arrivalDate_1_' + date + '_event'\n      });\n    }\n  }, {\n    key: 'exitSpecific_date_event',\n    value: function exitSpecific_date_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterRelative_date_event',\n    value: function enterRelative_date_event(ctx) {\n      var day = Number(ctx.INT().getText());\n      var unit = ctx.time_unit().getText();\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({\n        type: 'arrivalDate',\n        params: [0, day, unit],\n        eventName: 'arrivalDate_0_' + day + '_' + unit + '_event'\n      });\n    }\n  }, {\n    key: 'exitRelative_date_event',\n    value: function exitRelative_date_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterPricing_agreement_event',\n    value: function enterPricing_agreement_event(ctx) {\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({\n        type: 'pricingAgreement',\n        params: [tbd],\n        eventName: 'pricingAgreement'\n      });\n    }\n  }, {\n    key: 'exitPricing_agreement_event',\n    value: function exitPricing_agreement_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterTransaction_event',\n    value: function enterTransaction_event(ctx) {\n      var transactionAmount = Number(ctx.INT().getText());\n      var account_id = ctx.FEATHERACCOUNT().getText();\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({\n        type: 'transaction',\n        params: [account_id, transactionAmount],\n        eventName: 'transaction_' + account_id + '_' + transactionAmount + '_event'\n      });\n    }\n  }, {\n    key: 'exitTransaction_event',\n    value: function exitTransaction_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterSigning_event',\n    value: function enterSigning_event(ctx) {\n      ctx.events = ctx.parentCtx.events;\n      var tempLicenseIds = [];\n      underscore.each(ctx.license_resource_id(), function (licensId) {\n        tempLicenseIds.push(licensId.getText());\n      });\n      ctx.events.push({\n        type: 'signing',\n        params: tempLicenseIds,\n        eventName: 'signing_' + tempLicenseIds.join('_')\n      });\n    }\n  }, {\n    key: 'exitSigning_event',\n    value: function exitSigning_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterGuaranty_event',\n    value: function enterGuaranty_event(ctx) {\n      ctx.events = ctx.parentCtx.events;\n    }\n  }, {\n    key: 'exitGuaranty_event',\n    value: function exitGuaranty_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterContract_guaranty',\n    value: function enterContract_guaranty(ctx) {\n      var amount = ctx.INT()[0].getText();\n      var day = ctx.INT()[1].getText();\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({\n        type: 'contractGuaranty',\n        params: [amount, day, 'day'],\n        eventName: 'contractGuaranty_' + amount + '_' + day + '_event'\n      });\n    }\n  }, {\n    key: 'exitContract_guaranty',\n    value: function exitContract_guaranty(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterPlatform_guaranty',\n    value: function enterPlatform_guaranty(ctx) {\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({\n        type: 'platformGuaranty',\n        params: [Number(ctx.INT().getText())],\n        eventName: 'platformGuaranty'\n      });\n    }\n  }, {\n    key: 'exitPlatform_guaranty',\n    value: function exitPlatform_guaranty(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterSettlement_event',\n    value: function enterSettlement_event(ctx) {\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({\n        type: 'accountSettled',\n        params: []\n      });\n    }\n  }, {\n    key: 'exitSettlement_event',\n    value: function exitSettlement_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterAccess_count_event',\n    value: function enterAccess_count_event(ctx) {\n      ctx.events = ctx.parentCtx.events;\n    }\n  }, {\n    key: 'exitAccess_count_event',\n    value: function exitAccess_count_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterVisit_increment_event',\n    value: function enterVisit_increment_event(ctx) {\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({\n        type: 'accessCountIncrement',\n        params: [Number(ctx.INT().getText())]\n      });\n    }\n  }, {\n    key: 'exitVisit_increment_event',\n\n\n    // Exit a parse tree produced by policyParser#visit_increment_event.\n    value: function exitVisit_increment_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterVisit_event',\n    value: function enterVisit_event(ctx) {\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({\n        type: 'accessCount',\n        params: [Number(ctx.INT().getText())]\n      });\n    }\n  }, {\n    key: 'exitVisit_event',\n    value: function exitVisit_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterBalance_event',\n    value: function enterBalance_event(ctx) {\n      ctx.events = ctx.parentCtx.events;\n    }\n  }, {\n    key: 'exitBalance_event',\n    value: function exitBalance_event(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterBalance_greater',\n\n\n    // Enter a parse tree produced by policyParser#balance_greater.\n    value: function enterBalance_greater(ctx) {\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({ type: 'balance_smaller_event', params: ctx.getText() });\n    }\n  }, {\n    key: 'exitBalance_greater',\n    value: function exitBalance_greater(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterBalance_smaller',\n    value: function enterBalance_smaller(ctx) {\n      ctx.events = ctx.parentCtx.events;\n      ctx.events.push({ type: 'balance_greater_event', params: ctx.getText() });\n    }\n  }, {\n    key: 'exitBalance_smaller',\n    value: function exitBalance_smaller(ctx) {\n      ctx.parentCtx.events = ctx.events;\n    }\n  }, {\n    key: 'enterTime_unit',\n    value: function enterTime_unit(ctx) {}\n  }, {\n    key: 'exitTime_unit',\n    value: function exitTime_unit(ctx) {}\n  }, {\n    key: 'enterState',\n    value: function enterState(ctx) {}\n  }, {\n    key: 'exitState',\n    value: function exitState(ctx) {}\n  }, {\n    key: 'enterLicense_resource_id',\n    value: function enterLicense_resource_id(ctx) {}\n  }, {\n    key: 'exitLicense_resource_id',\n    value: function exitLicense_resource_id(ctx) {}\n  }, {\n    key: 'enterUsers',\n    value: function enterUsers(ctx) {\n      //继承\n      ctx.userObj = ctx.parentCtx.userObj;\n      //新增users\n      ctx.userObj.users = ctx.userObj.users || [];\n      ctx.userObj.users.push(ctx.getText());\n      // for (var i = 0; i < ctx.getChildCount(); i++) {\n      //   if (ctx.getChild(i).getText() != ',') {\n      //     //修改\n      //     ctx.userObj.users.push(ctx.getChild(i).getText());\n      //   }\n      // }\n    }\n  }, {\n    key: 'exitUsers',\n    value: function exitUsers(ctx) {\n      //回传\n      ctx.parentCtx.userObj = ctx.userObj;\n    }\n  }, {\n    key: 'enterUser_groups',\n    value: function enterUser_groups(ctx) {\n      //继承\n      ctx.userObj = ctx.parentCtx.userObj;\n      //新增users\n      ctx.userObj.users = ctx.userObj.users || [];\n      for (var i = 0; i < ctx.getChildCount(); i++) {\n        if (ctx.getChild(i).getText() != ',') {\n          ctx.userObj.users.push(ctx.getChild(i).getText());\n        }\n      }\n    }\n  }, {\n    key: 'exitUser_groups',\n    value: function exitUser_groups(ctx) {\n      //回传\n      ctx.parentCtx.userObj = ctx.userObj;\n    }\n  }]);\n\n  return JSONGeneratorExtentionClass;\n}(policyListener);\n\n;\n\nmodule.exports = JSONGeneratorExtentionClass;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/freelog_policy_compiler/JSONGeneratorExtension.js\n// module id = Ev7n\n// module chunks = 0 1 2","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n// This implementation of {@link TokenStream} loads tokens from a\n// {@link TokenSource} on-demand, and places the tokens in a buffer to provide\n// access to any previous token by index.\n//\n// <p>\n// This token stream ignores the value of {@link Token//getChannel}. If your\n// parser requires the token stream filter tokens to only those on a particular\n// channel, such as {@link Token//DEFAULT_CHANNEL} or\n// {@link Token//HIDDEN_CHANNEL}, use a filtering token stream such a\n// {@link CommonTokenStream}.</p>\n\nvar Token = require('./Token').Token;\nvar Lexer = require('./Lexer').Lexer;\nvar Interval = require('./IntervalSet').Interval;\n\n// this is just to keep meaningful parameter types to Parser\nfunction TokenStream() {\n\treturn this;\n}\n\nfunction BufferedTokenStream(tokenSource) {\n\n\tTokenStream.call(this);\n\t// The {@link TokenSource} from which tokens for this stream are fetched.\n\tthis.tokenSource = tokenSource;\n\n\t// A collection of all tokens fetched from the token source. The list is\n\t// considered a complete view of the input once {@link //fetchedEOF} is set\n\t// to {@code true}.\n\tthis.tokens = [];\n\n\t// The index into {@link //tokens} of the current token (next token to\n\t// {@link //consume}). {@link //tokens}{@code [}{@link //p}{@code ]} should\n\t// be\n\t// {@link //LT LT(1)}.\n\t//\n\t// <p>This field is set to -1 when the stream is first constructed or when\n\t// {@link //setTokenSource} is called, indicating that the first token has\n\t// not yet been fetched from the token source. For additional information,\n\t// see the documentation of {@link IntStream} for a description of\n\t// Initializing Methods.</p>\n\tthis.index = -1;\n\n\t// Indicates whether the {@link Token//EOF} token has been fetched from\n\t// {@link //tokenSource} and added to {@link //tokens}. This field improves\n\t// performance for the following cases:\n\t//\n\t// <ul>\n\t// <li>{@link //consume}: The lookahead check in {@link //consume} to\n\t// prevent\n\t// consuming the EOF symbol is optimized by checking the values of\n\t// {@link //fetchedEOF} and {@link //p} instead of calling {@link\n\t// //LA}.</li>\n\t// <li>{@link //fetch}: The check to prevent adding multiple EOF symbols\n\t// into\n\t// {@link //tokens} is trivial with this field.</li>\n\t// <ul>\n\tthis.fetchedEOF = false;\n\treturn this;\n}\n\nBufferedTokenStream.prototype = Object.create(TokenStream.prototype);\nBufferedTokenStream.prototype.constructor = BufferedTokenStream;\n\nBufferedTokenStream.prototype.mark = function() {\n\treturn 0;\n};\n\nBufferedTokenStream.prototype.release = function(marker) {\n\t// no resources to release\n};\n\nBufferedTokenStream.prototype.reset = function() {\n\tthis.seek(0);\n};\n\nBufferedTokenStream.prototype.seek = function(index) {\n\tthis.lazyInit();\n\tthis.index = this.adjustSeekIndex(index);\n};\n\nBufferedTokenStream.prototype.get = function(index) {\n\tthis.lazyInit();\n\treturn this.tokens[index];\n};\n\nBufferedTokenStream.prototype.consume = function() {\n\tvar skipEofCheck = false;\n\tif (this.index >= 0) {\n\t\tif (this.fetchedEOF) {\n\t\t\t// the last token in tokens is EOF. skip check if p indexes any\n\t\t\t// fetched token except the last.\n\t\t\tskipEofCheck = this.index < this.tokens.length - 1;\n\t\t} else {\n\t\t\t// no EOF token in tokens. skip check if p indexes a fetched token.\n\t\t\tskipEofCheck = this.index < this.tokens.length;\n\t\t}\n\t} else {\n\t\t// not yet initialized\n\t\tskipEofCheck = false;\n\t}\n\tif (!skipEofCheck && this.LA(1) === Token.EOF) {\n\t\tthrow \"cannot consume EOF\";\n\t}\n\tif (this.sync(this.index + 1)) {\n\t\tthis.index = this.adjustSeekIndex(this.index + 1);\n\t}\n};\n\n// Make sure index {@code i} in tokens has a token.\n//\n// @return {@code true} if a token is located at index {@code i}, otherwise\n// {@code false}.\n// @see //get(int i)\n// /\nBufferedTokenStream.prototype.sync = function(i) {\n\tvar n = i - this.tokens.length + 1; // how many more elements we need?\n\tif (n > 0) {\n\t\tvar fetched = this.fetch(n);\n\t\treturn fetched >= n;\n\t}\n\treturn true;\n};\n\n// Add {@code n} elements to buffer.\n//\n// @return The actual number of elements added to the buffer.\n// /\nBufferedTokenStream.prototype.fetch = function(n) {\n\tif (this.fetchedEOF) {\n\t\treturn 0;\n\t}\n\tfor (var i = 0; i < n; i++) {\n\t\tvar t = this.tokenSource.nextToken();\n\t\tt.tokenIndex = this.tokens.length;\n\t\tthis.tokens.push(t);\n\t\tif (t.type === Token.EOF) {\n\t\t\tthis.fetchedEOF = true;\n\t\t\treturn i + 1;\n\t\t}\n\t}\n\treturn n;\n};\n\n// Get all tokens from start..stop inclusively///\nBufferedTokenStream.prototype.getTokens = function(start, stop, types) {\n\tif (types === undefined) {\n\t\ttypes = null;\n\t}\n\tif (start < 0 || stop < 0) {\n\t\treturn null;\n\t}\n\tthis.lazyInit();\n\tvar subset = [];\n\tif (stop >= this.tokens.length) {\n\t\tstop = this.tokens.length - 1;\n\t}\n\tfor (var i = start; i < stop; i++) {\n\t\tvar t = this.tokens[i];\n\t\tif (t.type === Token.EOF) {\n\t\t\tbreak;\n\t\t}\n\t\tif (types === null || types.contains(t.type)) {\n\t\t\tsubset.push(t);\n\t\t}\n\t}\n\treturn subset;\n};\n\nBufferedTokenStream.prototype.LA = function(i) {\n\treturn this.LT(i).type;\n};\n\nBufferedTokenStream.prototype.LB = function(k) {\n\tif (this.index - k < 0) {\n\t\treturn null;\n\t}\n\treturn this.tokens[this.index - k];\n};\n\nBufferedTokenStream.prototype.LT = function(k) {\n\tthis.lazyInit();\n\tif (k === 0) {\n\t\treturn null;\n\t}\n\tif (k < 0) {\n\t\treturn this.LB(-k);\n\t}\n\tvar i = this.index + k - 1;\n\tthis.sync(i);\n\tif (i >= this.tokens.length) { // return EOF token\n\t\t// EOF must be last token\n\t\treturn this.tokens[this.tokens.length - 1];\n\t}\n\treturn this.tokens[i];\n};\n\n// Allowed derived classes to modify the behavior of operations which change\n// the current stream position by adjusting the target token index of a seek\n// operation. The default implementation simply returns {@code i}. If an\n// exception is thrown in this method, the current stream index should not be\n// changed.\n//\n// <p>For example, {@link CommonTokenStream} overrides this method to ensure\n// that\n// the seek target is always an on-channel token.</p>\n//\n// @param i The target token index.\n// @return The adjusted target token index.\n\nBufferedTokenStream.prototype.adjustSeekIndex = function(i) {\n\treturn i;\n};\n\nBufferedTokenStream.prototype.lazyInit = function() {\n\tif (this.index === -1) {\n\t\tthis.setup();\n\t}\n};\n\nBufferedTokenStream.prototype.setup = function() {\n\tthis.sync(0);\n\tthis.index = this.adjustSeekIndex(0);\n};\n\n// Reset this token stream by setting its token source.///\nBufferedTokenStream.prototype.setTokenSource = function(tokenSource) {\n\tthis.tokenSource = tokenSource;\n\tthis.tokens = [];\n\tthis.index = -1;\n\tthis.fetchedEOF = false;\n};\n\n\n// Given a starting index, return the index of the next token on channel.\n// Return i if tokens[i] is on channel. Return -1 if there are no tokens\n// on channel between i and EOF.\n// /\nBufferedTokenStream.prototype.nextTokenOnChannel = function(i, channel) {\n\tthis.sync(i);\n\tif (i >= this.tokens.length) {\n\t\treturn -1;\n\t}\n\tvar token = this.tokens[i];\n\twhile (token.channel !== this.channel) {\n\t\tif (token.type === Token.EOF) {\n\t\t\treturn -1;\n\t\t}\n\t\ti += 1;\n\t\tthis.sync(i);\n\t\ttoken = this.tokens[i];\n\t}\n\treturn i;\n};\n\n// Given a starting index, return the index of the previous token on channel.\n// Return i if tokens[i] is on channel. Return -1 if there are no tokens\n// on channel between i and 0.\nBufferedTokenStream.prototype.previousTokenOnChannel = function(i, channel) {\n\twhile (i >= 0 && this.tokens[i].channel !== channel) {\n\t\ti -= 1;\n\t}\n\treturn i;\n};\n\n// Collect all tokens on specified channel to the right of\n// the current token up until we see a token on DEFAULT_TOKEN_CHANNEL or\n// EOF. If channel is -1, find any non default channel token.\nBufferedTokenStream.prototype.getHiddenTokensToRight = function(tokenIndex,\n\t\tchannel) {\n\tif (channel === undefined) {\n\t\tchannel = -1;\n\t}\n\tthis.lazyInit();\n\tif (tokenIndex < 0 || tokenIndex >= this.tokens.length) {\n\t\tthrow \"\" + tokenIndex + \" not in 0..\" + this.tokens.length - 1;\n\t}\n\tvar nextOnChannel = this.nextTokenOnChannel(tokenIndex + 1, Lexer.DEFAULT_TOKEN_CHANNEL);\n\tvar from_ = tokenIndex + 1;\n\t// if none onchannel to right, nextOnChannel=-1 so set to = last token\n\tvar to = nextOnChannel === -1 ? this.tokens.length - 1 : nextOnChannel;\n\treturn this.filterForChannel(from_, to, channel);\n};\n\n// Collect all tokens on specified channel to the left of\n// the current token up until we see a token on DEFAULT_TOKEN_CHANNEL.\n// If channel is -1, find any non default channel token.\nBufferedTokenStream.prototype.getHiddenTokensToLeft = function(tokenIndex,\n\t\tchannel) {\n\tif (channel === undefined) {\n\t\tchannel = -1;\n\t}\n\tthis.lazyInit();\n\tif (tokenIndex < 0 || tokenIndex >= this.tokens.length) {\n\t\tthrow \"\" + tokenIndex + \" not in 0..\" + this.tokens.length - 1;\n\t}\n\tvar prevOnChannel = this.previousTokenOnChannel(tokenIndex - 1, Lexer.DEFAULT_TOKEN_CHANNEL);\n\tif (prevOnChannel === tokenIndex - 1) {\n\t\treturn null;\n\t}\n\t// if none on channel to left, prevOnChannel=-1 then from=0\n\tvar from_ = prevOnChannel + 1;\n\tvar to = tokenIndex - 1;\n\treturn this.filterForChannel(from_, to, channel);\n};\n\nBufferedTokenStream.prototype.filterForChannel = function(left, right, channel) {\n\tvar hidden = [];\n\tfor (var i = left; i < right + 1; i++) {\n\t\tvar t = this.tokens[i];\n\t\tif (channel === -1) {\n\t\t\tif (t.channel !== Lexer.DEFAULT_TOKEN_CHANNEL) {\n\t\t\t\thidden.push(t);\n\t\t\t}\n\t\t} else if (t.channel === channel) {\n\t\t\thidden.push(t);\n\t\t}\n\t}\n\tif (hidden.length === 0) {\n\t\treturn null;\n\t}\n\treturn hidden;\n};\n\nBufferedTokenStream.prototype.getSourceName = function() {\n\treturn this.tokenSource.getSourceName();\n};\n\n// Get the text of all tokens in this buffer.///\nBufferedTokenStream.prototype.getText = function(interval) {\n\tthis.lazyInit();\n\tthis.fill();\n\tif (interval === undefined || interval === null) {\n\t\tinterval = new Interval(0, this.tokens.length - 1);\n\t}\n\tvar start = interval.start;\n\tif (start instanceof Token) {\n\t\tstart = start.tokenIndex;\n\t}\n\tvar stop = interval.stop;\n\tif (stop instanceof Token) {\n\t\tstop = stop.tokenIndex;\n\t}\n\tif (start === null || stop === null || start < 0 || stop < 0) {\n\t\treturn \"\";\n\t}\n\tif (stop >= this.tokens.length) {\n\t\tstop = this.tokens.length - 1;\n\t}\n\tvar s = \"\";\n\tfor (var i = start; i < stop + 1; i++) {\n\t\tvar t = this.tokens[i];\n\t\tif (t.type === Token.EOF) {\n\t\t\tbreak;\n\t\t}\n\t\ts = s + t.text;\n\t}\n\treturn s;\n};\n\n// Get all tokens from lexer until EOF///\nBufferedTokenStream.prototype.fill = function() {\n\tthis.lazyInit();\n\twhile (this.fetch(1000) === 1000) {\n\t\tcontinue;\n\t}\n};\n\nexports.BufferedTokenStream = BufferedTokenStream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/BufferedTokenStream.js\n// module id = ExQ7\n// module chunks = 0 1 2","export default {\n  name: 'presentable-tags',\n  data() {\n    return {\n      presentableTags: [],\n      inputVisible: false,\n      inputValue: ''\n    }\n  },\n  props: {\n    value: {\n      type: Array,\n      default() {\n        return []\n      }\n    }\n  },\n  watch: {\n    value: function (val) {\n      this.setCurrentValue(val);\n    }\n  },\n  mounted() {\n    this.setCurrentValue(this.value)\n  },\n  methods: {\n    setCurrentValue(value) {\n      this.presentableTags = value;\n    },\n    handleClose(tag) {\n      this.presentableTags.splice(this.presentableTags.indexOf(tag), 1);\n      this.$emit('input', this.presentableTags);\n    },\n    showInput() {\n      this.inputVisible = true;\n      this.$nextTick(_ => {\n        this.$refs.saveTagInput.$refs.input.focus();\n      });\n    },\n    handleInputConfirm() {\n      let inputValue = this.inputValue;\n      if (inputValue) {\n        this.presentableTags.push(inputValue);\n        this.$emit('input', this.presentableTags);\n      }\n      this.inputVisible = false;\n      this.inputValue = '';\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/views/node/presentable/tags/index.js","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\n//\n// This class extends {@link BufferedTokenStream} with functionality to filter\n// token streams to tokens on a particular channel (tokens where\n// {@link Token//getChannel} returns a particular value).\n//\n// <p>\n// This token stream provides access to all tokens by index or when calling\n// methods like {@link //getText}. The channel filtering is only used for code\n// accessing tokens via the lookahead methods {@link //LA}, {@link //LT}, and\n// {@link //LB}.</p>\n//\n// <p>\n// By default, tokens are placed on the default channel\n// ({@link Token//DEFAULT_CHANNEL}), but may be reassigned by using the\n// {@code ->channel(HIDDEN)} lexer command, or by using an embedded action to\n// call {@link Lexer//setChannel}.\n// </p>\n//\n// <p>\n// Note: lexer rules which use the {@code ->skip} lexer command or call\n// {@link Lexer//skip} do not produce tokens at all, so input text matched by\n// such a rule will not be available as part of the token stream, regardless of\n// channel.</p>\n///\n\nvar Token = require('./Token').Token;\nvar BufferedTokenStream = require('./BufferedTokenStream').BufferedTokenStream;\n\nfunction CommonTokenStream(lexer, channel) {\n\tBufferedTokenStream.call(this, lexer);\n    this.channel = channel===undefined ? Token.DEFAULT_CHANNEL : channel;\n    return this;\n}\n\nCommonTokenStream.prototype = Object.create(BufferedTokenStream.prototype);\nCommonTokenStream.prototype.constructor = CommonTokenStream;\n\nCommonTokenStream.prototype.adjustSeekIndex = function(i) {\n    return this.nextTokenOnChannel(i, this.channel);\n};\n\nCommonTokenStream.prototype.LB = function(k) {\n    if (k===0 || this.index-k<0) {\n        return null;\n    }\n    var i = this.index;\n    var n = 1;\n    // find k good tokens looking backwards\n    while (n <= k) {\n        // skip off-channel tokens\n        i = this.previousTokenOnChannel(i - 1, this.channel);\n        n += 1;\n    }\n    if (i < 0) {\n        return null;\n    }\n    return this.tokens[i];\n};\n\nCommonTokenStream.prototype.LT = function(k) {\n    this.lazyInit();\n    if (k === 0) {\n        return null;\n    }\n    if (k < 0) {\n        return this.LB(-k);\n    }\n    var i = this.index;\n    var n = 1; // we know tokens[pos] is a good one\n    // find k good tokens\n    while (n < k) {\n        // skip off-channel tokens, but make sure to not look past EOF\n        if (this.sync(i + 1)) {\n            i = this.nextTokenOnChannel(i + 1, this.channel);\n        }\n        n += 1;\n    }\n    return this.tokens[i];\n};\n\n// Count EOF just once.///\nCommonTokenStream.prototype.getNumberOfOnChannelTokens = function() {\n    var n = 0;\n    this.fill();\n    for (var i =0; i< this.tokens.length;i++) {\n        var t = this.tokens[i];\n        if( t.channel===this.channel) {\n            n += 1;\n        }\n        if( t.type===Token.EOF) {\n            break;\n        }\n    }\n    return n;\n};\n\nexports.CommonTokenStream = CommonTokenStream;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/CommonTokenStream.js\n// module id = Fzuw\n// module chunks = 0 1 2","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\nvar InputStream = require('./InputStream').InputStream;\n\nvar isNodeJs = typeof window === 'undefined' && typeof importScripts === 'undefined';\nvar fs = isNodeJs ? require(\"fs\") : null;\n\n// Utility functions to create InputStreams from various sources.\n//\n// All returned InputStreams support the full range of Unicode\n// up to U+10FFFF (the default behavior of InputStream only supports\n// code points up to U+FFFF).\nvar CharStreams = {\n  // Creates an InputStream from a string.\n  fromString: function(str) {\n    return new InputStream(str, true);\n  },\n\n  // Asynchronously creates an InputStream from a blob given the\n  // encoding of the bytes in that blob (defaults to 'utf8' if\n  // encoding is null).\n  //\n  // Invokes onLoad(result) on success, onError(error) on\n  // failure.\n  fromBlob: function(blob, encoding, onLoad, onError) {\n    var reader = FileReader();\n    reader.onload = function(e) {\n      var is = new InputStream(e.target.result, true);\n      onLoad(is);\n    };\n    reader.onerror = onError;\n    reader.readAsText(blob, encoding);\n  },\n\n  // Creates an InputStream from a Buffer given the\n  // encoding of the bytes in that buffer (defaults to 'utf8' if\n  // encoding is null).\n  fromBuffer: function(buffer, encoding) {\n    return new InputStream(buffer.toString(encoding), true);\n  },\n\n  // Asynchronously creates an InputStream from a file on disk given\n  // the encoding of the bytes in that file (defaults to 'utf8' if\n  // encoding is null).\n  //\n  // Invokes callback(error, result) on completion.\n  fromPath: function(path, encoding, callback) {\n    fs.readFile(path, encoding, function(err, data) {\n      var is = null;\n      if (data !== null) {\n        is = new InputStream(data, true);\n      }\n      callback(err, is);\n    });\n  },\n\n  // Synchronously creates an InputStream given a path to a file\n  // on disk and the encoding of the bytes in that file (defaults to\n  // 'utf8' if encoding is null).\n  fromPathSync: function(path, encoding) {\n    var data = fs.readFileSync(path, encoding);\n    return new InputStream(data, true);\n  }\n};\n\nexports.CharStreams = CharStreams;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/CharStreams.js\n// module id = HNBV\n// module chunks = 0 1 2","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-f9f08148\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../../node_modules/less-loader/dist/cjs.js?{\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"1d03e694\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/vue-style-loader!./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-f9f08148\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/less-loader/dist/cjs.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/views/node/presentable/create/index.vue\n// module id = HwOZ\n// module chunks = 2","'use strict';\n\nvar antlr4 = require('antlr4/index');\nvar policy = require('presentable_policy_lang');\nvar policyLexer = policy.policyLexer;\nvar policyParser = policy.policyParser;\nvar _ = require('underscore');\n\nvar ErrorListener = require('antlr4/error/ErrorListener').ConsoleErrorListener;\nvar ErrorListenerExtend = require('./ErrorListenerExtend');\nErrorListenerExtend(ErrorListener.prototype);\n\nvar compile = function compile(text) {\n  var target = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'json';\n\n  var extentionClass = require('./JSONGeneratorExtension.js');\n  if (target === 'beautify') {\n    extentionClass = require('./BeautifyExtension.js');\n  }\n\n  var chars = new antlr4.InputStream(text);\n  var lexer = new policyLexer(chars);\n\n  var tokens = new antlr4.CommonTokenStream(lexer);\n  var parser = new policyParser(tokens);\n  parser.buildParseTrees = true;\n  var tree = parser.p();\n  var listener = new extentionClass();\n  antlr4.tree.ParseTreeWalker.DEFAULT.walk(listener, tree);\n  if (parser._listeners[0].errorMsg) {\n    //把错误信息放进listener里面\n    listener.errorMsg = parser._listeners[0].errorMsg;\n    parser._listeners[0].errorMsg = null;\n  }\n  return listener;\n};\n\nexports.compile = compile;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/presentable_policy_compiler/index.js\n// module id = I+6F\n// module chunks = 2","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\nvar ATNConfigSet = require('./../atn/ATNConfigSet').ATNConfigSet;\nvar Utils = require('./../Utils');\nvar Hash = Utils.Hash;\nvar Set = Utils.Set;\n\n// Map a predicate to a predicted alternative.///\n\nfunction PredPrediction(pred, alt) {\n\tthis.alt = alt;\n\tthis.pred = pred;\n\treturn this;\n}\n\nPredPrediction.prototype.toString = function() {\n\treturn \"(\" + this.pred + \", \" + this.alt + \")\";\n};\n\n// A DFA state represents a set of possible ATN configurations.\n// As Aho, Sethi, Ullman p. 117 says \"The DFA uses its state\n// to keep track of all possible states the ATN can be in after\n// reading each input symbol. That is to say, after reading\n// input a1a2..an, the DFA is in a state that represents the\n// subset T of the states of the ATN that are reachable from the\n// ATN's start state along some path labeled a1a2..an.\"\n// In conventional NFA&rarr;DFA conversion, therefore, the subset T\n// would be a bitset representing the set of states the\n// ATN could be in. We need to track the alt predicted by each\n// state as well, however. More importantly, we need to maintain\n// a stack of states, tracking the closure operations as they\n// jump from rule to rule, emulating rule invocations (method calls).\n// I have to add a stack to simulate the proper lookahead sequences for\n// the underlying LL grammar from which the ATN was derived.\n//\n// <p>I use a set of ATNConfig objects not simple states. An ATNConfig\n// is both a state (ala normal conversion) and a RuleContext describing\n// the chain of rules (if any) followed to arrive at that state.</p>\n//\n// <p>A DFA state may have multiple references to a particular state,\n// but with different ATN contexts (with same or different alts)\n// meaning that state was reached via a different set of rule invocations.</p>\n// /\n\nfunction DFAState(stateNumber, configs) {\n\tif (stateNumber === null) {\n\t\tstateNumber = -1;\n\t}\n\tif (configs === null) {\n\t\tconfigs = new ATNConfigSet();\n\t}\n\tthis.stateNumber = stateNumber;\n\tthis.configs = configs;\n\t// {@code edges[symbol]} points to target of symbol. Shift up by 1 so (-1)\n\t// {@link Token//EOF} maps to {@code edges[0]}.\n\tthis.edges = null;\n\tthis.isAcceptState = false;\n\t// if accept state, what ttype do we match or alt do we predict?\n\t// This is set to {@link ATN//INVALID_ALT_NUMBER} when {@link\n\t// //predicates}{@code !=null} or\n\t// {@link //requiresFullContext}.\n\tthis.prediction = 0;\n\tthis.lexerActionExecutor = null;\n\t// Indicates that this state was created during SLL prediction that\n\t// discovered a conflict between the configurations in the state. Future\n\t// {@link ParserATNSimulator//execATN} invocations immediately jumped doing\n\t// full context prediction if this field is true.\n\tthis.requiresFullContext = false;\n\t// During SLL parsing, this is a list of predicates associated with the\n\t// ATN configurations of the DFA state. When we have predicates,\n\t// {@link //requiresFullContext} is {@code false} since full context\n\t// prediction evaluates predicates\n\t// on-the-fly. If this is not null, then {@link //prediction} is\n\t// {@link ATN//INVALID_ALT_NUMBER}.\n\t//\n\t// <p>We only use these for non-{@link //requiresFullContext} but\n\t// conflicting states. That\n\t// means we know from the context (it's $ or we don't dip into outer\n\t// context) that it's an ambiguity not a conflict.</p>\n\t//\n\t// <p>This list is computed by {@link\n\t// ParserATNSimulator//predicateDFAState}.</p>\n\tthis.predicates = null;\n\treturn this;\n}\n\n// Get the set of all alts mentioned by all ATN configurations in this\n// DFA state.\nDFAState.prototype.getAltSet = function() {\n\tvar alts = new Set();\n\tif (this.configs !== null) {\n\t\tfor (var i = 0; i < this.configs.length; i++) {\n\t\t\tvar c = this.configs[i];\n\t\t\talts.add(c.alt);\n\t\t}\n\t}\n\tif (alts.length === 0) {\n\t\treturn null;\n\t} else {\n\t\treturn alts;\n\t}\n};\n\n// Two {@link DFAState} instances are equal if their ATN configuration sets\n// are the same. This method is used to see if a state already exists.\n//\n// <p>Because the number of alternatives and number of ATN configurations are\n// finite, there is a finite number of DFA states that can be processed.\n// This is necessary to show that the algorithm terminates.</p>\n//\n// <p>Cannot test the DFA state numbers here because in\n// {@link ParserATNSimulator//addDFAState} we need to know if any other state\n// exists that has this exact set of ATN configurations. The\n// {@link //stateNumber} is irrelevant.</p>\nDFAState.prototype.equals = function(other) {\n\t// compare set of ATN configurations in this set with other\n\treturn this === other ||\n\t\t\t(other instanceof DFAState &&\n\t\t\t\tthis.configs.equals(other.configs));\n};\n\nDFAState.prototype.toString = function() {\n\tvar s = \"\" + this.stateNumber + \":\" + this.configs;\n\tif(this.isAcceptState) {\n        s = s + \"=>\";\n        if (this.predicates !== null)\n            s = s + this.predicates;\n        else\n            s = s + this.prediction;\n    }\n\treturn s;\n};\n\nDFAState.prototype.hashCode = function() {\n\tvar hash = new Hash();\n\thash.update(this.configs);\n\tif(this.isAcceptState) {\n        if (this.predicates !== null)\n            hash.update(this.predicates);\n        else\n            hash.update(this.prediction);\n    }\n    return hash.finish();\n};\n\nexports.DFAState = DFAState;\nexports.PredPrediction = PredPrediction;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/dfa/DFAState.js\n// module id = IUCG\n// module chunks = 0 1 2","function injectStyle (ssrContext) {\n  require(\"!!../../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-09f5c69c\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-09f5c69c\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-09f5c69c\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/node/presentable/tags/index.vue\n// module id = ItGU\n// module chunks = 2","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n //\n\nfunction LexerActionType() {\n}\n\nLexerActionType.CHANNEL = 0;     //The type of a {@link LexerChannelAction} action.\nLexerActionType.CUSTOM = 1;      //The type of a {@link LexerCustomAction} action.\nLexerActionType.MODE = 2;        //The type of a {@link LexerModeAction} action.\nLexerActionType.MORE = 3;        //The type of a {@link LexerMoreAction} action.\nLexerActionType.POP_MODE = 4;    //The type of a {@link LexerPopModeAction} action.\nLexerActionType.PUSH_MODE = 5;   //The type of a {@link LexerPushModeAction} action.\nLexerActionType.SKIP = 6;        //The type of a {@link LexerSkipAction} action.\nLexerActionType.TYPE = 7;        //The type of a {@link LexerTypeAction} action.\n\nfunction LexerAction(action) {\n    this.actionType = action;\n    this.isPositionDependent = false;\n    return this;\n}\n\nLexerAction.prototype.hashCode = function() {\n    var hash = new Hash();\n    this.updateHashCode(hash);\n    return hash.finish()\n};\n\nLexerAction.prototype.updateHashCode = function(hash) {\n    hash.update(this.actionType);\n};\n\nLexerAction.prototype.equals = function(other) {\n    return this === other;\n};\n\n\n\n//\n// Implements the {@code skip} lexer action by calling {@link Lexer//skip}.\n//\n// <p>The {@code skip} command does not have any parameters, so this action is\n// implemented as a singleton instance exposed by {@link //INSTANCE}.</p>\nfunction LexerSkipAction() {\n\tLexerAction.call(this, LexerActionType.SKIP);\n\treturn this;\n}\n\nLexerSkipAction.prototype = Object.create(LexerAction.prototype);\nLexerSkipAction.prototype.constructor = LexerSkipAction;\n\n// Provides a singleton instance of this parameterless lexer action.\nLexerSkipAction.INSTANCE = new LexerSkipAction();\n\nLexerSkipAction.prototype.execute = function(lexer) {\n    lexer.skip();\n};\n\nLexerSkipAction.prototype.toString = function() {\n\treturn \"skip\";\n};\n\n//  Implements the {@code type} lexer action by calling {@link Lexer//setType}\n// with the assigned type.\nfunction LexerTypeAction(type) {\n\tLexerAction.call(this, LexerActionType.TYPE);\n\tthis.type = type;\n\treturn this;\n}\n\nLexerTypeAction.prototype = Object.create(LexerAction.prototype);\nLexerTypeAction.prototype.constructor = LexerTypeAction;\n\nLexerTypeAction.prototype.execute = function(lexer) {\n    lexer.type = this.type;\n};\n\nLexerTypeAction.prototype.updateHashCode = function(hash) {\n    hash.update(this.actionType, this.type);\n};\n\n\nLexerTypeAction.prototype.equals = function(other) {\n    if(this === other) {\n        return true;\n    } else if (! (other instanceof LexerTypeAction)) {\n        return false;\n    } else {\n        return this.type === other.type;\n    }\n};\n\nLexerTypeAction.prototype.toString = function() {\n    return \"type(\" + this.type + \")\";\n};\n\n// Implements the {@code pushMode} lexer action by calling\n// {@link Lexer//pushMode} with the assigned mode.\nfunction LexerPushModeAction(mode) {\n\tLexerAction.call(this, LexerActionType.PUSH_MODE);\n    this.mode = mode;\n    return this;\n}\n\nLexerPushModeAction.prototype = Object.create(LexerAction.prototype);\nLexerPushModeAction.prototype.constructor = LexerPushModeAction;\n\n// <p>This action is implemented by calling {@link Lexer//pushMode} with the\n// value provided by {@link //getMode}.</p>\nLexerPushModeAction.prototype.execute = function(lexer) {\n    lexer.pushMode(this.mode);\n};\n\nLexerPushModeAction.prototype.updateHashCode = function(hash) {\n    hash.update(this.actionType, this.mode);\n};\n\nLexerPushModeAction.prototype.equals = function(other) {\n    if (this === other) {\n        return true;\n    } else if (! (other instanceof LexerPushModeAction)) {\n        return false;\n    } else {\n        return this.mode === other.mode;\n    }\n};\n\nLexerPushModeAction.prototype.toString = function() {\n\treturn \"pushMode(\" + this.mode + \")\";\n};\n\n\n// Implements the {@code popMode} lexer action by calling {@link Lexer//popMode}.\n//\n// <p>The {@code popMode} command does not have any parameters, so this action is\n// implemented as a singleton instance exposed by {@link //INSTANCE}.</p>\nfunction LexerPopModeAction() {\n\tLexerAction.call(this,LexerActionType.POP_MODE);\n\treturn this;\n}\n\nLexerPopModeAction.prototype = Object.create(LexerAction.prototype);\nLexerPopModeAction.prototype.constructor = LexerPopModeAction;\n\nLexerPopModeAction.INSTANCE = new LexerPopModeAction();\n\n// <p>This action is implemented by calling {@link Lexer//popMode}.</p>\nLexerPopModeAction.prototype.execute = function(lexer) {\n    lexer.popMode();\n};\n\nLexerPopModeAction.prototype.toString = function() {\n\treturn \"popMode\";\n};\n\n// Implements the {@code more} lexer action by calling {@link Lexer//more}.\n//\n// <p>The {@code more} command does not have any parameters, so this action is\n// implemented as a singleton instance exposed by {@link //INSTANCE}.</p>\nfunction LexerMoreAction() {\n\tLexerAction.call(this, LexerActionType.MORE);\n\treturn this;\n}\n\nLexerMoreAction.prototype = Object.create(LexerAction.prototype);\nLexerMoreAction.prototype.constructor = LexerMoreAction;\n\nLexerMoreAction.INSTANCE = new LexerMoreAction();\n\n// <p>This action is implemented by calling {@link Lexer//popMode}.</p>\nLexerMoreAction.prototype.execute = function(lexer) {\n    lexer.more();\n};\n\nLexerMoreAction.prototype.toString = function() {\n    return \"more\";\n};\n\n\n// Implements the {@code mode} lexer action by calling {@link Lexer//mode} with\n// the assigned mode.\nfunction LexerModeAction(mode) {\n\tLexerAction.call(this, LexerActionType.MODE);\n    this.mode = mode;\n    return this;\n}\n\nLexerModeAction.prototype = Object.create(LexerAction.prototype);\nLexerModeAction.prototype.constructor = LexerModeAction;\n\n// <p>This action is implemented by calling {@link Lexer//mode} with the\n// value provided by {@link //getMode}.</p>\nLexerModeAction.prototype.execute = function(lexer) {\n    lexer.mode(this.mode);\n};\n\nLexerModeAction.prototype.updateHashCode = function(hash) {\n    hash.update(this.actionType, this.mode);\n};\n\nLexerModeAction.prototype.equals = function(other) {\n    if (this === other) {\n        return true;\n    } else if (! (other instanceof LexerModeAction)) {\n        return false;\n    } else {\n        return this.mode === other.mode;\n    }\n};\n\nLexerModeAction.prototype.toString = function() {\n    return \"mode(\" + this.mode + \")\";\n};\n\n// Executes a custom lexer action by calling {@link Recognizer//action} with the\n// rule and action indexes assigned to the custom action. The implementation of\n// a custom action is added to the generated code for the lexer in an override\n// of {@link Recognizer//action} when the grammar is compiled.\n//\n// <p>This class may represent embedded actions created with the <code>{...}</code>\n// syntax in ANTLR 4, as well as actions created for lexer commands where the\n// command argument could not be evaluated when the grammar was compiled.</p>\n\n\n    // Constructs a custom lexer action with the specified rule and action\n    // indexes.\n    //\n    // @param ruleIndex The rule index to use for calls to\n    // {@link Recognizer//action}.\n    // @param actionIndex The action index to use for calls to\n    // {@link Recognizer//action}.\n\nfunction LexerCustomAction(ruleIndex, actionIndex) {\n\tLexerAction.call(this, LexerActionType.CUSTOM);\n    this.ruleIndex = ruleIndex;\n    this.actionIndex = actionIndex;\n    this.isPositionDependent = true;\n    return this;\n}\n\nLexerCustomAction.prototype = Object.create(LexerAction.prototype);\nLexerCustomAction.prototype.constructor = LexerCustomAction;\n\n// <p>Custom actions are implemented by calling {@link Lexer//action} with the\n// appropriate rule and action indexes.</p>\nLexerCustomAction.prototype.execute = function(lexer) {\n    lexer.action(null, this.ruleIndex, this.actionIndex);\n};\n\nLexerCustomAction.prototype.updateHashCode = function(hash) {\n    hash.update(this.actionType, this.ruleIndex, this.actionIndex);\n};\n\nLexerCustomAction.prototype.equals = function(other) {\n    if (this === other) {\n        return true;\n    } else if (! (other instanceof LexerCustomAction)) {\n        return false;\n    } else {\n        return this.ruleIndex === other.ruleIndex && this.actionIndex === other.actionIndex;\n    }\n};\n\n// Implements the {@code channel} lexer action by calling\n// {@link Lexer//setChannel} with the assigned channel.\n// Constructs a new {@code channel} action with the specified channel value.\n// @param channel The channel value to pass to {@link Lexer//setChannel}.\nfunction LexerChannelAction(channel) {\n\tLexerAction.call(this, LexerActionType.CHANNEL);\n    this.channel = channel;\n    return this;\n}\n\nLexerChannelAction.prototype = Object.create(LexerAction.prototype);\nLexerChannelAction.prototype.constructor = LexerChannelAction;\n\n// <p>This action is implemented by calling {@link Lexer//setChannel} with the\n// value provided by {@link //getChannel}.</p>\nLexerChannelAction.prototype.execute = function(lexer) {\n    lexer._channel = this.channel;\n};\n\nLexerChannelAction.prototype.updateHashCode = function(hash) {\n    hash.update(this.actionType, this.channel);\n};\n\nLexerChannelAction.prototype.equals = function(other) {\n    if (this === other) {\n        return true;\n    } else if (! (other instanceof LexerChannelAction)) {\n        return false;\n    } else {\n        return this.channel === other.channel;\n    }\n};\n\nLexerChannelAction.prototype.toString = function() {\n    return \"channel(\" + this.channel + \")\";\n};\n\n// This implementation of {@link LexerAction} is used for tracking input offsets\n// for position-dependent actions within a {@link LexerActionExecutor}.\n//\n// <p>This action is not serialized as part of the ATN, and is only required for\n// position-dependent lexer actions which appear at a location other than the\n// end of a rule. For more information about DFA optimizations employed for\n// lexer actions, see {@link LexerActionExecutor//append} and\n// {@link LexerActionExecutor//fixOffsetBeforeMatch}.</p>\n\n// Constructs a new indexed custom action by associating a character offset\n// with a {@link LexerAction}.\n//\n// <p>Note: This class is only required for lexer actions for which\n// {@link LexerAction//isPositionDependent} returns {@code true}.</p>\n//\n// @param offset The offset into the input {@link CharStream}, relative to\n// the token start index, at which the specified lexer action should be\n// executed.\n// @param action The lexer action to execute at a particular offset in the\n// input {@link CharStream}.\nfunction LexerIndexedCustomAction(offset, action) {\n\tLexerAction.call(this, action.actionType);\n    this.offset = offset;\n    this.action = action;\n    this.isPositionDependent = true;\n    return this;\n}\n\nLexerIndexedCustomAction.prototype = Object.create(LexerAction.prototype);\nLexerIndexedCustomAction.prototype.constructor = LexerIndexedCustomAction;\n\n// <p>This method calls {@link //execute} on the result of {@link //getAction}\n// using the provided {@code lexer}.</p>\nLexerIndexedCustomAction.prototype.execute = function(lexer) {\n    // assume the input stream position was properly set by the calling code\n    this.action.execute(lexer);\n};\n\nLexerIndexedCustomAction.prototype.updateHashCode = function(hash) {\n    hash.update(this.actionType, this.offset, this.action);\n};\n\nLexerIndexedCustomAction.prototype.equals = function(other) {\n    if (this === other) {\n        return true;\n    } else if (! (other instanceof LexerIndexedCustomAction)) {\n        return false;\n    } else {\n        return this.offset === other.offset && this.action === other.action;\n    }\n};\n\n\nexports.LexerActionType = LexerActionType;\nexports.LexerSkipAction = LexerSkipAction;\nexports.LexerChannelAction = LexerChannelAction;\nexports.LexerCustomAction = LexerCustomAction;\nexports.LexerIndexedCustomAction = LexerIndexedCustomAction;\nexports.LexerMoreAction = LexerMoreAction;\nexports.LexerTypeAction = LexerTypeAction;\nexports.LexerPushModeAction = LexerPushModeAction;\nexports.LexerPopModeAction = LexerPopModeAction;\nexports.LexerModeAction = LexerModeAction;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/atn/LexerAction.js\n// module id = J8R0\n// module chunks = 0 1 2","/**\n * 创建合同和user policy合一方案\n */\nimport PresentableSteps from '@/views/node/presentable/steps/index.vue'\nimport PresentablePolicy from '../policy/index.vue'\nimport CONFIG from '@/config/index'\nimport compiler from 'freelog_policy_compiler'\n\nconst {RESOURCE_TYPES} = CONFIG\n\nexport default {\n  name: 'node-contract-creator',\n  data() {\n    return {\n      activeName: '',\n      tabList: [],\n      selected: false, //是否已选中policy\n      done: false //检查是否已经创建过presentable\n    }\n  },\n  mounted() {\n    if (!this.$route.query.resourceId) {\n      this.$message.error('没有资源Id, 请重新选择');\n    } else {\n      this.init()\n    }\n  },\n  components: {\n    PresentableSteps,\n    PresentablePolicy\n  },\n  methods: {\n    init() {\n      this.loadPolicyDetail()\n        .then((data) => {\n          this.tabList = data\n          return data\n        })\n        .then(this.queryContractsStatus.bind(this))\n    },\n    segmentChangeHandler(tabData, select) {\n      if (select !== undefined) {\n        tabData.selected = select\n      }\n\n      tabData.checked = Number.isInteger(tabData.selected)\n\n      this.selected = this.tabList.some((tab) => tab.checked)\n    },\n    //查询合同创建状态\n    queryContractsStatus(data) {\n      if (!data || !data.length) {\n        return\n      }\n      let partyTwo = this.$route.params.nodeId\n      var resourceIds = data.map((tabData) => {\n        return tabData.resourceId\n      }).join(',')\n\n      this.$services.contractRecords.get({\n        params: {\n          resourceIds: resourceIds,\n          partyTwo: partyTwo\n        }\n      }).then((res) => {\n        var records = res.getData()\n        records.forEach((item) => {\n          for (let [i, contract] of data.entries()) {\n            if (contract.resourceId === item.resourceId) {\n              let policies = contract.data.policy\n              contract.created = true\n              for (let [j, policy] of policies.entries()) {\n                if (policy.segmentId === item.segmentId) {\n                  policy.created = true\n                  break;\n                }\n              }\n              break;\n            }\n          }\n        })\n      }).then(() => {\n        // this.done = data.every((item) => item.created)\n      })\n    },\n    loadResourceDetail(resId) {\n      return this.$services.resource.get(resId).then((res) => {\n        return res.getData()\n      })\n    },\n    loadPolicyDetail() {\n      var query = this.$route.query\n      return new Promise((resolve) => {\n        if (query.resourceType === RESOURCE_TYPES.pageBuild) {\n          resolve(this.loadResourceDetail(query.resourceId))\n        } else {\n          resolve(null)\n        }\n      }).then((data) => {\n        var resources = [{\n          resourceName: this.$route.query.resourceName,\n          resourceId: this.$route.query.resourceId\n        }]\n        var widgetsDataMap = {}\n        var tabList = []\n        this.activeName = this.$route.query.resourceId\n\n        if (data && data.systemMeta.widgets) {\n          resources = resources.concat(data.systemMeta.widgets)\n        }\n\n        resources.forEach((obj) => {\n          widgetsDataMap[obj.resourceId] = {}\n          tabList.push({\n            resourceName: obj.resourceName,\n            resourceId: obj.resourceId,\n            data: widgetsDataMap[obj.resourceId],\n            userPolicy: '',\n            presentableName: '',\n            selected: false, //记录选择哪个策略\n            checked: false, //标记是否已选中策略\n            created: false  //标记是否已创建过合同\n          })\n        })\n\n        let resourceIds = resources.map(obj => obj.resourceId)\n        return this.$services.policy.get({\n          params: {\n            resourceIds: resourceIds.join(',')\n          }\n        }).then((res) => {\n          let data = res.getData();\n          data.forEach((item) => {\n            item.policy.forEach((p) => {\n              p._formatSegmentText = this.formatSegmentText(p.segmentText)\n            })\n            Object.assign(widgetsDataMap[item.resourceId], item)\n          })\n          return tabList\n        }).catch(this.$error.showErrorMessage)\n      })\n    },\n    formatSegmentText(segmentText) {\n      return compiler.compile(segmentText, 'beautify').stringArray.splice(1).join(' ').replace(/\\n\\s/g, '\\n');\n    },\n    validatePageBuildParam() {\n      return new Promise((resolve, reject) => {\n        var pageBuildResourceId = this.$route.query.resourceId\n        var validMap = {}\n        var invalidMap = {}\n\n        this.tabList.forEach((tab) => {\n          if (tab.checked) {\n            validMap[tab.resourceId] = tab\n          } else {\n            invalidMap[tab.resourceId] = tab\n          }\n        })\n\n        if (!validMap[pageBuildResourceId]) {\n          reject(`没有选中${invalidMap[pageBuildResourceId].resourceName}合同`)\n        } else if (Object.keys(validMap).length === this.tabList.length) {\n          resolve()\n        } else if (Object.keys(validMap).length < 2) {\n          reject('至少选择一个widget')\n        } else {\n          var names = Object.values(invalidMap).map((o) => o.resourceName).join(',')\n          resolve(`有部分widgets=>${names}的合同没有被选中`)\n        }\n      })\n    },\n    createPageBuildContract(param) {\n      //创建pb合同必须一次性选中签约的widget，否则不能补签（后端有绑定逻辑），后续可提供补签功能\n      return this.$services.pbContract.post(param).then((res) => {\n        if (res.data.errcode !== 0) {\n          throw new Error(res.data.msg)\n        } else {\n          let data = res.getData()\n          return data.newContracts.concat(data.oldContracts)\n        }\n      })\n    },\n    gotoCreateUserPolicy(contractId) {\n      var nodeId = this.$route.params.nodeId\n      this.$router.push({\n        path: `/node/${nodeId}/presentable/create`,\n        query: {contractId: contractId}\n      })\n    },\n    createResourceContract(param) {\n      return this.$services.contract.post(param)\n        .then((res) => {\n          var data = res.getData()\n          if (res.data.errcode !== 0) {\n            throw new Error(res.data.msg)\n          } else {\n            return [{\n              contractId: data.contractId,\n              resourceId: data.resourceId\n            }]\n          }\n        })\n    },\n    showConfirmDialog(msg) {\n      return new Promise((resolve, reject) => {\n        this.$confirm(`${msg}，后续不能补签合同，确认继续执行？`, '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          resolve()\n        }).catch(() => {\n          reject(null)\n        })\n      })\n    },\n    createContract(selectedContracts) {\n      var nodeId = this.$route.params.nodeId\n      if (this.$route.query.resourceType === RESOURCE_TYPES.pageBuild) {\n        return this.validatePageBuildParam()\n          .then((msg) => {\n            if (msg) {\n              return this.showConfirmDialog(msg)\n            }\n          })\n          .then(() => {\n            return this.createPageBuildContract({\n              nodeId: nodeId,\n              contracts: selectedContracts\n            })\n          })\n      } else {\n        let param = selectedContracts[0]\n        return this.createResourceContract({\n          contractType: '2',\n          targetId: param.resourceId,\n          segmentId: param.segmentId,\n          serialNumber: param.serialNumber,\n          partyTwo: nodeId\n        })\n      }\n    },\n    createPresentablePolicy(policies) {\n      var nodeId = parseInt(this.$route.params.nodeId)\n      var promises = []\n\n      policies.forEach((policy) => {\n        var params = {\n          name: policy.name,\n          nodeId: nodeId,\n          contractId: policy.contractId,\n          policyText: btoa(policy.policyText),\n          languageType: 'freelog_policy_lang'\n        }\n        promises.push(this.$services.presentables.post(params))\n      })\n\n      return Promise.all(promises)\n        .then((responseList) => {\n          var res = responseList[0]\n          var data = res.getData()\n          return data\n        })\n    },\n    paddingContractIds(policies, contractIds) {\n      var contractIdMap = {}\n      contractIds.forEach((item) => {\n        contractIdMap[item.resourceId] = item.contractId\n      })\n\n      policies.forEach((p) => {\n        p.contractId = contractIdMap[p.resourceId]\n      })\n    },\n    extractSubmitData() {\n      let contracts = [];\n      let policies = []\n      this.tabList.forEach((tabData) => {\n        if (tabData.checked) {\n          var policy = tabData.data.policy[tabData.selected]\n          contracts.push({\n            resourceId: tabData.resourceId,\n            segmentId: policy.segmentId,\n            serialNumber: tabData.data.serialNumber\n          });\n          policies.push({\n            name: tabData.presentableName,\n            resourceId: tabData.resourceId,\n            policyText: tabData.userPolicy\n          })\n        }\n      })\n\n      return {\n        contracts,\n        policies\n      }\n    },\n    submit() {\n      var nodeId = parseInt(this.$route.params.nodeId)\n      var data = this.extractSubmitData()\n\n      if (!data.contracts.length) {\n        return this.$message.warning('请选择合同')\n      }\n\n      this.createContract(data.contracts)\n        .then((contractIds) => {\n          this.paddingContractIds(data.policies, contractIds)\n        })\n        .then(() => {\n          return this.createPresentablePolicy(data.policies)\n        })\n        .then((data) => {\n          this.$message.success('presentable创建成功');\n          this.$router.push({\n            path: `/node/${nodeId}/presentable/detail#presentable`,\n            query: {presentableId: data.presentableId}\n          })\n        }).catch(this.$error.showErrorMessage)\n    }\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/views/node/presentable/create/index.js","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".gap[data-v-41f78b08]{margin-bottom:12px}\", \"\", {\"version\":3,\"sources\":[\"/Users/daizecheng/workplace/freelog/console/client/src/views/node/presentable/policy/index.vue\"],\"names\":[],\"mappings\":\"AACA,sBACE,kBAAoB,CACrB\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.gap[data-v-41f78b08] {\\n  margin-bottom: 12px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-41f78b08\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/less-loader/dist/cjs.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/views/node/presentable/policy/index.vue\n// module id = JvoN\n// module chunks = 2","// Generated from presentable_policy.g4 by ANTLR 4.7\r\n// jshint ignore: start\r\nvar antlr4 = require('antlr4/index');\r\n\r\n// This class defines a complete listener for a parse tree produced by presentable_policyParser.\r\nfunction presentable_policyListener() {\r\n\tantlr4.tree.ParseTreeListener.call(this);\r\n\treturn this;\r\n}\r\n\r\npresentable_policyListener.prototype = Object.create(antlr4.tree.ParseTreeListener.prototype);\r\npresentable_policyListener.prototype.constructor = presentable_policyListener;\r\n\r\n// Enter a parse tree produced by presentable_policyParser#p.\r\npresentable_policyListener.prototype.enterP = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#p.\r\npresentable_policyListener.prototype.exitP = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#segment.\r\npresentable_policyListener.prototype.enterSegment = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#segment.\r\npresentable_policyListener.prototype.exitSegment = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#audience_clause.\r\npresentable_policyListener.prototype.enterAudience_clause = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#audience_clause.\r\npresentable_policyListener.prototype.exitAudience_clause = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#athorize_token_clause.\r\npresentable_policyListener.prototype.enterAthorize_token_clause = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#athorize_token_clause.\r\npresentable_policyListener.prototype.exitAthorize_token_clause = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#audience_individuals_clause.\r\npresentable_policyListener.prototype.enterAudience_individuals_clause = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#audience_individuals_clause.\r\npresentable_policyListener.prototype.exitAudience_individuals_clause = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#audience_groups_clause.\r\npresentable_policyListener.prototype.enterAudience_groups_clause = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#audience_groups_clause.\r\npresentable_policyListener.prototype.exitAudience_groups_clause = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#state_clause.\r\npresentable_policyListener.prototype.enterState_clause = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#state_clause.\r\npresentable_policyListener.prototype.exitState_clause = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#current_state_clause.\r\npresentable_policyListener.prototype.enterCurrent_state_clause = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#current_state_clause.\r\npresentable_policyListener.prototype.exitCurrent_state_clause = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#target_clause.\r\npresentable_policyListener.prototype.enterTarget_clause = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#target_clause.\r\npresentable_policyListener.prototype.exitTarget_clause = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#accepting.\r\npresentable_policyListener.prototype.enterAccepting = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#accepting.\r\npresentable_policyListener.prototype.exitAccepting = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#event.\r\npresentable_policyListener.prototype.enterEvent = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#event.\r\npresentable_policyListener.prototype.exitEvent = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#and_event.\r\npresentable_policyListener.prototype.enterAnd_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#and_event.\r\npresentable_policyListener.prototype.exitAnd_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#period_event.\r\npresentable_policyListener.prototype.enterPeriod_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#period_event.\r\npresentable_policyListener.prototype.exitPeriod_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#specific_date_event.\r\npresentable_policyListener.prototype.enterSpecific_date_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#specific_date_event.\r\npresentable_policyListener.prototype.exitSpecific_date_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#relative_date_event.\r\npresentable_policyListener.prototype.enterRelative_date_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#relative_date_event.\r\npresentable_policyListener.prototype.exitRelative_date_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#pricing_agreement_event.\r\npresentable_policyListener.prototype.enterPricing_agreement_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#pricing_agreement_event.\r\npresentable_policyListener.prototype.exitPricing_agreement_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#transaction_event.\r\npresentable_policyListener.prototype.enterTransaction_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#transaction_event.\r\npresentable_policyListener.prototype.exitTransaction_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#guaranty_event.\r\npresentable_policyListener.prototype.enterGuaranty_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#guaranty_event.\r\npresentable_policyListener.prototype.exitGuaranty_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#contract_guaranty.\r\npresentable_policyListener.prototype.enterContract_guaranty = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#contract_guaranty.\r\npresentable_policyListener.prototype.exitContract_guaranty = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#platform_guaranty.\r\npresentable_policyListener.prototype.enterPlatform_guaranty = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#platform_guaranty.\r\npresentable_policyListener.prototype.exitPlatform_guaranty = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#signing_event.\r\npresentable_policyListener.prototype.enterSigning_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#signing_event.\r\npresentable_policyListener.prototype.exitSigning_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#access_count_event.\r\npresentable_policyListener.prototype.enterAccess_count_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#access_count_event.\r\npresentable_policyListener.prototype.exitAccess_count_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#visit_increment_event.\r\npresentable_policyListener.prototype.enterVisit_increment_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#visit_increment_event.\r\npresentable_policyListener.prototype.exitVisit_increment_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#visit_event.\r\npresentable_policyListener.prototype.enterVisit_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#visit_event.\r\npresentable_policyListener.prototype.exitVisit_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#balance_event.\r\npresentable_policyListener.prototype.enterBalance_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#balance_event.\r\npresentable_policyListener.prototype.exitBalance_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#balance_greater.\r\npresentable_policyListener.prototype.enterBalance_greater = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#balance_greater.\r\npresentable_policyListener.prototype.exitBalance_greater = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#balance_smaller.\r\npresentable_policyListener.prototype.enterBalance_smaller = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#balance_smaller.\r\npresentable_policyListener.prototype.exitBalance_smaller = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#settlement_event.\r\npresentable_policyListener.prototype.enterSettlement_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#settlement_event.\r\npresentable_policyListener.prototype.exitSettlement_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#license_resource_id.\r\npresentable_policyListener.prototype.enterLicense_resource_id = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#license_resource_id.\r\npresentable_policyListener.prototype.exitLicense_resource_id = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#account_id.\r\npresentable_policyListener.prototype.enterAccount_id = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#account_id.\r\npresentable_policyListener.prototype.exitAccount_id = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#users.\r\npresentable_policyListener.prototype.enterUsers = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#users.\r\npresentable_policyListener.prototype.exitUsers = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#user_groups.\r\npresentable_policyListener.prototype.enterUser_groups = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#user_groups.\r\npresentable_policyListener.prototype.exitUser_groups = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#and.\r\npresentable_policyListener.prototype.enterAnd = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#and.\r\npresentable_policyListener.prototype.exitAnd = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#view_unit.\r\npresentable_policyListener.prototype.enterView_unit = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#view_unit.\r\npresentable_policyListener.prototype.exitView_unit = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#time_unit.\r\npresentable_policyListener.prototype.enterTime_unit = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#time_unit.\r\npresentable_policyListener.prototype.exitTime_unit = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#start_hour.\r\npresentable_policyListener.prototype.enterStart_hour = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#start_hour.\r\npresentable_policyListener.prototype.exitStart_hour = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by presentable_policyParser#end_hour.\r\npresentable_policyListener.prototype.enterEnd_hour = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by presentable_policyParser#end_hour.\r\npresentable_policyListener.prototype.exitEnd_hour = function(ctx) {\r\n};\r\n\r\n\r\n\r\nexports.presentable_policyListener = presentable_policyListener;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/presentable_policy_lang/gen/presentable_policyListener.js\n// module id = LPMK\n// module chunks = 2","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n//\n// This enumeration defines the prediction modes available in ANTLR 4 along with\n// utility methods for analyzing configuration sets for conflicts and/or\n// ambiguities.\n\nvar Set = require('./../Utils').Set;\nvar Map = require('./../Utils').Map;\nvar BitSet = require('./../Utils').BitSet;\nvar AltDict = require('./../Utils').AltDict;\nvar ATN = require('./ATN').ATN;\nvar RuleStopState = require('./ATNState').RuleStopState;\nvar ATNConfigSet = require('./ATNConfigSet').ATNConfigSet;\nvar ATNConfig = require('./ATNConfig').ATNConfig;\nvar SemanticContext = require('./SemanticContext').SemanticContext;\nvar Hash = require(\"../Utils\").Hash;\nvar hashStuff = require('./../Utils').hashStuff;\nvar equalArrays = require('./../Utils').equalArrays;\n\nfunction PredictionMode() {\n\treturn this;\n}\n\n//\n// The SLL(*) prediction mode. This prediction mode ignores the current\n// parser context when making predictions. This is the fastest prediction\n// mode, and provides correct results for many grammars. This prediction\n// mode is more powerful than the prediction mode provided by ANTLR 3, but\n// may result in syntax errors for grammar and input combinations which are\n// not SLL.\n//\n// <p>\n// When using this prediction mode, the parser will either return a correct\n// parse tree (i.e. the same parse tree that would be returned with the\n// {@link //LL} prediction mode), or it will report a syntax error. If a\n// syntax error is encountered when using the {@link //SLL} prediction mode,\n// it may be due to either an actual syntax error in the input or indicate\n// that the particular combination of grammar and input requires the more\n// powerful {@link //LL} prediction abilities to complete successfully.</p>\n//\n// <p>\n// This prediction mode does not provide any guarantees for prediction\n// behavior for syntactically-incorrect inputs.</p>\n//\nPredictionMode.SLL = 0;\n//\n// The LL(*) prediction mode. This prediction mode allows the current parser\n// context to be used for resolving SLL conflicts that occur during\n// prediction. This is the fastest prediction mode that guarantees correct\n// parse results for all combinations of grammars with syntactically correct\n// inputs.\n//\n// <p>\n// When using this prediction mode, the parser will make correct decisions\n// for all syntactically-correct grammar and input combinations. However, in\n// cases where the grammar is truly ambiguous this prediction mode might not\n// report a precise answer for <em>exactly which</em> alternatives are\n// ambiguous.</p>\n//\n// <p>\n// This prediction mode does not provide any guarantees for prediction\n// behavior for syntactically-incorrect inputs.</p>\n//\nPredictionMode.LL = 1;\n//\n// The LL(*) prediction mode with exact ambiguity detection. In addition to\n// the correctness guarantees provided by the {@link //LL} prediction mode,\n// this prediction mode instructs the prediction algorithm to determine the\n// complete and exact set of ambiguous alternatives for every ambiguous\n// decision encountered while parsing.\n//\n// <p>\n// This prediction mode may be used for diagnosing ambiguities during\n// grammar development. Due to the performance overhead of calculating sets\n// of ambiguous alternatives, this prediction mode should be avoided when\n// the exact results are not necessary.</p>\n//\n// <p>\n// This prediction mode does not provide any guarantees for prediction\n// behavior for syntactically-incorrect inputs.</p>\n//\nPredictionMode.LL_EXACT_AMBIG_DETECTION = 2;\n\n\n//\n// Computes the SLL prediction termination condition.\n//\n// <p>\n// This method computes the SLL prediction termination condition for both of\n// the following cases.</p>\n//\n// <ul>\n// <li>The usual SLL+LL fallback upon SLL conflict</li>\n// <li>Pure SLL without LL fallback</li>\n// </ul>\n//\n// <p><strong>COMBINED SLL+LL PARSING</strong></p>\n//\n// <p>When LL-fallback is enabled upon SLL conflict, correct predictions are\n// ensured regardless of how the termination condition is computed by this\n// method. Due to the substantially higher cost of LL prediction, the\n// prediction should only fall back to LL when the additional lookahead\n// cannot lead to a unique SLL prediction.</p>\n//\n// <p>Assuming combined SLL+LL parsing, an SLL configuration set with only\n// conflicting subsets should fall back to full LL, even if the\n// configuration sets don't resolve to the same alternative (e.g.\n// {@code {1,2}} and {@code {3,4}}. If there is at least one non-conflicting\n// configuration, SLL could continue with the hopes that more lookahead will\n// resolve via one of those non-conflicting configurations.</p>\n//\n// <p>Here's the prediction termination rule them: SLL (for SLL+LL parsing)\n// stops when it sees only conflicting configuration subsets. In contrast,\n// full LL keeps going when there is uncertainty.</p>\n//\n// <p><strong>HEURISTIC</strong></p>\n//\n// <p>As a heuristic, we stop prediction when we see any conflicting subset\n// unless we see a state that only has one alternative associated with it.\n// The single-alt-state thing lets prediction continue upon rules like\n// (otherwise, it would admit defeat too soon):</p>\n//\n// <p>{@code [12|1|[], 6|2|[], 12|2|[]]. s : (ID | ID ID?) ';' ;}</p>\n//\n// <p>When the ATN simulation reaches the state before {@code ';'}, it has a\n// DFA state that looks like: {@code [12|1|[], 6|2|[], 12|2|[]]}. Naturally\n// {@code 12|1|[]} and {@code 12|2|[]} conflict, but we cannot stop\n// processing this node because alternative to has another way to continue,\n// via {@code [6|2|[]]}.</p>\n//\n// <p>It also let's us continue for this rule:</p>\n//\n// <p>{@code [1|1|[], 1|2|[], 8|3|[]] a : A | A | A B ;}</p>\n//\n// <p>After matching input A, we reach the stop state for rule A, state 1.\n// State 8 is the state right before B. Clearly alternatives 1 and 2\n// conflict and no amount of further lookahead will separate the two.\n// However, alternative 3 will be able to continue and so we do not stop\n// working on this state. In the previous example, we're concerned with\n// states associated with the conflicting alternatives. Here alt 3 is not\n// associated with the conflicting configs, but since we can continue\n// looking for input reasonably, don't declare the state done.</p>\n//\n// <p><strong>PURE SLL PARSING</strong></p>\n//\n// <p>To handle pure SLL parsing, all we have to do is make sure that we\n// combine stack contexts for configurations that differ only by semantic\n// predicate. From there, we can do the usual SLL termination heuristic.</p>\n//\n// <p><strong>PREDICATES IN SLL+LL PARSING</strong></p>\n//\n// <p>SLL decisions don't evaluate predicates until after they reach DFA stop\n// states because they need to create the DFA cache that works in all\n// semantic situations. In contrast, full LL evaluates predicates collected\n// during start state computation so it can ignore predicates thereafter.\n// This means that SLL termination detection can totally ignore semantic\n// predicates.</p>\n//\n// <p>Implementation-wise, {@link ATNConfigSet} combines stack contexts but not\n// semantic predicate contexts so we might see two configurations like the\n// following.</p>\n//\n// <p>{@code (s, 1, x, {}), (s, 1, x', {p})}</p>\n//\n// <p>Before testing these configurations against others, we have to merge\n// {@code x} and {@code x'} (without modifying the existing configurations).\n// For example, we test {@code (x+x')==x''} when looking for conflicts in\n// the following configurations.</p>\n//\n// <p>{@code (s, 1, x, {}), (s, 1, x', {p}), (s, 2, x'', {})}</p>\n//\n// <p>If the configuration set has predicates (as indicated by\n// {@link ATNConfigSet//hasSemanticContext}), this algorithm makes a copy of\n// the configurations to strip out all of the predicates so that a standard\n// {@link ATNConfigSet} will merge everything ignoring predicates.</p>\n//\nPredictionMode.hasSLLConflictTerminatingPrediction = function( mode, configs) {\n    // Configs in rule stop states indicate reaching the end of the decision\n    // rule (local context) or end of start rule (full context). If all\n    // configs meet this condition, then none of the configurations is able\n    // to match additional input so we terminate prediction.\n    //\n    if (PredictionMode.allConfigsInRuleStopStates(configs)) {\n        return true;\n    }\n    // pure SLL mode parsing\n    if (mode === PredictionMode.SLL) {\n        // Don't bother with combining configs from different semantic\n        // contexts if we can fail over to full LL; costs more time\n        // since we'll often fail over anyway.\n        if (configs.hasSemanticContext) {\n            // dup configs, tossing out semantic predicates\n            var dup = new ATNConfigSet();\n            for(var i=0;i<configs.items.length;i++) {\n            \tvar c = configs.items[i];\n                c = new ATNConfig({semanticContext:SemanticContext.NONE}, c);\n                dup.add(c);\n            }\n            configs = dup;\n        }\n        // now we have combined contexts for configs with dissimilar preds\n    }\n    // pure SLL or combined SLL+LL mode parsing\n    var altsets = PredictionMode.getConflictingAltSubsets(configs);\n    return PredictionMode.hasConflictingAltSet(altsets) && !PredictionMode.hasStateAssociatedWithOneAlt(configs);\n};\n\n// Checks if any configuration in {@code configs} is in a\n// {@link RuleStopState}. Configurations meeting this condition have reached\n// the end of the decision rule (local context) or end of start rule (full\n// context).\n//\n// @param configs the configuration set to test\n// @return {@code true} if any configuration in {@code configs} is in a\n// {@link RuleStopState}, otherwise {@code false}\nPredictionMode.hasConfigInRuleStopState = function(configs) {\n\tfor(var i=0;i<configs.items.length;i++) {\n\t\tvar c = configs.items[i];\n        if (c.state instanceof RuleStopState) {\n            return true;\n        }\n\t}\n    return false;\n};\n\n// Checks if all configurations in {@code configs} are in a\n// {@link RuleStopState}. Configurations meeting this condition have reached\n// the end of the decision rule (local context) or end of start rule (full\n// context).\n//\n// @param configs the configuration set to test\n// @return {@code true} if all configurations in {@code configs} are in a\n// {@link RuleStopState}, otherwise {@code false}\nPredictionMode.allConfigsInRuleStopStates = function(configs) {\n\tfor(var i=0;i<configs.items.length;i++) {\n\t\tvar c = configs.items[i];\n        if (!(c.state instanceof RuleStopState)) {\n            return false;\n        }\n\t}\n    return true;\n};\n\n//\n// Full LL prediction termination.\n//\n// <p>Can we stop looking ahead during ATN simulation or is there some\n// uncertainty as to which alternative we will ultimately pick, after\n// consuming more input? Even if there are partial conflicts, we might know\n// that everything is going to resolve to the same minimum alternative. That\n// means we can stop since no more lookahead will change that fact. On the\n// other hand, there might be multiple conflicts that resolve to different\n// minimums. That means we need more look ahead to decide which of those\n// alternatives we should predict.</p>\n//\n// <p>The basic idea is to split the set of configurations {@code C}, into\n// conflicting subsets {@code (s, _, ctx, _)} and singleton subsets with\n// non-conflicting configurations. Two configurations conflict if they have\n// identical {@link ATNConfig//state} and {@link ATNConfig//context} values\n// but different {@link ATNConfig//alt} value, e.g. {@code (s, i, ctx, _)}\n// and {@code (s, j, ctx, _)} for {@code i!=j}.</p>\n//\n// <p>Reduce these configuration subsets to the set of possible alternatives.\n// You can compute the alternative subsets in one pass as follows:</p>\n//\n// <p>{@code A_s,ctx = {i | (s, i, ctx, _)}} for each configuration in\n// {@code C} holding {@code s} and {@code ctx} fixed.</p>\n//\n// <p>Or in pseudo-code, for each configuration {@code c} in {@code C}:</p>\n//\n// <pre>\n// map[c] U= c.{@link ATNConfig//alt alt} // map hash/equals uses s and x, not\n// alt and not pred\n// </pre>\n//\n// <p>The values in {@code map} are the set of {@code A_s,ctx} sets.</p>\n//\n// <p>If {@code |A_s,ctx|=1} then there is no conflict associated with\n// {@code s} and {@code ctx}.</p>\n//\n// <p>Reduce the subsets to singletons by choosing a minimum of each subset. If\n// the union of these alternative subsets is a singleton, then no amount of\n// more lookahead will help us. We will always pick that alternative. If,\n// however, there is more than one alternative, then we are uncertain which\n// alternative to predict and must continue looking for resolution. We may\n// or may not discover an ambiguity in the future, even if there are no\n// conflicting subsets this round.</p>\n//\n// <p>The biggest sin is to terminate early because it means we've made a\n// decision but were uncertain as to the eventual outcome. We haven't used\n// enough lookahead. On the other hand, announcing a conflict too late is no\n// big deal; you will still have the conflict. It's just inefficient. It\n// might even look until the end of file.</p>\n//\n// <p>No special consideration for semantic predicates is required because\n// predicates are evaluated on-the-fly for full LL prediction, ensuring that\n// no configuration contains a semantic context during the termination\n// check.</p>\n//\n// <p><strong>CONFLICTING CONFIGS</strong></p>\n//\n// <p>Two configurations {@code (s, i, x)} and {@code (s, j, x')}, conflict\n// when {@code i!=j} but {@code x=x'}. Because we merge all\n// {@code (s, i, _)} configurations together, that means that there are at\n// most {@code n} configurations associated with state {@code s} for\n// {@code n} possible alternatives in the decision. The merged stacks\n// complicate the comparison of configuration contexts {@code x} and\n// {@code x'}. Sam checks to see if one is a subset of the other by calling\n// merge and checking to see if the merged result is either {@code x} or\n// {@code x'}. If the {@code x} associated with lowest alternative {@code i}\n// is the superset, then {@code i} is the only possible prediction since the\n// others resolve to {@code min(i)} as well. However, if {@code x} is\n// associated with {@code j>i} then at least one stack configuration for\n// {@code j} is not in conflict with alternative {@code i}. The algorithm\n// should keep going, looking for more lookahead due to the uncertainty.</p>\n//\n// <p>For simplicity, I'm doing a equality check between {@code x} and\n// {@code x'} that lets the algorithm continue to consume lookahead longer\n// than necessary. The reason I like the equality is of course the\n// simplicity but also because that is the test you need to detect the\n// alternatives that are actually in conflict.</p>\n//\n// <p><strong>CONTINUE/STOP RULE</strong></p>\n//\n// <p>Continue if union of resolved alternative sets from non-conflicting and\n// conflicting alternative subsets has more than one alternative. We are\n// uncertain about which alternative to predict.</p>\n//\n// <p>The complete set of alternatives, {@code [i for (_,i,_)]}, tells us which\n// alternatives are still in the running for the amount of input we've\n// consumed at this point. The conflicting sets let us to strip away\n// configurations that won't lead to more states because we resolve\n// conflicts to the configuration with a minimum alternate for the\n// conflicting set.</p>\n//\n// <p><strong>CASES</strong></p>\n//\n// <ul>\n//\n// <li>no conflicts and more than 1 alternative in set =&gt; continue</li>\n//\n// <li> {@code (s, 1, x)}, {@code (s, 2, x)}, {@code (s, 3, z)},\n// {@code (s', 1, y)}, {@code (s', 2, y)} yields non-conflicting set\n// {@code {3}} U conflicting sets {@code min({1,2})} U {@code min({1,2})} =\n// {@code {1,3}} =&gt; continue\n// </li>\n//\n// <li>{@code (s, 1, x)}, {@code (s, 2, x)}, {@code (s', 1, y)},\n// {@code (s', 2, y)}, {@code (s'', 1, z)} yields non-conflicting set\n// {@code {1}} U conflicting sets {@code min({1,2})} U {@code min({1,2})} =\n// {@code {1}} =&gt; stop and predict 1</li>\n//\n// <li>{@code (s, 1, x)}, {@code (s, 2, x)}, {@code (s', 1, y)},\n// {@code (s', 2, y)} yields conflicting, reduced sets {@code {1}} U\n// {@code {1}} = {@code {1}} =&gt; stop and predict 1, can announce\n// ambiguity {@code {1,2}}</li>\n//\n// <li>{@code (s, 1, x)}, {@code (s, 2, x)}, {@code (s', 2, y)},\n// {@code (s', 3, y)} yields conflicting, reduced sets {@code {1}} U\n// {@code {2}} = {@code {1,2}} =&gt; continue</li>\n//\n// <li>{@code (s, 1, x)}, {@code (s, 2, x)}, {@code (s', 3, y)},\n// {@code (s', 4, y)} yields conflicting, reduced sets {@code {1}} U\n// {@code {3}} = {@code {1,3}} =&gt; continue</li>\n//\n// </ul>\n//\n// <p><strong>EXACT AMBIGUITY DETECTION</strong></p>\n//\n// <p>If all states report the same conflicting set of alternatives, then we\n// know we have the exact ambiguity set.</p>\n//\n// <p><code>|A_<em>i</em>|&gt;1</code> and\n// <code>A_<em>i</em> = A_<em>j</em></code> for all <em>i</em>, <em>j</em>.</p>\n//\n// <p>In other words, we continue examining lookahead until all {@code A_i}\n// have more than one alternative and all {@code A_i} are the same. If\n// {@code A={{1,2}, {1,3}}}, then regular LL prediction would terminate\n// because the resolved set is {@code {1}}. To determine what the real\n// ambiguity is, we have to know whether the ambiguity is between one and\n// two or one and three so we keep going. We can only stop prediction when\n// we need exact ambiguity detection when the sets look like\n// {@code A={{1,2}}} or {@code {{1,2},{1,2}}}, etc...</p>\n//\nPredictionMode.resolvesToJustOneViableAlt = function(altsets) {\n    return PredictionMode.getSingleViableAlt(altsets);\n};\n\n//\n// Determines if every alternative subset in {@code altsets} contains more\n// than one alternative.\n//\n// @param altsets a collection of alternative subsets\n// @return {@code true} if every {@link BitSet} in {@code altsets} has\n// {@link BitSet//cardinality cardinality} &gt; 1, otherwise {@code false}\n//\nPredictionMode.allSubsetsConflict = function(altsets) {\n    return ! PredictionMode.hasNonConflictingAltSet(altsets);\n};\n//\n// Determines if any single alternative subset in {@code altsets} contains\n// exactly one alternative.\n//\n// @param altsets a collection of alternative subsets\n// @return {@code true} if {@code altsets} contains a {@link BitSet} with\n// {@link BitSet//cardinality cardinality} 1, otherwise {@code false}\n//\nPredictionMode.hasNonConflictingAltSet = function(altsets) {\n\tfor(var i=0;i<altsets.length;i++) {\n\t\tvar alts = altsets[i];\n        if (alts.length===1) {\n            return true;\n        }\n\t}\n    return false;\n};\n\n//\n// Determines if any single alternative subset in {@code altsets} contains\n// more than one alternative.\n//\n// @param altsets a collection of alternative subsets\n// @return {@code true} if {@code altsets} contains a {@link BitSet} with\n// {@link BitSet//cardinality cardinality} &gt; 1, otherwise {@code false}\n//\nPredictionMode.hasConflictingAltSet = function(altsets) {\n\tfor(var i=0;i<altsets.length;i++) {\n\t\tvar alts = altsets[i];\n        if (alts.length>1) {\n            return true;\n        }\n\t}\n    return false;\n};\n\n//\n// Determines if every alternative subset in {@code altsets} is equivalent.\n//\n// @param altsets a collection of alternative subsets\n// @return {@code true} if every member of {@code altsets} is equal to the\n// others, otherwise {@code false}\n//\nPredictionMode.allSubsetsEqual = function(altsets) {\n    var first = null;\n\tfor(var i=0;i<altsets.length;i++) {\n\t\tvar alts = altsets[i];\n        if (first === null) {\n            first = alts;\n        } else if (alts!==first) {\n            return false;\n        }\n\t}\n    return true;\n};\n\n//\n// Returns the unique alternative predicted by all alternative subsets in\n// {@code altsets}. If no such alternative exists, this method returns\n// {@link ATN//INVALID_ALT_NUMBER}.\n//\n// @param altsets a collection of alternative subsets\n//\nPredictionMode.getUniqueAlt = function(altsets) {\n    var all = PredictionMode.getAlts(altsets);\n    if (all.length===1) {\n        return all.minValue();\n    } else {\n        return ATN.INVALID_ALT_NUMBER;\n    }\n};\n\n// Gets the complete set of represented alternatives for a collection of\n// alternative subsets. This method returns the union of each {@link BitSet}\n// in {@code altsets}.\n//\n// @param altsets a collection of alternative subsets\n// @return the set of represented alternatives in {@code altsets}\n//\nPredictionMode.getAlts = function(altsets) {\n    var all = new BitSet();\n    altsets.map( function(alts) { all.or(alts); });\n    return all;\n};\n\n//\n// This function gets the conflicting alt subsets from a configuration set.\n// For each configuration {@code c} in {@code configs}:\n//\n// <pre>\n// map[c] U= c.{@link ATNConfig//alt alt} // map hash/equals uses s and x, not\n// alt and not pred\n// </pre>\n\nPredictionMode.getConflictingAltSubsets = function(configs) {\n    var configToAlts = new Map();\n    configToAlts.hashFunction = function(cfg) { hashStuff(cfg.state.stateNumber, cfg.context); };\n    configToAlts.equalsFunction = function(c1, c2) { return c1.state.stateNumber==c2.state.stateNumber && c1.context.equals(c2.context);}\n    configs.items.map(function(cfg) {\n        var alts = configToAlts.get(cfg);\n        if (alts === null) {\n            alts = new BitSet();\n            configToAlts.put(cfg, alts);\n        }\n        alts.add(cfg.alt);\n\t});\n    return configToAlts.getValues();\n};\n\n//\n// Get a map from state to alt subset from a configuration set. For each\n// configuration {@code c} in {@code configs}:\n//\n// <pre>\n// map[c.{@link ATNConfig//state state}] U= c.{@link ATNConfig//alt alt}\n// </pre>\n//\nPredictionMode.getStateToAltMap = function(configs) {\n    var m = new AltDict();\n    configs.items.map(function(c) {\n        var alts = m.get(c.state);\n        if (alts === null) {\n            alts = new BitSet();\n            m.put(c.state, alts);\n        }\n        alts.add(c.alt);\n    });\n    return m;\n};\n\nPredictionMode.hasStateAssociatedWithOneAlt = function(configs) {\n    var values = PredictionMode.getStateToAltMap(configs).values();\n    for(var i=0;i<values.length;i++) {\n        if (values[i].length===1) {\n            return true;\n        }\n    }\n    return false;\n};\n\nPredictionMode.getSingleViableAlt = function(altsets) {\n    var result = null;\n\tfor(var i=0;i<altsets.length;i++) {\n\t\tvar alts = altsets[i];\n        var minAlt = alts.minValue();\n        if(result===null) {\n            result = minAlt;\n        } else if(result!==minAlt) { // more than 1 viable alt\n            return ATN.INVALID_ALT_NUMBER;\n        }\n\t}\n    return result;\n};\n\nexports.PredictionMode = PredictionMode;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/atn/PredictionMode.js\n// module id = LYMb\n// module chunks = 0 1 2","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-361849fa\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/less-loader/dist/cjs.js?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"10c9c684\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/vue-style-loader!./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-361849fa\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/less-loader/dist/cjs.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/TableView/index.vue\n// module id = LoYW\n// module chunks = 0 1 2 7","// Generated from policy.g4 by ANTLR 4.7\r\n// jshint ignore: start\r\nvar antlr4 = require('antlr4/index');\r\nvar policyListener = require('./policyListener').policyListener;\r\nvar grammarFileName = \"policy.g4\";\r\n\r\nvar serializedATN = [\"\\u0003\\u608b\\ua72a\\u8133\\ub9ed\\u417c\\u3be7\\u7786\\u5964\",\r\n    \"\\u00037\\u0116\\u0004\\u0002\\t\\u0002\\u0004\\u0003\\t\\u0003\\u0004\\u0004\\t\",\r\n    \"\\u0004\\u0004\\u0005\\t\\u0005\\u0004\\u0006\\t\\u0006\\u0004\\u0007\\t\\u0007\\u0004\",\r\n    \"\\b\\t\\b\\u0004\\t\\t\\t\\u0004\\n\\t\\n\\u0004\\u000b\\t\\u000b\\u0004\\f\\t\\f\\u0004\",\r\n    \"\\r\\t\\r\\u0004\\u000e\\t\\u000e\\u0004\\u000f\\t\\u000f\\u0004\\u0010\\t\\u0010\\u0004\",\r\n    \"\\u0011\\t\\u0011\\u0004\\u0012\\t\\u0012\\u0004\\u0013\\t\\u0013\\u0004\\u0014\\t\",\r\n    \"\\u0014\\u0004\\u0015\\t\\u0015\\u0004\\u0016\\t\\u0016\\u0004\\u0017\\t\\u0017\\u0004\",\r\n    \"\\u0018\\t\\u0018\\u0004\\u0019\\t\\u0019\\u0004\\u001a\\t\\u001a\\u0004\\u001b\\t\",\r\n    \"\\u001b\\u0004\\u001c\\t\\u001c\\u0004\\u001d\\t\\u001d\\u0004\\u001e\\t\\u001e\\u0004\",\r\n    \"\\u001f\\t\\u001f\\u0004 \\t \\u0004!\\t!\\u0004\\\"\\t\\\"\\u0004#\\t#\\u0004$\\t$\\u0004\",\r\n    \"%\\t%\\u0004&\\t&\\u0003\\u0002\\u0006\\u0002N\\n\\u0002\\r\\u0002\\u000e\\u0002\",\r\n    \"O\\u0003\\u0002\\u0003\\u0002\\u0003\\u0003\\u0003\\u0003\\u0006\\u0003V\\n\\u0003\",\r\n    \"\\r\\u0003\\u000e\\u0003W\\u0003\\u0003\\u0003\\u0003\\u0007\\u0003\\\\\\n\\u0003\",\r\n    \"\\f\\u0003\\u000e\\u0003_\\u000b\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0004\",\r\n    \"\\u0003\\u0004\\u0003\\u0004\\u0003\\u0004\\u0005\\u0004g\\n\\u0004\\u0003\\u0004\",\r\n    \"\\u0003\\u0004\\u0003\\u0004\\u0003\\u0004\\u0005\\u0004m\\n\\u0004\\u0005\\u0004\",\r\n    \"o\\n\\u0004\\u0003\\u0005\\u0003\\u0005\\u0007\\u0005s\\n\\u0005\\f\\u0005\\u000e\",\r\n    \"\\u0005v\\u000b\\u0005\\u0003\\u0005\\u0006\\u0005y\\n\\u0005\\r\\u0005\\u000e\\u0005\",\r\n    \"z\\u0003\\u0006\\u0003\\u0006\\u0003\\u0006\\u0007\\u0006\\u0080\\n\\u0006\\f\\u0006\",\r\n    \"\\u000e\\u0006\\u0083\\u000b\\u0006\\u0003\\u0007\\u0003\\u0007\\u0003\\u0007\\u0003\",\r\n    \"\\u0007\\u0007\\u0007\\u0089\\n\\u0007\\f\\u0007\\u000e\\u0007\\u008c\\u000b\\u0007\",\r\n    \"\\u0003\\b\\u0003\\b\\u0006\\b\\u0090\\n\\b\\r\\b\\u000e\\b\\u0091\\u0003\\t\\u0003\\t\",\r\n    \"\\u0003\\t\\u0003\\t\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0007\\n\\u009d\",\r\n    \"\\n\\n\\f\\n\\u000e\\n\\u00a0\\u000b\\n\\u0003\\n\\u0003\\n\\u0007\\n\\u00a4\\n\\n\\f\\n\",\r\n    \"\\u000e\\n\\u00a7\\u000b\\n\\u0003\\u000b\\u0003\\u000b\\u0003\\f\\u0003\\f\\u0003\",\r\n    \"\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0005\\f\\u00b5\",\r\n    \"\\n\\f\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\",\r\n    \"\\u000f\\u0003\\u000f\\u0003\\u000f\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\",\r\n    \"\\u0010\\u0003\\u0011\\u0003\\u0011\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\",\r\n    \"\\u0012\\u0003\\u0012\\u0003\\u0013\\u0003\\u0013\\u0005\\u0013\\u00cd\\n\\u0013\",\r\n    \"\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\",\r\n    \"\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0016\\u0003\\u0016\\u0007\\u0016\",\r\n    \"\\u00da\\n\\u0016\\f\\u0016\\u000e\\u0016\\u00dd\\u000b\\u0016\\u0003\\u0016\\u0006\",\r\n    \"\\u0016\\u00e0\\n\\u0016\\r\\u0016\\u000e\\u0016\\u00e1\\u0003\\u0017\\u0003\\u0017\",\r\n    \"\\u0005\\u0017\\u00e6\\n\\u0017\\u0003\\u0018\\u0003\\u0018\\u0003\\u0018\\u0003\",\r\n    \"\\u0019\\u0003\\u0019\\u0003\\u0019\\u0003\\u001a\\u0003\\u001a\\u0005\\u001a\\u00f0\",\r\n    \"\\n\\u001a\\u0003\\u001b\\u0003\\u001b\\u0003\\u001b\\u0003\\u001c\\u0003\\u001c\",\r\n    \"\\u0003\\u001c\\u0003\\u001d\\u0003\\u001d\\u0003\\u001e\\u0003\\u001e\\u0003\\u001f\",\r\n    \"\\u0003\\u001f\\u0003 \\u0003 \\u0003 \\u0003 \\u0006 \\u0102\\n \\r \\u000e \\u0103\",\r\n    \"\\u0003!\\u0003!\\u0003\\\"\\u0003\\\"\\u0003#\\u0003#\\u0003$\\u0003$\\u0003%\\u0003\",\r\n    \"%\\u0003%\\u0003%\\u0003&\\u0003&\\u0003&\\u0003&\\u0003&\\u0002\\u0002\\'\\u0002\",\r\n    \"\\u0004\\u0006\\b\\n\\f\\u000e\\u0010\\u0012\\u0014\\u0016\\u0018\\u001a\\u001c\\u001e\",\r\n    \" \\\"$&(*,.02468:<>@BDFHJ\\u0002\\u0005\\u0003\\u0002\\u001a\\u001d\\u0003\\u0002\",\r\n    \"\\u001f \\u0004\\u0002\\u0010\\u0010!#\\u0002\\u010f\\u0002M\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0004S\\u0003\\u0002\\u0002\\u0002\\u0006n\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\bp\\u0003\\u0002\\u0002\\u0002\\n|\\u0003\\u0002\\u0002\\u0002\\f\\u0084\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u000e\\u008d\\u0003\\u0002\\u0002\\u0002\\u0010\\u0093\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0012\\u0097\\u0003\\u0002\\u0002\\u0002\\u0014\\u00a8\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0016\\u00b4\\u0003\\u0002\\u0002\\u0002\\u0018\\u00b6\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u001a\\u00b9\\u0003\\u0002\\u0002\\u0002\\u001c\\u00bc\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u001e\\u00bf\\u0003\\u0002\\u0002\\u0002 \\u00c3\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\\"\\u00c5\\u0003\\u0002\\u0002\\u0002$\\u00cc\\u0003\\u0002\",\r\n    \"\\u0002\\u0002&\\u00ce\\u0003\\u0002\\u0002\\u0002(\\u00d4\\u0003\\u0002\\u0002\",\r\n    \"\\u0002*\\u00d7\\u0003\\u0002\\u0002\\u0002,\\u00e5\\u0003\\u0002\\u0002\\u0002\",\r\n    \".\\u00e7\\u0003\\u0002\\u0002\\u00020\\u00ea\\u0003\\u0002\\u0002\\u00022\\u00ef\",\r\n    \"\\u0003\\u0002\\u0002\\u00024\\u00f1\\u0003\\u0002\\u0002\\u00026\\u00f4\\u0003\",\r\n    \"\\u0002\\u0002\\u00028\\u00f7\\u0003\\u0002\\u0002\\u0002:\\u00f9\\u0003\\u0002\",\r\n    \"\\u0002\\u0002<\\u00fb\\u0003\\u0002\\u0002\\u0002>\\u0101\\u0003\\u0002\\u0002\",\r\n    \"\\u0002@\\u0105\\u0003\\u0002\\u0002\\u0002B\\u0107\\u0003\\u0002\\u0002\\u0002\",\r\n    \"D\\u0109\\u0003\\u0002\\u0002\\u0002F\\u010b\\u0003\\u0002\\u0002\\u0002H\\u010d\",\r\n    \"\\u0003\\u0002\\u0002\\u0002J\\u0111\\u0003\\u0002\\u0002\\u0002LN\\u0005\\u0004\",\r\n    \"\\u0003\\u0002ML\\u0003\\u0002\\u0002\\u0002NO\\u0003\\u0002\\u0002\\u0002OM\\u0003\",\r\n    \"\\u0002\\u0002\\u0002OP\\u0003\\u0002\\u0002\\u0002PQ\\u0003\\u0002\\u0002\\u0002\",\r\n    \"QR\\u0007\\u0002\\u0002\\u0003R\\u0003\\u0003\\u0002\\u0002\\u0002SU\\u0007$\\u0002\",\r\n    \"\\u0002TV\\u0005\\u0006\\u0004\\u0002UT\\u0003\\u0002\\u0002\\u0002VW\\u0003\\u0002\",\r\n    \"\\u0002\\u0002WU\\u0003\\u0002\\u0002\\u0002WX\\u0003\\u0002\\u0002\\u0002XY\\u0003\",\r\n    \"\\u0002\\u0002\\u0002Y]\\u0007\\u0003\\u0002\\u0002Z\\\\\\u0005\\u000e\\b\\u0002\",\r\n    \"[Z\\u0003\\u0002\\u0002\\u0002\\\\_\\u0003\\u0002\\u0002\\u0002][\\u0003\\u0002\",\r\n    \"\\u0002\\u0002]^\\u0003\\u0002\\u0002\\u0002^`\\u0003\\u0002\\u0002\\u0002_]\\u0003\",\r\n    \"\\u0002\\u0002\\u0002`a\\u0005\\b\\u0005\\u0002a\\u0005\\u0003\\u0002\\u0002\\u0002\",\r\n    \"bf\\u0005\\n\\u0006\\u0002cd\\u0005B\\\"\\u0002de\\u0005\\f\\u0007\\u0002eg\\u0003\",\r\n    \"\\u0002\\u0002\\u0002fc\\u0003\\u0002\\u0002\\u0002fg\\u0003\\u0002\\u0002\\u0002\",\r\n    \"go\\u0003\\u0002\\u0002\\u0002hl\\u0005\\f\\u0007\\u0002ij\\u0005B\\\"\\u0002jk\",\r\n    \"\\u0005\\n\\u0006\\u0002km\\u0003\\u0002\\u0002\\u0002li\\u0003\\u0002\\u0002\\u0002\",\r\n    \"lm\\u0003\\u0002\\u0002\\u0002mo\\u0003\\u0002\\u0002\\u0002nb\\u0003\\u0002\\u0002\",\r\n    \"\\u0002nh\\u0003\\u0002\\u0002\\u0002o\\u0007\\u0003\\u0002\\u0002\\u0002px\\u0007\",\r\n    \"\\u0004\\u0002\\u0002qs\\u0007\\u0005\\u0002\\u0002rq\\u0003\\u0002\\u0002\\u0002\",\r\n    \"sv\\u0003\\u0002\\u0002\\u0002tr\\u0003\\u0002\\u0002\\u0002tu\\u0003\\u0002\\u0002\",\r\n    \"\\u0002uw\\u0003\\u0002\\u0002\\u0002vt\\u0003\\u0002\\u0002\\u0002wy\\u00073\",\r\n    \"\\u0002\\u0002xt\\u0003\\u0002\\u0002\\u0002yz\\u0003\\u0002\\u0002\\u0002zx\\u0003\",\r\n    \"\\u0002\\u0002\\u0002z{\\u0003\\u0002\\u0002\\u0002{\\t\\u0003\\u0002\\u0002\\u0002\",\r\n    \"|\\u0081\\u0005> \\u0002}~\\u0007\\u0005\\u0002\\u0002~\\u0080\\u0005> \\u0002\",\r\n    \"\\u007f}\\u0003\\u0002\\u0002\\u0002\\u0080\\u0083\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0081\\u007f\\u0003\\u0002\\u0002\\u0002\\u0081\\u0082\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0082\\u000b\\u0003\\u0002\\u0002\\u0002\\u0083\\u0081\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0084\\u0085\\u0007\\u0006\\u0002\\u0002\\u0085\\u008a\\u0005@!\\u0002\\u0086\",\r\n    \"\\u0087\\u0007\\u0005\\u0002\\u0002\\u0087\\u0089\\u0005@!\\u0002\\u0088\\u0086\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0089\\u008c\\u0003\\u0002\\u0002\\u0002\\u008a\\u0088\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u008a\\u008b\\u0003\\u0002\\u0002\\u0002\\u008b\\r\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u008c\\u008a\\u0003\\u0002\\u0002\\u0002\\u008d\\u008f\",\r\n    \"\\u0005\\u0010\\t\\u0002\\u008e\\u0090\\u0005\\u0012\\n\\u0002\\u008f\\u008e\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0090\\u0091\\u0003\\u0002\\u0002\\u0002\\u0091\\u008f\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0091\\u0092\\u0003\\u0002\\u0002\\u0002\\u0092\\u000f\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0093\\u0094\\u0007)\\u0002\\u0002\\u0094\\u0095\\u0007\",\r\n    \"3\\u0002\\u0002\\u0095\\u0096\\u0007\\u0007\\u0002\\u0002\\u0096\\u0011\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0097\\u0098\\u0007\\'\\u0002\\u0002\\u0098\\u0099\\u0007\",\r\n    \"(\\u0002\\u0002\\u0099\\u009a\\u00073\\u0002\\u0002\\u009a\\u009e\\u0007*\\u0002\",\r\n    \"\\u0002\\u009b\\u009d\\u0005\\u0014\\u000b\\u0002\\u009c\\u009b\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u009d\\u00a0\\u0003\\u0002\\u0002\\u0002\\u009e\\u009c\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u009e\\u009f\\u0003\\u0002\\u0002\\u0002\\u009f\\u00a1\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00a0\\u009e\\u0003\\u0002\\u0002\\u0002\\u00a1\\u00a5\\u0005\\u0016\\f\",\r\n    \"\\u0002\\u00a2\\u00a4\\u0005\\u0018\\r\\u0002\\u00a3\\u00a2\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00a4\\u00a7\\u0003\\u0002\\u0002\\u0002\\u00a5\\u00a3\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00a5\\u00a6\\u0003\\u0002\\u0002\\u0002\\u00a6\\u0013\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00a7\\u00a5\\u0003\\u0002\\u0002\\u0002\\u00a8\\u00a9\\u0007+\\u0002\",\r\n    \"\\u0002\\u00a9\\u0015\\u0003\\u0002\\u0002\\u0002\\u00aa\\u00b5\\u0005\\u001a\\u000e\",\r\n    \"\\u0002\\u00ab\\u00b5\\u0005\\u001c\\u000f\\u0002\\u00ac\\u00b5\\u0005\\u001e\\u0010\",\r\n    \"\\u0002\\u00ad\\u00b5\\u0005 \\u0011\\u0002\\u00ae\\u00b5\\u0005\\\"\\u0012\\u0002\",\r\n    \"\\u00af\\u00b5\\u0005$\\u0013\\u0002\\u00b0\\u00b5\\u0005*\\u0016\\u0002\\u00b1\",\r\n    \"\\u00b5\\u0005,\\u0017\\u0002\\u00b2\\u00b5\\u00052\\u001a\\u0002\\u00b3\\u00b5\",\r\n    \"\\u00058\\u001d\\u0002\\u00b4\\u00aa\\u0003\\u0002\\u0002\\u0002\\u00b4\\u00ab\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u00b4\\u00ac\\u0003\\u0002\\u0002\\u0002\\u00b4\\u00ad\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u00b4\\u00ae\\u0003\\u0002\\u0002\\u0002\\u00b4\\u00af\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u00b4\\u00b0\\u0003\\u0002\\u0002\\u0002\\u00b4\\u00b1\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u00b4\\u00b2\\u0003\\u0002\\u0002\\u0002\\u00b4\\u00b3\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u00b5\\u0017\\u0003\\u0002\\u0002\\u0002\\u00b6\\u00b7\",\r\n    \"\\u0007\\b\\u0002\\u0002\\u00b7\\u00b8\\u0005\\u0016\\f\\u0002\\u00b8\\u0019\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00b9\\u00ba\\u0007\\t\\u0002\\u0002\\u00ba\\u00bb\\u0005\",\r\n    \"F$\\u0002\\u00bb\\u001b\\u0003\\u0002\\u0002\\u0002\\u00bc\\u00bd\\u0007\\n\\u0002\",\r\n    \"\\u0002\\u00bd\\u00be\\u00077\\u0002\\u0002\\u00be\\u001d\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00bf\\u00c0\\u00074\\u0002\\u0002\\u00c0\\u00c1\\u0005F$\\u0002\\u00c1\",\r\n    \"\\u00c2\\u0007\\u000b\\u0002\\u0002\\u00c2\\u001f\\u0003\\u0002\\u0002\\u0002\\u00c3\",\r\n    \"\\u00c4\\u0007\\f\\u0002\\u0002\\u00c4!\\u0003\\u0002\\u0002\\u0002\\u00c5\\u00c6\",\r\n    \"\\u0007\\r\\u0002\\u0002\\u00c6\\u00c7\\u00074\\u0002\\u0002\\u00c7\\u00c8\\u0007\",\r\n    \"(\\u0002\\u0002\\u00c8\\u00c9\\u00075\\u0002\\u0002\\u00c9#\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00ca\\u00cd\\u0005&\\u0014\\u0002\\u00cb\\u00cd\\u0005(\\u0015\\u0002\",\r\n    \"\\u00cc\\u00ca\\u0003\\u0002\\u0002\\u0002\\u00cc\\u00cb\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00cd%\\u0003\\u0002\\u0002\\u0002\\u00ce\\u00cf\\u0007\\u000e\\u0002\\u0002\",\r\n    \"\\u00cf\\u00d0\\u00074\\u0002\\u0002\\u00d0\\u00d1\\u0007\\u000f\\u0002\\u0002\",\r\n    \"\\u00d1\\u00d2\\u00074\\u0002\\u0002\\u00d2\\u00d3\\u0007\\u0010\\u0002\\u0002\",\r\n    \"\\u00d3\\'\\u0003\\u0002\\u0002\\u0002\\u00d4\\u00d5\\u0007\\u0011\\u0002\\u0002\",\r\n    \"\\u00d5\\u00d6\\u00074\\u0002\\u0002\\u00d6)\\u0003\\u0002\\u0002\\u0002\\u00d7\",\r\n    \"\\u00df\\u0007-\\u0002\\u0002\\u00d8\\u00da\\u0007\\u0005\\u0002\\u0002\\u00d9\",\r\n    \"\\u00d8\\u0003\\u0002\\u0002\\u0002\\u00da\\u00dd\\u0003\\u0002\\u0002\\u0002\\u00db\",\r\n    \"\\u00d9\\u0003\\u0002\\u0002\\u0002\\u00db\\u00dc\\u0003\\u0002\\u0002\\u0002\\u00dc\",\r\n    \"\\u00de\\u0003\\u0002\\u0002\\u0002\\u00dd\\u00db\\u0003\\u0002\\u0002\\u0002\\u00de\",\r\n    \"\\u00e0\\u0005:\\u001e\\u0002\\u00df\\u00db\\u0003\\u0002\\u0002\\u0002\\u00e0\",\r\n    \"\\u00e1\\u0003\\u0002\\u0002\\u0002\\u00e1\\u00df\\u0003\\u0002\\u0002\\u0002\\u00e1\",\r\n    \"\\u00e2\\u0003\\u0002\\u0002\\u0002\\u00e2+\\u0003\\u0002\\u0002\\u0002\\u00e3\",\r\n    \"\\u00e6\\u0005.\\u0018\\u0002\\u00e4\\u00e6\\u00050\\u0019\\u0002\\u00e5\\u00e3\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u00e5\\u00e4\\u0003\\u0002\\u0002\\u0002\\u00e6-\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u00e7\\u00e8\\u0007\\u0012\\u0002\\u0002\\u00e8\\u00e9\",\r\n    \"\\u00074\\u0002\\u0002\\u00e9/\\u0003\\u0002\\u0002\\u0002\\u00ea\\u00eb\\u0007\",\r\n    \"\\u0013\\u0002\\u0002\\u00eb\\u00ec\\u00074\\u0002\\u0002\\u00ec1\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u00ed\\u00f0\\u00054\\u001b\\u0002\\u00ee\\u00f0\\u00056\\u001c\",\r\n    \"\\u0002\\u00ef\\u00ed\\u0003\\u0002\\u0002\\u0002\\u00ef\\u00ee\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00f03\\u0003\\u0002\\u0002\\u0002\\u00f1\\u00f2\\u0007\\u0014\\u0002\",\r\n    \"\\u0002\\u00f2\\u00f3\\u00074\\u0002\\u0002\\u00f35\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00f4\\u00f5\\u0007\\u0015\\u0002\\u0002\\u00f5\\u00f6\\u00074\\u0002\\u0002\",\r\n    \"\\u00f67\\u0003\\u0002\\u0002\\u0002\\u00f7\\u00f8\\u0007\\u0016\\u0002\\u0002\",\r\n    \"\\u00f89\\u0003\\u0002\\u0002\\u0002\\u00f9\\u00fa\\u00073\\u0002\\u0002\\u00fa\",\r\n    \";\\u0003\\u0002\\u0002\\u0002\\u00fb\\u00fc\\u00073\\u0002\\u0002\\u00fc=\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00fd\\u0102\\u0007\\u0017\\u0002\\u0002\\u00fe\\u0102\\u0007\",\r\n    \"\\u0018\\u0002\\u0002\\u00ff\\u0102\\u0007\\u0019\\u0002\\u0002\\u0100\\u0102\\u0007\",\r\n    \"3\\u0002\\u0002\\u0101\\u00fd\\u0003\\u0002\\u0002\\u0002\\u0101\\u00fe\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0101\\u00ff\\u0003\\u0002\\u0002\\u0002\\u0101\\u0100\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0102\\u0103\\u0003\\u0002\\u0002\\u0002\\u0103\\u0101\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0103\\u0104\\u0003\\u0002\\u0002\\u0002\\u0104?\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0105\\u0106\\t\\u0002\\u0002\\u0002\\u0106A\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0107\\u0108\\u0007\\u001e\\u0002\\u0002\\u0108C\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0109\\u010a\\t\\u0003\\u0002\\u0002\\u010aE\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u010b\\u010c\\t\\u0004\\u0002\\u0002\\u010cG\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u010d\\u010e\\u00074\\u0002\\u0002\\u010e\\u010f\\u0007\\u0007\\u0002\\u0002\",\r\n    \"\\u010f\\u0110\\u00074\\u0002\\u0002\\u0110I\\u0003\\u0002\\u0002\\u0002\\u0111\",\r\n    \"\\u0112\\u00074\\u0002\\u0002\\u0112\\u0113\\u0007\\u0007\\u0002\\u0002\\u0113\",\r\n    \"\\u0114\\u00074\\u0002\\u0002\\u0114K\\u0003\\u0002\\u0002\\u0002\\u0017OW]fl\",\r\n    \"ntz\\u0081\\u008a\\u0091\\u009e\\u00a5\\u00b4\\u00cc\\u00db\\u00e1\\u00e5\\u00ef\",\r\n    \"\\u0101\\u0103\"].join(\"\");\r\n\r\n\r\nvar atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);\r\n\r\nvar decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });\r\n\r\nvar sharedContextCache = new antlr4.PredictionContextCache();\r\n\r\nvar literalNames = [ null, \"'in the following states:'\", \"'I agree to authorize token in'\", \r\n                     \"','\", \"'users in'\", \"':'\", \"'and on'\", \"'the end of'\", \r\n                     \"'date'\", \"'after contract creation'\", \"'price priceExpression'\", \r\n                     \"'transaction of'\", \"'contract_guaranty of'\", \"'refund after'\", \r\n                     \"'day'\", \"'platform_guaranty of'\", \"'visit_increment of'\", \r\n                     \"'visit of'\", \"'account_balance greater than'\", \"'account_balance smaller than'\", \r\n                     \"'account_settled'\", \"'.'\", \"'@'\", \"'_'\", \"'RegisteredUser'\", \r\n                     \"'LoginUser'\", \"'AllVisiter'\", \"'RegisteredNode'\", \r\n                     \"'and'\", \"'in total'\", \"'per view'\", \"'year'\", \"'week'\", \r\n                     \"'cycle'\", \"'For'\", \"'usergroups'\", \"'users'\", \"'proceed'\", \r\n                     \"'to'\", \"'in'\", \"'on'\", \"'accepting'\", null, \"'license'\", \r\n                     \"'paying'\", \"'per'\", \"'view'\", \"'require'\", \"'nothing'\" ];\r\n\r\nvar symbolicNames = [ null, null, null, null, null, null, null, null, null, \r\n                      null, null, null, null, null, null, null, null, null, \r\n                      null, null, null, null, null, null, null, null, null, \r\n                      null, null, null, null, null, null, null, \"FOR\", \"USERGROUPS\", \r\n                      \"USERS\", \"PROCEED\", \"TO\", \"IN\", \"ON\", \"ACCEPTING\", \r\n                      \"SELF\", \"LICENSE\", \"PAYING\", \"PER\", \"VIEW\", \"REQUIRE\", \r\n                      \"NOTHING\", \"ID\", \"INT\", \"FEATHERACCOUNT\", \"WS\", \"DATE\" ];\r\n\r\nvar ruleNames =  [ \"p\", \"segment\", \"audience_clause\", \"athorize_token_clause\", \r\n                   \"audience_individuals_clause\", \"audience_groups_clause\", \r\n                   \"state_clause\", \"current_state_clause\", \"target_clause\", \r\n                   \"accepting\", \"event\", \"and_event\", \"period_event\", \"specific_date_event\", \r\n                   \"relative_date_event\", \"pricing_agreement_event\", \"transaction_event\", \r\n                   \"guaranty_event\", \"contract_guaranty\", \"platform_guaranty\", \r\n                   \"signing_event\", \"access_count_event\", \"visit_increment_event\", \r\n                   \"visit_event\", \"balance_event\", \"balance_greater\", \"balance_smaller\", \r\n                   \"settlement_event\", \"license_resource_id\", \"account_id\", \r\n                   \"users\", \"user_groups\", \"and\", \"view_unit\", \"time_unit\", \r\n                   \"start_hour\", \"end_hour\" ];\r\n\r\nfunction policyParser (input) {\r\n\tantlr4.Parser.call(this, input);\r\n    this._interp = new antlr4.atn.ParserATNSimulator(this, atn, decisionsToDFA, sharedContextCache);\r\n    this.ruleNames = ruleNames;\r\n    this.literalNames = literalNames;\r\n    this.symbolicNames = symbolicNames;\r\n    return this;\r\n}\r\n\r\npolicyParser.prototype = Object.create(antlr4.Parser.prototype);\r\npolicyParser.prototype.constructor = policyParser;\r\n\r\nObject.defineProperty(policyParser.prototype, \"atn\", {\r\n\tget : function() {\r\n\t\treturn atn;\r\n\t}\r\n});\r\n\r\npolicyParser.EOF = antlr4.Token.EOF;\r\npolicyParser.T__0 = 1;\r\npolicyParser.T__1 = 2;\r\npolicyParser.T__2 = 3;\r\npolicyParser.T__3 = 4;\r\npolicyParser.T__4 = 5;\r\npolicyParser.T__5 = 6;\r\npolicyParser.T__6 = 7;\r\npolicyParser.T__7 = 8;\r\npolicyParser.T__8 = 9;\r\npolicyParser.T__9 = 10;\r\npolicyParser.T__10 = 11;\r\npolicyParser.T__11 = 12;\r\npolicyParser.T__12 = 13;\r\npolicyParser.T__13 = 14;\r\npolicyParser.T__14 = 15;\r\npolicyParser.T__15 = 16;\r\npolicyParser.T__16 = 17;\r\npolicyParser.T__17 = 18;\r\npolicyParser.T__18 = 19;\r\npolicyParser.T__19 = 20;\r\npolicyParser.T__20 = 21;\r\npolicyParser.T__21 = 22;\r\npolicyParser.T__22 = 23;\r\npolicyParser.T__23 = 24;\r\npolicyParser.T__24 = 25;\r\npolicyParser.T__25 = 26;\r\npolicyParser.T__26 = 27;\r\npolicyParser.T__27 = 28;\r\npolicyParser.T__28 = 29;\r\npolicyParser.T__29 = 30;\r\npolicyParser.T__30 = 31;\r\npolicyParser.T__31 = 32;\r\npolicyParser.T__32 = 33;\r\npolicyParser.FOR = 34;\r\npolicyParser.USERGROUPS = 35;\r\npolicyParser.USERS = 36;\r\npolicyParser.PROCEED = 37;\r\npolicyParser.TO = 38;\r\npolicyParser.IN = 39;\r\npolicyParser.ON = 40;\r\npolicyParser.ACCEPTING = 41;\r\npolicyParser.SELF = 42;\r\npolicyParser.LICENSE = 43;\r\npolicyParser.PAYING = 44;\r\npolicyParser.PER = 45;\r\npolicyParser.VIEW = 46;\r\npolicyParser.REQUIRE = 47;\r\npolicyParser.NOTHING = 48;\r\npolicyParser.ID = 49;\r\npolicyParser.INT = 50;\r\npolicyParser.FEATHERACCOUNT = 51;\r\npolicyParser.WS = 52;\r\npolicyParser.DATE = 53;\r\n\r\npolicyParser.RULE_p = 0;\r\npolicyParser.RULE_segment = 1;\r\npolicyParser.RULE_audience_clause = 2;\r\npolicyParser.RULE_athorize_token_clause = 3;\r\npolicyParser.RULE_audience_individuals_clause = 4;\r\npolicyParser.RULE_audience_groups_clause = 5;\r\npolicyParser.RULE_state_clause = 6;\r\npolicyParser.RULE_current_state_clause = 7;\r\npolicyParser.RULE_target_clause = 8;\r\npolicyParser.RULE_accepting = 9;\r\npolicyParser.RULE_event = 10;\r\npolicyParser.RULE_and_event = 11;\r\npolicyParser.RULE_period_event = 12;\r\npolicyParser.RULE_specific_date_event = 13;\r\npolicyParser.RULE_relative_date_event = 14;\r\npolicyParser.RULE_pricing_agreement_event = 15;\r\npolicyParser.RULE_transaction_event = 16;\r\npolicyParser.RULE_guaranty_event = 17;\r\npolicyParser.RULE_contract_guaranty = 18;\r\npolicyParser.RULE_platform_guaranty = 19;\r\npolicyParser.RULE_signing_event = 20;\r\npolicyParser.RULE_access_count_event = 21;\r\npolicyParser.RULE_visit_increment_event = 22;\r\npolicyParser.RULE_visit_event = 23;\r\npolicyParser.RULE_balance_event = 24;\r\npolicyParser.RULE_balance_greater = 25;\r\npolicyParser.RULE_balance_smaller = 26;\r\npolicyParser.RULE_settlement_event = 27;\r\npolicyParser.RULE_license_resource_id = 28;\r\npolicyParser.RULE_account_id = 29;\r\npolicyParser.RULE_users = 30;\r\npolicyParser.RULE_user_groups = 31;\r\npolicyParser.RULE_and = 32;\r\npolicyParser.RULE_view_unit = 33;\r\npolicyParser.RULE_time_unit = 34;\r\npolicyParser.RULE_start_hour = 35;\r\npolicyParser.RULE_end_hour = 36;\r\n\r\nfunction PContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_p;\r\n    return this;\r\n}\r\n\r\nPContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nPContext.prototype.constructor = PContext;\r\n\r\nPContext.prototype.EOF = function() {\r\n    return this.getToken(policyParser.EOF, 0);\r\n};\r\n\r\nPContext.prototype.segment = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(SegmentContext);\r\n    } else {\r\n        return this.getTypedRuleContext(SegmentContext,i);\r\n    }\r\n};\r\n\r\nPContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterP(this);\r\n\t}\r\n};\r\n\r\nPContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitP(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.PContext = PContext;\r\n\r\npolicyParser.prototype.p = function() {\r\n\r\n    var localctx = new PContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 0, policyParser.RULE_p);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 75; \r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        do {\r\n            this.state = 74;\r\n            this.segment();\r\n            this.state = 77; \r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        } while(_la===policyParser.FOR);\r\n        this.state = 79;\r\n        this.match(policyParser.EOF);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction SegmentContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_segment;\r\n    return this;\r\n}\r\n\r\nSegmentContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nSegmentContext.prototype.constructor = SegmentContext;\r\n\r\nSegmentContext.prototype.FOR = function() {\r\n    return this.getToken(policyParser.FOR, 0);\r\n};\r\n\r\nSegmentContext.prototype.athorize_token_clause = function() {\r\n    return this.getTypedRuleContext(Athorize_token_clauseContext,0);\r\n};\r\n\r\nSegmentContext.prototype.audience_clause = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(Audience_clauseContext);\r\n    } else {\r\n        return this.getTypedRuleContext(Audience_clauseContext,i);\r\n    }\r\n};\r\n\r\nSegmentContext.prototype.state_clause = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(State_clauseContext);\r\n    } else {\r\n        return this.getTypedRuleContext(State_clauseContext,i);\r\n    }\r\n};\r\n\r\nSegmentContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterSegment(this);\r\n\t}\r\n};\r\n\r\nSegmentContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitSegment(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.SegmentContext = SegmentContext;\r\n\r\npolicyParser.prototype.segment = function() {\r\n\r\n    var localctx = new SegmentContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 2, policyParser.RULE_segment);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 81;\r\n        this.match(policyParser.FOR);\r\n        this.state = 83; \r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        do {\r\n            this.state = 82;\r\n            this.audience_clause();\r\n            this.state = 85; \r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        } while((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << policyParser.T__3) | (1 << policyParser.T__20) | (1 << policyParser.T__21) | (1 << policyParser.T__22))) !== 0) || _la===policyParser.ID);\r\n        this.state = 87;\r\n        this.match(policyParser.T__0);\r\n        this.state = 91;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        while(_la===policyParser.IN) {\r\n            this.state = 88;\r\n            this.state_clause();\r\n            this.state = 93;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        }\r\n        this.state = 94;\r\n        this.athorize_token_clause();\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Audience_clauseContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_audience_clause;\r\n    return this;\r\n}\r\n\r\nAudience_clauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAudience_clauseContext.prototype.constructor = Audience_clauseContext;\r\n\r\nAudience_clauseContext.prototype.audience_individuals_clause = function() {\r\n    return this.getTypedRuleContext(Audience_individuals_clauseContext,0);\r\n};\r\n\r\nAudience_clauseContext.prototype.and = function() {\r\n    return this.getTypedRuleContext(AndContext,0);\r\n};\r\n\r\nAudience_clauseContext.prototype.audience_groups_clause = function() {\r\n    return this.getTypedRuleContext(Audience_groups_clauseContext,0);\r\n};\r\n\r\nAudience_clauseContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterAudience_clause(this);\r\n\t}\r\n};\r\n\r\nAudience_clauseContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitAudience_clause(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Audience_clauseContext = Audience_clauseContext;\r\n\r\npolicyParser.prototype.audience_clause = function() {\r\n\r\n    var localctx = new Audience_clauseContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 4, policyParser.RULE_audience_clause);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.state = 108;\r\n        this._errHandler.sync(this);\r\n        switch(this._input.LA(1)) {\r\n        case policyParser.T__20:\r\n        case policyParser.T__21:\r\n        case policyParser.T__22:\r\n        case policyParser.ID:\r\n            this.enterOuterAlt(localctx, 1);\r\n            this.state = 96;\r\n            this.audience_individuals_clause();\r\n            this.state = 100;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n            if(_la===policyParser.T__27) {\r\n                this.state = 97;\r\n                this.and();\r\n                this.state = 98;\r\n                this.audience_groups_clause();\r\n            }\r\n\r\n            break;\r\n        case policyParser.T__3:\r\n            this.enterOuterAlt(localctx, 2);\r\n            this.state = 102;\r\n            this.audience_groups_clause();\r\n            this.state = 106;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n            if(_la===policyParser.T__27) {\r\n                this.state = 103;\r\n                this.and();\r\n                this.state = 104;\r\n                this.audience_individuals_clause();\r\n            }\r\n\r\n            break;\r\n        default:\r\n            throw new antlr4.error.NoViableAltException(this);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Athorize_token_clauseContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_athorize_token_clause;\r\n    return this;\r\n}\r\n\r\nAthorize_token_clauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAthorize_token_clauseContext.prototype.constructor = Athorize_token_clauseContext;\r\n\r\nAthorize_token_clauseContext.prototype.ID = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(policyParser.ID);\r\n    } else {\r\n        return this.getToken(policyParser.ID, i);\r\n    }\r\n};\r\n\r\n\r\nAthorize_token_clauseContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterAthorize_token_clause(this);\r\n\t}\r\n};\r\n\r\nAthorize_token_clauseContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitAthorize_token_clause(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Athorize_token_clauseContext = Athorize_token_clauseContext;\r\n\r\npolicyParser.prototype.athorize_token_clause = function() {\r\n\r\n    var localctx = new Athorize_token_clauseContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 6, policyParser.RULE_athorize_token_clause);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 110;\r\n        this.match(policyParser.T__1);\r\n        this.state = 118; \r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        do {\r\n            this.state = 114;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n            while(_la===policyParser.T__2) {\r\n                this.state = 111;\r\n                this.match(policyParser.T__2);\r\n                this.state = 116;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n            }\r\n            this.state = 117;\r\n            this.match(policyParser.ID);\r\n            this.state = 120; \r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        } while(_la===policyParser.T__2 || _la===policyParser.ID);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Audience_individuals_clauseContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_audience_individuals_clause;\r\n    return this;\r\n}\r\n\r\nAudience_individuals_clauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAudience_individuals_clauseContext.prototype.constructor = Audience_individuals_clauseContext;\r\n\r\nAudience_individuals_clauseContext.prototype.users = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(UsersContext);\r\n    } else {\r\n        return this.getTypedRuleContext(UsersContext,i);\r\n    }\r\n};\r\n\r\nAudience_individuals_clauseContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterAudience_individuals_clause(this);\r\n\t}\r\n};\r\n\r\nAudience_individuals_clauseContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitAudience_individuals_clause(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Audience_individuals_clauseContext = Audience_individuals_clauseContext;\r\n\r\npolicyParser.prototype.audience_individuals_clause = function() {\r\n\r\n    var localctx = new Audience_individuals_clauseContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 8, policyParser.RULE_audience_individuals_clause);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 122;\r\n        this.users();\r\n        this.state = 127;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        while(_la===policyParser.T__2) {\r\n            this.state = 123;\r\n            this.match(policyParser.T__2);\r\n            this.state = 124;\r\n            this.users();\r\n            this.state = 129;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Audience_groups_clauseContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_audience_groups_clause;\r\n    return this;\r\n}\r\n\r\nAudience_groups_clauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAudience_groups_clauseContext.prototype.constructor = Audience_groups_clauseContext;\r\n\r\nAudience_groups_clauseContext.prototype.user_groups = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(User_groupsContext);\r\n    } else {\r\n        return this.getTypedRuleContext(User_groupsContext,i);\r\n    }\r\n};\r\n\r\nAudience_groups_clauseContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterAudience_groups_clause(this);\r\n\t}\r\n};\r\n\r\nAudience_groups_clauseContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitAudience_groups_clause(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Audience_groups_clauseContext = Audience_groups_clauseContext;\r\n\r\npolicyParser.prototype.audience_groups_clause = function() {\r\n\r\n    var localctx = new Audience_groups_clauseContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 10, policyParser.RULE_audience_groups_clause);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 130;\r\n        this.match(policyParser.T__3);\r\n        this.state = 131;\r\n        this.user_groups();\r\n        this.state = 136;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        while(_la===policyParser.T__2) {\r\n            this.state = 132;\r\n            this.match(policyParser.T__2);\r\n            this.state = 133;\r\n            this.user_groups();\r\n            this.state = 138;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction State_clauseContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_state_clause;\r\n    return this;\r\n}\r\n\r\nState_clauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nState_clauseContext.prototype.constructor = State_clauseContext;\r\n\r\nState_clauseContext.prototype.current_state_clause = function() {\r\n    return this.getTypedRuleContext(Current_state_clauseContext,0);\r\n};\r\n\r\nState_clauseContext.prototype.target_clause = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(Target_clauseContext);\r\n    } else {\r\n        return this.getTypedRuleContext(Target_clauseContext,i);\r\n    }\r\n};\r\n\r\nState_clauseContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterState_clause(this);\r\n\t}\r\n};\r\n\r\nState_clauseContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitState_clause(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.State_clauseContext = State_clauseContext;\r\n\r\npolicyParser.prototype.state_clause = function() {\r\n\r\n    var localctx = new State_clauseContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 12, policyParser.RULE_state_clause);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 139;\r\n        this.current_state_clause();\r\n        this.state = 141; \r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        do {\r\n            this.state = 140;\r\n            this.target_clause();\r\n            this.state = 143; \r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        } while(_la===policyParser.PROCEED);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Current_state_clauseContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_current_state_clause;\r\n    return this;\r\n}\r\n\r\nCurrent_state_clauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nCurrent_state_clauseContext.prototype.constructor = Current_state_clauseContext;\r\n\r\nCurrent_state_clauseContext.prototype.IN = function() {\r\n    return this.getToken(policyParser.IN, 0);\r\n};\r\n\r\nCurrent_state_clauseContext.prototype.ID = function() {\r\n    return this.getToken(policyParser.ID, 0);\r\n};\r\n\r\nCurrent_state_clauseContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterCurrent_state_clause(this);\r\n\t}\r\n};\r\n\r\nCurrent_state_clauseContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitCurrent_state_clause(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Current_state_clauseContext = Current_state_clauseContext;\r\n\r\npolicyParser.prototype.current_state_clause = function() {\r\n\r\n    var localctx = new Current_state_clauseContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 14, policyParser.RULE_current_state_clause);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 145;\r\n        this.match(policyParser.IN);\r\n        this.state = 146;\r\n        this.match(policyParser.ID);\r\n        this.state = 147;\r\n        this.match(policyParser.T__4);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Target_clauseContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_target_clause;\r\n    return this;\r\n}\r\n\r\nTarget_clauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nTarget_clauseContext.prototype.constructor = Target_clauseContext;\r\n\r\nTarget_clauseContext.prototype.PROCEED = function() {\r\n    return this.getToken(policyParser.PROCEED, 0);\r\n};\r\n\r\nTarget_clauseContext.prototype.TO = function() {\r\n    return this.getToken(policyParser.TO, 0);\r\n};\r\n\r\nTarget_clauseContext.prototype.ID = function() {\r\n    return this.getToken(policyParser.ID, 0);\r\n};\r\n\r\nTarget_clauseContext.prototype.event = function() {\r\n    return this.getTypedRuleContext(EventContext,0);\r\n};\r\n\r\nTarget_clauseContext.prototype.accepting = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(AcceptingContext);\r\n    } else {\r\n        return this.getTypedRuleContext(AcceptingContext,i);\r\n    }\r\n};\r\n\r\nTarget_clauseContext.prototype.and_event = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(And_eventContext);\r\n    } else {\r\n        return this.getTypedRuleContext(And_eventContext,i);\r\n    }\r\n};\r\n\r\nTarget_clauseContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterTarget_clause(this);\r\n\t}\r\n};\r\n\r\nTarget_clauseContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitTarget_clause(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Target_clauseContext = Target_clauseContext;\r\n\r\npolicyParser.prototype.target_clause = function() {\r\n\r\n    var localctx = new Target_clauseContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 16, policyParser.RULE_target_clause);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 149;\r\n        this.match(policyParser.PROCEED);\r\n        this.state = 150;\r\n        this.match(policyParser.TO);\r\n        this.state = 151;\r\n        this.match(policyParser.ID);\r\n        this.state = 152;\r\n        this.match(policyParser.ON);\r\n        this.state = 156;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        while(_la===policyParser.ACCEPTING) {\r\n            this.state = 153;\r\n            this.accepting();\r\n            this.state = 158;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        }\r\n        this.state = 159;\r\n        this.event();\r\n        this.state = 163;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        while(_la===policyParser.T__5) {\r\n            this.state = 160;\r\n            this.and_event();\r\n            this.state = 165;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction AcceptingContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_accepting;\r\n    return this;\r\n}\r\n\r\nAcceptingContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAcceptingContext.prototype.constructor = AcceptingContext;\r\n\r\n\r\nAcceptingContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterAccepting(this);\r\n\t}\r\n};\r\n\r\nAcceptingContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitAccepting(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.AcceptingContext = AcceptingContext;\r\n\r\npolicyParser.prototype.accepting = function() {\r\n\r\n    var localctx = new AcceptingContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 18, policyParser.RULE_accepting);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 166;\r\n        this.match(policyParser.ACCEPTING);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction EventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_event;\r\n    return this;\r\n}\r\n\r\nEventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nEventContext.prototype.constructor = EventContext;\r\n\r\nEventContext.prototype.period_event = function() {\r\n    return this.getTypedRuleContext(Period_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.specific_date_event = function() {\r\n    return this.getTypedRuleContext(Specific_date_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.relative_date_event = function() {\r\n    return this.getTypedRuleContext(Relative_date_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.pricing_agreement_event = function() {\r\n    return this.getTypedRuleContext(Pricing_agreement_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.transaction_event = function() {\r\n    return this.getTypedRuleContext(Transaction_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.guaranty_event = function() {\r\n    return this.getTypedRuleContext(Guaranty_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.signing_event = function() {\r\n    return this.getTypedRuleContext(Signing_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.access_count_event = function() {\r\n    return this.getTypedRuleContext(Access_count_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.balance_event = function() {\r\n    return this.getTypedRuleContext(Balance_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.settlement_event = function() {\r\n    return this.getTypedRuleContext(Settlement_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterEvent(this);\r\n\t}\r\n};\r\n\r\nEventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitEvent(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.EventContext = EventContext;\r\n\r\npolicyParser.prototype.event = function() {\r\n\r\n    var localctx = new EventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 20, policyParser.RULE_event);\r\n    try {\r\n        this.state = 178;\r\n        this._errHandler.sync(this);\r\n        switch(this._input.LA(1)) {\r\n        case policyParser.T__6:\r\n            this.enterOuterAlt(localctx, 1);\r\n            this.state = 168;\r\n            this.period_event();\r\n            break;\r\n        case policyParser.T__7:\r\n            this.enterOuterAlt(localctx, 2);\r\n            this.state = 169;\r\n            this.specific_date_event();\r\n            break;\r\n        case policyParser.INT:\r\n            this.enterOuterAlt(localctx, 3);\r\n            this.state = 170;\r\n            this.relative_date_event();\r\n            break;\r\n        case policyParser.T__9:\r\n            this.enterOuterAlt(localctx, 4);\r\n            this.state = 171;\r\n            this.pricing_agreement_event();\r\n            break;\r\n        case policyParser.T__10:\r\n            this.enterOuterAlt(localctx, 5);\r\n            this.state = 172;\r\n            this.transaction_event();\r\n            break;\r\n        case policyParser.T__11:\r\n        case policyParser.T__14:\r\n            this.enterOuterAlt(localctx, 6);\r\n            this.state = 173;\r\n            this.guaranty_event();\r\n            break;\r\n        case policyParser.LICENSE:\r\n            this.enterOuterAlt(localctx, 7);\r\n            this.state = 174;\r\n            this.signing_event();\r\n            break;\r\n        case policyParser.T__15:\r\n        case policyParser.T__16:\r\n            this.enterOuterAlt(localctx, 8);\r\n            this.state = 175;\r\n            this.access_count_event();\r\n            break;\r\n        case policyParser.T__17:\r\n        case policyParser.T__18:\r\n            this.enterOuterAlt(localctx, 9);\r\n            this.state = 176;\r\n            this.balance_event();\r\n            break;\r\n        case policyParser.T__19:\r\n            this.enterOuterAlt(localctx, 10);\r\n            this.state = 177;\r\n            this.settlement_event();\r\n            break;\r\n        default:\r\n            throw new antlr4.error.NoViableAltException(this);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction And_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_and_event;\r\n    return this;\r\n}\r\n\r\nAnd_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAnd_eventContext.prototype.constructor = And_eventContext;\r\n\r\nAnd_eventContext.prototype.event = function() {\r\n    return this.getTypedRuleContext(EventContext,0);\r\n};\r\n\r\nAnd_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterAnd_event(this);\r\n\t}\r\n};\r\n\r\nAnd_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitAnd_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.And_eventContext = And_eventContext;\r\n\r\npolicyParser.prototype.and_event = function() {\r\n\r\n    var localctx = new And_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 22, policyParser.RULE_and_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 180;\r\n        this.match(policyParser.T__5);\r\n        this.state = 181;\r\n        this.event();\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Period_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_period_event;\r\n    return this;\r\n}\r\n\r\nPeriod_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nPeriod_eventContext.prototype.constructor = Period_eventContext;\r\n\r\nPeriod_eventContext.prototype.time_unit = function() {\r\n    return this.getTypedRuleContext(Time_unitContext,0);\r\n};\r\n\r\nPeriod_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterPeriod_event(this);\r\n\t}\r\n};\r\n\r\nPeriod_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitPeriod_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Period_eventContext = Period_eventContext;\r\n\r\npolicyParser.prototype.period_event = function() {\r\n\r\n    var localctx = new Period_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 24, policyParser.RULE_period_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 183;\r\n        this.match(policyParser.T__6);\r\n        this.state = 184;\r\n        this.time_unit();\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Specific_date_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_specific_date_event;\r\n    return this;\r\n}\r\n\r\nSpecific_date_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nSpecific_date_eventContext.prototype.constructor = Specific_date_eventContext;\r\n\r\nSpecific_date_eventContext.prototype.DATE = function() {\r\n    return this.getToken(policyParser.DATE, 0);\r\n};\r\n\r\nSpecific_date_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterSpecific_date_event(this);\r\n\t}\r\n};\r\n\r\nSpecific_date_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitSpecific_date_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Specific_date_eventContext = Specific_date_eventContext;\r\n\r\npolicyParser.prototype.specific_date_event = function() {\r\n\r\n    var localctx = new Specific_date_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 26, policyParser.RULE_specific_date_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 186;\r\n        this.match(policyParser.T__7);\r\n        this.state = 187;\r\n        this.match(policyParser.DATE);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Relative_date_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_relative_date_event;\r\n    return this;\r\n}\r\n\r\nRelative_date_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nRelative_date_eventContext.prototype.constructor = Relative_date_eventContext;\r\n\r\nRelative_date_eventContext.prototype.INT = function() {\r\n    return this.getToken(policyParser.INT, 0);\r\n};\r\n\r\nRelative_date_eventContext.prototype.time_unit = function() {\r\n    return this.getTypedRuleContext(Time_unitContext,0);\r\n};\r\n\r\nRelative_date_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterRelative_date_event(this);\r\n\t}\r\n};\r\n\r\nRelative_date_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitRelative_date_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Relative_date_eventContext = Relative_date_eventContext;\r\n\r\npolicyParser.prototype.relative_date_event = function() {\r\n\r\n    var localctx = new Relative_date_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 28, policyParser.RULE_relative_date_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 189;\r\n        this.match(policyParser.INT);\r\n        this.state = 190;\r\n        this.time_unit();\r\n        this.state = 191;\r\n        this.match(policyParser.T__8);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Pricing_agreement_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_pricing_agreement_event;\r\n    return this;\r\n}\r\n\r\nPricing_agreement_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nPricing_agreement_eventContext.prototype.constructor = Pricing_agreement_eventContext;\r\n\r\n\r\nPricing_agreement_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterPricing_agreement_event(this);\r\n\t}\r\n};\r\n\r\nPricing_agreement_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitPricing_agreement_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Pricing_agreement_eventContext = Pricing_agreement_eventContext;\r\n\r\npolicyParser.prototype.pricing_agreement_event = function() {\r\n\r\n    var localctx = new Pricing_agreement_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 30, policyParser.RULE_pricing_agreement_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 193;\r\n        this.match(policyParser.T__9);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Transaction_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_transaction_event;\r\n    return this;\r\n}\r\n\r\nTransaction_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nTransaction_eventContext.prototype.constructor = Transaction_eventContext;\r\n\r\nTransaction_eventContext.prototype.INT = function() {\r\n    return this.getToken(policyParser.INT, 0);\r\n};\r\n\r\nTransaction_eventContext.prototype.FEATHERACCOUNT = function() {\r\n    return this.getToken(policyParser.FEATHERACCOUNT, 0);\r\n};\r\n\r\nTransaction_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterTransaction_event(this);\r\n\t}\r\n};\r\n\r\nTransaction_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitTransaction_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Transaction_eventContext = Transaction_eventContext;\r\n\r\npolicyParser.prototype.transaction_event = function() {\r\n\r\n    var localctx = new Transaction_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 32, policyParser.RULE_transaction_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 195;\r\n        this.match(policyParser.T__10);\r\n        this.state = 196;\r\n        this.match(policyParser.INT);\r\n        this.state = 197;\r\n        this.match(policyParser.TO);\r\n        this.state = 198;\r\n        this.match(policyParser.FEATHERACCOUNT);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Guaranty_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_guaranty_event;\r\n    return this;\r\n}\r\n\r\nGuaranty_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nGuaranty_eventContext.prototype.constructor = Guaranty_eventContext;\r\n\r\nGuaranty_eventContext.prototype.contract_guaranty = function() {\r\n    return this.getTypedRuleContext(Contract_guarantyContext,0);\r\n};\r\n\r\nGuaranty_eventContext.prototype.platform_guaranty = function() {\r\n    return this.getTypedRuleContext(Platform_guarantyContext,0);\r\n};\r\n\r\nGuaranty_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterGuaranty_event(this);\r\n\t}\r\n};\r\n\r\nGuaranty_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitGuaranty_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Guaranty_eventContext = Guaranty_eventContext;\r\n\r\npolicyParser.prototype.guaranty_event = function() {\r\n\r\n    var localctx = new Guaranty_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 34, policyParser.RULE_guaranty_event);\r\n    try {\r\n        this.state = 202;\r\n        this._errHandler.sync(this);\r\n        switch(this._input.LA(1)) {\r\n        case policyParser.T__11:\r\n            this.enterOuterAlt(localctx, 1);\r\n            this.state = 200;\r\n            this.contract_guaranty();\r\n            break;\r\n        case policyParser.T__14:\r\n            this.enterOuterAlt(localctx, 2);\r\n            this.state = 201;\r\n            this.platform_guaranty();\r\n            break;\r\n        default:\r\n            throw new antlr4.error.NoViableAltException(this);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Contract_guarantyContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_contract_guaranty;\r\n    return this;\r\n}\r\n\r\nContract_guarantyContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nContract_guarantyContext.prototype.constructor = Contract_guarantyContext;\r\n\r\nContract_guarantyContext.prototype.INT = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(policyParser.INT);\r\n    } else {\r\n        return this.getToken(policyParser.INT, i);\r\n    }\r\n};\r\n\r\n\r\nContract_guarantyContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterContract_guaranty(this);\r\n\t}\r\n};\r\n\r\nContract_guarantyContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitContract_guaranty(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Contract_guarantyContext = Contract_guarantyContext;\r\n\r\npolicyParser.prototype.contract_guaranty = function() {\r\n\r\n    var localctx = new Contract_guarantyContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 36, policyParser.RULE_contract_guaranty);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 204;\r\n        this.match(policyParser.T__11);\r\n        this.state = 205;\r\n        this.match(policyParser.INT);\r\n        this.state = 206;\r\n        this.match(policyParser.T__12);\r\n        this.state = 207;\r\n        this.match(policyParser.INT);\r\n        this.state = 208;\r\n        this.match(policyParser.T__13);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Platform_guarantyContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_platform_guaranty;\r\n    return this;\r\n}\r\n\r\nPlatform_guarantyContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nPlatform_guarantyContext.prototype.constructor = Platform_guarantyContext;\r\n\r\nPlatform_guarantyContext.prototype.INT = function() {\r\n    return this.getToken(policyParser.INT, 0);\r\n};\r\n\r\nPlatform_guarantyContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterPlatform_guaranty(this);\r\n\t}\r\n};\r\n\r\nPlatform_guarantyContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitPlatform_guaranty(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Platform_guarantyContext = Platform_guarantyContext;\r\n\r\npolicyParser.prototype.platform_guaranty = function() {\r\n\r\n    var localctx = new Platform_guarantyContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 38, policyParser.RULE_platform_guaranty);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 210;\r\n        this.match(policyParser.T__14);\r\n        this.state = 211;\r\n        this.match(policyParser.INT);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Signing_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_signing_event;\r\n    return this;\r\n}\r\n\r\nSigning_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nSigning_eventContext.prototype.constructor = Signing_eventContext;\r\n\r\nSigning_eventContext.prototype.LICENSE = function() {\r\n    return this.getToken(policyParser.LICENSE, 0);\r\n};\r\n\r\nSigning_eventContext.prototype.license_resource_id = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(License_resource_idContext);\r\n    } else {\r\n        return this.getTypedRuleContext(License_resource_idContext,i);\r\n    }\r\n};\r\n\r\nSigning_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterSigning_event(this);\r\n\t}\r\n};\r\n\r\nSigning_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitSigning_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Signing_eventContext = Signing_eventContext;\r\n\r\npolicyParser.prototype.signing_event = function() {\r\n\r\n    var localctx = new Signing_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 40, policyParser.RULE_signing_event);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 213;\r\n        this.match(policyParser.LICENSE);\r\n        this.state = 221; \r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        do {\r\n            this.state = 217;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n            while(_la===policyParser.T__2) {\r\n                this.state = 214;\r\n                this.match(policyParser.T__2);\r\n                this.state = 219;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n            }\r\n            this.state = 220;\r\n            this.license_resource_id();\r\n            this.state = 223; \r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        } while(_la===policyParser.T__2 || _la===policyParser.ID);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Access_count_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_access_count_event;\r\n    return this;\r\n}\r\n\r\nAccess_count_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAccess_count_eventContext.prototype.constructor = Access_count_eventContext;\r\n\r\nAccess_count_eventContext.prototype.visit_increment_event = function() {\r\n    return this.getTypedRuleContext(Visit_increment_eventContext,0);\r\n};\r\n\r\nAccess_count_eventContext.prototype.visit_event = function() {\r\n    return this.getTypedRuleContext(Visit_eventContext,0);\r\n};\r\n\r\nAccess_count_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterAccess_count_event(this);\r\n\t}\r\n};\r\n\r\nAccess_count_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitAccess_count_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Access_count_eventContext = Access_count_eventContext;\r\n\r\npolicyParser.prototype.access_count_event = function() {\r\n\r\n    var localctx = new Access_count_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 42, policyParser.RULE_access_count_event);\r\n    try {\r\n        this.state = 227;\r\n        this._errHandler.sync(this);\r\n        switch(this._input.LA(1)) {\r\n        case policyParser.T__15:\r\n            this.enterOuterAlt(localctx, 1);\r\n            this.state = 225;\r\n            this.visit_increment_event();\r\n            break;\r\n        case policyParser.T__16:\r\n            this.enterOuterAlt(localctx, 2);\r\n            this.state = 226;\r\n            this.visit_event();\r\n            break;\r\n        default:\r\n            throw new antlr4.error.NoViableAltException(this);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Visit_increment_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_visit_increment_event;\r\n    return this;\r\n}\r\n\r\nVisit_increment_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nVisit_increment_eventContext.prototype.constructor = Visit_increment_eventContext;\r\n\r\nVisit_increment_eventContext.prototype.INT = function() {\r\n    return this.getToken(policyParser.INT, 0);\r\n};\r\n\r\nVisit_increment_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterVisit_increment_event(this);\r\n\t}\r\n};\r\n\r\nVisit_increment_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitVisit_increment_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Visit_increment_eventContext = Visit_increment_eventContext;\r\n\r\npolicyParser.prototype.visit_increment_event = function() {\r\n\r\n    var localctx = new Visit_increment_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 44, policyParser.RULE_visit_increment_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 229;\r\n        this.match(policyParser.T__15);\r\n        this.state = 230;\r\n        this.match(policyParser.INT);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Visit_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_visit_event;\r\n    return this;\r\n}\r\n\r\nVisit_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nVisit_eventContext.prototype.constructor = Visit_eventContext;\r\n\r\nVisit_eventContext.prototype.INT = function() {\r\n    return this.getToken(policyParser.INT, 0);\r\n};\r\n\r\nVisit_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterVisit_event(this);\r\n\t}\r\n};\r\n\r\nVisit_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitVisit_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Visit_eventContext = Visit_eventContext;\r\n\r\npolicyParser.prototype.visit_event = function() {\r\n\r\n    var localctx = new Visit_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 46, policyParser.RULE_visit_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 232;\r\n        this.match(policyParser.T__16);\r\n        this.state = 233;\r\n        this.match(policyParser.INT);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Balance_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_balance_event;\r\n    return this;\r\n}\r\n\r\nBalance_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nBalance_eventContext.prototype.constructor = Balance_eventContext;\r\n\r\nBalance_eventContext.prototype.balance_greater = function() {\r\n    return this.getTypedRuleContext(Balance_greaterContext,0);\r\n};\r\n\r\nBalance_eventContext.prototype.balance_smaller = function() {\r\n    return this.getTypedRuleContext(Balance_smallerContext,0);\r\n};\r\n\r\nBalance_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterBalance_event(this);\r\n\t}\r\n};\r\n\r\nBalance_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitBalance_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Balance_eventContext = Balance_eventContext;\r\n\r\npolicyParser.prototype.balance_event = function() {\r\n\r\n    var localctx = new Balance_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 48, policyParser.RULE_balance_event);\r\n    try {\r\n        this.state = 237;\r\n        this._errHandler.sync(this);\r\n        switch(this._input.LA(1)) {\r\n        case policyParser.T__17:\r\n            this.enterOuterAlt(localctx, 1);\r\n            this.state = 235;\r\n            this.balance_greater();\r\n            break;\r\n        case policyParser.T__18:\r\n            this.enterOuterAlt(localctx, 2);\r\n            this.state = 236;\r\n            this.balance_smaller();\r\n            break;\r\n        default:\r\n            throw new antlr4.error.NoViableAltException(this);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Balance_greaterContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_balance_greater;\r\n    return this;\r\n}\r\n\r\nBalance_greaterContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nBalance_greaterContext.prototype.constructor = Balance_greaterContext;\r\n\r\nBalance_greaterContext.prototype.INT = function() {\r\n    return this.getToken(policyParser.INT, 0);\r\n};\r\n\r\nBalance_greaterContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterBalance_greater(this);\r\n\t}\r\n};\r\n\r\nBalance_greaterContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitBalance_greater(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Balance_greaterContext = Balance_greaterContext;\r\n\r\npolicyParser.prototype.balance_greater = function() {\r\n\r\n    var localctx = new Balance_greaterContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 50, policyParser.RULE_balance_greater);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 239;\r\n        this.match(policyParser.T__17);\r\n        this.state = 240;\r\n        this.match(policyParser.INT);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Balance_smallerContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_balance_smaller;\r\n    return this;\r\n}\r\n\r\nBalance_smallerContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nBalance_smallerContext.prototype.constructor = Balance_smallerContext;\r\n\r\nBalance_smallerContext.prototype.INT = function() {\r\n    return this.getToken(policyParser.INT, 0);\r\n};\r\n\r\nBalance_smallerContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterBalance_smaller(this);\r\n\t}\r\n};\r\n\r\nBalance_smallerContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitBalance_smaller(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Balance_smallerContext = Balance_smallerContext;\r\n\r\npolicyParser.prototype.balance_smaller = function() {\r\n\r\n    var localctx = new Balance_smallerContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 52, policyParser.RULE_balance_smaller);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 242;\r\n        this.match(policyParser.T__18);\r\n        this.state = 243;\r\n        this.match(policyParser.INT);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Settlement_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_settlement_event;\r\n    return this;\r\n}\r\n\r\nSettlement_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nSettlement_eventContext.prototype.constructor = Settlement_eventContext;\r\n\r\n\r\nSettlement_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterSettlement_event(this);\r\n\t}\r\n};\r\n\r\nSettlement_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitSettlement_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Settlement_eventContext = Settlement_eventContext;\r\n\r\npolicyParser.prototype.settlement_event = function() {\r\n\r\n    var localctx = new Settlement_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 54, policyParser.RULE_settlement_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 245;\r\n        this.match(policyParser.T__19);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction License_resource_idContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_license_resource_id;\r\n    return this;\r\n}\r\n\r\nLicense_resource_idContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nLicense_resource_idContext.prototype.constructor = License_resource_idContext;\r\n\r\nLicense_resource_idContext.prototype.ID = function() {\r\n    return this.getToken(policyParser.ID, 0);\r\n};\r\n\r\nLicense_resource_idContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterLicense_resource_id(this);\r\n\t}\r\n};\r\n\r\nLicense_resource_idContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitLicense_resource_id(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.License_resource_idContext = License_resource_idContext;\r\n\r\npolicyParser.prototype.license_resource_id = function() {\r\n\r\n    var localctx = new License_resource_idContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 56, policyParser.RULE_license_resource_id);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 247;\r\n        this.match(policyParser.ID);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Account_idContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_account_id;\r\n    return this;\r\n}\r\n\r\nAccount_idContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAccount_idContext.prototype.constructor = Account_idContext;\r\n\r\nAccount_idContext.prototype.ID = function() {\r\n    return this.getToken(policyParser.ID, 0);\r\n};\r\n\r\nAccount_idContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterAccount_id(this);\r\n\t}\r\n};\r\n\r\nAccount_idContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitAccount_id(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Account_idContext = Account_idContext;\r\n\r\npolicyParser.prototype.account_id = function() {\r\n\r\n    var localctx = new Account_idContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 58, policyParser.RULE_account_id);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 249;\r\n        this.match(policyParser.ID);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction UsersContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_users;\r\n    return this;\r\n}\r\n\r\nUsersContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nUsersContext.prototype.constructor = UsersContext;\r\n\r\nUsersContext.prototype.ID = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(policyParser.ID);\r\n    } else {\r\n        return this.getToken(policyParser.ID, i);\r\n    }\r\n};\r\n\r\n\r\nUsersContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterUsers(this);\r\n\t}\r\n};\r\n\r\nUsersContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitUsers(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.UsersContext = UsersContext;\r\n\r\npolicyParser.prototype.users = function() {\r\n\r\n    var localctx = new UsersContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 60, policyParser.RULE_users);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 255; \r\n        this._errHandler.sync(this);\r\n        var _alt = 1;\r\n        do {\r\n        \tswitch (_alt) {\r\n        \tcase 1:\r\n        \t\tthis.state = 255;\r\n        \t\tthis._errHandler.sync(this);\r\n        \t\tswitch(this._input.LA(1)) {\r\n        \t\tcase policyParser.T__20:\r\n        \t\t    this.state = 251;\r\n        \t\t    this.match(policyParser.T__20);\r\n        \t\t    break;\r\n        \t\tcase policyParser.T__21:\r\n        \t\t    this.state = 252;\r\n        \t\t    this.match(policyParser.T__21);\r\n        \t\t    break;\r\n        \t\tcase policyParser.T__22:\r\n        \t\t    this.state = 253;\r\n        \t\t    this.match(policyParser.T__22);\r\n        \t\t    break;\r\n        \t\tcase policyParser.ID:\r\n        \t\t    this.state = 254;\r\n        \t\t    this.match(policyParser.ID);\r\n        \t\t    break;\r\n        \t\tdefault:\r\n        \t\t    throw new antlr4.error.NoViableAltException(this);\r\n        \t\t}\r\n        \t\tbreak;\r\n        \tdefault:\r\n        \t\tthrow new antlr4.error.NoViableAltException(this);\r\n        \t}\r\n        \tthis.state = 257; \r\n        \tthis._errHandler.sync(this);\r\n        \t_alt = this._interp.adaptivePredict(this._input,20, this._ctx);\r\n        } while ( _alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER );\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction User_groupsContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_user_groups;\r\n    return this;\r\n}\r\n\r\nUser_groupsContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nUser_groupsContext.prototype.constructor = User_groupsContext;\r\n\r\n\r\nUser_groupsContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterUser_groups(this);\r\n\t}\r\n};\r\n\r\nUser_groupsContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitUser_groups(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.User_groupsContext = User_groupsContext;\r\n\r\npolicyParser.prototype.user_groups = function() {\r\n\r\n    var localctx = new User_groupsContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 62, policyParser.RULE_user_groups);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 259;\r\n        _la = this._input.LA(1);\r\n        if(!((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << policyParser.T__23) | (1 << policyParser.T__24) | (1 << policyParser.T__25) | (1 << policyParser.T__26))) !== 0))) {\r\n        this._errHandler.recoverInline(this);\r\n        }\r\n        else {\r\n        \tthis._errHandler.reportMatch(this);\r\n            this.consume();\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction AndContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_and;\r\n    return this;\r\n}\r\n\r\nAndContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAndContext.prototype.constructor = AndContext;\r\n\r\n\r\nAndContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterAnd(this);\r\n\t}\r\n};\r\n\r\nAndContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitAnd(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.AndContext = AndContext;\r\n\r\npolicyParser.prototype.and = function() {\r\n\r\n    var localctx = new AndContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 64, policyParser.RULE_and);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 261;\r\n        this.match(policyParser.T__27);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction View_unitContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_view_unit;\r\n    return this;\r\n}\r\n\r\nView_unitContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nView_unitContext.prototype.constructor = View_unitContext;\r\n\r\n\r\nView_unitContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterView_unit(this);\r\n\t}\r\n};\r\n\r\nView_unitContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitView_unit(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.View_unitContext = View_unitContext;\r\n\r\npolicyParser.prototype.view_unit = function() {\r\n\r\n    var localctx = new View_unitContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 66, policyParser.RULE_view_unit);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 263;\r\n        _la = this._input.LA(1);\r\n        if(!(_la===policyParser.T__28 || _la===policyParser.T__29)) {\r\n        this._errHandler.recoverInline(this);\r\n        }\r\n        else {\r\n        \tthis._errHandler.reportMatch(this);\r\n            this.consume();\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Time_unitContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_time_unit;\r\n    return this;\r\n}\r\n\r\nTime_unitContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nTime_unitContext.prototype.constructor = Time_unitContext;\r\n\r\n\r\nTime_unitContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterTime_unit(this);\r\n\t}\r\n};\r\n\r\nTime_unitContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitTime_unit(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Time_unitContext = Time_unitContext;\r\n\r\npolicyParser.prototype.time_unit = function() {\r\n\r\n    var localctx = new Time_unitContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 68, policyParser.RULE_time_unit);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 265;\r\n        _la = this._input.LA(1);\r\n        if(!(((((_la - 14)) & ~0x1f) == 0 && ((1 << (_la - 14)) & ((1 << (policyParser.T__13 - 14)) | (1 << (policyParser.T__30 - 14)) | (1 << (policyParser.T__31 - 14)) | (1 << (policyParser.T__32 - 14)))) !== 0))) {\r\n        this._errHandler.recoverInline(this);\r\n        }\r\n        else {\r\n        \tthis._errHandler.reportMatch(this);\r\n            this.consume();\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Start_hourContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_start_hour;\r\n    return this;\r\n}\r\n\r\nStart_hourContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nStart_hourContext.prototype.constructor = Start_hourContext;\r\n\r\nStart_hourContext.prototype.INT = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(policyParser.INT);\r\n    } else {\r\n        return this.getToken(policyParser.INT, i);\r\n    }\r\n};\r\n\r\n\r\nStart_hourContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterStart_hour(this);\r\n\t}\r\n};\r\n\r\nStart_hourContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitStart_hour(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Start_hourContext = Start_hourContext;\r\n\r\npolicyParser.prototype.start_hour = function() {\r\n\r\n    var localctx = new Start_hourContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 70, policyParser.RULE_start_hour);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 267;\r\n        this.match(policyParser.INT);\r\n        this.state = 268;\r\n        this.match(policyParser.T__4);\r\n        this.state = 269;\r\n        this.match(policyParser.INT);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction End_hourContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_end_hour;\r\n    return this;\r\n}\r\n\r\nEnd_hourContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nEnd_hourContext.prototype.constructor = End_hourContext;\r\n\r\nEnd_hourContext.prototype.INT = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(policyParser.INT);\r\n    } else {\r\n        return this.getToken(policyParser.INT, i);\r\n    }\r\n};\r\n\r\n\r\nEnd_hourContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterEnd_hour(this);\r\n\t}\r\n};\r\n\r\nEnd_hourContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitEnd_hour(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.End_hourContext = End_hourContext;\r\n\r\npolicyParser.prototype.end_hour = function() {\r\n\r\n    var localctx = new End_hourContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 72, policyParser.RULE_end_hour);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 271;\r\n        this.match(policyParser.INT);\r\n        this.state = 272;\r\n        this.match(policyParser.T__4);\r\n        this.state = 273;\r\n        this.match(policyParser.INT);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nexports.policyParser = policyParser;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/policy_lang/gen/policyParser.js\n// module id = Lrau\n// module chunks = 0 1 2","function injectStyle (ssrContext) {\n  require(\"!!../../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-d708ef40\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-d708ef40\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-d708ef40\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/node/presentable/edit/index.vue\n// module id = NJ0E\n// module chunks = 2","// Generated from presentable_policy.g4 by ANTLR 4.7\r\n// jshint ignore: start\r\nvar antlr4 = require('antlr4/index');\r\n\r\n\r\nvar serializedATN = [\"\\u0003\\u608b\\ua72a\\u8133\\ub9ed\\u417c\\u3be7\\u7786\\u5964\",\r\n    \"\\u00020\\u0240\\b\\u0001\\u0004\\u0002\\t\\u0002\\u0004\\u0003\\t\\u0003\\u0004\",\r\n    \"\\u0004\\t\\u0004\\u0004\\u0005\\t\\u0005\\u0004\\u0006\\t\\u0006\\u0004\\u0007\\t\",\r\n    \"\\u0007\\u0004\\b\\t\\b\\u0004\\t\\t\\t\\u0004\\n\\t\\n\\u0004\\u000b\\t\\u000b\\u0004\",\r\n    \"\\f\\t\\f\\u0004\\r\\t\\r\\u0004\\u000e\\t\\u000e\\u0004\\u000f\\t\\u000f\\u0004\\u0010\",\r\n    \"\\t\\u0010\\u0004\\u0011\\t\\u0011\\u0004\\u0012\\t\\u0012\\u0004\\u0013\\t\\u0013\",\r\n    \"\\u0004\\u0014\\t\\u0014\\u0004\\u0015\\t\\u0015\\u0004\\u0016\\t\\u0016\\u0004\\u0017\",\r\n    \"\\t\\u0017\\u0004\\u0018\\t\\u0018\\u0004\\u0019\\t\\u0019\\u0004\\u001a\\t\\u001a\",\r\n    \"\\u0004\\u001b\\t\\u001b\\u0004\\u001c\\t\\u001c\\u0004\\u001d\\t\\u001d\\u0004\\u001e\",\r\n    \"\\t\\u001e\\u0004\\u001f\\t\\u001f\\u0004 \\t \\u0004!\\t!\\u0004\\\"\\t\\\"\\u0004#\",\r\n    \"\\t#\\u0004$\\t$\\u0004%\\t%\\u0004&\\t&\\u0004\\'\\t\\'\\u0004(\\t(\\u0004)\\t)\\u0004\",\r\n    \"*\\t*\\u0004+\\t+\\u0004,\\t,\\u0004-\\t-\\u0004.\\t.\\u0004/\\t/\\u0003\\u0002\\u0003\",\r\n    \"\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\",\r\n    \"\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\",\r\n    \"\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\",\r\n    \"\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\",\r\n    \"\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0004\\u0003\\u0004\\u0003\",\r\n    \"\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\",\r\n    \"\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\",\r\n    \"\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\",\r\n    \"\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\",\r\n    \"\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\\u0005\\u0003\\u0005\\u0003\",\r\n    \"\\u0006\\u0003\\u0006\\u0003\\u0006\\u0003\\u0006\\u0003\\u0006\\u0003\\u0006\\u0003\",\r\n    \"\\u0006\\u0003\\u0006\\u0003\\u0006\\u0003\\u0007\\u0003\\u0007\\u0003\\b\\u0003\",\r\n    \"\\b\\u0003\\b\\u0003\\b\\u0003\\b\\u0003\\b\\u0003\\b\\u0003\\t\\u0003\\t\\u0003\\t\\u0003\",\r\n    \"\\t\\u0003\\t\\u0003\\t\\u0003\\t\\u0003\\t\\u0003\\t\\u0003\\t\\u0003\\t\\u0003\\n\\u0003\",\r\n    \"\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\",\r\n    \"\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\",\r\n    \"\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\",\r\n    \"\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\",\r\n    \"\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\",\r\n    \"\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\",\r\n    \"\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\",\r\n    \"\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\",\r\n    \"\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\u000e\\u0003\\u000e\\u0003\",\r\n    \"\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\",\r\n    \"\\u000e\\u0003\\u000f\\u0003\\u000f\\u0003\\u000f\\u0003\\u000f\\u0003\\u000f\\u0003\",\r\n    \"\\u000f\\u0003\\u000f\\u0003\\u000f\\u0003\\u000f\\u0003\\u000f\\u0003\\u000f\\u0003\",\r\n    \"\\u000f\\u0003\\u000f\\u0003\\u000f\\u0003\\u000f\\u0003\\u000f\\u0003\\u000f\\u0003\",\r\n    \"\\u000f\\u0003\\u000f\\u0003\\u000f\\u0003\\u000f\\u0003\\u0010\\u0003\\u0010\\u0003\",\r\n    \"\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\",\r\n    \"\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0011\\u0003\",\r\n    \"\\u0011\\u0003\\u0011\\u0003\\u0011\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\",\r\n    \"\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\",\r\n    \"\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\",\r\n    \"\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\",\r\n    \"\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\",\r\n    \"\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\",\r\n    \"\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\",\r\n    \"\\u0013\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\",\r\n    \"\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0015\\u0003\\u0015\\u0003\",\r\n    \"\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\",\r\n    \"\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\",\r\n    \"\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\",\r\n    \"\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\",\r\n    \"\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\",\r\n    \"\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\",\r\n    \"\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\",\r\n    \"\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\",\r\n    \"\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\",\r\n    \"\\u0016\\u0003\\u0016\\u0003\\u0017\\u0003\\u0017\\u0003\\u0017\\u0003\\u0017\\u0003\",\r\n    \"\\u0017\\u0003\\u0017\\u0003\\u0017\\u0003\\u0017\\u0003\\u0017\\u0003\\u0017\\u0003\",\r\n    \"\\u0017\\u0003\\u0017\\u0003\\u0017\\u0003\\u0017\\u0003\\u0017\\u0003\\u0017\\u0003\",\r\n    \"\\u0018\\u0003\\u0018\\u0003\\u0018\\u0003\\u0018\\u0003\\u0018\\u0003\\u0018\\u0003\",\r\n    \"\\u0018\\u0003\\u0018\\u0003\\u0018\\u0003\\u0019\\u0003\\u0019\\u0003\\u0019\\u0003\",\r\n    \"\\u0019\\u0003\\u0019\\u0003\\u0019\\u0003\\u0019\\u0003\\u0019\\u0003\\u0019\\u0003\",\r\n    \"\\u001a\\u0003\\u001a\\u0003\\u001a\\u0003\\u001a\\u0003\\u001a\\u0003\\u001b\\u0003\",\r\n    \"\\u001b\\u0003\\u001b\\u0003\\u001b\\u0003\\u001b\\u0003\\u001c\\u0003\\u001c\\u0003\",\r\n    \"\\u001c\\u0003\\u001c\\u0003\\u001c\\u0003\\u001c\\u0003\\u001d\\u0003\\u001d\\u0003\",\r\n    \"\\u001d\\u0003\\u001d\\u0003\\u001e\\u0003\\u001e\\u0003\\u001e\\u0003\\u001e\\u0003\",\r\n    \"\\u001e\\u0003\\u001e\\u0003\\u001e\\u0003\\u001e\\u0003\\u001e\\u0003\\u001e\\u0003\",\r\n    \"\\u001e\\u0003\\u001f\\u0003\\u001f\\u0003\\u001f\\u0003\\u001f\\u0003\\u001f\\u0003\",\r\n    \"\\u001f\\u0003 \\u0003 \\u0003 \\u0003 \\u0003 \\u0003 \\u0003 \\u0003 \\u0003\",\r\n    \"!\\u0003!\\u0003!\\u0003\\\"\\u0003\\\"\\u0003\\\"\\u0003#\\u0003#\\u0003#\\u0003$\",\r\n    \"\\u0003$\\u0003$\\u0003$\\u0003$\\u0003$\\u0003$\\u0003$\\u0003$\\u0003$\\u0003\",\r\n    \"%\\u0003%\\u0003%\\u0003%\\u0003%\\u0003%\\u0003%\\u0003%\\u0005%\\u0200\\n%\\u0003\",\r\n    \"&\\u0003&\\u0003&\\u0003&\\u0003&\\u0003&\\u0003&\\u0003&\\u0003\\'\\u0003\\'\\u0003\",\r\n    \"\\'\\u0003\\'\\u0003\\'\\u0003\\'\\u0003\\'\\u0003(\\u0003(\\u0003(\\u0003(\\u0003\",\r\n    \")\\u0003)\\u0003)\\u0003)\\u0003)\\u0003*\\u0003*\\u0003*\\u0003*\\u0003*\\u0003\",\r\n    \"*\\u0003*\\u0003*\\u0003+\\u0003+\\u0003+\\u0003+\\u0003+\\u0003+\\u0003+\\u0003\",\r\n    \"+\\u0003,\\u0006,\\u022b\\n,\\r,\\u000e,\\u022c\\u0003-\\u0006-\\u0230\\n-\\r-\\u000e\",\r\n    \"-\\u0231\\u0003-\\u0003-\\u0003.\\u0006.\\u0237\\n.\\r.\\u000e.\\u0238\\u0003/\",\r\n    \"\\u0003/\\u0003/\\u0003/\\u0003/\\u0003/\\u0002\\u00020\\u0003\\u0003\\u0005\\u0004\",\r\n    \"\\u0007\\u0005\\t\\u0006\\u000b\\u0007\\r\\b\\u000f\\t\\u0011\\n\\u0013\\u000b\\u0015\",\r\n    \"\\f\\u0017\\r\\u0019\\u000e\\u001b\\u000f\\u001d\\u0010\\u001f\\u0011!\\u0012#\\u0013\",\r\n    \"%\\u0014\\'\\u0015)\\u0016+\\u0017-\\u0018/\\u00191\\u001a3\\u001b5\\u001c7\\u001d\",\r\n    \"9\\u001e;\\u001f= ?!A\\\"C#E$G%I&K\\'M(O)Q*S+U,W-Y.[/]0\\u0003\\u0002\\u0005\",\r\n    \"\\u0005\\u0002C\\\\aac|\\u0005\\u0002\\u000b\\f\\u000f\\u000f\\\"\\\"\\u0003\\u0002\",\r\n    \"2;\\u0002\\u0243\\u0002\\u0003\\u0003\\u0002\\u0002\\u0002\\u0002\\u0005\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0002\\u0007\\u0003\\u0002\\u0002\\u0002\\u0002\\t\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0002\\u000b\\u0003\\u0002\\u0002\\u0002\\u0002\\r\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0002\\u000f\\u0003\\u0002\\u0002\\u0002\\u0002\\u0011\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0002\\u0013\\u0003\\u0002\\u0002\\u0002\\u0002\\u0015\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0002\\u0017\\u0003\\u0002\\u0002\\u0002\\u0002\\u0019\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0002\\u001b\\u0003\\u0002\\u0002\\u0002\\u0002\\u001d\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0002\\u001f\\u0003\\u0002\\u0002\\u0002\\u0002!\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0002#\\u0003\\u0002\\u0002\\u0002\\u0002%\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0002\\'\\u0003\\u0002\\u0002\\u0002\\u0002)\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0002+\\u0003\\u0002\\u0002\\u0002\\u0002-\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0002/\\u0003\\u0002\\u0002\\u0002\\u00021\\u0003\\u0002\\u0002\\u0002\\u0002\",\r\n    \"3\\u0003\\u0002\\u0002\\u0002\\u00025\\u0003\\u0002\\u0002\\u0002\\u00027\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00029\\u0003\\u0002\\u0002\\u0002\\u0002;\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0002=\\u0003\\u0002\\u0002\\u0002\\u0002?\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0002A\\u0003\\u0002\\u0002\\u0002\\u0002C\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0002E\\u0003\\u0002\\u0002\\u0002\\u0002G\\u0003\\u0002\\u0002\\u0002\\u0002\",\r\n    \"I\\u0003\\u0002\\u0002\\u0002\\u0002K\\u0003\\u0002\\u0002\\u0002\\u0002M\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0002O\\u0003\\u0002\\u0002\\u0002\\u0002Q\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0002S\\u0003\\u0002\\u0002\\u0002\\u0002U\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0002W\\u0003\\u0002\\u0002\\u0002\\u0002Y\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0002[\\u0003\\u0002\\u0002\\u0002\\u0002]\\u0003\\u0002\\u0002\\u0002\\u0003\",\r\n    \"_\\u0003\\u0002\\u0002\\u0002\\u0005x\\u0003\\u0002\\u0002\\u0002\\u0007|\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\t\\u009a\\u0003\\u0002\\u0002\\u0002\\u000b\\u009c\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\r\\u00a5\\u0003\\u0002\\u0002\\u0002\\u000f\\u00a7\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0011\\u00ae\\u0003\\u0002\\u0002\\u0002\\u0013\\u00b9\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0015\\u00be\\u0003\\u0002\\u0002\\u0002\\u0017\\u00d6\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0019\\u00ec\\u0003\\u0002\\u0002\\u0002\\u001b\\u00fb\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u001d\\u0104\\u0003\\u0002\\u0002\\u0002\\u001f\\u0119\\u0003\",\r\n    \"\\u0002\\u0002\\u0002!\\u0126\\u0003\\u0002\\u0002\\u0002#\\u012a\\u0003\\u0002\",\r\n    \"\\u0002\\u0002%\\u013f\\u0003\\u0002\\u0002\\u0002\\'\\u0152\\u0003\\u0002\\u0002\",\r\n    \"\\u0002)\\u015b\\u0003\\u0002\\u0002\\u0002+\\u0178\\u0003\\u0002\\u0002\\u0002\",\r\n    \"-\\u0195\\u0003\\u0002\\u0002\\u0002/\\u01a5\\u0003\\u0002\\u0002\\u00021\\u01ae\",\r\n    \"\\u0003\\u0002\\u0002\\u00023\\u01b7\\u0003\\u0002\\u0002\\u00025\\u01bc\\u0003\",\r\n    \"\\u0002\\u0002\\u00027\\u01c1\\u0003\\u0002\\u0002\\u00029\\u01c7\\u0003\\u0002\",\r\n    \"\\u0002\\u0002;\\u01cb\\u0003\\u0002\\u0002\\u0002=\\u01d6\\u0003\\u0002\\u0002\",\r\n    \"\\u0002?\\u01dc\\u0003\\u0002\\u0002\\u0002A\\u01e4\\u0003\\u0002\\u0002\\u0002\",\r\n    \"C\\u01e7\\u0003\\u0002\\u0002\\u0002E\\u01ea\\u0003\\u0002\\u0002\\u0002G\\u01ed\",\r\n    \"\\u0003\\u0002\\u0002\\u0002I\\u01ff\\u0003\\u0002\\u0002\\u0002K\\u0201\\u0003\",\r\n    \"\\u0002\\u0002\\u0002M\\u0209\\u0003\\u0002\\u0002\\u0002O\\u0210\\u0003\\u0002\",\r\n    \"\\u0002\\u0002Q\\u0214\\u0003\\u0002\\u0002\\u0002S\\u0219\\u0003\\u0002\\u0002\",\r\n    \"\\u0002U\\u0221\\u0003\\u0002\\u0002\\u0002W\\u022a\\u0003\\u0002\\u0002\\u0002\",\r\n    \"Y\\u022f\\u0003\\u0002\\u0002\\u0002[\\u0236\\u0003\\u0002\\u0002\\u0002]\\u023a\",\r\n    \"\\u0003\\u0002\\u0002\\u0002_`\\u0007k\\u0002\\u0002`a\\u0007p\\u0002\\u0002a\",\r\n    \"b\\u0007\\\"\\u0002\\u0002bc\\u0007v\\u0002\\u0002cd\\u0007j\\u0002\\u0002de\\u0007\",\r\n    \"g\\u0002\\u0002ef\\u0007\\\"\\u0002\\u0002fg\\u0007h\\u0002\\u0002gh\\u0007q\\u0002\",\r\n    \"\\u0002hi\\u0007n\\u0002\\u0002ij\\u0007n\\u0002\\u0002jk\\u0007q\\u0002\\u0002\",\r\n    \"kl\\u0007y\\u0002\\u0002lm\\u0007k\\u0002\\u0002mn\\u0007p\\u0002\\u0002no\\u0007\",\r\n    \"i\\u0002\\u0002op\\u0007\\\"\\u0002\\u0002pq\\u0007u\\u0002\\u0002qr\\u0007v\\u0002\",\r\n    \"\\u0002rs\\u0007c\\u0002\\u0002st\\u0007v\\u0002\\u0002tu\\u0007g\\u0002\\u0002\",\r\n    \"uv\\u0007u\\u0002\\u0002vw\\u0007<\\u0002\\u0002w\\u0004\\u0003\\u0002\\u0002\",\r\n    \"\\u0002xy\\u0007c\\u0002\\u0002yz\\u0007p\\u0002\\u0002z{\\u0007f\\u0002\\u0002\",\r\n    \"{\\u0006\\u0003\\u0002\\u0002\\u0002|}\\u0007K\\u0002\\u0002}~\\u0007\\\"\\u0002\",\r\n    \"\\u0002~\\u007f\\u0007c\\u0002\\u0002\\u007f\\u0080\\u0007i\\u0002\\u0002\\u0080\",\r\n    \"\\u0081\\u0007t\\u0002\\u0002\\u0081\\u0082\\u0007g\\u0002\\u0002\\u0082\\u0083\",\r\n    \"\\u0007g\\u0002\\u0002\\u0083\\u0084\\u0007\\\"\\u0002\\u0002\\u0084\\u0085\\u0007\",\r\n    \"v\\u0002\\u0002\\u0085\\u0086\\u0007q\\u0002\\u0002\\u0086\\u0087\\u0007\\\"\\u0002\",\r\n    \"\\u0002\\u0087\\u0088\\u0007c\\u0002\\u0002\\u0088\\u0089\\u0007w\\u0002\\u0002\",\r\n    \"\\u0089\\u008a\\u0007v\\u0002\\u0002\\u008a\\u008b\\u0007j\\u0002\\u0002\\u008b\",\r\n    \"\\u008c\\u0007q\\u0002\\u0002\\u008c\\u008d\\u0007t\\u0002\\u0002\\u008d\\u008e\",\r\n    \"\\u0007k\\u0002\\u0002\\u008e\\u008f\\u0007|\\u0002\\u0002\\u008f\\u0090\\u0007\",\r\n    \"g\\u0002\\u0002\\u0090\\u0091\\u0007\\\"\\u0002\\u0002\\u0091\\u0092\\u0007v\\u0002\",\r\n    \"\\u0002\\u0092\\u0093\\u0007q\\u0002\\u0002\\u0093\\u0094\\u0007m\\u0002\\u0002\",\r\n    \"\\u0094\\u0095\\u0007g\\u0002\\u0002\\u0095\\u0096\\u0007p\\u0002\\u0002\\u0096\",\r\n    \"\\u0097\\u0007\\\"\\u0002\\u0002\\u0097\\u0098\\u0007k\\u0002\\u0002\\u0098\\u0099\",\r\n    \"\\u0007p\\u0002\\u0002\\u0099\\b\\u0003\\u0002\\u0002\\u0002\\u009a\\u009b\\u0007\",\r\n    \".\\u0002\\u0002\\u009b\\n\\u0003\\u0002\\u0002\\u0002\\u009c\\u009d\\u0007w\\u0002\",\r\n    \"\\u0002\\u009d\\u009e\\u0007u\\u0002\\u0002\\u009e\\u009f\\u0007g\\u0002\\u0002\",\r\n    \"\\u009f\\u00a0\\u0007t\\u0002\\u0002\\u00a0\\u00a1\\u0007u\\u0002\\u0002\\u00a1\",\r\n    \"\\u00a2\\u0007\\\"\\u0002\\u0002\\u00a2\\u00a3\\u0007k\\u0002\\u0002\\u00a3\\u00a4\",\r\n    \"\\u0007p\\u0002\\u0002\\u00a4\\f\\u0003\\u0002\\u0002\\u0002\\u00a5\\u00a6\\u0007\",\r\n    \"<\\u0002\\u0002\\u00a6\\u000e\\u0003\\u0002\\u0002\\u0002\\u00a7\\u00a8\\u0007\",\r\n    \"c\\u0002\\u0002\\u00a8\\u00a9\\u0007p\\u0002\\u0002\\u00a9\\u00aa\\u0007f\\u0002\",\r\n    \"\\u0002\\u00aa\\u00ab\\u0007\\\"\\u0002\\u0002\\u00ab\\u00ac\\u0007q\\u0002\\u0002\",\r\n    \"\\u00ac\\u00ad\\u0007p\\u0002\\u0002\\u00ad\\u0010\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00ae\\u00af\\u0007v\\u0002\\u0002\\u00af\\u00b0\\u0007j\\u0002\\u0002\\u00b0\",\r\n    \"\\u00b1\\u0007g\\u0002\\u0002\\u00b1\\u00b2\\u0007\\\"\\u0002\\u0002\\u00b2\\u00b3\",\r\n    \"\\u0007g\\u0002\\u0002\\u00b3\\u00b4\\u0007p\\u0002\\u0002\\u00b4\\u00b5\\u0007\",\r\n    \"f\\u0002\\u0002\\u00b5\\u00b6\\u0007\\\"\\u0002\\u0002\\u00b6\\u00b7\\u0007q\\u0002\",\r\n    \"\\u0002\\u00b7\\u00b8\\u0007h\\u0002\\u0002\\u00b8\\u0012\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00b9\\u00ba\\u0007f\\u0002\\u0002\\u00ba\\u00bb\\u0007c\\u0002\\u0002\",\r\n    \"\\u00bb\\u00bc\\u0007v\\u0002\\u0002\\u00bc\\u00bd\\u0007g\\u0002\\u0002\\u00bd\",\r\n    \"\\u0014\\u0003\\u0002\\u0002\\u0002\\u00be\\u00bf\\u0007c\\u0002\\u0002\\u00bf\",\r\n    \"\\u00c0\\u0007h\\u0002\\u0002\\u00c0\\u00c1\\u0007v\\u0002\\u0002\\u00c1\\u00c2\",\r\n    \"\\u0007g\\u0002\\u0002\\u00c2\\u00c3\\u0007t\\u0002\\u0002\\u00c3\\u00c4\\u0007\",\r\n    \"\\\"\\u0002\\u0002\\u00c4\\u00c5\\u0007e\\u0002\\u0002\\u00c5\\u00c6\\u0007q\\u0002\",\r\n    \"\\u0002\\u00c6\\u00c7\\u0007p\\u0002\\u0002\\u00c7\\u00c8\\u0007v\\u0002\\u0002\",\r\n    \"\\u00c8\\u00c9\\u0007t\\u0002\\u0002\\u00c9\\u00ca\\u0007c\\u0002\\u0002\\u00ca\",\r\n    \"\\u00cb\\u0007e\\u0002\\u0002\\u00cb\\u00cc\\u0007v\\u0002\\u0002\\u00cc\\u00cd\",\r\n    \"\\u0007\\\"\\u0002\\u0002\\u00cd\\u00ce\\u0007e\\u0002\\u0002\\u00ce\\u00cf\\u0007\",\r\n    \"t\\u0002\\u0002\\u00cf\\u00d0\\u0007g\\u0002\\u0002\\u00d0\\u00d1\\u0007c\\u0002\",\r\n    \"\\u0002\\u00d1\\u00d2\\u0007v\\u0002\\u0002\\u00d2\\u00d3\\u0007k\\u0002\\u0002\",\r\n    \"\\u00d3\\u00d4\\u0007q\\u0002\\u0002\\u00d4\\u00d5\\u0007p\\u0002\\u0002\\u00d5\",\r\n    \"\\u0016\\u0003\\u0002\\u0002\\u0002\\u00d6\\u00d7\\u0007r\\u0002\\u0002\\u00d7\",\r\n    \"\\u00d8\\u0007t\\u0002\\u0002\\u00d8\\u00d9\\u0007k\\u0002\\u0002\\u00d9\\u00da\",\r\n    \"\\u0007e\\u0002\\u0002\\u00da\\u00db\\u0007g\\u0002\\u0002\\u00db\\u00dc\\u0007\",\r\n    \"\\\"\\u0002\\u0002\\u00dc\\u00dd\\u0007r\\u0002\\u0002\\u00dd\\u00de\\u0007t\\u0002\",\r\n    \"\\u0002\\u00de\\u00df\\u0007k\\u0002\\u0002\\u00df\\u00e0\\u0007e\\u0002\\u0002\",\r\n    \"\\u00e0\\u00e1\\u0007g\\u0002\\u0002\\u00e1\\u00e2\\u0007G\\u0002\\u0002\\u00e2\",\r\n    \"\\u00e3\\u0007z\\u0002\\u0002\\u00e3\\u00e4\\u0007r\\u0002\\u0002\\u00e4\\u00e5\",\r\n    \"\\u0007t\\u0002\\u0002\\u00e5\\u00e6\\u0007g\\u0002\\u0002\\u00e6\\u00e7\\u0007\",\r\n    \"u\\u0002\\u0002\\u00e7\\u00e8\\u0007u\\u0002\\u0002\\u00e8\\u00e9\\u0007k\\u0002\",\r\n    \"\\u0002\\u00e9\\u00ea\\u0007q\\u0002\\u0002\\u00ea\\u00eb\\u0007p\\u0002\\u0002\",\r\n    \"\\u00eb\\u0018\\u0003\\u0002\\u0002\\u0002\\u00ec\\u00ed\\u0007v\\u0002\\u0002\",\r\n    \"\\u00ed\\u00ee\\u0007t\\u0002\\u0002\\u00ee\\u00ef\\u0007c\\u0002\\u0002\\u00ef\",\r\n    \"\\u00f0\\u0007p\\u0002\\u0002\\u00f0\\u00f1\\u0007u\\u0002\\u0002\\u00f1\\u00f2\",\r\n    \"\\u0007c\\u0002\\u0002\\u00f2\\u00f3\\u0007e\\u0002\\u0002\\u00f3\\u00f4\\u0007\",\r\n    \"v\\u0002\\u0002\\u00f4\\u00f5\\u0007k\\u0002\\u0002\\u00f5\\u00f6\\u0007q\\u0002\",\r\n    \"\\u0002\\u00f6\\u00f7\\u0007p\\u0002\\u0002\\u00f7\\u00f8\\u0007\\\"\\u0002\\u0002\",\r\n    \"\\u00f8\\u00f9\\u0007q\\u0002\\u0002\\u00f9\\u00fa\\u0007h\\u0002\\u0002\\u00fa\",\r\n    \"\\u001a\\u0003\\u0002\\u0002\\u0002\\u00fb\\u00fc\\u0007v\\u0002\\u0002\\u00fc\",\r\n    \"\\u00fd\\u0007q\\u0002\\u0002\\u00fd\\u00fe\\u0007\\\"\\u0002\\u0002\\u00fe\\u00ff\",\r\n    \"\\u0007q\\u0002\\u0002\\u00ff\\u0100\\u0007y\\u0002\\u0002\\u0100\\u0101\\u0007\",\r\n    \"p\\u0002\\u0002\\u0101\\u0102\\u0007g\\u0002\\u0002\\u0102\\u0103\\u0007t\\u0002\",\r\n    \"\\u0002\\u0103\\u001c\\u0003\\u0002\\u0002\\u0002\\u0104\\u0105\\u0007e\\u0002\",\r\n    \"\\u0002\\u0105\\u0106\\u0007q\\u0002\\u0002\\u0106\\u0107\\u0007p\\u0002\\u0002\",\r\n    \"\\u0107\\u0108\\u0007v\\u0002\\u0002\\u0108\\u0109\\u0007t\\u0002\\u0002\\u0109\",\r\n    \"\\u010a\\u0007c\\u0002\\u0002\\u010a\\u010b\\u0007e\\u0002\\u0002\\u010b\\u010c\",\r\n    \"\\u0007v\\u0002\\u0002\\u010c\\u010d\\u0007a\\u0002\\u0002\\u010d\\u010e\\u0007\",\r\n    \"i\\u0002\\u0002\\u010e\\u010f\\u0007w\\u0002\\u0002\\u010f\\u0110\\u0007c\\u0002\",\r\n    \"\\u0002\\u0110\\u0111\\u0007t\\u0002\\u0002\\u0111\\u0112\\u0007c\\u0002\\u0002\",\r\n    \"\\u0112\\u0113\\u0007p\\u0002\\u0002\\u0113\\u0114\\u0007v\\u0002\\u0002\\u0114\",\r\n    \"\\u0115\\u0007{\\u0002\\u0002\\u0115\\u0116\\u0007\\\"\\u0002\\u0002\\u0116\\u0117\",\r\n    \"\\u0007q\\u0002\\u0002\\u0117\\u0118\\u0007h\\u0002\\u0002\\u0118\\u001e\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0119\\u011a\\u0007t\\u0002\\u0002\\u011a\\u011b\\u0007\",\r\n    \"g\\u0002\\u0002\\u011b\\u011c\\u0007h\\u0002\\u0002\\u011c\\u011d\\u0007w\\u0002\",\r\n    \"\\u0002\\u011d\\u011e\\u0007p\\u0002\\u0002\\u011e\\u011f\\u0007f\\u0002\\u0002\",\r\n    \"\\u011f\\u0120\\u0007\\\"\\u0002\\u0002\\u0120\\u0121\\u0007c\\u0002\\u0002\\u0121\",\r\n    \"\\u0122\\u0007h\\u0002\\u0002\\u0122\\u0123\\u0007v\\u0002\\u0002\\u0123\\u0124\",\r\n    \"\\u0007g\\u0002\\u0002\\u0124\\u0125\\u0007t\\u0002\\u0002\\u0125 \\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0126\\u0127\\u0007f\\u0002\\u0002\\u0127\\u0128\\u0007c\\u0002\",\r\n    \"\\u0002\\u0128\\u0129\\u0007{\\u0002\\u0002\\u0129\\\"\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u012a\\u012b\\u0007r\\u0002\\u0002\\u012b\\u012c\\u0007n\\u0002\\u0002\\u012c\",\r\n    \"\\u012d\\u0007c\\u0002\\u0002\\u012d\\u012e\\u0007v\\u0002\\u0002\\u012e\\u012f\",\r\n    \"\\u0007h\\u0002\\u0002\\u012f\\u0130\\u0007q\\u0002\\u0002\\u0130\\u0131\\u0007\",\r\n    \"t\\u0002\\u0002\\u0131\\u0132\\u0007o\\u0002\\u0002\\u0132\\u0133\\u0007a\\u0002\",\r\n    \"\\u0002\\u0133\\u0134\\u0007i\\u0002\\u0002\\u0134\\u0135\\u0007w\\u0002\\u0002\",\r\n    \"\\u0135\\u0136\\u0007c\\u0002\\u0002\\u0136\\u0137\\u0007t\\u0002\\u0002\\u0137\",\r\n    \"\\u0138\\u0007c\\u0002\\u0002\\u0138\\u0139\\u0007p\\u0002\\u0002\\u0139\\u013a\",\r\n    \"\\u0007v\\u0002\\u0002\\u013a\\u013b\\u0007{\\u0002\\u0002\\u013b\\u013c\\u0007\",\r\n    \"\\\"\\u0002\\u0002\\u013c\\u013d\\u0007q\\u0002\\u0002\\u013d\\u013e\\u0007h\\u0002\",\r\n    \"\\u0002\\u013e$\\u0003\\u0002\\u0002\\u0002\\u013f\\u0140\\u0007x\\u0002\\u0002\",\r\n    \"\\u0140\\u0141\\u0007k\\u0002\\u0002\\u0141\\u0142\\u0007u\\u0002\\u0002\\u0142\",\r\n    \"\\u0143\\u0007k\\u0002\\u0002\\u0143\\u0144\\u0007v\\u0002\\u0002\\u0144\\u0145\",\r\n    \"\\u0007a\\u0002\\u0002\\u0145\\u0146\\u0007k\\u0002\\u0002\\u0146\\u0147\\u0007\",\r\n    \"p\\u0002\\u0002\\u0147\\u0148\\u0007e\\u0002\\u0002\\u0148\\u0149\\u0007t\\u0002\",\r\n    \"\\u0002\\u0149\\u014a\\u0007g\\u0002\\u0002\\u014a\\u014b\\u0007o\\u0002\\u0002\",\r\n    \"\\u014b\\u014c\\u0007g\\u0002\\u0002\\u014c\\u014d\\u0007p\\u0002\\u0002\\u014d\",\r\n    \"\\u014e\\u0007v\\u0002\\u0002\\u014e\\u014f\\u0007\\\"\\u0002\\u0002\\u014f\\u0150\",\r\n    \"\\u0007q\\u0002\\u0002\\u0150\\u0151\\u0007h\\u0002\\u0002\\u0151&\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0152\\u0153\\u0007x\\u0002\\u0002\\u0153\\u0154\\u0007k\\u0002\",\r\n    \"\\u0002\\u0154\\u0155\\u0007u\\u0002\\u0002\\u0155\\u0156\\u0007k\\u0002\\u0002\",\r\n    \"\\u0156\\u0157\\u0007v\\u0002\\u0002\\u0157\\u0158\\u0007\\\"\\u0002\\u0002\\u0158\",\r\n    \"\\u0159\\u0007q\\u0002\\u0002\\u0159\\u015a\\u0007h\\u0002\\u0002\\u015a(\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u015b\\u015c\\u0007c\\u0002\\u0002\\u015c\\u015d\\u0007\",\r\n    \"e\\u0002\\u0002\\u015d\\u015e\\u0007e\\u0002\\u0002\\u015e\\u015f\\u0007q\\u0002\",\r\n    \"\\u0002\\u015f\\u0160\\u0007w\\u0002\\u0002\\u0160\\u0161\\u0007p\\u0002\\u0002\",\r\n    \"\\u0161\\u0162\\u0007v\\u0002\\u0002\\u0162\\u0163\\u0007a\\u0002\\u0002\\u0163\",\r\n    \"\\u0164\\u0007d\\u0002\\u0002\\u0164\\u0165\\u0007c\\u0002\\u0002\\u0165\\u0166\",\r\n    \"\\u0007n\\u0002\\u0002\\u0166\\u0167\\u0007c\\u0002\\u0002\\u0167\\u0168\\u0007\",\r\n    \"p\\u0002\\u0002\\u0168\\u0169\\u0007e\\u0002\\u0002\\u0169\\u016a\\u0007g\\u0002\",\r\n    \"\\u0002\\u016a\\u016b\\u0007\\\"\\u0002\\u0002\\u016b\\u016c\\u0007i\\u0002\\u0002\",\r\n    \"\\u016c\\u016d\\u0007t\\u0002\\u0002\\u016d\\u016e\\u0007g\\u0002\\u0002\\u016e\",\r\n    \"\\u016f\\u0007c\\u0002\\u0002\\u016f\\u0170\\u0007v\\u0002\\u0002\\u0170\\u0171\",\r\n    \"\\u0007g\\u0002\\u0002\\u0171\\u0172\\u0007t\\u0002\\u0002\\u0172\\u0173\\u0007\",\r\n    \"\\\"\\u0002\\u0002\\u0173\\u0174\\u0007v\\u0002\\u0002\\u0174\\u0175\\u0007j\\u0002\",\r\n    \"\\u0002\\u0175\\u0176\\u0007c\\u0002\\u0002\\u0176\\u0177\\u0007p\\u0002\\u0002\",\r\n    \"\\u0177*\\u0003\\u0002\\u0002\\u0002\\u0178\\u0179\\u0007c\\u0002\\u0002\\u0179\",\r\n    \"\\u017a\\u0007e\\u0002\\u0002\\u017a\\u017b\\u0007e\\u0002\\u0002\\u017b\\u017c\",\r\n    \"\\u0007q\\u0002\\u0002\\u017c\\u017d\\u0007w\\u0002\\u0002\\u017d\\u017e\\u0007\",\r\n    \"p\\u0002\\u0002\\u017e\\u017f\\u0007v\\u0002\\u0002\\u017f\\u0180\\u0007a\\u0002\",\r\n    \"\\u0002\\u0180\\u0181\\u0007d\\u0002\\u0002\\u0181\\u0182\\u0007c\\u0002\\u0002\",\r\n    \"\\u0182\\u0183\\u0007n\\u0002\\u0002\\u0183\\u0184\\u0007c\\u0002\\u0002\\u0184\",\r\n    \"\\u0185\\u0007p\\u0002\\u0002\\u0185\\u0186\\u0007e\\u0002\\u0002\\u0186\\u0187\",\r\n    \"\\u0007g\\u0002\\u0002\\u0187\\u0188\\u0007\\\"\\u0002\\u0002\\u0188\\u0189\\u0007\",\r\n    \"u\\u0002\\u0002\\u0189\\u018a\\u0007o\\u0002\\u0002\\u018a\\u018b\\u0007c\\u0002\",\r\n    \"\\u0002\\u018b\\u018c\\u0007n\\u0002\\u0002\\u018c\\u018d\\u0007n\\u0002\\u0002\",\r\n    \"\\u018d\\u018e\\u0007g\\u0002\\u0002\\u018e\\u018f\\u0007t\\u0002\\u0002\\u018f\",\r\n    \"\\u0190\\u0007\\\"\\u0002\\u0002\\u0190\\u0191\\u0007v\\u0002\\u0002\\u0191\\u0192\",\r\n    \"\\u0007j\\u0002\\u0002\\u0192\\u0193\\u0007c\\u0002\\u0002\\u0193\\u0194\\u0007\",\r\n    \"p\\u0002\\u0002\\u0194,\\u0003\\u0002\\u0002\\u0002\\u0195\\u0196\\u0007c\\u0002\",\r\n    \"\\u0002\\u0196\\u0197\\u0007e\\u0002\\u0002\\u0197\\u0198\\u0007e\\u0002\\u0002\",\r\n    \"\\u0198\\u0199\\u0007q\\u0002\\u0002\\u0199\\u019a\\u0007w\\u0002\\u0002\\u019a\",\r\n    \"\\u019b\\u0007p\\u0002\\u0002\\u019b\\u019c\\u0007v\\u0002\\u0002\\u019c\\u019d\",\r\n    \"\\u0007a\\u0002\\u0002\\u019d\\u019e\\u0007u\\u0002\\u0002\\u019e\\u019f\\u0007\",\r\n    \"g\\u0002\\u0002\\u019f\\u01a0\\u0007v\\u0002\\u0002\\u01a0\\u01a1\\u0007v\\u0002\",\r\n    \"\\u0002\\u01a1\\u01a2\\u0007n\\u0002\\u0002\\u01a2\\u01a3\\u0007g\\u0002\\u0002\",\r\n    \"\\u01a3\\u01a4\\u0007f\\u0002\\u0002\\u01a4.\\u0003\\u0002\\u0002\\u0002\\u01a5\",\r\n    \"\\u01a6\\u0007k\\u0002\\u0002\\u01a6\\u01a7\\u0007p\\u0002\\u0002\\u01a7\\u01a8\",\r\n    \"\\u0007\\\"\\u0002\\u0002\\u01a8\\u01a9\\u0007v\\u0002\\u0002\\u01a9\\u01aa\\u0007\",\r\n    \"q\\u0002\\u0002\\u01aa\\u01ab\\u0007v\\u0002\\u0002\\u01ab\\u01ac\\u0007c\\u0002\",\r\n    \"\\u0002\\u01ac\\u01ad\\u0007n\\u0002\\u0002\\u01ad0\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u01ae\\u01af\\u0007r\\u0002\\u0002\\u01af\\u01b0\\u0007g\\u0002\\u0002\\u01b0\",\r\n    \"\\u01b1\\u0007t\\u0002\\u0002\\u01b1\\u01b2\\u0007\\\"\\u0002\\u0002\\u01b2\\u01b3\",\r\n    \"\\u0007x\\u0002\\u0002\\u01b3\\u01b4\\u0007k\\u0002\\u0002\\u01b4\\u01b5\\u0007\",\r\n    \"g\\u0002\\u0002\\u01b5\\u01b6\\u0007y\\u0002\\u0002\\u01b62\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u01b7\\u01b8\\u0007{\\u0002\\u0002\\u01b8\\u01b9\\u0007g\\u0002\\u0002\",\r\n    \"\\u01b9\\u01ba\\u0007c\\u0002\\u0002\\u01ba\\u01bb\\u0007t\\u0002\\u0002\\u01bb\",\r\n    \"4\\u0003\\u0002\\u0002\\u0002\\u01bc\\u01bd\\u0007y\\u0002\\u0002\\u01bd\\u01be\",\r\n    \"\\u0007g\\u0002\\u0002\\u01be\\u01bf\\u0007g\\u0002\\u0002\\u01bf\\u01c0\\u0007\",\r\n    \"m\\u0002\\u0002\\u01c06\\u0003\\u0002\\u0002\\u0002\\u01c1\\u01c2\\u0007e\\u0002\",\r\n    \"\\u0002\\u01c2\\u01c3\\u0007{\\u0002\\u0002\\u01c3\\u01c4\\u0007e\\u0002\\u0002\",\r\n    \"\\u01c4\\u01c5\\u0007n\\u0002\\u0002\\u01c5\\u01c6\\u0007g\\u0002\\u0002\\u01c6\",\r\n    \"8\\u0003\\u0002\\u0002\\u0002\\u01c7\\u01c8\\u0007H\\u0002\\u0002\\u01c8\\u01c9\",\r\n    \"\\u0007q\\u0002\\u0002\\u01c9\\u01ca\\u0007t\\u0002\\u0002\\u01ca:\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u01cb\\u01cc\\u0007w\\u0002\\u0002\\u01cc\\u01cd\\u0007u\\u0002\",\r\n    \"\\u0002\\u01cd\\u01ce\\u0007g\\u0002\\u0002\\u01ce\\u01cf\\u0007t\\u0002\\u0002\",\r\n    \"\\u01cf\\u01d0\\u0007i\\u0002\\u0002\\u01d0\\u01d1\\u0007t\\u0002\\u0002\\u01d1\",\r\n    \"\\u01d2\\u0007q\\u0002\\u0002\\u01d2\\u01d3\\u0007w\\u0002\\u0002\\u01d3\\u01d4\",\r\n    \"\\u0007r\\u0002\\u0002\\u01d4\\u01d5\\u0007u\\u0002\\u0002\\u01d5<\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u01d6\\u01d7\\u0007w\\u0002\\u0002\\u01d7\\u01d8\\u0007u\\u0002\",\r\n    \"\\u0002\\u01d8\\u01d9\\u0007g\\u0002\\u0002\\u01d9\\u01da\\u0007t\\u0002\\u0002\",\r\n    \"\\u01da\\u01db\\u0007u\\u0002\\u0002\\u01db>\\u0003\\u0002\\u0002\\u0002\\u01dc\",\r\n    \"\\u01dd\\u0007r\\u0002\\u0002\\u01dd\\u01de\\u0007t\\u0002\\u0002\\u01de\\u01df\",\r\n    \"\\u0007q\\u0002\\u0002\\u01df\\u01e0\\u0007e\\u0002\\u0002\\u01e0\\u01e1\\u0007\",\r\n    \"g\\u0002\\u0002\\u01e1\\u01e2\\u0007g\\u0002\\u0002\\u01e2\\u01e3\\u0007f\\u0002\",\r\n    \"\\u0002\\u01e3@\\u0003\\u0002\\u0002\\u0002\\u01e4\\u01e5\\u0007v\\u0002\\u0002\",\r\n    \"\\u01e5\\u01e6\\u0007q\\u0002\\u0002\\u01e6B\\u0003\\u0002\\u0002\\u0002\\u01e7\",\r\n    \"\\u01e8\\u0007k\\u0002\\u0002\\u01e8\\u01e9\\u0007p\\u0002\\u0002\\u01e9D\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u01ea\\u01eb\\u0007q\\u0002\\u0002\\u01eb\\u01ec\\u0007\",\r\n    \"p\\u0002\\u0002\\u01ecF\\u0003\\u0002\\u0002\\u0002\\u01ed\\u01ee\\u0007c\\u0002\",\r\n    \"\\u0002\\u01ee\\u01ef\\u0007e\\u0002\\u0002\\u01ef\\u01f0\\u0007e\\u0002\\u0002\",\r\n    \"\\u01f0\\u01f1\\u0007g\\u0002\\u0002\\u01f1\\u01f2\\u0007r\\u0002\\u0002\\u01f2\",\r\n    \"\\u01f3\\u0007v\\u0002\\u0002\\u01f3\\u01f4\\u0007k\\u0002\\u0002\\u01f4\\u01f5\",\r\n    \"\\u0007p\\u0002\\u0002\\u01f5\\u01f6\\u0007i\\u0002\\u0002\\u01f6H\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u01f7\\u01f8\\u0007u\\u0002\\u0002\\u01f8\\u01f9\\u0007g\\u0002\",\r\n    \"\\u0002\\u01f9\\u01fa\\u0007n\\u0002\\u0002\\u01fa\\u0200\\u0007h\\u0002\\u0002\",\r\n    \"\\u01fb\\u01fc\\u0007U\\u0002\\u0002\\u01fc\\u01fd\\u0007G\\u0002\\u0002\\u01fd\",\r\n    \"\\u01fe\\u0007N\\u0002\\u0002\\u01fe\\u0200\\u0007H\\u0002\\u0002\\u01ff\\u01f7\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u01ff\\u01fb\\u0003\\u0002\\u0002\\u0002\\u0200J\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0201\\u0202\\u0007n\\u0002\\u0002\\u0202\\u0203\",\r\n    \"\\u0007k\\u0002\\u0002\\u0203\\u0204\\u0007e\\u0002\\u0002\\u0204\\u0205\\u0007\",\r\n    \"g\\u0002\\u0002\\u0205\\u0206\\u0007p\\u0002\\u0002\\u0206\\u0207\\u0007u\\u0002\",\r\n    \"\\u0002\\u0207\\u0208\\u0007g\\u0002\\u0002\\u0208L\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0209\\u020a\\u0007r\\u0002\\u0002\\u020a\\u020b\\u0007c\\u0002\\u0002\\u020b\",\r\n    \"\\u020c\\u0007{\\u0002\\u0002\\u020c\\u020d\\u0007k\\u0002\\u0002\\u020d\\u020e\",\r\n    \"\\u0007p\\u0002\\u0002\\u020e\\u020f\\u0007i\\u0002\\u0002\\u020fN\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0210\\u0211\\u0007r\\u0002\\u0002\\u0211\\u0212\\u0007g\\u0002\",\r\n    \"\\u0002\\u0212\\u0213\\u0007t\\u0002\\u0002\\u0213P\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0214\\u0215\\u0007x\\u0002\\u0002\\u0215\\u0216\\u0007k\\u0002\\u0002\\u0216\",\r\n    \"\\u0217\\u0007g\\u0002\\u0002\\u0217\\u0218\\u0007y\\u0002\\u0002\\u0218R\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0219\\u021a\\u0007t\\u0002\\u0002\\u021a\\u021b\\u0007\",\r\n    \"g\\u0002\\u0002\\u021b\\u021c\\u0007s\\u0002\\u0002\\u021c\\u021d\\u0007w\\u0002\",\r\n    \"\\u0002\\u021d\\u021e\\u0007k\\u0002\\u0002\\u021e\\u021f\\u0007t\\u0002\\u0002\",\r\n    \"\\u021f\\u0220\\u0007g\\u0002\\u0002\\u0220T\\u0003\\u0002\\u0002\\u0002\\u0221\",\r\n    \"\\u0222\\u0007p\\u0002\\u0002\\u0222\\u0223\\u0007q\\u0002\\u0002\\u0223\\u0224\",\r\n    \"\\u0007v\\u0002\\u0002\\u0224\\u0225\\u0007j\\u0002\\u0002\\u0225\\u0226\\u0007\",\r\n    \"k\\u0002\\u0002\\u0226\\u0227\\u0007p\\u0002\\u0002\\u0227\\u0228\\u0007i\\u0002\",\r\n    \"\\u0002\\u0228V\\u0003\\u0002\\u0002\\u0002\\u0229\\u022b\\t\\u0002\\u0002\\u0002\",\r\n    \"\\u022a\\u0229\\u0003\\u0002\\u0002\\u0002\\u022b\\u022c\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u022c\\u022a\\u0003\\u0002\\u0002\\u0002\\u022c\\u022d\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u022dX\\u0003\\u0002\\u0002\\u0002\\u022e\\u0230\\t\\u0003\\u0002\\u0002\\u022f\",\r\n    \"\\u022e\\u0003\\u0002\\u0002\\u0002\\u0230\\u0231\\u0003\\u0002\\u0002\\u0002\\u0231\",\r\n    \"\\u022f\\u0003\\u0002\\u0002\\u0002\\u0231\\u0232\\u0003\\u0002\\u0002\\u0002\\u0232\",\r\n    \"\\u0233\\u0003\\u0002\\u0002\\u0002\\u0233\\u0234\\b-\\u0002\\u0002\\u0234Z\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0235\\u0237\\t\\u0004\\u0002\\u0002\\u0236\\u0235\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0237\\u0238\\u0003\\u0002\\u0002\\u0002\\u0238\\u0236\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0238\\u0239\\u0003\\u0002\\u0002\\u0002\\u0239\\\\\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u023a\\u023b\\u0005[.\\u0002\\u023b\\u023c\\u0007/\\u0002\",\r\n    \"\\u0002\\u023c\\u023d\\u0005[.\\u0002\\u023d\\u023e\\u0007/\\u0002\\u0002\\u023e\",\r\n    \"\\u023f\\u0005[.\\u0002\\u023f^\\u0003\\u0002\\u0002\\u0002\\b\\u0002\\u01ff\\u022a\",\r\n    \"\\u022c\\u0231\\u0238\\u0003\\b\\u0002\\u0002\"].join(\"\");\r\n\r\n\r\nvar atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);\r\n\r\nvar decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });\r\n\r\nfunction presentable_policyLexer(input) {\r\n\tantlr4.Lexer.call(this, input);\r\n    this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());\r\n    return this;\r\n}\r\n\r\npresentable_policyLexer.prototype = Object.create(antlr4.Lexer.prototype);\r\npresentable_policyLexer.prototype.constructor = presentable_policyLexer;\r\n\r\npresentable_policyLexer.EOF = antlr4.Token.EOF;\r\npresentable_policyLexer.T__0 = 1;\r\npresentable_policyLexer.T__1 = 2;\r\npresentable_policyLexer.T__2 = 3;\r\npresentable_policyLexer.T__3 = 4;\r\npresentable_policyLexer.T__4 = 5;\r\npresentable_policyLexer.T__5 = 6;\r\npresentable_policyLexer.T__6 = 7;\r\npresentable_policyLexer.T__7 = 8;\r\npresentable_policyLexer.T__8 = 9;\r\npresentable_policyLexer.T__9 = 10;\r\npresentable_policyLexer.T__10 = 11;\r\npresentable_policyLexer.T__11 = 12;\r\npresentable_policyLexer.T__12 = 13;\r\npresentable_policyLexer.T__13 = 14;\r\npresentable_policyLexer.T__14 = 15;\r\npresentable_policyLexer.T__15 = 16;\r\npresentable_policyLexer.T__16 = 17;\r\npresentable_policyLexer.T__17 = 18;\r\npresentable_policyLexer.T__18 = 19;\r\npresentable_policyLexer.T__19 = 20;\r\npresentable_policyLexer.T__20 = 21;\r\npresentable_policyLexer.T__21 = 22;\r\npresentable_policyLexer.T__22 = 23;\r\npresentable_policyLexer.T__23 = 24;\r\npresentable_policyLexer.T__24 = 25;\r\npresentable_policyLexer.T__25 = 26;\r\npresentable_policyLexer.T__26 = 27;\r\npresentable_policyLexer.FOR = 28;\r\npresentable_policyLexer.USERGROUPS = 29;\r\npresentable_policyLexer.USERS = 30;\r\npresentable_policyLexer.PROCEED = 31;\r\npresentable_policyLexer.TO = 32;\r\npresentable_policyLexer.IN = 33;\r\npresentable_policyLexer.ON = 34;\r\npresentable_policyLexer.ACCEPTING = 35;\r\npresentable_policyLexer.SELF = 36;\r\npresentable_policyLexer.LICENSE = 37;\r\npresentable_policyLexer.PAYING = 38;\r\npresentable_policyLexer.PER = 39;\r\npresentable_policyLexer.VIEW = 40;\r\npresentable_policyLexer.REQUIRE = 41;\r\npresentable_policyLexer.NOTHING = 42;\r\npresentable_policyLexer.ID = 43;\r\npresentable_policyLexer.WS = 44;\r\npresentable_policyLexer.INT = 45;\r\npresentable_policyLexer.DATE = 46;\r\n\r\npresentable_policyLexer.prototype.channelNames = [ \"DEFAULT_TOKEN_CHANNEL\", \"HIDDEN\" ];\r\n\r\npresentable_policyLexer.prototype.modeNames = [ \"DEFAULT_MODE\" ];\r\n\r\npresentable_policyLexer.prototype.literalNames = [ null, \"'in the following states:'\", \r\n                                                   \"'and'\", \"'I agree to authorize token in'\", \r\n                                                   \"','\", \"'users in'\", \r\n                                                   \"':'\", \"'and on'\", \"'the end of'\", \r\n                                                   \"'date'\", \"'after contract creation'\", \r\n                                                   \"'price priceExpression'\", \r\n                                                   \"'transaction of'\", \"'to owner'\", \r\n                                                   \"'contract_guaranty of'\", \r\n                                                   \"'refund after'\", \"'day'\", \r\n                                                   \"'platform_guaranty of'\", \r\n                                                   \"'visit_increment of'\", \r\n                                                   \"'visit of'\", \"'account_balance greater than'\", \r\n                                                   \"'account_balance smaller than'\", \r\n                                                   \"'account_settled'\", \r\n                                                   \"'in total'\", \"'per view'\", \r\n                                                   \"'year'\", \"'week'\", \"'cycle'\", \r\n                                                   \"'For'\", \"'usergroups'\", \r\n                                                   \"'users'\", \"'proceed'\", \r\n                                                   \"'to'\", \"'in'\", \"'on'\", \r\n                                                   \"'accepting'\", null, \r\n                                                   \"'license'\", \"'paying'\", \r\n                                                   \"'per'\", \"'view'\", \"'require'\", \r\n                                                   \"'nothing'\" ];\r\n\r\npresentable_policyLexer.prototype.symbolicNames = [ null, null, null, null, \r\n                                                    null, null, null, null, \r\n                                                    null, null, null, null, \r\n                                                    null, null, null, null, \r\n                                                    null, null, null, null, \r\n                                                    null, null, null, null, \r\n                                                    null, null, null, null, \r\n                                                    \"FOR\", \"USERGROUPS\", \r\n                                                    \"USERS\", \"PROCEED\", \r\n                                                    \"TO\", \"IN\", \"ON\", \"ACCEPTING\", \r\n                                                    \"SELF\", \"LICENSE\", \"PAYING\", \r\n                                                    \"PER\", \"VIEW\", \"REQUIRE\", \r\n                                                    \"NOTHING\", \"ID\", \"WS\", \r\n                                                    \"INT\", \"DATE\" ];\r\n\r\npresentable_policyLexer.prototype.ruleNames = [ \"T__0\", \"T__1\", \"T__2\", \r\n                                                \"T__3\", \"T__4\", \"T__5\", \r\n                                                \"T__6\", \"T__7\", \"T__8\", \r\n                                                \"T__9\", \"T__10\", \"T__11\", \r\n                                                \"T__12\", \"T__13\", \"T__14\", \r\n                                                \"T__15\", \"T__16\", \"T__17\", \r\n                                                \"T__18\", \"T__19\", \"T__20\", \r\n                                                \"T__21\", \"T__22\", \"T__23\", \r\n                                                \"T__24\", \"T__25\", \"T__26\", \r\n                                                \"FOR\", \"USERGROUPS\", \"USERS\", \r\n                                                \"PROCEED\", \"TO\", \"IN\", \"ON\", \r\n                                                \"ACCEPTING\", \"SELF\", \"LICENSE\", \r\n                                                \"PAYING\", \"PER\", \"VIEW\", \r\n                                                \"REQUIRE\", \"NOTHING\", \"ID\", \r\n                                                \"WS\", \"INT\", \"DATE\" ];\r\n\r\npresentable_policyLexer.prototype.grammarFileName = \"presentable_policy.g4\";\r\n\r\n\r\n\r\nexports.presentable_policyLexer = presentable_policyLexer;\r\n\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/presentable_policy_lang/gen/presentable_policyLexer.js\n// module id = NwDQ\n// module chunks = 2","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".table-view-wrapper .table[data-v-361849fa]{max-height:100%}.table-view-wrapper .pagination[data-v-361849fa]{margin-top:15px;text-align:center}\", \"\", {\"version\":3,\"sources\":[\"/Users/daizecheng/workplace/freelog/console/client/src/components/TableView/index.vue\"],\"names\":[],\"mappings\":\"AACA,4CACE,eAAiB,CAClB,AACD,iDACE,gBAAiB,AACjB,iBAAmB,CACpB\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.table-view-wrapper .table[data-v-361849fa] {\\n  max-height: 100%;\\n}\\n.table-view-wrapper .pagination[data-v-361849fa] {\\n  margin-top: 15px;\\n  text-align: center;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-361849fa\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/less-loader/dist/cjs.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/TableView/index.vue\n// module id = O+Ac\n// module chunks = 0 1 2 7","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".p-detail li[data-v-3eb35d32]{margin-bottom:12px}.p-detail .item-title[data-v-3eb35d32]{color:#48576a;display:inline-block;width:150px;padding-right:12px;-webkit-box-sizing:border-box;box-sizing:border-box;text-align:right}.p-detail .item-detail[data-v-3eb35d32]{display:inline-block;vertical-align:top}\", \"\", {\"version\":3,\"sources\":[\"/Users/daizecheng/workplace/freelog/console/client/src/views/node/presentable/contract/detail/index.vue\"],\"names\":[],\"mappings\":\"AACA,8BACE,kBAAoB,CACrB,AACD,uCACE,cAAe,AACf,qBAAsB,AACtB,YAAa,AACb,mBAAoB,AACpB,8BAA+B,AACvB,sBAAuB,AAC/B,gBAAkB,CACnB,AACD,wCACE,qBAAsB,AACtB,kBAAoB,CACrB\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.p-detail li[data-v-3eb35d32] {\\n  margin-bottom: 12px;\\n}\\n.p-detail .item-title[data-v-3eb35d32] {\\n  color: #48576a;\\n  display: inline-block;\\n  width: 150px;\\n  padding-right: 12px;\\n  -webkit-box-sizing: border-box;\\n          box-sizing: border-box;\\n  text-align: right;\\n}\\n.p-detail .item-detail[data-v-3eb35d32] {\\n  display: inline-block;\\n  vertical-align: top;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-3eb35d32\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/less-loader/dist/cjs.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/views/node/presentable/contract/detail/index.vue\n// module id = P8NL\n// module chunks = 2","export default {\n  name: 'table-view',\n  data() {\n    return {\n      loading: false,\n      tableData: [],\n      total: 0\n    }\n  },\n  props: {\n    data: {\n      type: Array,\n      default() {\n        return []\n      }\n    },\n    showPagination: {\n      type: Boolean,\n      default: true\n    },\n    formatHandler: {\n      type: Function,\n      default: null\n    },\n    paginationOptions: {\n      type: Object,\n      default() {\n        return {\n          pageSizes: [10, 20, 30, 50]\n        }\n      }\n    },\n    loader: Function,\n    pageMeta: {\n      type: Object,\n      default() {\n        return {\n          pageSize: 10,\n          page: 1 //页码\n        }\n      }\n    }\n  },\n  mounted() {\n    this.tableData = this.data;\n    this.total = this.tableData.length\n    this.load()\n  },\n  methods: {\n    load(pageInfo) {\n      Object.assign(this.pageMeta, pageInfo || {})\n      if (this.loader) {\n        this.loading = true\n        this.loader(this.pageMeta).then((res) => {\n          var data = res.getData()\n          this.loading = false\n          if (data) {\n            var dataList = data.dataList || data;\n            if (this.formatHandler) {\n              dataList = this.formatHandler(dataList)\n            }\n            this.tableData = dataList;\n            //分页数据\n            if (data.dataList) {\n              this.total = data.totalItem\n              this.pageMeta.page = data.page || 1\n            } else {\n              this.total = dataList.length\n            }\n          } else {\n            this.$message.error(data.msg);\n          }\n        }).catch((res) => {\n          this.$message.warning('加载失败')\n          this.loading = false\n        })\n      }\n    },\n    handleSizeChange(val) {\n      var data = {pageSize: val}\n      this.load(data);\n      this.$emit('sizeChange', data)\n    },\n    handleCurrentChange(val) {\n      var data = {page: val}\n      this.load(data);\n      this.$emit('pageChange', data)\n\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/TableView/index.js","<template>\n  <section>\n    <presentable-steps :active=\"step.active\"></presentable-steps>\n\n    <el-row>\n      <el-form :model=\"formData\" :rules=\"rules\" label-width=\"200px\" ref=\"ruleForm\">\n        <el-form-item label=\"presentable名\" required prop=\"presentableName\">\n          <el-input v-model=\"formData.presentableName\" placeholder=\"请输入presentable名\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"presentable tags\" prop=\"presentableTags\">\n          <presentable-tags v-model=\"formData.presentableTags\"></presentable-tags>\n        </el-form-item>\n\n        <el-form-item label=\"presentable_policy\" required prop=\"userPolicy\">\n          <el-input class=\"gap\"\n                    spellcheck=\"false\"\n                    type=\"textarea\"\n                    :rows=\"8\"\n                    placeholder=\"请输入policy\"\n                    v-model=\"formData.userPolicy\">\n          </el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"validate('ruleForm')\" :loading=\"validateLoading\">校验</el-button>\n          <el-button type=\"primary\" @click=\"submit\" :loading=\"submitLoading\">提交</el-button>\n        </el-form-item>\n\n      </el-form>\n    </el-row>\n  </section>\n</template>\n\n<script>\n  import PresentableEditor from './index'\n\n  export default PresentableEditor\n</script>\n\n<style lang=\"less\" scoped>\n  .upload-container {\n    width: 20%;\n    margin: auto;\n  }\n\n  .gap {\n    margin-bottom: 12px;\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/views/node/presentable/edit/index.vue","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-41f78b08\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../../node_modules/less-loader/dist/cjs.js?{\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"e7682b0c\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/vue-style-loader!./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-41f78b08\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/less-loader/dist/cjs.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/views/node/presentable/policy/index.vue\n// module id = QdQx\n// module chunks = 2","'use strict';\n\nvar antlr4 = require('antlr4/index');\nvar policy = require('policy_lang');\nvar policyLexer = policy.policyLexer;\nvar policyParser = policy.policyParser;\nvar _ = require('underscore');\n\nvar ErrorListener = require('antlr4/error/ErrorListener').ConsoleErrorListener;\nvar ErrorListenerExtend = require('./ErrorListenerExtend');\nErrorListenerExtend(ErrorListener.prototype);\n\nvar compile = function compile(text) {\n  var target = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'json';\n\n  var extentionClass = require('./JSONGeneratorExtension.js');\n  if (target === 'beautify') {\n    extentionClass = require('./BeautifyExtension.js');\n  }\n\n  var chars = new antlr4.InputStream(text);\n  var lexer = new policyLexer(chars);\n\n  var tokens = new antlr4.CommonTokenStream(lexer);\n  var parser = new policyParser(tokens);\n  parser.buildParseTrees = true;\n  var tree = parser.p();\n  var listener = new extentionClass();\n  antlr4.tree.ParseTreeWalker.DEFAULT.walk(listener, tree);\n  if (parser._listeners[0].errorMsg) {\n    //把错误信息放进listener里面\n    listener.errorMsg = parser._listeners[0].errorMsg;\n    parser._listeners[0].errorMsg = null;\n  }\n  return listener;\n};\n\nexports.compile = compile;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/freelog_policy_compiler/index.js\n// module id = QtOE\n// module chunks = 0 1 2","module.exports = { \"default\": require(\"core-js/library/fn/number/is-integer\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/number/is-integer.js\n// module id = RRo+\n// module chunks = 0 2","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\nvar Set = require('./Utils').Set;\nvar BitSet = require('./Utils').BitSet;\nvar Token = require('./Token').Token;\nvar ATNConfig = require('./atn/ATNConfig').ATNConfig;\nvar Interval = require('./IntervalSet').Interval;\nvar IntervalSet = require('./IntervalSet').IntervalSet;\nvar RuleStopState = require('./atn/ATNState').RuleStopState;\nvar RuleTransition = require('./atn/Transition').RuleTransition;\nvar NotSetTransition = require('./atn/Transition').NotSetTransition;\nvar WildcardTransition = require('./atn/Transition').WildcardTransition;\nvar AbstractPredicateTransition = require('./atn/Transition').AbstractPredicateTransition;\n\nvar pc = require('./PredictionContext');\nvar predictionContextFromRuleContext = pc.predictionContextFromRuleContext;\nvar PredictionContext = pc.PredictionContext;\nvar SingletonPredictionContext = pc.SingletonPredictionContext;\n\nfunction LL1Analyzer (atn) {\n    this.atn = atn;\n}\n\n//* Special value added to the lookahead sets to indicate that we hit\n//  a predicate during analysis if {@code seeThruPreds==false}.\n///\nLL1Analyzer.HIT_PRED = Token.INVALID_TYPE;\n\n\n//*\n// Calculates the SLL(1) expected lookahead set for each outgoing transition\n// of an {@link ATNState}. The returned array has one element for each\n// outgoing transition in {@code s}. If the closure from transition\n// <em>i</em> leads to a semantic predicate before matching a symbol, the\n// element at index <em>i</em> of the result will be {@code null}.\n//\n// @param s the ATN state\n// @return the expected symbols for each outgoing transition of {@code s}.\n///\nLL1Analyzer.prototype.getDecisionLookahead = function(s) {\n    if (s === null) {\n        return null;\n    }\n    var count = s.transitions.length;\n    var look = [];\n    for(var alt=0; alt< count; alt++) {\n        look[alt] = new IntervalSet();\n        var lookBusy = new Set();\n        var seeThruPreds = false; // fail to get lookahead upon pred\n        this._LOOK(s.transition(alt).target, null, PredictionContext.EMPTY,\n              look[alt], lookBusy, new BitSet(), seeThruPreds, false);\n        // Wipe out lookahead for this alternative if we found nothing\n        // or we had a predicate when we !seeThruPreds\n        if (look[alt].length===0 || look[alt].contains(LL1Analyzer.HIT_PRED)) {\n            look[alt] = null;\n        }\n    }\n    return look;\n};\n\n//*\n// Compute set of tokens that can follow {@code s} in the ATN in the\n// specified {@code ctx}.\n//\n// <p>If {@code ctx} is {@code null} and the end of the rule containing\n// {@code s} is reached, {@link Token//EPSILON} is added to the result set.\n// If {@code ctx} is not {@code null} and the end of the outermost rule is\n// reached, {@link Token//EOF} is added to the result set.</p>\n//\n// @param s the ATN state\n// @param stopState the ATN state to stop at. This can be a\n// {@link BlockEndState} to detect epsilon paths through a closure.\n// @param ctx the complete parser context, or {@code null} if the context\n// should be ignored\n//\n// @return The set of tokens that can follow {@code s} in the ATN in the\n// specified {@code ctx}.\n///\nLL1Analyzer.prototype.LOOK = function(s, stopState, ctx) {\n    var r = new IntervalSet();\n    var seeThruPreds = true; // ignore preds; get all lookahead\n\tctx = ctx || null;\n    var lookContext = ctx!==null ? predictionContextFromRuleContext(s.atn, ctx) : null;\n    this._LOOK(s, stopState, lookContext, r, new Set(), new BitSet(), seeThruPreds, true);\n    return r;\n};\n\n//*\n// Compute set of tokens that can follow {@code s} in the ATN in the\n// specified {@code ctx}.\n//\n// <p>If {@code ctx} is {@code null} and {@code stopState} or the end of the\n// rule containing {@code s} is reached, {@link Token//EPSILON} is added to\n// the result set. If {@code ctx} is not {@code null} and {@code addEOF} is\n// {@code true} and {@code stopState} or the end of the outermost rule is\n// reached, {@link Token//EOF} is added to the result set.</p>\n//\n// @param s the ATN state.\n// @param stopState the ATN state to stop at. This can be a\n// {@link BlockEndState} to detect epsilon paths through a closure.\n// @param ctx The outer context, or {@code null} if the outer context should\n// not be used.\n// @param look The result lookahead set.\n// @param lookBusy A set used for preventing epsilon closures in the ATN\n// from causing a stack overflow. Outside code should pass\n// {@code new Set<ATNConfig>} for this argument.\n// @param calledRuleStack A set used for preventing left recursion in the\n// ATN from causing a stack overflow. Outside code should pass\n// {@code new BitSet()} for this argument.\n// @param seeThruPreds {@code true} to true semantic predicates as\n// implicitly {@code true} and \"see through them\", otherwise {@code false}\n// to treat semantic predicates as opaque and add {@link //HIT_PRED} to the\n// result if one is encountered.\n// @param addEOF Add {@link Token//EOF} to the result if the end of the\n// outermost context is reached. This parameter has no effect if {@code ctx}\n// is {@code null}.\n///\nLL1Analyzer.prototype._LOOK = function(s, stopState , ctx, look, lookBusy, calledRuleStack, seeThruPreds, addEOF) {\n    var c = new ATNConfig({state:s, alt:0, context: ctx}, null);\n    if (lookBusy.contains(c)) {\n        return;\n    }\n    lookBusy.add(c);\n    if (s === stopState) {\n        if (ctx ===null) {\n            look.addOne(Token.EPSILON);\n            return;\n        } else if (ctx.isEmpty() && addEOF) {\n            look.addOne(Token.EOF);\n            return;\n        }\n    }\n    if (s instanceof RuleStopState ) {\n        if (ctx ===null) {\n            look.addOne(Token.EPSILON);\n            return;\n        } else if (ctx.isEmpty() && addEOF) {\n            look.addOne(Token.EOF);\n            return;\n        }\n        if (ctx !== PredictionContext.EMPTY) {\n            // run thru all possible stack tops in ctx\n            for(var i=0; i<ctx.length; i++) {\n                var returnState = this.atn.states[ctx.getReturnState(i)];\n                var removed = calledRuleStack.contains(returnState.ruleIndex);\n                try {\n                    calledRuleStack.remove(returnState.ruleIndex);\n                    this._LOOK(returnState, stopState, ctx.getParent(i), look, lookBusy, calledRuleStack, seeThruPreds, addEOF);\n                } finally {\n                    if (removed) {\n                        calledRuleStack.add(returnState.ruleIndex);\n                    }\n                }\n            }\n            return;\n        }\n    }\n    for(var j=0; j<s.transitions.length; j++) {\n        var t = s.transitions[j];\n        if (t.constructor === RuleTransition) {\n            if (calledRuleStack.contains(t.target.ruleIndex)) {\n                continue;\n            }\n            var newContext = SingletonPredictionContext.create(ctx, t.followState.stateNumber);\n            try {\n                calledRuleStack.add(t.target.ruleIndex);\n                this._LOOK(t.target, stopState, newContext, look, lookBusy, calledRuleStack, seeThruPreds, addEOF);\n            } finally {\n                calledRuleStack.remove(t.target.ruleIndex);\n            }\n        } else if (t instanceof AbstractPredicateTransition ) {\n            if (seeThruPreds) {\n                this._LOOK(t.target, stopState, ctx, look, lookBusy, calledRuleStack, seeThruPreds, addEOF);\n            } else {\n                look.addOne(LL1Analyzer.HIT_PRED);\n            }\n        } else if( t.isEpsilon) {\n            this._LOOK(t.target, stopState, ctx, look, lookBusy, calledRuleStack, seeThruPreds, addEOF);\n        } else if (t.constructor === WildcardTransition) {\n            look.addRange( Token.MIN_USER_TOKEN_TYPE, this.atn.maxTokenType );\n        } else {\n            var set = t.label;\n            if (set !== null) {\n                if (t instanceof NotSetTransition) {\n                    set = set.complement(Token.MIN_USER_TOKEN_TYPE, this.atn.maxTokenType);\n                }\n                look.addSet(set);\n            }\n        }\n    }\n};\n\nexports.LL1Analyzer = LL1Analyzer;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/LL1Analyzer.js\n// module id = RuwF\n// module chunks = 0 1 2","// Generated from policy.g4 by ANTLR 4.7\r\n// jshint ignore: start\r\nvar antlr4 = require('antlr4/index');\r\n\r\n// This class defines a complete listener for a parse tree produced by policyParser.\r\nfunction policyListener() {\r\n\tantlr4.tree.ParseTreeListener.call(this);\r\n\treturn this;\r\n}\r\n\r\npolicyListener.prototype = Object.create(antlr4.tree.ParseTreeListener.prototype);\r\npolicyListener.prototype.constructor = policyListener;\r\n\r\n// Enter a parse tree produced by policyParser#p.\r\npolicyListener.prototype.enterP = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#p.\r\npolicyListener.prototype.exitP = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#segment.\r\npolicyListener.prototype.enterSegment = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#segment.\r\npolicyListener.prototype.exitSegment = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#audience_clause.\r\npolicyListener.prototype.enterAudience_clause = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#audience_clause.\r\npolicyListener.prototype.exitAudience_clause = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#athorize_token_clause.\r\npolicyListener.prototype.enterAthorize_token_clause = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#athorize_token_clause.\r\npolicyListener.prototype.exitAthorize_token_clause = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#audience_individuals_clause.\r\npolicyListener.prototype.enterAudience_individuals_clause = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#audience_individuals_clause.\r\npolicyListener.prototype.exitAudience_individuals_clause = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#audience_groups_clause.\r\npolicyListener.prototype.enterAudience_groups_clause = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#audience_groups_clause.\r\npolicyListener.prototype.exitAudience_groups_clause = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#state_clause.\r\npolicyListener.prototype.enterState_clause = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#state_clause.\r\npolicyListener.prototype.exitState_clause = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#current_state_clause.\r\npolicyListener.prototype.enterCurrent_state_clause = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#current_state_clause.\r\npolicyListener.prototype.exitCurrent_state_clause = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#target_clause.\r\npolicyListener.prototype.enterTarget_clause = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#target_clause.\r\npolicyListener.prototype.exitTarget_clause = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#accepting.\r\npolicyListener.prototype.enterAccepting = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#accepting.\r\npolicyListener.prototype.exitAccepting = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#event.\r\npolicyListener.prototype.enterEvent = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#event.\r\npolicyListener.prototype.exitEvent = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#and_event.\r\npolicyListener.prototype.enterAnd_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#and_event.\r\npolicyListener.prototype.exitAnd_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#period_event.\r\npolicyListener.prototype.enterPeriod_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#period_event.\r\npolicyListener.prototype.exitPeriod_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#specific_date_event.\r\npolicyListener.prototype.enterSpecific_date_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#specific_date_event.\r\npolicyListener.prototype.exitSpecific_date_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#relative_date_event.\r\npolicyListener.prototype.enterRelative_date_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#relative_date_event.\r\npolicyListener.prototype.exitRelative_date_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#pricing_agreement_event.\r\npolicyListener.prototype.enterPricing_agreement_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#pricing_agreement_event.\r\npolicyListener.prototype.exitPricing_agreement_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#transaction_event.\r\npolicyListener.prototype.enterTransaction_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#transaction_event.\r\npolicyListener.prototype.exitTransaction_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#guaranty_event.\r\npolicyListener.prototype.enterGuaranty_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#guaranty_event.\r\npolicyListener.prototype.exitGuaranty_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#contract_guaranty.\r\npolicyListener.prototype.enterContract_guaranty = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#contract_guaranty.\r\npolicyListener.prototype.exitContract_guaranty = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#platform_guaranty.\r\npolicyListener.prototype.enterPlatform_guaranty = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#platform_guaranty.\r\npolicyListener.prototype.exitPlatform_guaranty = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#signing_event.\r\npolicyListener.prototype.enterSigning_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#signing_event.\r\npolicyListener.prototype.exitSigning_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#access_count_event.\r\npolicyListener.prototype.enterAccess_count_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#access_count_event.\r\npolicyListener.prototype.exitAccess_count_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#visit_increment_event.\r\npolicyListener.prototype.enterVisit_increment_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#visit_increment_event.\r\npolicyListener.prototype.exitVisit_increment_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#visit_event.\r\npolicyListener.prototype.enterVisit_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#visit_event.\r\npolicyListener.prototype.exitVisit_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#balance_event.\r\npolicyListener.prototype.enterBalance_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#balance_event.\r\npolicyListener.prototype.exitBalance_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#balance_greater.\r\npolicyListener.prototype.enterBalance_greater = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#balance_greater.\r\npolicyListener.prototype.exitBalance_greater = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#balance_smaller.\r\npolicyListener.prototype.enterBalance_smaller = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#balance_smaller.\r\npolicyListener.prototype.exitBalance_smaller = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#settlement_event.\r\npolicyListener.prototype.enterSettlement_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#settlement_event.\r\npolicyListener.prototype.exitSettlement_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#license_resource_id.\r\npolicyListener.prototype.enterLicense_resource_id = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#license_resource_id.\r\npolicyListener.prototype.exitLicense_resource_id = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#account_id.\r\npolicyListener.prototype.enterAccount_id = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#account_id.\r\npolicyListener.prototype.exitAccount_id = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#users.\r\npolicyListener.prototype.enterUsers = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#users.\r\npolicyListener.prototype.exitUsers = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#user_groups.\r\npolicyListener.prototype.enterUser_groups = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#user_groups.\r\npolicyListener.prototype.exitUser_groups = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#and.\r\npolicyListener.prototype.enterAnd = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#and.\r\npolicyListener.prototype.exitAnd = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#view_unit.\r\npolicyListener.prototype.enterView_unit = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#view_unit.\r\npolicyListener.prototype.exitView_unit = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#time_unit.\r\npolicyListener.prototype.enterTime_unit = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#time_unit.\r\npolicyListener.prototype.exitTime_unit = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#start_hour.\r\npolicyListener.prototype.enterStart_hour = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#start_hour.\r\npolicyListener.prototype.exitStart_hour = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#end_hour.\r\npolicyListener.prototype.enterEnd_hour = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#end_hour.\r\npolicyListener.prototype.exitEnd_hour = function(ctx) {\r\n};\r\n\r\n\r\n\r\nexports.policyListener = policyListener;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/policy_lang/gen/policyListener.js\n// module id = Smw7\n// module chunks = 0 1 2","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n/*jslint smarttabs:true */\n\nvar Token = require('./Token').Token;\n\n/* stop is not included! */\nfunction Interval(start, stop) {\n\tthis.start = start;\n\tthis.stop = stop;\n\treturn this;\n}\n\nInterval.prototype.contains = function(item) {\n\treturn item >= this.start && item < this.stop;\n};\n\nInterval.prototype.toString = function() {\n\tif(this.start===this.stop-1) {\n\t\treturn this.start.toString();\n\t} else {\n\t\treturn this.start.toString() + \"..\" + (this.stop-1).toString();\n\t}\n};\n\n\nObject.defineProperty(Interval.prototype, \"length\", {\n\tget : function() {\n\t\treturn this.stop - this.start;\n\t}\n});\n\nfunction IntervalSet() {\n\tthis.intervals = null;\n\tthis.readOnly = false;\n}\n\nIntervalSet.prototype.first = function(v) {\n\tif (this.intervals === null || this.intervals.length===0) {\n\t\treturn Token.INVALID_TYPE;\n\t} else {\n\t\treturn this.intervals[0].start;\n\t}\n};\n\nIntervalSet.prototype.addOne = function(v) {\n\tthis.addInterval(new Interval(v, v + 1));\n};\n\nIntervalSet.prototype.addRange = function(l, h) {\n\tthis.addInterval(new Interval(l, h + 1));\n};\n\nIntervalSet.prototype.addInterval = function(v) {\n\tif (this.intervals === null) {\n\t\tthis.intervals = [];\n\t\tthis.intervals.push(v);\n\t} else {\n\t\t// find insert pos\n\t\tfor (var k = 0; k < this.intervals.length; k++) {\n\t\t\tvar i = this.intervals[k];\n\t\t\t// distinct range -> insert\n\t\t\tif (v.stop < i.start) {\n\t\t\t\tthis.intervals.splice(k, 0, v);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// contiguous range -> adjust\n\t\t\telse if (v.stop === i.start) {\n\t\t\t\tthis.intervals[k].start = v.start;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// overlapping range -> adjust and reduce\n\t\t\telse if (v.start <= i.stop) {\n\t\t\t\tthis.intervals[k] = new Interval(Math.min(i.start, v.start), Math.max(i.stop, v.stop));\n\t\t\t\tthis.reduce(k);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t// greater than any existing\n\t\tthis.intervals.push(v);\n\t}\n};\n\nIntervalSet.prototype.addSet = function(other) {\n\tif (other.intervals !== null) {\n\t\tfor (var k = 0; k < other.intervals.length; k++) {\n\t\t\tvar i = other.intervals[k];\n\t\t\tthis.addInterval(new Interval(i.start, i.stop));\n\t\t}\n\t}\n\treturn this;\n};\n\nIntervalSet.prototype.reduce = function(k) {\n\t// only need to reduce if k is not the last\n\tif (k < this.intervalslength - 1) {\n\t\tvar l = this.intervals[k];\n\t\tvar r = this.intervals[k + 1];\n\t\t// if r contained in l\n\t\tif (l.stop >= r.stop) {\n\t\t\tthis.intervals.pop(k + 1);\n\t\t\tthis.reduce(k);\n\t\t} else if (l.stop >= r.start) {\n\t\t\tthis.intervals[k] = new Interval(l.start, r.stop);\n\t\t\tthis.intervals.pop(k + 1);\n\t\t}\n\t}\n};\n\nIntervalSet.prototype.complement = function(start, stop) {\n    var result = new IntervalSet();\n    result.addInterval(new Interval(start,stop+1));\n    for(var i=0; i<this.intervals.length; i++) {\n        result.removeRange(this.intervals[i]);\n    }\n    return result;\n};\n\nIntervalSet.prototype.contains = function(item) {\n\tif (this.intervals === null) {\n\t\treturn false;\n\t} else {\n\t\tfor (var k = 0; k < this.intervals.length; k++) {\n\t\t\tif(this.intervals[k].contains(item)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n};\n\nObject.defineProperty(IntervalSet.prototype, \"length\", {\n\tget : function() {\n\t\tvar len = 0;\n\t\tthis.intervals.map(function(i) {len += i.length;});\n\t\treturn len;\n\t}\n});\n\nIntervalSet.prototype.removeRange = function(v) {\n    if(v.start===v.stop-1) {\n        this.removeOne(v.start);\n    } else if (this.intervals!==null) {\n        var k = 0;\n        for(var n=0; n<this.intervals.length; n++) {\n            var i = this.intervals[k];\n            // intervals are ordered\n            if (v.stop<=i.start) {\n                return;\n            }\n            // check for including range, split it\n            else if(v.start>i.start && v.stop<i.stop) {\n                this.intervals[k] = new Interval(i.start, v.start);\n                var x = new Interval(v.stop, i.stop);\n                this.intervals.splice(k, 0, x);\n                return;\n            }\n            // check for included range, remove it\n            else if(v.start<=i.start && v.stop>=i.stop) {\n                this.intervals.splice(k, 1);\n                k = k - 1; // need another pass\n            }\n            // check for lower boundary\n            else if(v.start<i.stop) {\n                this.intervals[k] = new Interval(i.start, v.start);\n            }\n            // check for upper boundary\n            else if(v.stop<i.stop) {\n                this.intervals[k] = new Interval(v.stop, i.stop);\n            }\n            k += 1;\n        }\n    }\n};\n\nIntervalSet.prototype.removeOne = function(v) {\n\tif (this.intervals !== null) {\n\t\tfor (var k = 0; k < this.intervals.length; k++) {\n\t\t\tvar i = this.intervals[k];\n\t\t\t// intervals is ordered\n\t\t\tif (v < i.start) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// check for single value range\n\t\t\telse if (v === i.start && v === i.stop - 1) {\n\t\t\t\tthis.intervals.splice(k, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// check for lower boundary\n\t\t\telse if (v === i.start) {\n\t\t\t\tthis.intervals[k] = new Interval(i.start + 1, i.stop);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// check for upper boundary\n\t\t\telse if (v === i.stop - 1) {\n\t\t\t\tthis.intervals[k] = new Interval(i.start, i.stop - 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// split existing range\n\t\t\telse if (v < i.stop - 1) {\n\t\t\t\tvar x = new Interval(i.start, v);\n\t\t\t\ti.start = v + 1;\n\t\t\t\tthis.intervals.splice(k, 0, x);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n};\n\nIntervalSet.prototype.toString = function(literalNames, symbolicNames, elemsAreChar) {\n\tliteralNames = literalNames || null;\n\tsymbolicNames = symbolicNames || null;\n\telemsAreChar = elemsAreChar || false;\n\tif (this.intervals === null) {\n\t\treturn \"{}\";\n\t} else if(literalNames!==null || symbolicNames!==null) {\n\t\treturn this.toTokenString(literalNames, symbolicNames);\n\t} else if(elemsAreChar) {\n\t\treturn this.toCharString();\n\t} else {\n\t\treturn this.toIndexString();\n\t}\n};\n\nIntervalSet.prototype.toCharString = function() {\n\tvar names = [];\n\tfor (var i = 0; i < this.intervals.length; i++) {\n\t\tvar v = this.intervals[i];\n\t\tif(v.stop===v.start+1) {\n\t\t\tif ( v.start===Token.EOF ) {\n\t\t\t\tnames.push(\"<EOF>\");\n\t\t\t} else {\n\t\t\t\tnames.push(\"'\" + String.fromCharCode(v.start) + \"'\");\n\t\t\t}\n\t\t} else {\n\t\t\tnames.push(\"'\" + String.fromCharCode(v.start) + \"'..'\" + String.fromCharCode(v.stop-1) + \"'\");\n\t\t}\n\t}\n\tif (names.length > 1) {\n\t\treturn \"{\" + names.join(\", \") + \"}\";\n\t} else {\n\t\treturn names[0];\n\t}\n};\n\n\nIntervalSet.prototype.toIndexString = function() {\n\tvar names = [];\n\tfor (var i = 0; i < this.intervals.length; i++) {\n\t\tvar v = this.intervals[i];\n\t\tif(v.stop===v.start+1) {\n\t\t\tif ( v.start===Token.EOF ) {\n\t\t\t\tnames.push(\"<EOF>\");\n\t\t\t} else {\n\t\t\t\tnames.push(v.start.toString());\n\t\t\t}\n\t\t} else {\n\t\t\tnames.push(v.start.toString() + \"..\" + (v.stop-1).toString());\n\t\t}\n\t}\n\tif (names.length > 1) {\n\t\treturn \"{\" + names.join(\", \") + \"}\";\n\t} else {\n\t\treturn names[0];\n\t}\n};\n\n\nIntervalSet.prototype.toTokenString = function(literalNames, symbolicNames) {\n\tvar names = [];\n\tfor (var i = 0; i < this.intervals.length; i++) {\n\t\tvar v = this.intervals[i];\n\t\tfor (var j = v.start; j < v.stop; j++) {\n\t\t\tnames.push(this.elementName(literalNames, symbolicNames, j));\n\t\t}\n\t}\n\tif (names.length > 1) {\n\t\treturn \"{\" + names.join(\", \") + \"}\";\n\t} else {\n\t\treturn names[0];\n\t}\n};\n\nIntervalSet.prototype.elementName = function(literalNames, symbolicNames, a) {\n\tif (a === Token.EOF) {\n\t\treturn \"<EOF>\";\n\t} else if (a === Token.EPSILON) {\n\t\treturn \"<EPSILON>\";\n\t} else {\n\t\treturn literalNames[a] || symbolicNames[a];\n\t}\n};\n\nexports.Interval = Interval;\nexports.IntervalSet = IntervalSet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/IntervalSet.js\n// module id = T+Yw\n// module chunks = 0 1 2","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\n//\n// This default implementation of {@link TokenFactory} creates\n// {@link CommonToken} objects.\n//\n\nvar CommonToken = require('./Token').CommonToken;\n\nfunction TokenFactory() {\n\treturn this;\n}\n\nfunction CommonTokenFactory(copyText) {\n\tTokenFactory.call(this);\n    // Indicates whether {@link CommonToken//setText} should be called after\n    // constructing tokens to explicitly set the text. This is useful for cases\n    // where the input stream might not be able to provide arbitrary substrings\n    // of text from the input after the lexer creates a token (e.g. the\n    // implementation of {@link CharStream//getText} in\n    // {@link UnbufferedCharStream} throws an\n    // {@link UnsupportedOperationException}). Explicitly setting the token text\n    // allows {@link Token//getText} to be called at any time regardless of the\n    // input stream implementation.\n    //\n    // <p>\n    // The default value is {@code false} to avoid the performance and memory\n    // overhead of copying text for every token unless explicitly requested.</p>\n    //\n    this.copyText = copyText===undefined ? false : copyText;\n\treturn this;\n}\n\nCommonTokenFactory.prototype = Object.create(TokenFactory.prototype);\nCommonTokenFactory.prototype.constructor = CommonTokenFactory;\n\n//\n// The default {@link CommonTokenFactory} instance.\n//\n// <p>\n// This token factory does not explicitly copy token text when constructing\n// tokens.</p>\n//\nCommonTokenFactory.DEFAULT = new CommonTokenFactory();\n\nCommonTokenFactory.prototype.create = function(source, type, text, channel, start, stop, line, column) {\n    var t = new CommonToken(source, type, channel, start, stop);\n    t.line = line;\n    t.column = column;\n    if (text !==null) {\n        t.text = text;\n    } else if (this.copyText && source[1] !==null) {\n        t.text = source[1].getText(start,stop);\n    }\n    return t;\n};\n\nCommonTokenFactory.prototype.createThin = function(type, text) {\n    var t = new CommonToken(null, type);\n    t.text = text;\n    return t;\n};\n\nexports.CommonTokenFactory = CommonTokenFactory;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/CommonTokenFactory.js\n// module id = TEvv\n// module chunks = 0 1 2","require('../../modules/es7.object.values');\nmodule.exports = require('../../modules/_core').Object.values;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/object/values.js\n// module id = TmV0\n// module chunks = 0 2","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nvar Set = require(\"../Utils\").Set;\nvar DFAState = require('./DFAState').DFAState;\nvar StarLoopEntryState = require('../atn/ATNState').StarLoopEntryState;\nvar ATNConfigSet = require('./../atn/ATNConfigSet').ATNConfigSet;\nvar DFASerializer = require('./DFASerializer').DFASerializer;\nvar LexerDFASerializer = require('./DFASerializer').LexerDFASerializer;\n\n\n\nfunction DFA(atnStartState, decision) {\n\tif (decision === undefined) {\n\t\tdecision = 0;\n\t}\n\t// From which ATN state did we create this DFA?\n\tthis.atnStartState = atnStartState;\n\tthis.decision = decision;\n\t// A set of all DFA states. Use {@link Map} so we can get old state back\n\t// ({@link Set} only allows you to see if it's there).\n\tthis._states = new Set();\n\tthis.s0 = null;\n\t// {@code true} if this DFA is for a precedence decision; otherwise,\n\t// {@code false}. This is the backing field for {@link //isPrecedenceDfa},\n\t// {@link //setPrecedenceDfa}.\n\tthis.precedenceDfa = false;\n    if (atnStartState instanceof StarLoopEntryState)\n    {\n        if (atnStartState.isPrecedenceDecision) {\n            this.precedenceDfa = true;\n            var precedenceState = new DFAState(null, new ATNConfigSet());\n            precedenceState.edges = [];\n            precedenceState.isAcceptState = false;\n            precedenceState.requiresFullContext = false;\n            this.s0 = precedenceState;\n        }\n    }\n\treturn this;\n}\n\n// Get the start state for a specific precedence value.\n//\n// @param precedence The current precedence.\n// @return The start state corresponding to the specified precedence, or\n// {@code null} if no start state exists for the specified precedence.\n//\n// @throws IllegalStateException if this is not a precedence DFA.\n// @see //isPrecedenceDfa()\n\nDFA.prototype.getPrecedenceStartState = function(precedence) {\n\tif (!(this.precedenceDfa)) {\n\t\tthrow (\"Only precedence DFAs may contain a precedence start state.\");\n\t}\n\t// s0.edges is never null for a precedence DFA\n\tif (precedence < 0 || precedence >= this.s0.edges.length) {\n\t\treturn null;\n\t}\n\treturn this.s0.edges[precedence] || null;\n};\n\n// Set the start state for a specific precedence value.\n//\n// @param precedence The current precedence.\n// @param startState The start state corresponding to the specified\n// precedence.\n//\n// @throws IllegalStateException if this is not a precedence DFA.\n// @see //isPrecedenceDfa()\n//\nDFA.prototype.setPrecedenceStartState = function(precedence, startState) {\n\tif (!(this.precedenceDfa)) {\n\t\tthrow (\"Only precedence DFAs may contain a precedence start state.\");\n\t}\n\tif (precedence < 0) {\n\t\treturn;\n\t}\n\n\t// synchronization on s0 here is ok. when the DFA is turned into a\n\t// precedence DFA, s0 will be initialized once and not updated again\n\t// s0.edges is never null for a precedence DFA\n\tthis.s0.edges[precedence] = startState;\n};\n\n//\n// Sets whether this is a precedence DFA. If the specified value differs\n// from the current DFA configuration, the following actions are taken;\n// otherwise no changes are made to the current DFA.\n//\n// <ul>\n// <li>The {@link //states} map is cleared</li>\n// <li>If {@code precedenceDfa} is {@code false}, the initial state\n// {@link //s0} is set to {@code null}; otherwise, it is initialized to a new\n// {@link DFAState} with an empty outgoing {@link DFAState//edges} array to\n// store the start states for individual precedence values.</li>\n// <li>The {@link //precedenceDfa} field is updated</li>\n// </ul>\n//\n// @param precedenceDfa {@code true} if this is a precedence DFA; otherwise,\n// {@code false}\n\nDFA.prototype.setPrecedenceDfa = function(precedenceDfa) {\n\tif (this.precedenceDfa!==precedenceDfa) {\n\t\tthis._states = new DFAStatesSet();\n\t\tif (precedenceDfa) {\n\t\t\tvar precedenceState = new DFAState(null, new ATNConfigSet());\n\t\t\tprecedenceState.edges = [];\n\t\t\tprecedenceState.isAcceptState = false;\n\t\t\tprecedenceState.requiresFullContext = false;\n\t\t\tthis.s0 = precedenceState;\n\t\t} else {\n\t\t\tthis.s0 = null;\n\t\t}\n\t\tthis.precedenceDfa = precedenceDfa;\n\t}\n};\n\nObject.defineProperty(DFA.prototype, \"states\", {\n\tget : function() {\n\t\treturn this._states;\n\t}\n});\n\n// Return a list of all states in this DFA, ordered by state number.\nDFA.prototype.sortedStates = function() {\n\tvar list = this._states.values();\n\treturn list.sort(function(a, b) {\n\t\treturn a.stateNumber - b.stateNumber;\n\t});\n};\n\nDFA.prototype.toString = function(literalNames, symbolicNames) {\n\tliteralNames = literalNames || null;\n\tsymbolicNames = symbolicNames || null;\n\tif (this.s0 === null) {\n\t\treturn \"\";\n\t}\n\tvar serializer = new DFASerializer(this, literalNames, symbolicNames);\n\treturn serializer.toString();\n};\n\nDFA.prototype.toLexerString = function() {\n\tif (this.s0 === null) {\n\t\treturn \"\";\n\t}\n\tvar serializer = new LexerDFASerializer(this);\n\treturn serializer.toString();\n};\n\nexports.DFA = DFA;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/dfa/DFA.js\n// module id = VIKC\n// module chunks = 0 1 2","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\n//  An ATN transition between any two ATN states.  Subclasses define\n//  atom, set, epsilon, action, predicate, rule transitions.\n//\n//  <p>This is a one way link.  It emanates from a state (usually via a list of\n//  transitions) and has a target state.</p>\n//\n//  <p>Since we never have to change the ATN transitions once we construct it,\n//  we can fix these transitions as specific classes. The DFA transitions\n//  on the other hand need to update the labels as it adds transitions to\n//  the states. We'll use the term Edge for the DFA to distinguish them from\n//  ATN transitions.</p>\n\nvar Token = require('./../Token').Token;\nvar Interval = require('./../IntervalSet').Interval;\nvar IntervalSet = require('./../IntervalSet').IntervalSet;\nvar Predicate = require('./SemanticContext').Predicate;\nvar PrecedencePredicate = require('./SemanticContext').PrecedencePredicate;\n\nfunction Transition (target) {\n    // The target of this transition.\n    if (target===undefined || target===null) {\n        throw \"target cannot be null.\";\n    }\n    this.target = target;\n    // Are we epsilon, action, sempred?\n    this.isEpsilon = false;\n    this.label = null;\n    return this;\n}\n    // constants for serialization\nTransition.EPSILON = 1;\nTransition.RANGE = 2;\nTransition.RULE = 3;\nTransition.PREDICATE = 4; // e.g., {isType(input.LT(1))}?\nTransition.ATOM = 5;\nTransition.ACTION = 6;\nTransition.SET = 7; // ~(A|B) or ~atom, wildcard, which convert to next 2\nTransition.NOT_SET = 8;\nTransition.WILDCARD = 9;\nTransition.PRECEDENCE = 10;\n\nTransition.serializationNames = [\n            \"INVALID\",\n            \"EPSILON\",\n            \"RANGE\",\n            \"RULE\",\n            \"PREDICATE\",\n            \"ATOM\",\n            \"ACTION\",\n            \"SET\",\n            \"NOT_SET\",\n            \"WILDCARD\",\n            \"PRECEDENCE\"\n        ];\n\nTransition.serializationTypes = {\n        EpsilonTransition: Transition.EPSILON,\n        RangeTransition: Transition.RANGE,\n        RuleTransition: Transition.RULE,\n        PredicateTransition: Transition.PREDICATE,\n        AtomTransition: Transition.ATOM,\n        ActionTransition: Transition.ACTION,\n        SetTransition: Transition.SET,\n        NotSetTransition: Transition.NOT_SET,\n        WildcardTransition: Transition.WILDCARD,\n        PrecedencePredicateTransition: Transition.PRECEDENCE\n    };\n\n\n// TODO: make all transitions sets? no, should remove set edges\nfunction AtomTransition(target, label) {\n\tTransition.call(this, target);\n\tthis.label_ = label; // The token type or character value; or, signifies special label.\n    this.label = this.makeLabel();\n    this.serializationType = Transition.ATOM;\n    return this;\n}\n\nAtomTransition.prototype = Object.create(Transition.prototype);\nAtomTransition.prototype.constructor = AtomTransition;\n\nAtomTransition.prototype.makeLabel = function() {\n\tvar s = new IntervalSet();\n    s.addOne(this.label_);\n    return s;\n};\n\nAtomTransition.prototype.matches = function( symbol, minVocabSymbol,  maxVocabSymbol) {\n    return this.label_ === symbol;\n};\n\nAtomTransition.prototype.toString = function() {\n\treturn this.label_;\n};\n\nfunction RuleTransition(ruleStart, ruleIndex, precedence, followState) {\n\tTransition.call(this, ruleStart);\n    this.ruleIndex = ruleIndex; // ptr to the rule definition object for this rule ref\n    this.precedence = precedence;\n    this.followState = followState; // what node to begin computations following ref to rule\n    this.serializationType = Transition.RULE;\n    this.isEpsilon = true;\n    return this;\n}\n\nRuleTransition.prototype = Object.create(Transition.prototype);\nRuleTransition.prototype.constructor = RuleTransition;\n\nRuleTransition.prototype.matches = function(symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn false;\n};\n\n\nfunction EpsilonTransition(target, outermostPrecedenceReturn) {\n\tTransition.call(this, target);\n    this.serializationType = Transition.EPSILON;\n    this.isEpsilon = true;\n    this.outermostPrecedenceReturn = outermostPrecedenceReturn;\n    return this;\n}\n\nEpsilonTransition.prototype = Object.create(Transition.prototype);\nEpsilonTransition.prototype.constructor = EpsilonTransition;\n\nEpsilonTransition.prototype.matches = function( symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn false;\n};\n\nEpsilonTransition.prototype.toString = function() {\n\treturn \"epsilon\";\n};\n\nfunction RangeTransition(target, start, stop) {\n\tTransition.call(this, target);\n\tthis.serializationType = Transition.RANGE;\n    this.start = start;\n    this.stop = stop;\n    this.label = this.makeLabel();\n    return this;\n}\n\nRangeTransition.prototype = Object.create(Transition.prototype);\nRangeTransition.prototype.constructor = RangeTransition;\n\nRangeTransition.prototype.makeLabel = function() {\n    var s = new IntervalSet();\n    s.addRange(this.start, this.stop);\n    return s;\n};\n\nRangeTransition.prototype.matches = function(symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn symbol >= this.start && symbol <= this.stop;\n};\n\nRangeTransition.prototype.toString = function() {\n\treturn \"'\" + String.fromCharCode(this.start) + \"'..'\" + String.fromCharCode(this.stop) + \"'\";\n};\n\nfunction AbstractPredicateTransition(target) {\n\tTransition.call(this, target);\n\treturn this;\n}\n\nAbstractPredicateTransition.prototype = Object.create(Transition.prototype);\nAbstractPredicateTransition.prototype.constructor = AbstractPredicateTransition;\n\nfunction PredicateTransition(target, ruleIndex, predIndex, isCtxDependent) {\n\tAbstractPredicateTransition.call(this, target);\n    this.serializationType = Transition.PREDICATE;\n    this.ruleIndex = ruleIndex;\n    this.predIndex = predIndex;\n    this.isCtxDependent = isCtxDependent; // e.g., $i ref in pred\n    this.isEpsilon = true;\n    return this;\n}\n\nPredicateTransition.prototype = Object.create(AbstractPredicateTransition.prototype);\nPredicateTransition.prototype.constructor = PredicateTransition;\n\nPredicateTransition.prototype.matches = function(symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn false;\n};\n\nPredicateTransition.prototype.getPredicate = function() {\n\treturn new Predicate(this.ruleIndex, this.predIndex, this.isCtxDependent);\n};\n\nPredicateTransition.prototype.toString = function() {\n\treturn \"pred_\" + this.ruleIndex + \":\" + this.predIndex;\n};\n\nfunction ActionTransition(target, ruleIndex, actionIndex, isCtxDependent) {\n\tTransition.call(this, target);\n    this.serializationType = Transition.ACTION;\n    this.ruleIndex = ruleIndex;\n    this.actionIndex = actionIndex===undefined ? -1 : actionIndex;\n    this.isCtxDependent = isCtxDependent===undefined ? false : isCtxDependent; // e.g., $i ref in pred\n    this.isEpsilon = true;\n    return this;\n}\n\nActionTransition.prototype = Object.create(Transition.prototype);\nActionTransition.prototype.constructor = ActionTransition;\n\n\nActionTransition.prototype.matches = function(symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn false;\n};\n\nActionTransition.prototype.toString = function() {\n\treturn \"action_\" + this.ruleIndex + \":\" + this.actionIndex;\n};\n\n\n// A transition containing a set of values.\nfunction SetTransition(target, set) {\n\tTransition.call(this, target);\n\tthis.serializationType = Transition.SET;\n    if (set !==undefined && set !==null) {\n        this.label = set;\n    } else {\n        this.label = new IntervalSet();\n        this.label.addOne(Token.INVALID_TYPE);\n    }\n    return this;\n}\n\nSetTransition.prototype = Object.create(Transition.prototype);\nSetTransition.prototype.constructor = SetTransition;\n\nSetTransition.prototype.matches = function(symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn this.label.contains(symbol);\n};\n\n\nSetTransition.prototype.toString = function() {\n\treturn this.label.toString();\n};\n\nfunction NotSetTransition(target, set) {\n\tSetTransition.call(this, target, set);\n\tthis.serializationType = Transition.NOT_SET;\n\treturn this;\n}\n\nNotSetTransition.prototype = Object.create(SetTransition.prototype);\nNotSetTransition.prototype.constructor = NotSetTransition;\n\nNotSetTransition.prototype.matches = function(symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn symbol >= minVocabSymbol && symbol <= maxVocabSymbol &&\n\t\t\t!SetTransition.prototype.matches.call(this, symbol, minVocabSymbol, maxVocabSymbol);\n};\n\nNotSetTransition.prototype.toString = function() {\n\treturn '~' + SetTransition.prototype.toString.call(this);\n};\n\nfunction WildcardTransition(target) {\n\tTransition.call(this, target);\n\tthis.serializationType = Transition.WILDCARD;\n\treturn this;\n}\n\nWildcardTransition.prototype = Object.create(Transition.prototype);\nWildcardTransition.prototype.constructor = WildcardTransition;\n\n\nWildcardTransition.prototype.matches = function(symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn symbol >= minVocabSymbol && symbol <= maxVocabSymbol;\n};\n\nWildcardTransition.prototype.toString = function() {\n\treturn \".\";\n};\n\nfunction PrecedencePredicateTransition(target, precedence) {\n\tAbstractPredicateTransition.call(this, target);\n    this.serializationType = Transition.PRECEDENCE;\n    this.precedence = precedence;\n    this.isEpsilon = true;\n    return this;\n}\n\nPrecedencePredicateTransition.prototype = Object.create(AbstractPredicateTransition.prototype);\nPrecedencePredicateTransition.prototype.constructor = PrecedencePredicateTransition;\n\nPrecedencePredicateTransition.prototype.matches = function(symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn false;\n};\n\nPrecedencePredicateTransition.prototype.getPredicate = function() {\n\treturn new PrecedencePredicate(this.precedence);\n};\n\nPrecedencePredicateTransition.prototype.toString = function() {\n\treturn this.precedence + \" >= _p\";\n};\n\nexports.Transition = Transition;\nexports.AtomTransition = AtomTransition;\nexports.SetTransition = SetTransition;\nexports.NotSetTransition = NotSetTransition;\nexports.RuleTransition = RuleTransition;\nexports.ActionTransition = ActionTransition;\nexports.EpsilonTransition = EpsilonTransition;\nexports.RangeTransition = RangeTransition;\nexports.WildcardTransition = WildcardTransition;\nexports.PredicateTransition = PredicateTransition;\nexports.PrecedencePredicateTransition = PrecedencePredicateTransition;\nexports.AbstractPredicateTransition = AbstractPredicateTransition;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/atn/Transition.js\n// module id = VS1O\n// module chunks = 0 1 2","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nvar Token = require('./Token').Token;\nvar ParseTreeListener = require('./tree/Tree').ParseTreeListener;\nvar Recognizer = require('./Recognizer').Recognizer;\nvar DefaultErrorStrategy = require('./error/ErrorStrategy').DefaultErrorStrategy;\nvar ATNDeserializer = require('./atn/ATNDeserializer').ATNDeserializer;\nvar ATNDeserializationOptions = require('./atn/ATNDeserializationOptions').ATNDeserializationOptions;\nvar TerminalNode = require('./tree/Tree').TerminalNode;\nvar ErrorNode = require('./tree/Tree').ErrorNode;\n\nfunction TraceListener(parser) {\n\tParseTreeListener.call(this);\n    this.parser = parser;\n\treturn this;\n}\n\nTraceListener.prototype = Object.create(ParseTreeListener.prototype);\nTraceListener.prototype.constructor = TraceListener;\n\nTraceListener.prototype.enterEveryRule = function(ctx) {\n\tconsole.log(\"enter   \" + this.parser.ruleNames[ctx.ruleIndex] + \", LT(1)=\" + this.parser._input.LT(1).text);\n};\n\nTraceListener.prototype.visitTerminal = function( node) {\n\tconsole.log(\"consume \" + node.symbol + \" rule \" + this.parser.ruleNames[this.parser._ctx.ruleIndex]);\n};\n\nTraceListener.prototype.exitEveryRule = function(ctx) {\n\tconsole.log(\"exit    \" + this.parser.ruleNames[ctx.ruleIndex] + \", LT(1)=\" + this.parser._input.LT(1).text);\n};\n\n// this is all the parsing support code essentially; most of it is error\n// recovery stuff.//\nfunction Parser(input) {\n\tRecognizer.call(this);\n\t// The input stream.\n\tthis._input = null;\n\t// The error handling strategy for the parser. The default value is a new\n\t// instance of {@link DefaultErrorStrategy}.\n\tthis._errHandler = new DefaultErrorStrategy();\n\tthis._precedenceStack = [];\n\tthis._precedenceStack.push(0);\n\t// The {@link ParserRuleContext} object for the currently executing rule.\n\t// this is always non-null during the parsing process.\n\tthis._ctx = null;\n\t// Specifies whether or not the parser should construct a parse tree during\n\t// the parsing process. The default value is {@code true}.\n\tthis.buildParseTrees = true;\n\t// When {@link //setTrace}{@code (true)} is called, a reference to the\n\t// {@link TraceListener} is stored here so it can be easily removed in a\n\t// later call to {@link //setTrace}{@code (false)}. The listener itself is\n\t// implemented as a parser listener so this field is not directly used by\n\t// other parser methods.\n\tthis._tracer = null;\n\t// The list of {@link ParseTreeListener} listeners registered to receive\n\t// events during the parse.\n\tthis._parseListeners = null;\n\t// The number of syntax errors reported during parsing. this value is\n\t// incremented each time {@link //notifyErrorListeners} is called.\n\tthis._syntaxErrors = 0;\n\tthis.setInputStream(input);\n\treturn this;\n}\n\nParser.prototype = Object.create(Recognizer.prototype);\nParser.prototype.contructor = Parser;\n\n// this field maps from the serialized ATN string to the deserialized {@link\n// ATN} with\n// bypass alternatives.\n//\n// @see ATNDeserializationOptions//isGenerateRuleBypassTransitions()\n//\nParser.bypassAltsAtnCache = {};\n\n// reset the parser's state//\nParser.prototype.reset = function() {\n\tif (this._input !== null) {\n\t\tthis._input.seek(0);\n\t}\n\tthis._errHandler.reset(this);\n\tthis._ctx = null;\n\tthis._syntaxErrors = 0;\n\tthis.setTrace(false);\n\tthis._precedenceStack = [];\n\tthis._precedenceStack.push(0);\n\tif (this._interp !== null) {\n\t\tthis._interp.reset();\n\t}\n};\n\n// Match current input symbol against {@code ttype}. If the symbol type\n// matches, {@link ANTLRErrorStrategy//reportMatch} and {@link //consume} are\n// called to complete the match process.\n//\n// <p>If the symbol type does not match,\n// {@link ANTLRErrorStrategy//recoverInline} is called on the current error\n// strategy to attempt recovery. If {@link //getBuildParseTree} is\n// {@code true} and the token index of the symbol returned by\n// {@link ANTLRErrorStrategy//recoverInline} is -1, the symbol is added to\n// the parse tree by calling {@link ParserRuleContext//addErrorNode}.</p>\n//\n// @param ttype the token type to match\n// @return the matched symbol\n// @throws RecognitionException if the current input symbol did not match\n// {@code ttype} and the error strategy could not recover from the\n// mismatched symbol\n\nParser.prototype.match = function(ttype) {\n\tvar t = this.getCurrentToken();\n\tif (t.type === ttype) {\n\t\tthis._errHandler.reportMatch(this);\n\t\tthis.consume();\n\t} else {\n\t\tt = this._errHandler.recoverInline(this);\n\t\tif (this.buildParseTrees && t.tokenIndex === -1) {\n\t\t\t// we must have conjured up a new token during single token\n\t\t\t// insertion\n\t\t\t// if it's not the current symbol\n\t\t\tthis._ctx.addErrorNode(t);\n\t\t}\n\t}\n\treturn t;\n};\n// Match current input symbol as a wildcard. If the symbol type matches\n// (i.e. has a value greater than 0), {@link ANTLRErrorStrategy//reportMatch}\n// and {@link //consume} are called to complete the match process.\n//\n// <p>If the symbol type does not match,\n// {@link ANTLRErrorStrategy//recoverInline} is called on the current error\n// strategy to attempt recovery. If {@link //getBuildParseTree} is\n// {@code true} and the token index of the symbol returned by\n// {@link ANTLRErrorStrategy//recoverInline} is -1, the symbol is added to\n// the parse tree by calling {@link ParserRuleContext//addErrorNode}.</p>\n//\n// @return the matched symbol\n// @throws RecognitionException if the current input symbol did not match\n// a wildcard and the error strategy could not recover from the mismatched\n// symbol\n\nParser.prototype.matchWildcard = function() {\n\tvar t = this.getCurrentToken();\n\tif (t.type > 0) {\n\t\tthis._errHandler.reportMatch(this);\n\t\tthis.consume();\n\t} else {\n\t\tt = this._errHandler.recoverInline(this);\n\t\tif (this._buildParseTrees && t.tokenIndex === -1) {\n\t\t\t// we must have conjured up a new token during single token\n\t\t\t// insertion\n\t\t\t// if it's not the current symbol\n\t\t\tthis._ctx.addErrorNode(t);\n\t\t}\n\t}\n\treturn t;\n};\n\nParser.prototype.getParseListeners = function() {\n\treturn this._parseListeners || [];\n};\n\n// Registers {@code listener} to receive events during the parsing process.\n//\n// <p>To support output-preserving grammar transformations (including but not\n// limited to left-recursion removal, automated left-factoring, and\n// optimized code generation), calls to listener methods during the parse\n// may differ substantially from calls made by\n// {@link ParseTreeWalker//DEFAULT} used after the parse is complete. In\n// particular, rule entry and exit events may occur in a different order\n// during the parse than after the parser. In addition, calls to certain\n// rule entry methods may be omitted.</p>\n//\n// <p>With the following specific exceptions, calls to listener events are\n// <em>deterministic</em>, i.e. for identical input the calls to listener\n// methods will be the same.</p>\n//\n// <ul>\n// <li>Alterations to the grammar used to generate code may change the\n// behavior of the listener calls.</li>\n// <li>Alterations to the command line options passed to ANTLR 4 when\n// generating the parser may change the behavior of the listener calls.</li>\n// <li>Changing the version of the ANTLR Tool used to generate the parser\n// may change the behavior of the listener calls.</li>\n// </ul>\n//\n// @param listener the listener to add\n//\n// @throws NullPointerException if {@code} listener is {@code null}\n//\nParser.prototype.addParseListener = function(listener) {\n\tif (listener === null) {\n\t\tthrow \"listener\";\n\t}\n\tif (this._parseListeners === null) {\n\t\tthis._parseListeners = [];\n\t}\n\tthis._parseListeners.push(listener);\n};\n\n//\n// Remove {@code listener} from the list of parse listeners.\n//\n// <p>If {@code listener} is {@code null} or has not been added as a parse\n// listener, this method does nothing.</p>\n// @param listener the listener to remove\n//\nParser.prototype.removeParseListener = function(listener) {\n\tif (this._parseListeners !== null) {\n\t\tvar idx = this._parseListeners.indexOf(listener);\n\t\tif (idx >= 0) {\n\t\t\tthis._parseListeners.splice(idx, 1);\n\t\t}\n\t\tif (this._parseListeners.length === 0) {\n\t\t\tthis._parseListeners = null;\n\t\t}\n\t}\n};\n\n// Remove all parse listeners.\nParser.prototype.removeParseListeners = function() {\n\tthis._parseListeners = null;\n};\n\n// Notify any parse listeners of an enter rule event.\nParser.prototype.triggerEnterRuleEvent = function() {\n\tif (this._parseListeners !== null) {\n        var ctx = this._ctx;\n\t\tthis._parseListeners.map(function(listener) {\n\t\t\tlistener.enterEveryRule(ctx);\n\t\t\tctx.enterRule(listener);\n\t\t});\n\t}\n};\n\n//\n// Notify any parse listeners of an exit rule event.\n//\n// @see //addParseListener\n//\nParser.prototype.triggerExitRuleEvent = function() {\n\tif (this._parseListeners !== null) {\n\t\t// reverse order walk of listeners\n        var ctx = this._ctx;\n\t\tthis._parseListeners.slice(0).reverse().map(function(listener) {\n\t\t\tctx.exitRule(listener);\n\t\t\tlistener.exitEveryRule(ctx);\n\t\t});\n\t}\n};\n\nParser.prototype.getTokenFactory = function() {\n\treturn this._input.tokenSource._factory;\n};\n\n// Tell our token source and error strategy about a new way to create tokens.//\nParser.prototype.setTokenFactory = function(factory) {\n\tthis._input.tokenSource._factory = factory;\n};\n\n// The ATN with bypass alternatives is expensive to create so we create it\n// lazily.\n//\n// @throws UnsupportedOperationException if the current parser does not\n// implement the {@link //getSerializedATN()} method.\n//\nParser.prototype.getATNWithBypassAlts = function() {\n\tvar serializedAtn = this.getSerializedATN();\n\tif (serializedAtn === null) {\n\t\tthrow \"The current parser does not support an ATN with bypass alternatives.\";\n\t}\n\tvar result = this.bypassAltsAtnCache[serializedAtn];\n\tif (result === null) {\n\t\tvar deserializationOptions = new ATNDeserializationOptions();\n\t\tdeserializationOptions.generateRuleBypassTransitions = true;\n\t\tresult = new ATNDeserializer(deserializationOptions)\n\t\t\t\t.deserialize(serializedAtn);\n\t\tthis.bypassAltsAtnCache[serializedAtn] = result;\n\t}\n\treturn result;\n};\n\n// The preferred method of getting a tree pattern. For example, here's a\n// sample use:\n//\n// <pre>\n// ParseTree t = parser.expr();\n// ParseTreePattern p = parser.compileParseTreePattern(\"&lt;ID&gt;+0\",\n// MyParser.RULE_expr);\n// ParseTreeMatch m = p.match(t);\n// String id = m.get(\"ID\");\n// </pre>\n\nvar Lexer = require('./Lexer').Lexer;\n\nParser.prototype.compileParseTreePattern = function(pattern, patternRuleIndex, lexer) {\n\tlexer = lexer || null;\n\tif (lexer === null) {\n\t\tif (this.getTokenStream() !== null) {\n\t\t\tvar tokenSource = this.getTokenStream().tokenSource;\n\t\t\tif (tokenSource instanceof Lexer) {\n\t\t\t\tlexer = tokenSource;\n\t\t\t}\n\t\t}\n\t}\n\tif (lexer === null) {\n\t\tthrow \"Parser can't discover a lexer to use\";\n\t}\n\tvar m = new ParseTreePatternMatcher(lexer, this);\n\treturn m.compile(pattern, patternRuleIndex);\n};\n\nParser.prototype.getInputStream = function() {\n\treturn this.getTokenStream();\n};\n\nParser.prototype.setInputStream = function(input) {\n\tthis.setTokenStream(input);\n};\n\nParser.prototype.getTokenStream = function() {\n\treturn this._input;\n};\n\n// Set the token stream and reset the parser.//\nParser.prototype.setTokenStream = function(input) {\n\tthis._input = null;\n\tthis.reset();\n\tthis._input = input;\n};\n\n// Match needs to return the current input symbol, which gets put\n// into the label for the associated token ref; e.g., x=ID.\n//\nParser.prototype.getCurrentToken = function() {\n\treturn this._input.LT(1);\n};\n\nParser.prototype.notifyErrorListeners = function(msg, offendingToken, err) {\n\toffendingToken = offendingToken || null;\n\terr = err || null;\n\tif (offendingToken === null) {\n\t\toffendingToken = this.getCurrentToken();\n\t}\n\tthis._syntaxErrors += 1;\n\tvar line = offendingToken.line;\n\tvar column = offendingToken.column;\n\tvar listener = this.getErrorListenerDispatch();\n\tlistener.syntaxError(this, offendingToken, line, column, msg, err);\n};\n\n//\n// Consume and return the {@linkplain //getCurrentToken current symbol}.\n//\n// <p>E.g., given the following input with {@code A} being the current\n// lookahead symbol, this function moves the cursor to {@code B} and returns\n// {@code A}.</p>\n//\n// <pre>\n// A B\n// ^\n// </pre>\n//\n// If the parser is not in error recovery mode, the consumed symbol is added\n// to the parse tree using {@link ParserRuleContext//addChild(Token)}, and\n// {@link ParseTreeListener//visitTerminal} is called on any parse listeners.\n// If the parser <em>is</em> in error recovery mode, the consumed symbol is\n// added to the parse tree using\n// {@link ParserRuleContext//addErrorNode(Token)}, and\n// {@link ParseTreeListener//visitErrorNode} is called on any parse\n// listeners.\n//\nParser.prototype.consume = function() {\n\tvar o = this.getCurrentToken();\n\tif (o.type !== Token.EOF) {\n\t\tthis.getInputStream().consume();\n\t}\n\tvar hasListener = this._parseListeners !== null && this._parseListeners.length > 0;\n\tif (this.buildParseTrees || hasListener) {\n\t\tvar node;\n\t\tif (this._errHandler.inErrorRecoveryMode(this)) {\n\t\t\tnode = this._ctx.addErrorNode(o);\n\t\t} else {\n\t\t\tnode = this._ctx.addTokenNode(o);\n\t\t}\n        node.invokingState = this.state;\n\t\tif (hasListener) {\n\t\t\tthis._parseListeners.map(function(listener) {\n\t\t\t\tif (node instanceof ErrorNode || (node.isErrorNode !== undefined && node.isErrorNode())) {\n\t\t\t\t\tlistener.visitErrorNode(node);\n\t\t\t\t} else if (node instanceof TerminalNode) {\n\t\t\t\t\tlistener.visitTerminal(node);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\treturn o;\n};\n\nParser.prototype.addContextToParseTree = function() {\n\t// add current context to parent if we have a parent\n\tif (this._ctx.parentCtx !== null) {\n\t\tthis._ctx.parentCtx.addChild(this._ctx);\n\t}\n};\n\n// Always called by generated parsers upon entry to a rule. Access field\n// {@link //_ctx} get the current context.\n\nParser.prototype.enterRule = function(localctx, state, ruleIndex) {\n\tthis.state = state;\n\tthis._ctx = localctx;\n\tthis._ctx.start = this._input.LT(1);\n\tif (this.buildParseTrees) {\n\t\tthis.addContextToParseTree();\n\t}\n\tif (this._parseListeners !== null) {\n\t\tthis.triggerEnterRuleEvent();\n\t}\n};\n\nParser.prototype.exitRule = function() {\n\tthis._ctx.stop = this._input.LT(-1);\n\t// trigger event on _ctx, before it reverts to parent\n\tif (this._parseListeners !== null) {\n\t\tthis.triggerExitRuleEvent();\n\t}\n\tthis.state = this._ctx.invokingState;\n\tthis._ctx = this._ctx.parentCtx;\n};\n\nParser.prototype.enterOuterAlt = function(localctx, altNum) {\n   \tlocalctx.setAltNumber(altNum);\n\t// if we have new localctx, make sure we replace existing ctx\n\t// that is previous child of parse tree\n\tif (this.buildParseTrees && this._ctx !== localctx) {\n\t\tif (this._ctx.parentCtx !== null) {\n\t\t\tthis._ctx.parentCtx.removeLastChild();\n\t\t\tthis._ctx.parentCtx.addChild(localctx);\n\t\t}\n\t}\n\tthis._ctx = localctx;\n};\n\n// Get the precedence level for the top-most precedence rule.\n//\n// @return The precedence level for the top-most precedence rule, or -1 if\n// the parser context is not nested within a precedence rule.\n\nParser.prototype.getPrecedence = function() {\n\tif (this._precedenceStack.length === 0) {\n\t\treturn -1;\n\t} else {\n\t\treturn this._precedenceStack[this._precedenceStack.length-1];\n\t}\n};\n\nParser.prototype.enterRecursionRule = function(localctx, state, ruleIndex,\n\t\tprecedence) {\n\tthis.state = state;\n\tthis._precedenceStack.push(precedence);\n\tthis._ctx = localctx;\n\tthis._ctx.start = this._input.LT(1);\n\tif (this._parseListeners !== null) {\n\t\tthis.triggerEnterRuleEvent(); // simulates rule entry for\n\t\t\t\t\t\t\t\t\t\t// left-recursive rules\n\t}\n};\n\n//\n// Like {@link //enterRule} but for recursive rules.\n\nParser.prototype.pushNewRecursionContext = function(localctx, state, ruleIndex) {\n\tvar previous = this._ctx;\n\tprevious.parentCtx = localctx;\n\tprevious.invokingState = state;\n\tprevious.stop = this._input.LT(-1);\n\n\tthis._ctx = localctx;\n\tthis._ctx.start = previous.start;\n\tif (this.buildParseTrees) {\n\t\tthis._ctx.addChild(previous);\n\t}\n\tif (this._parseListeners !== null) {\n\t\tthis.triggerEnterRuleEvent(); // simulates rule entry for\n\t\t\t\t\t\t\t\t\t\t// left-recursive rules\n\t}\n};\n\nParser.prototype.unrollRecursionContexts = function(parentCtx) {\n\tthis._precedenceStack.pop();\n\tthis._ctx.stop = this._input.LT(-1);\n\tvar retCtx = this._ctx; // save current ctx (return value)\n\t// unroll so _ctx is as it was before call to recursive method\n\tif (this._parseListeners !== null) {\n\t\twhile (this._ctx !== parentCtx) {\n\t\t\tthis.triggerExitRuleEvent();\n\t\t\tthis._ctx = this._ctx.parentCtx;\n\t\t}\n\t} else {\n\t\tthis._ctx = parentCtx;\n\t}\n\t// hook into tree\n\tretCtx.parentCtx = parentCtx;\n\tif (this.buildParseTrees && parentCtx !== null) {\n\t\t// add return ctx into invoking rule's tree\n\t\tparentCtx.addChild(retCtx);\n\t}\n};\n\nParser.prototype.getInvokingContext = function(ruleIndex) {\n\tvar ctx = this._ctx;\n\twhile (ctx !== null) {\n\t\tif (ctx.ruleIndex === ruleIndex) {\n\t\t\treturn ctx;\n\t\t}\n\t\tctx = ctx.parentCtx;\n\t}\n\treturn null;\n};\n\nParser.prototype.precpred = function(localctx, precedence) {\n\treturn precedence >= this._precedenceStack[this._precedenceStack.length-1];\n};\n\nParser.prototype.inContext = function(context) {\n\t// TODO: useful in parser?\n\treturn false;\n};\n\n//\n// Checks whether or not {@code symbol} can follow the current state in the\n// ATN. The behavior of this method is equivalent to the following, but is\n// implemented such that the complete context-sensitive follow set does not\n// need to be explicitly constructed.\n//\n// <pre>\n// return getExpectedTokens().contains(symbol);\n// </pre>\n//\n// @param symbol the symbol type to check\n// @return {@code true} if {@code symbol} can follow the current state in\n// the ATN, otherwise {@code false}.\n\nParser.prototype.isExpectedToken = function(symbol) {\n\tvar atn = this._interp.atn;\n\tvar ctx = this._ctx;\n\tvar s = atn.states[this.state];\n\tvar following = atn.nextTokens(s);\n\tif (following.contains(symbol)) {\n\t\treturn true;\n\t}\n\tif (!following.contains(Token.EPSILON)) {\n\t\treturn false;\n\t}\n\twhile (ctx !== null && ctx.invokingState >= 0 && following.contains(Token.EPSILON)) {\n\t\tvar invokingState = atn.states[ctx.invokingState];\n\t\tvar rt = invokingState.transitions[0];\n\t\tfollowing = atn.nextTokens(rt.followState);\n\t\tif (following.contains(symbol)) {\n\t\t\treturn true;\n\t\t}\n\t\tctx = ctx.parentCtx;\n\t}\n\tif (following.contains(Token.EPSILON) && symbol === Token.EOF) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\n\n// Computes the set of input symbols which could follow the current parser\n// state and context, as given by {@link //getState} and {@link //getContext},\n// respectively.\n//\n// @see ATN//getExpectedTokens(int, RuleContext)\n//\nParser.prototype.getExpectedTokens = function() {\n\treturn this._interp.atn.getExpectedTokens(this.state, this._ctx);\n};\n\nParser.prototype.getExpectedTokensWithinCurrentRule = function() {\n\tvar atn = this._interp.atn;\n\tvar s = atn.states[this.state];\n\treturn atn.nextTokens(s);\n};\n\n// Get a rule's index (i.e., {@code RULE_ruleName} field) or -1 if not found.//\nParser.prototype.getRuleIndex = function(ruleName) {\n\tvar ruleIndex = this.getRuleIndexMap()[ruleName];\n\tif (ruleIndex !== null) {\n\t\treturn ruleIndex;\n\t} else {\n\t\treturn -1;\n\t}\n};\n\n// Return List&lt;String&gt; of the rule names in your parser instance\n// leading up to a call to the current rule. You could override if\n// you want more details such as the file/line info of where\n// in the ATN a rule is invoked.\n//\n// this is very useful for error messages.\n//\nParser.prototype.getRuleInvocationStack = function(p) {\n\tp = p || null;\n\tif (p === null) {\n\t\tp = this._ctx;\n\t}\n\tvar stack = [];\n\twhile (p !== null) {\n\t\t// compute what follows who invoked us\n\t\tvar ruleIndex = p.ruleIndex;\n\t\tif (ruleIndex < 0) {\n\t\t\tstack.push(\"n/a\");\n\t\t} else {\n\t\t\tstack.push(this.ruleNames[ruleIndex]);\n\t\t}\n\t\tp = p.parentCtx;\n\t}\n\treturn stack;\n};\n\n// For debugging and other purposes.//\nParser.prototype.getDFAStrings = function() {\n\treturn this._interp.decisionToDFA.toString();\n};\n// For debugging and other purposes.//\nParser.prototype.dumpDFA = function() {\n\tvar seenOne = false;\n\tfor (var i = 0; i < this._interp.decisionToDFA.length; i++) {\n\t\tvar dfa = this._interp.decisionToDFA[i];\n\t\tif (dfa.states.length > 0) {\n\t\t\tif (seenOne) {\n\t\t\t\tconsole.log();\n\t\t\t}\n\t\t\tthis.printer.println(\"Decision \" + dfa.decision + \":\");\n\t\t\tthis.printer.print(dfa.toString(this.literalNames, this.symbolicNames));\n\t\t\tseenOne = true;\n\t\t}\n\t}\n};\n\n/*\n\"\t\t\tprinter = function() {\\r\\n\" +\n\"\t\t\t\tthis.println = function(s) { document.getElementById('output') += s + '\\\\n'; }\\r\\n\" +\n\"\t\t\t\tthis.print = function(s) { document.getElementById('output') += s; }\\r\\n\" +\n\"\t\t\t};\\r\\n\" +\n*/\n\nParser.prototype.getSourceName = function() {\n\treturn this._input.sourceName;\n};\n\n// During a parse is sometimes useful to listen in on the rule entry and exit\n// events as well as token matches. this is for quick and dirty debugging.\n//\nParser.prototype.setTrace = function(trace) {\n\tif (!trace) {\n\t\tthis.removeParseListener(this._tracer);\n\t\tthis._tracer = null;\n\t} else {\n\t\tif (this._tracer !== null) {\n\t\t\tthis.removeParseListener(this._tracer);\n\t\t}\n\t\tthis._tracer = new TraceListener(this);\n\t\tthis.addParseListener(this._tracer);\n\t}\n};\n\nexports.Parser = Parser;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/Parser.js\n// module id = VgzD\n// module chunks = 0 1 2","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\n// The basic notion of a tree has a parent, a payload, and a list of children.\n//  It is the most abstract interface for all the trees used by ANTLR.\n///\n\nvar Token = require('./../Token').Token;\nvar Interval = require('./../IntervalSet').Interval;\nvar INVALID_INTERVAL = new Interval(-1, -2);\nvar Utils = require('../Utils.js');\n\n\nfunction Tree() {\n\treturn this;\n}\n\nfunction SyntaxTree() {\n\tTree.call(this);\n\treturn this;\n}\n\nSyntaxTree.prototype = Object.create(Tree.prototype);\nSyntaxTree.prototype.constructor = SyntaxTree;\n\nfunction ParseTree() {\n\tSyntaxTree.call(this);\n\treturn this;\n}\n\nParseTree.prototype = Object.create(SyntaxTree.prototype);\nParseTree.prototype.constructor = ParseTree;\n\nfunction RuleNode() {\n\tParseTree.call(this);\n\treturn this;\n}\n\nRuleNode.prototype = Object.create(ParseTree.prototype);\nRuleNode.prototype.constructor = RuleNode;\n\nfunction TerminalNode() {\n\tParseTree.call(this);\n\treturn this;\n}\n\nTerminalNode.prototype = Object.create(ParseTree.prototype);\nTerminalNode.prototype.constructor = TerminalNode;\n\nfunction ErrorNode() {\n\tTerminalNode.call(this);\n\treturn this;\n}\n\nErrorNode.prototype = Object.create(TerminalNode.prototype);\nErrorNode.prototype.constructor = ErrorNode;\n\nfunction ParseTreeVisitor() {\n\treturn this;\n}\n\nParseTreeVisitor.prototype.visit = function(ctx) {\n \tif (Array.isArray(ctx)) {\n\t\treturn ctx.map(function(child) {\n            return child.accept(this);\n        }, this);\n\t} else {\n\t\treturn ctx.accept(this);\n\t}\n};\n\nParseTreeVisitor.prototype.visitChildren = function(ctx) {\n  return this.visit(ctx.children);\n}\n\nParseTreeVisitor.prototype.visitTerminal = function(node) {\n};\n\nParseTreeVisitor.prototype.visitErrorNode = function(node) {\n};\n\n\nfunction ParseTreeListener() {\n\treturn this;\n}\n\nParseTreeListener.prototype.visitTerminal = function(node) {\n};\n\nParseTreeListener.prototype.visitErrorNode = function(node) {\n};\n\nParseTreeListener.prototype.enterEveryRule = function(node) {\n};\n\nParseTreeListener.prototype.exitEveryRule = function(node) {\n};\n\nfunction TerminalNodeImpl(symbol) {\n\tTerminalNode.call(this);\n\tthis.parentCtx = null;\n\tthis.symbol = symbol;\n\treturn this;\n}\n\nTerminalNodeImpl.prototype = Object.create(TerminalNode.prototype);\nTerminalNodeImpl.prototype.constructor = TerminalNodeImpl;\n\nTerminalNodeImpl.prototype.getChild = function(i) {\n\treturn null;\n};\n\nTerminalNodeImpl.prototype.getSymbol = function() {\n\treturn this.symbol;\n};\n\nTerminalNodeImpl.prototype.getParent = function() {\n\treturn this.parentCtx;\n};\n\nTerminalNodeImpl.prototype.getPayload = function() {\n\treturn this.symbol;\n};\n\nTerminalNodeImpl.prototype.getSourceInterval = function() {\n\tif (this.symbol === null) {\n\t\treturn INVALID_INTERVAL;\n\t}\n\tvar tokenIndex = this.symbol.tokenIndex;\n\treturn new Interval(tokenIndex, tokenIndex);\n};\n\nTerminalNodeImpl.prototype.getChildCount = function() {\n\treturn 0;\n};\n\nTerminalNodeImpl.prototype.accept = function(visitor) {\n\treturn visitor.visitTerminal(this);\n};\n\nTerminalNodeImpl.prototype.getText = function() {\n\treturn this.symbol.text;\n};\n\nTerminalNodeImpl.prototype.toString = function() {\n\tif (this.symbol.type === Token.EOF) {\n\t\treturn \"<EOF>\";\n\t} else {\n\t\treturn this.symbol.text;\n\t}\n};\n\n// Represents a token that was consumed during resynchronization\n// rather than during a valid match operation. For example,\n// we will create this kind of a node during single token insertion\n// and deletion as well as during \"consume until error recovery set\"\n// upon no viable alternative exceptions.\n\nfunction ErrorNodeImpl(token) {\n\tTerminalNodeImpl.call(this, token);\n\treturn this;\n}\n\nErrorNodeImpl.prototype = Object.create(TerminalNodeImpl.prototype);\nErrorNodeImpl.prototype.constructor = ErrorNodeImpl;\n\nErrorNodeImpl.prototype.isErrorNode = function() {\n\treturn true;\n};\n\nErrorNodeImpl.prototype.accept = function(visitor) {\n\treturn visitor.visitErrorNode(this);\n};\n\nfunction ParseTreeWalker() {\n\treturn this;\n}\n\nParseTreeWalker.prototype.walk = function(listener, t) {\n\tvar errorNode = t instanceof ErrorNode ||\n\t\t\t(t.isErrorNode !== undefined && t.isErrorNode());\n\tif (errorNode) {\n\t\tlistener.visitErrorNode(t);\n\t} else if (t instanceof TerminalNode) {\n\t\tlistener.visitTerminal(t);\n\t} else {\n\t\tthis.enterRule(listener, t);\n\t\tfor (var i = 0; i < t.getChildCount(); i++) {\n\t\t\tvar child = t.getChild(i);\n\t\t\tthis.walk(listener, child);\n\t\t}\n\t\tthis.exitRule(listener, t);\n\t}\n};\n//\n// The discovery of a rule node, involves sending two events: the generic\n// {@link ParseTreeListener//enterEveryRule} and a\n// {@link RuleContext}-specific event. First we trigger the generic and then\n// the rule specific. We to them in reverse order upon finishing the node.\n//\nParseTreeWalker.prototype.enterRule = function(listener, r) {\n\tvar ctx = r.getRuleContext();\n\tlistener.enterEveryRule(ctx);\n\tctx.enterRule(listener);\n};\n\nParseTreeWalker.prototype.exitRule = function(listener, r) {\n\tvar ctx = r.getRuleContext();\n\tctx.exitRule(listener);\n\tlistener.exitEveryRule(ctx);\n};\n\nParseTreeWalker.DEFAULT = new ParseTreeWalker();\n\nexports.RuleNode = RuleNode;\nexports.ErrorNode = ErrorNode;\nexports.TerminalNode = TerminalNode;\nexports.ErrorNodeImpl = ErrorNodeImpl;\nexports.TerminalNodeImpl = TerminalNodeImpl;\nexports.ParseTreeListener = ParseTreeListener;\nexports.ParseTreeVisitor = ParseTreeVisitor;\nexports.ParseTreeWalker = ParseTreeWalker;\nexports.INVALID_INTERVAL = INVALID_INTERVAL;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/tree/Tree.js\n// module id = VnEu\n// module chunks = 0 1 2","function Extend(that) {\r\n  that.syntaxError = function(recognizer, offendingSymbol, line, column, msg, e) {\r\n    this.errorMsg = msg;\r\n  };\r\n}\r\nmodule.exports = Extend;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/presentable_policy_compiler/ErrorListenerExtend.js\n// module id = W6Ef\n// module chunks = 2","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\n// When we hit an accept state in either the DFA or the ATN, we\n//  have to notify the character stream to start buffering characters\n//  via {@link IntStream//mark} and record the current state. The current sim state\n//  includes the current index into the input, the current line,\n//  and current character position in that line. Note that the Lexer is\n//  tracking the starting line and characterization of the token. These\n//  variables track the \"state\" of the simulator when it hits an accept state.\n//\n//  <p>We track these variables separately for the DFA and ATN simulation\n//  because the DFA simulation often has to fail over to the ATN\n//  simulation. If the ATN simulation fails, we need the DFA to fall\n//  back to its previously accepted state, if any. If the ATN succeeds,\n//  then the ATN does the accept and the DFA simulator that invoked it\n//  can simply return the predicted token type.</p>\n///\n\nvar Token = require('./../Token').Token;\nvar Lexer = require('./../Lexer').Lexer;\nvar ATN = require('./ATN').ATN;\nvar ATNSimulator = require('./ATNSimulator').ATNSimulator;\nvar DFAState = require('./../dfa/DFAState').DFAState;\nvar ATNConfigSet = require('./ATNConfigSet').ATNConfigSet;\nvar OrderedATNConfigSet = require('./ATNConfigSet').OrderedATNConfigSet;\nvar PredictionContext = require('./../PredictionContext').PredictionContext;\nvar SingletonPredictionContext = require('./../PredictionContext').SingletonPredictionContext;\nvar RuleStopState = require('./ATNState').RuleStopState;\nvar LexerATNConfig = require('./ATNConfig').LexerATNConfig;\nvar Transition = require('./Transition').Transition;\nvar LexerActionExecutor = require('./LexerActionExecutor').LexerActionExecutor;\nvar LexerNoViableAltException = require('./../error/Errors').LexerNoViableAltException;\n\nfunction resetSimState(sim) {\n\tsim.index = -1;\n\tsim.line = 0;\n\tsim.column = -1;\n\tsim.dfaState = null;\n}\n\nfunction SimState() {\n\tresetSimState(this);\n\treturn this;\n}\n\nSimState.prototype.reset = function() {\n\tresetSimState(this);\n};\n\nfunction LexerATNSimulator(recog, atn, decisionToDFA, sharedContextCache) {\n\tATNSimulator.call(this, atn, sharedContextCache);\n\tthis.decisionToDFA = decisionToDFA;\n\tthis.recog = recog;\n\t// The current token's starting index into the character stream.\n\t// Shared across DFA to ATN simulation in case the ATN fails and the\n\t// DFA did not have a previous accept state. In this case, we use the\n\t// ATN-generated exception object.\n\tthis.startIndex = -1;\n\t// line number 1..n within the input///\n\tthis.line = 1;\n\t// The index of the character relative to the beginning of the line\n\t// 0..n-1///\n\tthis.column = 0;\n\tthis.mode = Lexer.DEFAULT_MODE;\n\t// Used during DFA/ATN exec to record the most recent accept configuration\n\t// info\n\tthis.prevAccept = new SimState();\n\t// done\n\treturn this;\n}\n\nLexerATNSimulator.prototype = Object.create(ATNSimulator.prototype);\nLexerATNSimulator.prototype.constructor = LexerATNSimulator;\n\nLexerATNSimulator.debug = false;\nLexerATNSimulator.dfa_debug = false;\n\nLexerATNSimulator.MIN_DFA_EDGE = 0;\nLexerATNSimulator.MAX_DFA_EDGE = 127; // forces unicode to stay in ATN\n\nLexerATNSimulator.match_calls = 0;\n\nLexerATNSimulator.prototype.copyState = function(simulator) {\n\tthis.column = simulator.column;\n\tthis.line = simulator.line;\n\tthis.mode = simulator.mode;\n\tthis.startIndex = simulator.startIndex;\n};\n\nLexerATNSimulator.prototype.match = function(input, mode) {\n\tthis.match_calls += 1;\n\tthis.mode = mode;\n\tvar mark = input.mark();\n\ttry {\n\t\tthis.startIndex = input.index;\n\t\tthis.prevAccept.reset();\n\t\tvar dfa = this.decisionToDFA[mode];\n\t\tif (dfa.s0 === null) {\n\t\t\treturn this.matchATN(input);\n\t\t} else {\n\t\t\treturn this.execATN(input, dfa.s0);\n\t\t}\n\t} finally {\n\t\tinput.release(mark);\n\t}\n};\n\nLexerATNSimulator.prototype.reset = function() {\n\tthis.prevAccept.reset();\n\tthis.startIndex = -1;\n\tthis.line = 1;\n\tthis.column = 0;\n\tthis.mode = Lexer.DEFAULT_MODE;\n};\n\nLexerATNSimulator.prototype.matchATN = function(input) {\n\tvar startState = this.atn.modeToStartState[this.mode];\n\n\tif (LexerATNSimulator.debug) {\n\t\tconsole.log(\"matchATN mode \" + this.mode + \" start: \" + startState);\n\t}\n\tvar old_mode = this.mode;\n\tvar s0_closure = this.computeStartState(input, startState);\n\tvar suppressEdge = s0_closure.hasSemanticContext;\n\ts0_closure.hasSemanticContext = false;\n\n\tvar next = this.addDFAState(s0_closure);\n\tif (!suppressEdge) {\n\t\tthis.decisionToDFA[this.mode].s0 = next;\n\t}\n\n\tvar predict = this.execATN(input, next);\n\n\tif (LexerATNSimulator.debug) {\n\t\tconsole.log(\"DFA after matchATN: \" + this.decisionToDFA[old_mode].toLexerString());\n\t}\n\treturn predict;\n};\n\nLexerATNSimulator.prototype.execATN = function(input, ds0) {\n\tif (LexerATNSimulator.debug) {\n\t\tconsole.log(\"start state closure=\" + ds0.configs);\n\t}\n\tif (ds0.isAcceptState) {\n\t\t// allow zero-length tokens\n\t\tthis.captureSimState(this.prevAccept, input, ds0);\n\t}\n\tvar t = input.LA(1);\n\tvar s = ds0; // s is current/from DFA state\n\n\twhile (true) { // while more work\n\t\tif (LexerATNSimulator.debug) {\n\t\t\tconsole.log(\"execATN loop starting closure: \" + s.configs);\n\t\t}\n\n\t\t// As we move src->trg, src->trg, we keep track of the previous trg to\n\t\t// avoid looking up the DFA state again, which is expensive.\n\t\t// If the previous target was already part of the DFA, we might\n\t\t// be able to avoid doing a reach operation upon t. If s!=null,\n\t\t// it means that semantic predicates didn't prevent us from\n\t\t// creating a DFA state. Once we know s!=null, we check to see if\n\t\t// the DFA state has an edge already for t. If so, we can just reuse\n\t\t// it's configuration set; there's no point in re-computing it.\n\t\t// This is kind of like doing DFA simulation within the ATN\n\t\t// simulation because DFA simulation is really just a way to avoid\n\t\t// computing reach/closure sets. Technically, once we know that\n\t\t// we have a previously added DFA state, we could jump over to\n\t\t// the DFA simulator. But, that would mean popping back and forth\n\t\t// a lot and making things more complicated algorithmically.\n\t\t// This optimization makes a lot of sense for loops within DFA.\n\t\t// A character will take us back to an existing DFA state\n\t\t// that already has lots of edges out of it. e.g., .* in comments.\n\t\t// print(\"Target for:\" + str(s) + \" and:\" + str(t))\n\t\tvar target = this.getExistingTargetState(s, t);\n\t\t// print(\"Existing:\" + str(target))\n\t\tif (target === null) {\n\t\t\ttarget = this.computeTargetState(input, s, t);\n\t\t\t// print(\"Computed:\" + str(target))\n\t\t}\n\t\tif (target === ATNSimulator.ERROR) {\n\t\t\tbreak;\n\t\t}\n\t\t// If this is a consumable input element, make sure to consume before\n\t\t// capturing the accept state so the input index, line, and char\n\t\t// position accurately reflect the state of the interpreter at the\n\t\t// end of the token.\n\t\tif (t !== Token.EOF) {\n\t\t\tthis.consume(input);\n\t\t}\n\t\tif (target.isAcceptState) {\n\t\t\tthis.captureSimState(this.prevAccept, input, target);\n\t\t\tif (t === Token.EOF) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tt = input.LA(1);\n\t\ts = target; // flip; current DFA target becomes new src/from state\n\t}\n\treturn this.failOrAccept(this.prevAccept, input, s.configs, t);\n};\n\n// Get an existing target state for an edge in the DFA. If the target state\n// for the edge has not yet been computed or is otherwise not available,\n// this method returns {@code null}.\n//\n// @param s The current DFA state\n// @param t The next input symbol\n// @return The existing target DFA state for the given input symbol\n// {@code t}, or {@code null} if the target state for this edge is not\n// already cached\nLexerATNSimulator.prototype.getExistingTargetState = function(s, t) {\n\tif (s.edges === null || t < LexerATNSimulator.MIN_DFA_EDGE || t > LexerATNSimulator.MAX_DFA_EDGE) {\n\t\treturn null;\n\t}\n\n\tvar target = s.edges[t - LexerATNSimulator.MIN_DFA_EDGE];\n\tif(target===undefined) {\n\t\ttarget = null;\n\t}\n\tif (LexerATNSimulator.debug && target !== null) {\n\t\tconsole.log(\"reuse state \" + s.stateNumber + \" edge to \" + target.stateNumber);\n\t}\n\treturn target;\n};\n\n// Compute a target state for an edge in the DFA, and attempt to add the\n// computed state and corresponding edge to the DFA.\n//\n// @param input The input stream\n// @param s The current DFA state\n// @param t The next input symbol\n//\n// @return The computed target DFA state for the given input symbol\n// {@code t}. If {@code t} does not lead to a valid DFA state, this method\n// returns {@link //ERROR}.\nLexerATNSimulator.prototype.computeTargetState = function(input, s, t) {\n\tvar reach = new OrderedATNConfigSet();\n\t// if we don't find an existing DFA state\n\t// Fill reach starting from closure, following t transitions\n\tthis.getReachableConfigSet(input, s.configs, reach, t);\n\n\tif (reach.items.length === 0) { // we got nowhere on t from s\n\t\tif (!reach.hasSemanticContext) {\n\t\t\t// we got nowhere on t, don't throw out this knowledge; it'd\n\t\t\t// cause a failover from DFA later.\n\t\t\tthis.addDFAEdge(s, t, ATNSimulator.ERROR);\n\t\t}\n\t\t// stop when we can't match any more char\n\t\treturn ATNSimulator.ERROR;\n\t}\n\t// Add an edge from s to target DFA found/created for reach\n\treturn this.addDFAEdge(s, t, null, reach);\n};\n\nLexerATNSimulator.prototype.failOrAccept = function(prevAccept, input, reach, t) {\n\tif (this.prevAccept.dfaState !== null) {\n\t\tvar lexerActionExecutor = prevAccept.dfaState.lexerActionExecutor;\n\t\tthis.accept(input, lexerActionExecutor, this.startIndex,\n\t\t\t\tprevAccept.index, prevAccept.line, prevAccept.column);\n\t\treturn prevAccept.dfaState.prediction;\n\t} else {\n\t\t// if no accept and EOF is first char, return EOF\n\t\tif (t === Token.EOF && input.index === this.startIndex) {\n\t\t\treturn Token.EOF;\n\t\t}\n\t\tthrow new LexerNoViableAltException(this.recog, input, this.startIndex, reach);\n\t}\n};\n\n// Given a starting configuration set, figure out all ATN configurations\n// we can reach upon input {@code t}. Parameter {@code reach} is a return\n// parameter.\nLexerATNSimulator.prototype.getReachableConfigSet = function(input, closure,\n\t\treach, t) {\n\t// this is used to skip processing for configs which have a lower priority\n\t// than a config that already reached an accept state for the same rule\n\tvar skipAlt = ATN.INVALID_ALT_NUMBER;\n\tfor (var i = 0; i < closure.items.length; i++) {\n\t\tvar cfg = closure.items[i];\n\t\tvar currentAltReachedAcceptState = (cfg.alt === skipAlt);\n\t\tif (currentAltReachedAcceptState && cfg.passedThroughNonGreedyDecision) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (LexerATNSimulator.debug) {\n\t\t\tconsole.log(\"testing %s at %s\\n\", this.getTokenName(t), cfg\n\t\t\t\t\t.toString(this.recog, true));\n\t\t}\n\t\tfor (var j = 0; j < cfg.state.transitions.length; j++) {\n\t\t\tvar trans = cfg.state.transitions[j]; // for each transition\n\t\t\tvar target = this.getReachableTarget(trans, t);\n\t\t\tif (target !== null) {\n\t\t\t\tvar lexerActionExecutor = cfg.lexerActionExecutor;\n\t\t\t\tif (lexerActionExecutor !== null) {\n\t\t\t\t\tlexerActionExecutor = lexerActionExecutor.fixOffsetBeforeMatch(input.index - this.startIndex);\n\t\t\t\t}\n\t\t\t\tvar treatEofAsEpsilon = (t === Token.EOF);\n\t\t\t\tvar config = new LexerATNConfig({state:target, lexerActionExecutor:lexerActionExecutor}, cfg);\n\t\t\t\tif (this.closure(input, config, reach,\n\t\t\t\t\t\tcurrentAltReachedAcceptState, true, treatEofAsEpsilon)) {\n\t\t\t\t\t// any remaining configs for this alt have a lower priority\n\t\t\t\t\t// than the one that just reached an accept state.\n\t\t\t\t\tskipAlt = cfg.alt;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\nLexerATNSimulator.prototype.accept = function(input, lexerActionExecutor,\n\t\tstartIndex, index, line, charPos) {\n\tif (LexerATNSimulator.debug) {\n\t\tconsole.log(\"ACTION %s\\n\", lexerActionExecutor);\n\t}\n\t// seek to after last char in token\n\tinput.seek(index);\n\tthis.line = line;\n\tthis.column = charPos;\n\tif (lexerActionExecutor !== null && this.recog !== null) {\n\t\tlexerActionExecutor.execute(this.recog, input, startIndex);\n\t}\n};\n\nLexerATNSimulator.prototype.getReachableTarget = function(trans, t) {\n\tif (trans.matches(t, 0, Lexer.MAX_CHAR_VALUE)) {\n\t\treturn trans.target;\n\t} else {\n\t\treturn null;\n\t}\n};\n\nLexerATNSimulator.prototype.computeStartState = function(input, p) {\n\tvar initialContext = PredictionContext.EMPTY;\n\tvar configs = new OrderedATNConfigSet();\n\tfor (var i = 0; i < p.transitions.length; i++) {\n\t\tvar target = p.transitions[i].target;\n        var cfg = new LexerATNConfig({state:target, alt:i+1, context:initialContext}, null);\n\t\tthis.closure(input, cfg, configs, false, false, false);\n\t}\n\treturn configs;\n};\n\n// Since the alternatives within any lexer decision are ordered by\n// preference, this method stops pursuing the closure as soon as an accept\n// state is reached. After the first accept state is reached by depth-first\n// search from {@code config}, all other (potentially reachable) states for\n// this rule would have a lower priority.\n//\n// @return {@code true} if an accept state is reached, otherwise\n// {@code false}.\nLexerATNSimulator.prototype.closure = function(input, config, configs,\n\t\tcurrentAltReachedAcceptState, speculative, treatEofAsEpsilon) {\n\tvar cfg = null;\n\tif (LexerATNSimulator.debug) {\n\t\tconsole.log(\"closure(\" + config.toString(this.recog, true) + \")\");\n\t}\n\tif (config.state instanceof RuleStopState) {\n\t\tif (LexerATNSimulator.debug) {\n\t\t\tif (this.recog !== null) {\n\t\t\t\tconsole.log(\"closure at %s rule stop %s\\n\", this.recog.ruleNames[config.state.ruleIndex], config);\n\t\t\t} else {\n\t\t\t\tconsole.log(\"closure at rule stop %s\\n\", config);\n\t\t\t}\n\t\t}\n\t\tif (config.context === null || config.context.hasEmptyPath()) {\n\t\t\tif (config.context === null || config.context.isEmpty()) {\n\t\t\t\tconfigs.add(config);\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tconfigs.add(new LexerATNConfig({ state:config.state, context:PredictionContext.EMPTY}, config));\n\t\t\t\tcurrentAltReachedAcceptState = true;\n\t\t\t}\n\t\t}\n\t\tif (config.context !== null && !config.context.isEmpty()) {\n\t\t\tfor (var i = 0; i < config.context.length; i++) {\n\t\t\t\tif (config.context.getReturnState(i) !== PredictionContext.EMPTY_RETURN_STATE) {\n\t\t\t\t\tvar newContext = config.context.getParent(i); // \"pop\" return state\n\t\t\t\t\tvar returnState = this.atn.states[config.context.getReturnState(i)];\n\t\t\t\t\tcfg = new LexerATNConfig({ state:returnState, context:newContext }, config);\n\t\t\t\t\tcurrentAltReachedAcceptState = this.closure(input, cfg,\n\t\t\t\t\t\t\tconfigs, currentAltReachedAcceptState, speculative,\n\t\t\t\t\t\t\ttreatEofAsEpsilon);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn currentAltReachedAcceptState;\n\t}\n\t// optimization\n\tif (!config.state.epsilonOnlyTransitions) {\n\t\tif (!currentAltReachedAcceptState || !config.passedThroughNonGreedyDecision) {\n\t\t\tconfigs.add(config);\n\t\t}\n\t}\n\tfor (var j = 0; j < config.state.transitions.length; j++) {\n\t\tvar trans = config.state.transitions[j];\n\t\tcfg = this.getEpsilonTarget(input, config, trans, configs, speculative, treatEofAsEpsilon);\n\t\tif (cfg !== null) {\n\t\t\tcurrentAltReachedAcceptState = this.closure(input, cfg, configs,\n\t\t\t\t\tcurrentAltReachedAcceptState, speculative, treatEofAsEpsilon);\n\t\t}\n\t}\n\treturn currentAltReachedAcceptState;\n};\n\n// side-effect: can alter configs.hasSemanticContext\nLexerATNSimulator.prototype.getEpsilonTarget = function(input, config, trans,\n\t\tconfigs, speculative, treatEofAsEpsilon) {\n\tvar cfg = null;\n\tif (trans.serializationType === Transition.RULE) {\n\t\tvar newContext = SingletonPredictionContext.create(config.context, trans.followState.stateNumber);\n\t\tcfg = new LexerATNConfig( { state:trans.target, context:newContext}, config);\n\t} else if (trans.serializationType === Transition.PRECEDENCE) {\n\t\tthrow \"Precedence predicates are not supported in lexers.\";\n\t} else if (trans.serializationType === Transition.PREDICATE) {\n\t\t// Track traversing semantic predicates. If we traverse,\n\t\t// we cannot add a DFA state for this \"reach\" computation\n\t\t// because the DFA would not test the predicate again in the\n\t\t// future. Rather than creating collections of semantic predicates\n\t\t// like v3 and testing them on prediction, v4 will test them on the\n\t\t// fly all the time using the ATN not the DFA. This is slower but\n\t\t// semantically it's not used that often. One of the key elements to\n\t\t// this predicate mechanism is not adding DFA states that see\n\t\t// predicates immediately afterwards in the ATN. For example,\n\n\t\t// a : ID {p1}? | ID {p2}? ;\n\n\t\t// should create the start state for rule 'a' (to save start state\n\t\t// competition), but should not create target of ID state. The\n\t\t// collection of ATN states the following ID references includes\n\t\t// states reached by traversing predicates. Since this is when we\n\t\t// test them, we cannot cash the DFA state target of ID.\n\n\t\tif (LexerATNSimulator.debug) {\n\t\t\tconsole.log(\"EVAL rule \" + trans.ruleIndex + \":\" + trans.predIndex);\n\t\t}\n\t\tconfigs.hasSemanticContext = true;\n\t\tif (this.evaluatePredicate(input, trans.ruleIndex, trans.predIndex, speculative)) {\n\t\t\tcfg = new LexerATNConfig({ state:trans.target}, config);\n\t\t}\n\t} else if (trans.serializationType === Transition.ACTION) {\n\t\tif (config.context === null || config.context.hasEmptyPath()) {\n\t\t\t// execute actions anywhere in the start rule for a token.\n\t\t\t//\n\t\t\t// TODO: if the entry rule is invoked recursively, some\n\t\t\t// actions may be executed during the recursive call. The\n\t\t\t// problem can appear when hasEmptyPath() is true but\n\t\t\t// isEmpty() is false. In this case, the config needs to be\n\t\t\t// split into two contexts - one with just the empty path\n\t\t\t// and another with everything but the empty path.\n\t\t\t// Unfortunately, the current algorithm does not allow\n\t\t\t// getEpsilonTarget to return two configurations, so\n\t\t\t// additional modifications are needed before we can support\n\t\t\t// the split operation.\n\t\t\tvar lexerActionExecutor = LexerActionExecutor.append(config.lexerActionExecutor,\n\t\t\t\t\tthis.atn.lexerActions[trans.actionIndex]);\n\t\t\tcfg = new LexerATNConfig({ state:trans.target, lexerActionExecutor:lexerActionExecutor }, config);\n\t\t} else {\n\t\t\t// ignore actions in referenced rules\n\t\t\tcfg = new LexerATNConfig( { state:trans.target}, config);\n\t\t}\n\t} else if (trans.serializationType === Transition.EPSILON) {\n\t\tcfg = new LexerATNConfig({ state:trans.target}, config);\n\t} else if (trans.serializationType === Transition.ATOM ||\n\t\t\t\ttrans.serializationType === Transition.RANGE ||\n\t\t\t\ttrans.serializationType === Transition.SET) {\n\t\tif (treatEofAsEpsilon) {\n\t\t\tif (trans.matches(Token.EOF, 0, Lexer.MAX_CHAR_VALUE)) {\n\t\t\t\tcfg = new LexerATNConfig( { state:trans.target }, config);\n\t\t\t}\n\t\t}\n\t}\n\treturn cfg;\n};\n\n// Evaluate a predicate specified in the lexer.\n//\n// <p>If {@code speculative} is {@code true}, this method was called before\n// {@link //consume} for the matched character. This method should call\n// {@link //consume} before evaluating the predicate to ensure position\n// sensitive values, including {@link Lexer//getText}, {@link Lexer//getLine},\n// and {@link Lexer//getcolumn}, properly reflect the current\n// lexer state. This method should restore {@code input} and the simulator\n// to the original state before returning (i.e. undo the actions made by the\n// call to {@link //consume}.</p>\n//\n// @param input The input stream.\n// @param ruleIndex The rule containing the predicate.\n// @param predIndex The index of the predicate within the rule.\n// @param speculative {@code true} if the current index in {@code input} is\n// one character before the predicate's location.\n//\n// @return {@code true} if the specified predicate evaluates to\n// {@code true}.\n// /\nLexerATNSimulator.prototype.evaluatePredicate = function(input, ruleIndex,\n\t\tpredIndex, speculative) {\n\t// assume true if no recognizer was provided\n\tif (this.recog === null) {\n\t\treturn true;\n\t}\n\tif (!speculative) {\n\t\treturn this.recog.sempred(null, ruleIndex, predIndex);\n\t}\n\tvar savedcolumn = this.column;\n\tvar savedLine = this.line;\n\tvar index = input.index;\n\tvar marker = input.mark();\n\ttry {\n\t\tthis.consume(input);\n\t\treturn this.recog.sempred(null, ruleIndex, predIndex);\n\t} finally {\n\t\tthis.column = savedcolumn;\n\t\tthis.line = savedLine;\n\t\tinput.seek(index);\n\t\tinput.release(marker);\n\t}\n};\n\nLexerATNSimulator.prototype.captureSimState = function(settings, input, dfaState) {\n\tsettings.index = input.index;\n\tsettings.line = this.line;\n\tsettings.column = this.column;\n\tsettings.dfaState = dfaState;\n};\n\nLexerATNSimulator.prototype.addDFAEdge = function(from_, tk, to, cfgs) {\n\tif (to === undefined) {\n\t\tto = null;\n\t}\n\tif (cfgs === undefined) {\n\t\tcfgs = null;\n\t}\n\tif (to === null && cfgs !== null) {\n\t\t// leading to this call, ATNConfigSet.hasSemanticContext is used as a\n\t\t// marker indicating dynamic predicate evaluation makes this edge\n\t\t// dependent on the specific input sequence, so the static edge in the\n\t\t// DFA should be omitted. The target DFAState is still created since\n\t\t// execATN has the ability to resynchronize with the DFA state cache\n\t\t// following the predicate evaluation step.\n\t\t//\n\t\t// TJP notes: next time through the DFA, we see a pred again and eval.\n\t\t// If that gets us to a previously created (but dangling) DFA\n\t\t// state, we can continue in pure DFA mode from there.\n\t\t// /\n\t\tvar suppressEdge = cfgs.hasSemanticContext;\n\t\tcfgs.hasSemanticContext = false;\n\n\t\tto = this.addDFAState(cfgs);\n\n\t\tif (suppressEdge) {\n\t\t\treturn to;\n\t\t}\n\t}\n\t// add the edge\n\tif (tk < LexerATNSimulator.MIN_DFA_EDGE || tk > LexerATNSimulator.MAX_DFA_EDGE) {\n\t\t// Only track edges within the DFA bounds\n\t\treturn to;\n\t}\n\tif (LexerATNSimulator.debug) {\n\t\tconsole.log(\"EDGE \" + from_ + \" -> \" + to + \" upon \" + tk);\n\t}\n\tif (from_.edges === null) {\n\t\t// make room for tokens 1..n and -1 masquerading as index 0\n\t\tfrom_.edges = [];\n\t}\n\tfrom_.edges[tk - LexerATNSimulator.MIN_DFA_EDGE] = to; // connect\n\n\treturn to;\n};\n\n// Add a new DFA state if there isn't one with this set of\n// configurations already. This method also detects the first\n// configuration containing an ATN rule stop state. Later, when\n// traversing the DFA, we will know which rule to accept.\nLexerATNSimulator.prototype.addDFAState = function(configs) {\n\tvar proposed = new DFAState(null, configs);\n\tvar firstConfigWithRuleStopState = null;\n\tfor (var i = 0; i < configs.items.length; i++) {\n\t\tvar cfg = configs.items[i];\n\t\tif (cfg.state instanceof RuleStopState) {\n\t\t\tfirstConfigWithRuleStopState = cfg;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (firstConfigWithRuleStopState !== null) {\n\t\tproposed.isAcceptState = true;\n\t\tproposed.lexerActionExecutor = firstConfigWithRuleStopState.lexerActionExecutor;\n\t\tproposed.prediction = this.atn.ruleToTokenType[firstConfigWithRuleStopState.state.ruleIndex];\n\t}\n\tvar dfa = this.decisionToDFA[this.mode];\n\tvar existing = dfa.states.get(proposed);\n\tif (existing!==null) {\n\t\treturn existing;\n\t}\n\tvar newState = proposed;\n\tnewState.stateNumber = dfa.states.length;\n\tconfigs.setReadonly(true);\n\tnewState.configs = configs;\n\tdfa.states.add(newState);\n\treturn newState;\n};\n\nLexerATNSimulator.prototype.getDFA = function(mode) {\n\treturn this.decisionToDFA[mode];\n};\n\n// Get the text matched so far for the current token.\nLexerATNSimulator.prototype.getText = function(input) {\n\t// index is first lookahead char, don't include.\n\treturn input.getText(this.startIndex, input.index - 1);\n};\n\nLexerATNSimulator.prototype.consume = function(input) {\n\tvar curChar = input.LA(1);\n\tif (curChar === \"\\n\".charCodeAt(0)) {\n\t\tthis.line += 1;\n\t\tthis.column = 0;\n\t} else {\n\t\tthis.column += 1;\n\t}\n\tinput.consume();\n};\n\nLexerATNSimulator.prototype.getTokenName = function(tt) {\n\tif (tt === -1) {\n\t\treturn \"EOF\";\n\t} else {\n\t\treturn \"'\" + String.fromCharCode(tt) + \"'\";\n\t}\n};\n\nexports.LexerATNSimulator = LexerATNSimulator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/atn/LexerATNSimulator.js\n// module id = WcIR\n// module chunks = 0 1 2","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nvar Utils = require('./../Utils');\nvar Token = require('./../Token').Token;\nvar RuleNode = require('./Tree').RuleNode;\nvar ErrorNode = require('./Tree').ErrorNode;\nvar TerminalNode = require('./Tree').TerminalNode;\nvar ParserRuleContext = require('./../ParserRuleContext').ParserRuleContext;\nvar RuleContext = require('./../RuleContext').RuleContext;\nvar INVALID_ALT_NUMBER = require('./../atn/ATN').INVALID_ALT_NUMBER;\n\n\n/** A set of utility routines useful for all kinds of ANTLR trees. */\nfunction Trees() {\n}\n\n// Print out a whole tree in LISP form. {@link //getNodeText} is used on the\n//  node payloads to get the text for the nodes.  Detect\n//  parse trees and extract data appropriately.\nTrees.toStringTree = function(tree, ruleNames, recog) {\n\truleNames = ruleNames || null;\n\trecog = recog || null;\n    if(recog!==null) {\n       ruleNames = recog.ruleNames;\n    }\n    var s = Trees.getNodeText(tree, ruleNames);\n    s = Utils.escapeWhitespace(s, false);\n    var c = tree.getChildCount();\n    if(c===0) {\n        return s;\n    }\n    var res = \"(\" + s + ' ';\n    if(c>0) {\n        s = Trees.toStringTree(tree.getChild(0), ruleNames);\n        res = res.concat(s);\n    }\n    for(var i=1;i<c;i++) {\n        s = Trees.toStringTree(tree.getChild(i), ruleNames);\n        res = res.concat(' ' + s);\n    }\n    res = res.concat(\")\");\n    return res;\n};\n\nTrees.getNodeText = function(t, ruleNames, recog) {\n\truleNames = ruleNames || null;\n\trecog = recog || null;\n    if(recog!==null) {\n        ruleNames = recog.ruleNames;\n    }\n    if(ruleNames!==null) {\n       if (t instanceof RuleContext) {\n           var altNumber = t.getAltNumber();\n           if ( altNumber!=INVALID_ALT_NUMBER ) {\n               return ruleNames[t.ruleIndex]+\":\"+altNumber;\n           }\n           return ruleNames[t.ruleIndex];\n       } else if ( t instanceof ErrorNode) {\n           return t.toString();\n       } else if(t instanceof TerminalNode) {\n           if(t.symbol!==null) {\n               return t.symbol.text;\n           }\n       }\n    }\n    // no recog for rule names\n    var payload = t.getPayload();\n    if (payload instanceof Token ) {\n       return payload.text;\n    }\n    return t.getPayload().toString();\n};\n\n\n// Return ordered list of all children of this node\nTrees.getChildren = function(t) {\n\tvar list = [];\n\tfor(var i=0;i<t.getChildCount();i++) {\n\t\tlist.push(t.getChild(i));\n\t}\n\treturn list;\n};\n\n// Return a list of all ancestors of this node.  The first node of\n//  list is the root and the last is the parent of this node.\n//\nTrees.getAncestors = function(t) {\n    var ancestors = [];\n    t = t.getParent();\n    while(t!==null) {\n        ancestors = [t].concat(ancestors);\n        t = t.getParent();\n    }\n    return ancestors;\n};\n\nTrees.findAllTokenNodes = function(t, ttype) {\n    return Trees.findAllNodes(t, ttype, true);\n};\n\nTrees.findAllRuleNodes = function(t, ruleIndex) {\n\treturn Trees.findAllNodes(t, ruleIndex, false);\n};\n\nTrees.findAllNodes = function(t, index, findTokens) {\n\tvar nodes = [];\n\tTrees._findAllNodes(t, index, findTokens, nodes);\n\treturn nodes;\n};\n\nTrees._findAllNodes = function(t, index, findTokens, nodes) {\n\t// check this node (the root) first\n\tif(findTokens && (t instanceof TerminalNode)) {\n\t\tif(t.symbol.type===index) {\n\t\t\tnodes.push(t);\n\t\t}\n\t} else if(!findTokens && (t instanceof ParserRuleContext)) {\n\t\tif(t.ruleIndex===index) {\n\t\t\tnodes.push(t);\n\t\t}\n\t}\n\t// check children\n\tfor(var i=0;i<t.getChildCount();i++) {\n\t\tTrees._findAllNodes(t.getChild(i), index, findTokens, nodes);\n\t}\n};\n\nTrees.descendants = function(t) {\n\tvar nodes = [t];\n    for(var i=0;i<t.getChildCount();i++) {\n        nodes = nodes.concat(Trees.descendants(t.getChild(i)));\n    }\n    return nodes;\n};\n\n\nexports.Trees = Trees;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/tree/Trees.js\n// module id = WmJ1\n// module chunks = 0 1 2","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.is-iterable');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/is-iterable.js\n// module id = Xd32\n// module chunks = 0 2","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".p-detail li[data-v-6983dd12]{margin-bottom:12px}.p-detail .item-title[data-v-6983dd12]{color:#48576a;display:inline-block;width:150px;padding-right:12px;-webkit-box-sizing:border-box;box-sizing:border-box;text-align:right}.p-detail .item-detail[data-v-6983dd12]{display:inline-block;vertical-align:top}.presentable-steps[data-v-6983dd12]{margin-bottom:30px!important}.uncreated-policy-tip[data-v-6983dd12]{line-height:100px;margin-left:100px;color:#e6a23c}\", \"\", {\"version\":3,\"sources\":[\"/Users/daizecheng/workplace/freelog/console/client/src/views/node/presentable/detail/index.vue\"],\"names\":[],\"mappings\":\"AACA,8BACE,kBAAoB,CACrB,AACD,uCACE,cAAe,AACf,qBAAsB,AACtB,YAAa,AACb,mBAAoB,AACpB,8BAA+B,AACvB,sBAAuB,AAC/B,gBAAkB,CACnB,AACD,wCACE,qBAAsB,AACtB,kBAAoB,CACrB,AACD,oCACE,4BAA+B,CAChC,AACD,uCACE,kBAAmB,AACnB,kBAAmB,AACnB,aAAe,CAChB\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.p-detail li[data-v-6983dd12] {\\n  margin-bottom: 12px;\\n}\\n.p-detail .item-title[data-v-6983dd12] {\\n  color: #48576a;\\n  display: inline-block;\\n  width: 150px;\\n  padding-right: 12px;\\n  -webkit-box-sizing: border-box;\\n          box-sizing: border-box;\\n  text-align: right;\\n}\\n.p-detail .item-detail[data-v-6983dd12] {\\n  display: inline-block;\\n  vertical-align: top;\\n}\\n.presentable-steps[data-v-6983dd12] {\\n  margin-bottom: 30px !important;\\n}\\n.uncreated-policy-tip[data-v-6983dd12] {\\n  line-height: 100px;\\n  margin-left: 100px;\\n  color: #E6A23C;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-6983dd12\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/less-loader/dist/cjs.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/views/node/presentable/detail/index.vue\n// module id = Xttn\n// module chunks = 2","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\nvar RuleContext = require('./RuleContext').RuleContext;\nvar Hash = require('./Utils').Hash;\n\nfunction PredictionContext(cachedHashCode) {\n\tthis.cachedHashCode = cachedHashCode;\n}\n\n// Represents {@code $} in local context prediction, which means wildcard.\n// {@code//+x =//}.\n// /\nPredictionContext.EMPTY = null;\n\n// Represents {@code $} in an array in full context mode, when {@code $}\n// doesn't mean wildcard: {@code $ + x = [$,x]}. Here,\n// {@code $} = {@link //EMPTY_RETURN_STATE}.\n// /\nPredictionContext.EMPTY_RETURN_STATE = 0x7FFFFFFF;\n\nPredictionContext.globalNodeCount = 1;\nPredictionContext.id = PredictionContext.globalNodeCount;\n\n// Stores the computed hash code of this {@link PredictionContext}. The hash\n// code is computed in parts to match the following reference algorithm.\n//\n// <pre>\n// private int referenceHashCode() {\n// int hash = {@link MurmurHash//initialize MurmurHash.initialize}({@link\n// //INITIAL_HASH});\n//\n// for (int i = 0; i &lt; {@link //size()}; i++) {\n// hash = {@link MurmurHash//update MurmurHash.update}(hash, {@link //getParent\n// getParent}(i));\n// }\n//\n// for (int i = 0; i &lt; {@link //size()}; i++) {\n// hash = {@link MurmurHash//update MurmurHash.update}(hash, {@link\n// //getReturnState getReturnState}(i));\n// }\n//\n// hash = {@link MurmurHash//finish MurmurHash.finish}(hash, 2// {@link\n// //size()});\n// return hash;\n// }\n// </pre>\n// /\n\n// This means only the {@link //EMPTY} context is in set.\nPredictionContext.prototype.isEmpty = function() {\n\treturn this === PredictionContext.EMPTY;\n};\n\nPredictionContext.prototype.hasEmptyPath = function() {\n\treturn this.getReturnState(this.length - 1) === PredictionContext.EMPTY_RETURN_STATE;\n};\n\nPredictionContext.prototype.hashCode = function() {\n\treturn this.cachedHashCode;\n};\n\n\nPredictionContext.prototype.updateHashCode = function(hash) {\n    hash.update(this.cachedHashCode);\n};\n/*\nfunction calculateHashString(parent, returnState) {\n\treturn \"\" + parent + returnState;\n}\n*/\n\n// Used to cache {@link PredictionContext} objects. Its used for the shared\n// context cash associated with contexts in DFA states. This cache\n// can be used for both lexers and parsers.\n\nfunction PredictionContextCache() {\n\tthis.cache = {};\n\treturn this;\n}\n\n// Add a context to the cache and return it. If the context already exists,\n// return that one instead and do not add a new context to the cache.\n// Protect shared cache from unsafe thread access.\n//\nPredictionContextCache.prototype.add = function(ctx) {\n\tif (ctx === PredictionContext.EMPTY) {\n\t\treturn PredictionContext.EMPTY;\n\t}\n\tvar existing = this.cache[ctx] || null;\n\tif (existing !== null) {\n\t\treturn existing;\n\t}\n\tthis.cache[ctx] = ctx;\n\treturn ctx;\n};\n\nPredictionContextCache.prototype.get = function(ctx) {\n\treturn this.cache[ctx] || null;\n};\n\nObject.defineProperty(PredictionContextCache.prototype, \"length\", {\n\tget : function() {\n\t\treturn this.cache.length;\n\t}\n});\n\nfunction SingletonPredictionContext(parent, returnState) {\n\tvar hashCode = 0;\n\tif(parent !== null) {\n\t\tvar hash = new Hash();\n\t\thash.update(parent, returnState);\n        hashCode = hash.finish();\n\t}\n\tPredictionContext.call(this, hashCode);\n\tthis.parentCtx = parent;\n\tthis.returnState = returnState;\n}\n\nSingletonPredictionContext.prototype = Object.create(PredictionContext.prototype);\nSingletonPredictionContext.prototype.contructor = SingletonPredictionContext;\n\nSingletonPredictionContext.create = function(parent, returnState) {\n\tif (returnState === PredictionContext.EMPTY_RETURN_STATE && parent === null) {\n\t\t// someone can pass in the bits of an array ctx that mean $\n\t\treturn PredictionContext.EMPTY;\n\t} else {\n\t\treturn new SingletonPredictionContext(parent, returnState);\n\t}\n};\n\nObject.defineProperty(SingletonPredictionContext.prototype, \"length\", {\n\tget : function() {\n\t\treturn 1;\n\t}\n});\n\nSingletonPredictionContext.prototype.getParent = function(index) {\n\treturn this.parentCtx;\n};\n\nSingletonPredictionContext.prototype.getReturnState = function(index) {\n\treturn this.returnState;\n};\n\nSingletonPredictionContext.prototype.equals = function(other) {\n\tif (this === other) {\n\t\treturn true;\n\t} else if (!(other instanceof SingletonPredictionContext)) {\n\t\treturn false;\n\t} else if (this.hashCode() !== other.hashCode()) {\n\t\treturn false; // can't be same if hash is different\n\t} else {\n\t\tif(this.returnState !== other.returnState)\n            return false;\n        else if(this.parentCtx==null)\n            return other.parentCtx==null\n\t\telse\n            return this.parentCtx.equals(other.parentCtx);\n\t}\n};\n\nSingletonPredictionContext.prototype.toString = function() {\n\tvar up = this.parentCtx === null ? \"\" : this.parentCtx.toString();\n\tif (up.length === 0) {\n\t\tif (this.returnState === PredictionContext.EMPTY_RETURN_STATE) {\n\t\t\treturn \"$\";\n\t\t} else {\n\t\t\treturn \"\" + this.returnState;\n\t\t}\n\t} else {\n\t\treturn \"\" + this.returnState + \" \" + up;\n\t}\n};\n\nfunction EmptyPredictionContext() {\n\tSingletonPredictionContext.call(this, null, PredictionContext.EMPTY_RETURN_STATE);\n\treturn this;\n}\n\nEmptyPredictionContext.prototype = Object.create(SingletonPredictionContext.prototype);\nEmptyPredictionContext.prototype.constructor = EmptyPredictionContext;\n\nEmptyPredictionContext.prototype.isEmpty = function() {\n\treturn true;\n};\n\nEmptyPredictionContext.prototype.getParent = function(index) {\n\treturn null;\n};\n\nEmptyPredictionContext.prototype.getReturnState = function(index) {\n\treturn this.returnState;\n};\n\nEmptyPredictionContext.prototype.equals = function(other) {\n\treturn this === other;\n};\n\nEmptyPredictionContext.prototype.toString = function() {\n\treturn \"$\";\n};\n\nPredictionContext.EMPTY = new EmptyPredictionContext();\n\nfunction ArrayPredictionContext(parents, returnStates) {\n\t// Parent can be null only if full ctx mode and we make an array\n\t// from {@link //EMPTY} and non-empty. We merge {@link //EMPTY} by using\n\t// null parent and\n\t// returnState == {@link //EMPTY_RETURN_STATE}.\n\tvar h = new Hash();\n\th.update(parents, returnStates);\n\tvar hashCode = h.finish();\n\tPredictionContext.call(this, hashCode);\n\tthis.parents = parents;\n\tthis.returnStates = returnStates;\n\treturn this;\n}\n\nArrayPredictionContext.prototype = Object.create(PredictionContext.prototype);\nArrayPredictionContext.prototype.constructor = ArrayPredictionContext;\n\nArrayPredictionContext.prototype.isEmpty = function() {\n\t// since EMPTY_RETURN_STATE can only appear in the last position, we\n\t// don't need to verify that size==1\n\treturn this.returnStates[0] === PredictionContext.EMPTY_RETURN_STATE;\n};\n\nObject.defineProperty(ArrayPredictionContext.prototype, \"length\", {\n\tget : function() {\n\t\treturn this.returnStates.length;\n\t}\n});\n\nArrayPredictionContext.prototype.getParent = function(index) {\n\treturn this.parents[index];\n};\n\nArrayPredictionContext.prototype.getReturnState = function(index) {\n\treturn this.returnStates[index];\n};\n\nArrayPredictionContext.prototype.equals = function(other) {\n\tif (this === other) {\n\t\treturn true;\n\t} else if (!(other instanceof ArrayPredictionContext)) {\n\t\treturn false;\n\t} else if (this.hashCode() !== other.hashCode()) {\n\t\treturn false; // can't be same if hash is different\n\t} else {\n\t\treturn this.returnStates === other.returnStates &&\n\t\t\t\tthis.parents === other.parents;\n\t}\n};\n\nArrayPredictionContext.prototype.toString = function() {\n\tif (this.isEmpty()) {\n\t\treturn \"[]\";\n\t} else {\n\t\tvar s = \"[\";\n\t\tfor (var i = 0; i < this.returnStates.length; i++) {\n\t\t\tif (i > 0) {\n\t\t\t\ts = s + \", \";\n\t\t\t}\n\t\t\tif (this.returnStates[i] === PredictionContext.EMPTY_RETURN_STATE) {\n\t\t\t\ts = s + \"$\";\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\ts = s + this.returnStates[i];\n\t\t\tif (this.parents[i] !== null) {\n\t\t\t\ts = s + \" \" + this.parents[i];\n\t\t\t} else {\n\t\t\t\ts = s + \"null\";\n\t\t\t}\n\t\t}\n\t\treturn s + \"]\";\n\t}\n};\n\n// Convert a {@link RuleContext} tree to a {@link PredictionContext} graph.\n// Return {@link //EMPTY} if {@code outerContext} is empty or null.\n// /\nfunction predictionContextFromRuleContext(atn, outerContext) {\n\tif (outerContext === undefined || outerContext === null) {\n\t\touterContext = RuleContext.EMPTY;\n\t}\n\t// if we are in RuleContext of start rule, s, then PredictionContext\n\t// is EMPTY. Nobody called us. (if we are empty, return empty)\n\tif (outerContext.parentCtx === null || outerContext === RuleContext.EMPTY) {\n\t\treturn PredictionContext.EMPTY;\n\t}\n\t// If we have a parent, convert it to a PredictionContext graph\n\tvar parent = predictionContextFromRuleContext(atn, outerContext.parentCtx);\n\tvar state = atn.states[outerContext.invokingState];\n\tvar transition = state.transitions[0];\n\treturn SingletonPredictionContext.create(parent, transition.followState.stateNumber);\n}\n/*\nfunction calculateListsHashString(parents, returnStates) {\n\tvar s = \"\";\n\tparents.map(function(p) {\n\t\ts = s + p;\n\t});\n\treturnStates.map(function(r) {\n\t\ts = s + r;\n\t});\n\treturn s;\n}\n*/\nfunction merge(a, b, rootIsWildcard, mergeCache) {\n\t// share same graph if both same\n\tif (a === b) {\n\t\treturn a;\n\t}\n\tif (a instanceof SingletonPredictionContext && b instanceof SingletonPredictionContext) {\n\t\treturn mergeSingletons(a, b, rootIsWildcard, mergeCache);\n\t}\n\t// At least one of a or b is array\n\t// If one is $ and rootIsWildcard, return $ as// wildcard\n\tif (rootIsWildcard) {\n\t\tif (a instanceof EmptyPredictionContext) {\n\t\t\treturn a;\n\t\t}\n\t\tif (b instanceof EmptyPredictionContext) {\n\t\t\treturn b;\n\t\t}\n\t}\n\t// convert singleton so both are arrays to normalize\n\tif (a instanceof SingletonPredictionContext) {\n\t\ta = new ArrayPredictionContext([a.getParent()], [a.returnState]);\n\t}\n\tif (b instanceof SingletonPredictionContext) {\n\t\tb = new ArrayPredictionContext([b.getParent()], [b.returnState]);\n\t}\n\treturn mergeArrays(a, b, rootIsWildcard, mergeCache);\n}\n\n//\n// Merge two {@link SingletonPredictionContext} instances.\n//\n// <p>Stack tops equal, parents merge is same; return left graph.<br>\n// <embed src=\"images/SingletonMerge_SameRootSamePar.svg\"\n// type=\"image/svg+xml\"/></p>\n//\n// <p>Same stack top, parents differ; merge parents giving array node, then\n// remainders of those graphs. A new root node is created to point to the\n// merged parents.<br>\n// <embed src=\"images/SingletonMerge_SameRootDiffPar.svg\"\n// type=\"image/svg+xml\"/></p>\n//\n// <p>Different stack tops pointing to same parent. Make array node for the\n// root where both element in the root point to the same (original)\n// parent.<br>\n// <embed src=\"images/SingletonMerge_DiffRootSamePar.svg\"\n// type=\"image/svg+xml\"/></p>\n//\n// <p>Different stack tops pointing to different parents. Make array node for\n// the root where each element points to the corresponding original\n// parent.<br>\n// <embed src=\"images/SingletonMerge_DiffRootDiffPar.svg\"\n// type=\"image/svg+xml\"/></p>\n//\n// @param a the first {@link SingletonPredictionContext}\n// @param b the second {@link SingletonPredictionContext}\n// @param rootIsWildcard {@code true} if this is a local-context merge,\n// otherwise false to indicate a full-context merge\n// @param mergeCache\n// /\nfunction mergeSingletons(a, b, rootIsWildcard, mergeCache) {\n\tif (mergeCache !== null) {\n\t\tvar previous = mergeCache.get(a, b);\n\t\tif (previous !== null) {\n\t\t\treturn previous;\n\t\t}\n\t\tprevious = mergeCache.get(b, a);\n\t\tif (previous !== null) {\n\t\t\treturn previous;\n\t\t}\n\t}\n\n\tvar rootMerge = mergeRoot(a, b, rootIsWildcard);\n\tif (rootMerge !== null) {\n\t\tif (mergeCache !== null) {\n\t\t\tmergeCache.set(a, b, rootMerge);\n\t\t}\n\t\treturn rootMerge;\n\t}\n\tif (a.returnState === b.returnState) {\n\t\tvar parent = merge(a.parentCtx, b.parentCtx, rootIsWildcard, mergeCache);\n\t\t// if parent is same as existing a or b parent or reduced to a parent,\n\t\t// return it\n\t\tif (parent === a.parentCtx) {\n\t\t\treturn a; // ax + bx = ax, if a=b\n\t\t}\n\t\tif (parent === b.parentCtx) {\n\t\t\treturn b; // ax + bx = bx, if a=b\n\t\t}\n\t\t// else: ax + ay = a'[x,y]\n\t\t// merge parents x and y, giving array node with x,y then remainders\n\t\t// of those graphs. dup a, a' points at merged array\n\t\t// new joined parent so create new singleton pointing to it, a'\n\t\tvar spc = SingletonPredictionContext.create(parent, a.returnState);\n\t\tif (mergeCache !== null) {\n\t\t\tmergeCache.set(a, b, spc);\n\t\t}\n\t\treturn spc;\n\t} else { // a != b payloads differ\n\t\t// see if we can collapse parents due to $+x parents if local ctx\n\t\tvar singleParent = null;\n\t\tif (a === b || (a.parentCtx !== null && a.parentCtx === b.parentCtx)) { // ax +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// bx =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// [a,b]x\n\t\t\tsingleParent = a.parentCtx;\n\t\t}\n\t\tif (singleParent !== null) { // parents are same\n\t\t\t// sort payloads and use same parent\n\t\t\tvar payloads = [ a.returnState, b.returnState ];\n\t\t\tif (a.returnState > b.returnState) {\n\t\t\t\tpayloads[0] = b.returnState;\n\t\t\t\tpayloads[1] = a.returnState;\n\t\t\t}\n\t\t\tvar parents = [ singleParent, singleParent ];\n\t\t\tvar apc = new ArrayPredictionContext(parents, payloads);\n\t\t\tif (mergeCache !== null) {\n\t\t\t\tmergeCache.set(a, b, apc);\n\t\t\t}\n\t\t\treturn apc;\n\t\t}\n\t\t// parents differ and can't merge them. Just pack together\n\t\t// into array; can't merge.\n\t\t// ax + by = [ax,by]\n\t\tvar payloads = [ a.returnState, b.returnState ];\n\t\tvar parents = [ a.parentCtx, b.parentCtx ];\n\t\tif (a.returnState > b.returnState) { // sort by payload\n\t\t\tpayloads[0] = b.returnState;\n\t\t\tpayloads[1] = a.returnState;\n\t\t\tparents = [ b.parentCtx, a.parentCtx ];\n\t\t}\n\t\tvar a_ = new ArrayPredictionContext(parents, payloads);\n\t\tif (mergeCache !== null) {\n\t\t\tmergeCache.set(a, b, a_);\n\t\t}\n\t\treturn a_;\n\t}\n}\n\n//\n// Handle case where at least one of {@code a} or {@code b} is\n// {@link //EMPTY}. In the following diagrams, the symbol {@code $} is used\n// to represent {@link //EMPTY}.\n//\n// <h2>Local-Context Merges</h2>\n//\n// <p>These local-context merge operations are used when {@code rootIsWildcard}\n// is true.</p>\n//\n// <p>{@link //EMPTY} is superset of any graph; return {@link //EMPTY}.<br>\n// <embed src=\"images/LocalMerge_EmptyRoot.svg\" type=\"image/svg+xml\"/></p>\n//\n// <p>{@link //EMPTY} and anything is {@code //EMPTY}, so merged parent is\n// {@code //EMPTY}; return left graph.<br>\n// <embed src=\"images/LocalMerge_EmptyParent.svg\" type=\"image/svg+xml\"/></p>\n//\n// <p>Special case of last merge if local context.<br>\n// <embed src=\"images/LocalMerge_DiffRoots.svg\" type=\"image/svg+xml\"/></p>\n//\n// <h2>Full-Context Merges</h2>\n//\n// <p>These full-context merge operations are used when {@code rootIsWildcard}\n// is false.</p>\n//\n// <p><embed src=\"images/FullMerge_EmptyRoots.svg\" type=\"image/svg+xml\"/></p>\n//\n// <p>Must keep all contexts; {@link //EMPTY} in array is a special value (and\n// null parent).<br>\n// <embed src=\"images/FullMerge_EmptyRoot.svg\" type=\"image/svg+xml\"/></p>\n//\n// <p><embed src=\"images/FullMerge_SameRoot.svg\" type=\"image/svg+xml\"/></p>\n//\n// @param a the first {@link SingletonPredictionContext}\n// @param b the second {@link SingletonPredictionContext}\n// @param rootIsWildcard {@code true} if this is a local-context merge,\n// otherwise false to indicate a full-context merge\n// /\nfunction mergeRoot(a, b, rootIsWildcard) {\n\tif (rootIsWildcard) {\n\t\tif (a === PredictionContext.EMPTY) {\n\t\t\treturn PredictionContext.EMPTY; // // + b =//\n\t\t}\n\t\tif (b === PredictionContext.EMPTY) {\n\t\t\treturn PredictionContext.EMPTY; // a +// =//\n\t\t}\n\t} else {\n\t\tif (a === PredictionContext.EMPTY && b === PredictionContext.EMPTY) {\n\t\t\treturn PredictionContext.EMPTY; // $ + $ = $\n\t\t} else if (a === PredictionContext.EMPTY) { // $ + x = [$,x]\n\t\t\tvar payloads = [ b.returnState,\n\t\t\t\t\tPredictionContext.EMPTY_RETURN_STATE ];\n\t\t\tvar parents = [ b.parentCtx, null ];\n\t\t\treturn new ArrayPredictionContext(parents, payloads);\n\t\t} else if (b === PredictionContext.EMPTY) { // x + $ = [$,x] ($ is always first if present)\n\t\t\tvar payloads = [ a.returnState, PredictionContext.EMPTY_RETURN_STATE ];\n\t\t\tvar parents = [ a.parentCtx, null ];\n\t\t\treturn new ArrayPredictionContext(parents, payloads);\n\t\t}\n\t}\n\treturn null;\n}\n\n//\n// Merge two {@link ArrayPredictionContext} instances.\n//\n// <p>Different tops, different parents.<br>\n// <embed src=\"images/ArrayMerge_DiffTopDiffPar.svg\" type=\"image/svg+xml\"/></p>\n//\n// <p>Shared top, same parents.<br>\n// <embed src=\"images/ArrayMerge_ShareTopSamePar.svg\" type=\"image/svg+xml\"/></p>\n//\n// <p>Shared top, different parents.<br>\n// <embed src=\"images/ArrayMerge_ShareTopDiffPar.svg\" type=\"image/svg+xml\"/></p>\n//\n// <p>Shared top, all shared parents.<br>\n// <embed src=\"images/ArrayMerge_ShareTopSharePar.svg\"\n// type=\"image/svg+xml\"/></p>\n//\n// <p>Equal tops, merge parents and reduce top to\n// {@link SingletonPredictionContext}.<br>\n// <embed src=\"images/ArrayMerge_EqualTop.svg\" type=\"image/svg+xml\"/></p>\n// /\nfunction mergeArrays(a, b, rootIsWildcard, mergeCache) {\n\tif (mergeCache !== null) {\n\t\tvar previous = mergeCache.get(a, b);\n\t\tif (previous !== null) {\n\t\t\treturn previous;\n\t\t}\n\t\tprevious = mergeCache.get(b, a);\n\t\tif (previous !== null) {\n\t\t\treturn previous;\n\t\t}\n\t}\n\t// merge sorted payloads a + b => M\n\tvar i = 0; // walks a\n\tvar j = 0; // walks b\n\tvar k = 0; // walks target M array\n\n\tvar mergedReturnStates = [];\n\tvar mergedParents = [];\n\t// walk and merge to yield mergedParents, mergedReturnStates\n\twhile (i < a.returnStates.length && j < b.returnStates.length) {\n\t\tvar a_parent = a.parents[i];\n\t\tvar b_parent = b.parents[j];\n\t\tif (a.returnStates[i] === b.returnStates[j]) {\n\t\t\t// same payload (stack tops are equal), must yield merged singleton\n\t\t\tvar payload = a.returnStates[i];\n\t\t\t// $+$ = $\n\t\t\tvar bothDollars = payload === PredictionContext.EMPTY_RETURN_STATE &&\n\t\t\t\t\ta_parent === null && b_parent === null;\n\t\t\tvar ax_ax = (a_parent !== null && b_parent !== null && a_parent === b_parent); // ax+ax\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// ->\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// ax\n\t\t\tif (bothDollars || ax_ax) {\n\t\t\t\tmergedParents[k] = a_parent; // choose left\n\t\t\t\tmergedReturnStates[k] = payload;\n\t\t\t} else { // ax+ay -> a'[x,y]\n\t\t\t\tvar mergedParent = merge(a_parent, b_parent, rootIsWildcard, mergeCache);\n\t\t\t\tmergedParents[k] = mergedParent;\n\t\t\t\tmergedReturnStates[k] = payload;\n\t\t\t}\n\t\t\ti += 1; // hop over left one as usual\n\t\t\tj += 1; // but also skip one in right side since we merge\n\t\t} else if (a.returnStates[i] < b.returnStates[j]) { // copy a[i] to M\n\t\t\tmergedParents[k] = a_parent;\n\t\t\tmergedReturnStates[k] = a.returnStates[i];\n\t\t\ti += 1;\n\t\t} else { // b > a, copy b[j] to M\n\t\t\tmergedParents[k] = b_parent;\n\t\t\tmergedReturnStates[k] = b.returnStates[j];\n\t\t\tj += 1;\n\t\t}\n\t\tk += 1;\n\t}\n\t// copy over any payloads remaining in either array\n\tif (i < a.returnStates.length) {\n\t\tfor (var p = i; p < a.returnStates.length; p++) {\n\t\t\tmergedParents[k] = a.parents[p];\n\t\t\tmergedReturnStates[k] = a.returnStates[p];\n\t\t\tk += 1;\n\t\t}\n\t} else {\n\t\tfor (var p = j; p < b.returnStates.length; p++) {\n\t\t\tmergedParents[k] = b.parents[p];\n\t\t\tmergedReturnStates[k] = b.returnStates[p];\n\t\t\tk += 1;\n\t\t}\n\t}\n\t// trim merged if we combined a few that had same stack tops\n\tif (k < mergedParents.length) { // write index < last position; trim\n\t\tif (k === 1) { // for just one merged element, return singleton top\n\t\t\tvar a_ = SingletonPredictionContext.create(mergedParents[0],\n\t\t\t\t\tmergedReturnStates[0]);\n\t\t\tif (mergeCache !== null) {\n\t\t\t\tmergeCache.set(a, b, a_);\n\t\t\t}\n\t\t\treturn a_;\n\t\t}\n\t\tmergedParents = mergedParents.slice(0, k);\n\t\tmergedReturnStates = mergedReturnStates.slice(0, k);\n\t}\n\n\tvar M = new ArrayPredictionContext(mergedParents, mergedReturnStates);\n\n\t// if we created same array as a or b, return that instead\n\t// TODO: track whether this is possible above during merge sort for speed\n\tif (M === a) {\n\t\tif (mergeCache !== null) {\n\t\t\tmergeCache.set(a, b, a);\n\t\t}\n\t\treturn a;\n\t}\n\tif (M === b) {\n\t\tif (mergeCache !== null) {\n\t\t\tmergeCache.set(a, b, b);\n\t\t}\n\t\treturn b;\n\t}\n\tcombineCommonParents(mergedParents);\n\n\tif (mergeCache !== null) {\n\t\tmergeCache.set(a, b, M);\n\t}\n\treturn M;\n}\n\n//\n// Make pass over all <em>M</em> {@code parents}; merge any {@code equals()}\n// ones.\n// /\nfunction combineCommonParents(parents) {\n\tvar uniqueParents = {};\n\n\tfor (var p = 0; p < parents.length; p++) {\n\t\tvar parent = parents[p];\n\t\tif (!(parent in uniqueParents)) {\n\t\t\tuniqueParents[parent] = parent;\n\t\t}\n\t}\n\tfor (var q = 0; q < parents.length; q++) {\n\t\tparents[q] = uniqueParents[parents[q]];\n\t}\n}\n\nfunction getCachedPredictionContext(context, contextCache, visited) {\n\tif (context.isEmpty()) {\n\t\treturn context;\n\t}\n\tvar existing = visited[context] || null;\n\tif (existing !== null) {\n\t\treturn existing;\n\t}\n\texisting = contextCache.get(context);\n\tif (existing !== null) {\n\t\tvisited[context] = existing;\n\t\treturn existing;\n\t}\n\tvar changed = false;\n\tvar parents = [];\n\tfor (var i = 0; i < parents.length; i++) {\n\t\tvar parent = getCachedPredictionContext(context.getParent(i), contextCache, visited);\n\t\tif (changed || parent !== context.getParent(i)) {\n\t\t\tif (!changed) {\n\t\t\t\tparents = [];\n\t\t\t\tfor (var j = 0; j < context.length; j++) {\n\t\t\t\t\tparents[j] = context.getParent(j);\n\t\t\t\t}\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t\tparents[i] = parent;\n\t\t}\n\t}\n\tif (!changed) {\n\t\tcontextCache.add(context);\n\t\tvisited[context] = context;\n\t\treturn context;\n\t}\n\tvar updated = null;\n\tif (parents.length === 0) {\n\t\tupdated = PredictionContext.EMPTY;\n\t} else if (parents.length === 1) {\n\t\tupdated = SingletonPredictionContext.create(parents[0], context\n\t\t\t\t.getReturnState(0));\n\t} else {\n\t\tupdated = new ArrayPredictionContext(parents, context.returnStates);\n\t}\n\tcontextCache.add(updated);\n\tvisited[updated] = updated;\n\tvisited[context] = updated;\n\n\treturn updated;\n}\n\n// ter's recursive version of Sam's getAllNodes()\nfunction getAllContextNodes(context, nodes, visited) {\n\tif (nodes === null) {\n\t\tnodes = [];\n\t\treturn getAllContextNodes(context, nodes, visited);\n\t} else if (visited === null) {\n\t\tvisited = {};\n\t\treturn getAllContextNodes(context, nodes, visited);\n\t} else {\n\t\tif (context === null || visited[context] !== null) {\n\t\t\treturn nodes;\n\t\t}\n\t\tvisited[context] = context;\n\t\tnodes.push(context);\n\t\tfor (var i = 0; i < context.length; i++) {\n\t\t\tgetAllContextNodes(context.getParent(i), nodes, visited);\n\t\t}\n\t\treturn nodes;\n\t}\n}\n\nexports.merge = merge;\nexports.PredictionContext = PredictionContext;\nexports.PredictionContextCache = PredictionContextCache;\nexports.SingletonPredictionContext = SingletonPredictionContext;\nexports.predictionContextFromRuleContext = predictionContextFromRuleContext;\nexports.getCachedPredictionContext = getCachedPredictionContext;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/PredictionContext.js\n// module id = YFoD\n// module chunks = 0 1 2","<template>\n  <div class=\"presentable-steps\">\n    <el-steps :space=\"300\"\n              :active=\"active\"\n              :process-status=\"processStatus\"\n              :finish-status=\"finishStatus\"\n              align-center>\n      <el-step title=\"创建合同\" description=\"与资源作者签订资源使用策略\"></el-step>\n      <el-step title=\"创建user policy\" description=\"制定用户查看Presentable的策略\"></el-step>\n      <el-step title=\"完成\" description=\"成功创建Presentable\"></el-step>\n    </el-steps>\n  </div>\n</template>\n\n<script>\n  import PresentableSteps from './index'\n  export default PresentableSteps\n</script>\n\n<style lang=\"less\" scoped>\n .presentable-steps {\n   position: relative;\n   left: 50%;\n   transform: translate(-25%,0);\n\n   text-align: center;\n   margin-bottom: 15px;\n }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/views/node/presentable/steps/index.vue","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-d708ef40\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../../node_modules/less-loader/dist/cjs.js?{\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"4b7ceff2\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/vue-style-loader!./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-d708ef40\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/less-loader/dist/cjs.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/views/node/presentable/edit/index.vue\n// module id = a1Cn\n// module chunks = 2","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._l((_vm.presentableTags),function(tag){return _c('el-tag',{key:tag,attrs:{\"closable\":\"\",\"disable-transitions\":false},on:{\"close\":function($event){_vm.handleClose(tag)}}},[_vm._v(\"\\n    \"+_vm._s(tag)+\"\\n  \")])}),_vm._v(\" \"),(_vm.inputVisible)?_c('el-input',{ref:\"saveTagInput\",staticClass:\"input-new-tag\",attrs:{\"size\":\"small\"},on:{\"blur\":_vm.handleInputConfirm},nativeOn:{\"keyup\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"enter\",13,$event.key)){ return null; }_vm.handleInputConfirm($event)}},model:{value:(_vm.inputValue),callback:function ($$v) {_vm.inputValue=$$v},expression:\"inputValue\"}}):_c('el-button',{staticClass:\"button-new-tag\",attrs:{\"size\":\"small\"},on:{\"click\":_vm.showInput}},[_vm._v(\"+ New Tag\")])],2)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-09f5c69c\",\"hasScoped\":true,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/node/presentable/tags/index.vue\n// module id = aX82\n// module chunks = 2","export const RESOURCE_TYPES = {\n  widget: 'widget',\n  image: 'image',\n  audio: 'audio',\n  markdown: 'markdown',\n  pageBuild: 'page_build',\n  revealSlide: 'reveal_slide'\n};\n\n\nexport const RESOURCE_STATUS = [\n  {\n    text: '未知状态',\n    type: 'info'\n  }, {\n    text: '正常',\n    type: 'info'\n  }, {\n    text: '发布',\n    type: 'success'\n  }, {\n    text: '冻结',\n    type: 'danger'\n  }\n]\n\n\n\n// WEBPACK FOOTER //\n// ./src/config/resource.js","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".presentable-steps[data-v-b9e66b48]{position:relative;left:50%;-webkit-transform:translate(-25%);transform:translate(-25%);text-align:center;margin-bottom:15px}\", \"\", {\"version\":3,\"sources\":[\"/Users/daizecheng/workplace/freelog/console/client/src/views/node/presentable/steps/index.vue\"],\"names\":[],\"mappings\":\"AACA,oCACE,kBAAmB,AACnB,SAAU,AACV,kCAAsC,AAC9B,0BAA8B,AACtC,kBAAmB,AACnB,kBAAoB,CACrB\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.presentable-steps[data-v-b9e66b48] {\\n  position: relative;\\n  left: 50%;\\n  -webkit-transform: translate(-25%, 0);\\n          transform: translate(-25%, 0);\\n  text-align: center;\\n  margin-bottom: 15px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-b9e66b48\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/less-loader/dist/cjs.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/views/node/presentable/steps/index.vue\n// module id = bCSO\n// module chunks = 0 2","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\nvar DFAState = require('./../dfa/DFAState').DFAState;\nvar ATNConfigSet = require('./ATNConfigSet').ATNConfigSet;\nvar getCachedPredictionContext = require('./../PredictionContext').getCachedPredictionContext;\n\nfunction ATNSimulator(atn, sharedContextCache) {\n\n    // The context cache maps all PredictionContext objects that are ==\n    //  to a single cached copy. This cache is shared across all contexts\n    //  in all ATNConfigs in all DFA states.  We rebuild each ATNConfigSet\n    //  to use only cached nodes/graphs in addDFAState(). We don't want to\n    //  fill this during closure() since there are lots of contexts that\n    //  pop up but are not used ever again. It also greatly slows down closure().\n    //\n    //  <p>This cache makes a huge difference in memory and a little bit in speed.\n    //  For the Java grammar on java.*, it dropped the memory requirements\n    //  at the end from 25M to 16M. We don't store any of the full context\n    //  graphs in the DFA because they are limited to local context only,\n    //  but apparently there's a lot of repetition there as well. We optimize\n    //  the config contexts before storing the config set in the DFA states\n    //  by literally rebuilding them with cached subgraphs only.</p>\n    //\n    //  <p>I tried a cache for use during closure operations, that was\n    //  whacked after each adaptivePredict(). It cost a little bit\n    //  more time I think and doesn't save on the overall footprint\n    //  so it's not worth the complexity.</p>\n    ///\n    this.atn = atn;\n    this.sharedContextCache = sharedContextCache;\n    return this;\n}\n\n// Must distinguish between missing edge and edge we know leads nowhere///\nATNSimulator.ERROR = new DFAState(0x7FFFFFFF, new ATNConfigSet());\n\n\nATNSimulator.prototype.getCachedContext = function(context) {\n    if (this.sharedContextCache ===null) {\n        return context;\n    }\n    var visited = {};\n    return getCachedPredictionContext(context, this.sharedContextCache, visited);\n};\n\nexports.ATNSimulator = ATNSimulator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/atn/ATNSimulator.js\n// module id = bcvg\n// module chunks = 0 1 2","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nfunction arrayToString(a) {\n    return \"[\" + a.join(\", \") + \"]\";\n}\n\nString.prototype.seed = String.prototype.seed || Math.round(Math.random() * Math.pow(2, 32));\n\nString.prototype.hashCode = function () {\n    var remainder, bytes, h1, h1b, c1, c1b, c2, c2b, k1, i,\n        key = this.toString();\n\n    remainder = key.length & 3; // key.length % 4\n    bytes = key.length - remainder;\n    h1 = String.prototype.seed;\n    c1 = 0xcc9e2d51;\n    c2 = 0x1b873593;\n    i = 0;\n\n    while (i < bytes) {\n        k1 =\n            ((key.charCodeAt(i) & 0xff)) |\n            ((key.charCodeAt(++i) & 0xff) << 8) |\n            ((key.charCodeAt(++i) & 0xff) << 16) |\n            ((key.charCodeAt(++i) & 0xff) << 24);\n        ++i;\n\n        k1 = ((((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16))) & 0xffffffff;\n        k1 = (k1 << 15) | (k1 >>> 17);\n        k1 = ((((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16))) & 0xffffffff;\n\n        h1 ^= k1;\n        h1 = (h1 << 13) | (h1 >>> 19);\n        h1b = ((((h1 & 0xffff) * 5) + ((((h1 >>> 16) * 5) & 0xffff) << 16))) & 0xffffffff;\n        h1 = (((h1b & 0xffff) + 0x6b64) + ((((h1b >>> 16) + 0xe654) & 0xffff) << 16));\n    }\n\n    k1 = 0;\n\n    switch (remainder) {\n        case 3:\n            k1 ^= (key.charCodeAt(i + 2) & 0xff) << 16;\n        case 2:\n            k1 ^= (key.charCodeAt(i + 1) & 0xff) << 8;\n        case 1:\n            k1 ^= (key.charCodeAt(i) & 0xff);\n\n            k1 = (((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16)) & 0xffffffff;\n            k1 = (k1 << 15) | (k1 >>> 17);\n            k1 = (((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16)) & 0xffffffff;\n            h1 ^= k1;\n    }\n\n    h1 ^= key.length;\n\n    h1 ^= h1 >>> 16;\n    h1 = (((h1 & 0xffff) * 0x85ebca6b) + ((((h1 >>> 16) * 0x85ebca6b) & 0xffff) << 16)) & 0xffffffff;\n    h1 ^= h1 >>> 13;\n    h1 = ((((h1 & 0xffff) * 0xc2b2ae35) + ((((h1 >>> 16) * 0xc2b2ae35) & 0xffff) << 16))) & 0xffffffff;\n    h1 ^= h1 >>> 16;\n\n    return h1 >>> 0;\n};\n\nfunction standardEqualsFunction(a, b) {\n    return a.equals(b);\n}\n\nfunction standardHashCodeFunction(a) {\n    return a.hashCode();\n}\n\nfunction Set(hashFunction, equalsFunction) {\n    this.data = {};\n    this.hashFunction = hashFunction || standardHashCodeFunction;\n    this.equalsFunction = equalsFunction || standardEqualsFunction;\n    return this;\n}\n\nObject.defineProperty(Set.prototype, \"length\", {\n    get: function () {\n        var l = 0;\n        for (var key in this.data) {\n            if (key.indexOf(\"hash_\") === 0) {\n                l = l + this.data[key].length;\n            }\n        }\n        return l;\n    }\n});\n\nSet.prototype.add = function (value) {\n    var hash = this.hashFunction(value);\n    var key = \"hash_\" + hash;\n    if (key in this.data) {\n        var values = this.data[key];\n        for (var i = 0; i < values.length; i++) {\n            if (this.equalsFunction(value, values[i])) {\n                return values[i];\n            }\n        }\n        values.push(value);\n        return value;\n    } else {\n        this.data[key] = [value];\n        return value;\n    }\n};\n\nSet.prototype.contains = function (value) {\n    return this.get(value) != null;\n};\n\nSet.prototype.get = function (value) {\n    var hash = this.hashFunction(value);\n    var key = \"hash_\" + hash;\n    if (key in this.data) {\n        var values = this.data[key];\n        for (var i = 0; i < values.length; i++) {\n            if (this.equalsFunction(value, values[i])) {\n                return values[i];\n            }\n        }\n    }\n    return null;\n};\n\nSet.prototype.values = function () {\n    var l = [];\n    for (var key in this.data) {\n        if (key.indexOf(\"hash_\") === 0) {\n            l = l.concat(this.data[key]);\n        }\n    }\n    return l;\n};\n\nSet.prototype.toString = function () {\n    return arrayToString(this.values());\n};\n\nfunction BitSet() {\n    this.data = [];\n    return this;\n}\n\nBitSet.prototype.add = function (value) {\n    this.data[value] = true;\n};\n\nBitSet.prototype.or = function (set) {\n    var bits = this;\n    Object.keys(set.data).map(function (alt) {\n        bits.add(alt);\n    });\n};\n\nBitSet.prototype.remove = function (value) {\n    delete this.data[value];\n};\n\nBitSet.prototype.contains = function (value) {\n    return this.data[value] === true;\n};\n\nBitSet.prototype.values = function () {\n    return Object.keys(this.data);\n};\n\nBitSet.prototype.minValue = function () {\n    return Math.min.apply(null, this.values());\n};\n\nBitSet.prototype.hashCode = function () {\n    var hash = new Hash();\n    hash.update(this.values());\n    return hash.finish();\n};\n\nBitSet.prototype.equals = function (other) {\n    if (!(other instanceof BitSet)) {\n        return false;\n    }\n    return this.hashCode() === other.hashCode();\n};\n\nObject.defineProperty(BitSet.prototype, \"length\", {\n    get: function () {\n        return this.values().length;\n    }\n});\n\nBitSet.prototype.toString = function () {\n    return \"{\" + this.values().join(\", \") + \"}\";\n};\n\nfunction Map(hashFunction, equalsFunction) {\n    this.data = {};\n    this.hashFunction = hashFunction || standardHashCodeFunction;\n    this.equalsFunction = equalsFunction || standardEqualsFunction;\n    return this;\n}\n\nObject.defineProperty(Map.prototype, \"length\", {\n    get: function () {\n        var l = 0;\n        for (var hashKey in this.data) {\n            if (hashKey.indexOf(\"hash_\") === 0) {\n                l = l + this.data[hashKey].length;\n            }\n        }\n        return l;\n    }\n});\n\nMap.prototype.put = function (key, value) {\n    var hashKey = \"hash_\" + this.hashFunction(key);\n    if (hashKey in this.data) {\n        var entries = this.data[hashKey];\n        for (var i = 0; i < entries.length; i++) {\n            var entry = entries[i];\n            if (this.equalsFunction(key, entry.key)) {\n                var oldValue = entry.value;\n                entry.value = value;\n                return oldValue;\n            }\n        }\n        entries.push({key:key, value:value});\n        return value;\n    } else {\n        this.data[hashKey] = [{key:key, value:value}];\n        return value;\n    }\n};\n\nMap.prototype.containsKey = function (key) {\n    var hashKey = \"hash_\" + this.hashFunction(key);\n    if(hashKey in this.data) {\n        var entries = this.data[hashKey];\n        for (var i = 0; i < entries.length; i++) {\n            var entry = entries[i];\n            if (this.equalsFunction(key, entry.key))\n                return true;\n        }\n    }\n    return false;\n};\n\nMap.prototype.get = function (key) {\n    var hashKey = \"hash_\" + this.hashFunction(key);\n    if(hashKey in this.data) {\n        var entries = this.data[hashKey];\n        for (var i = 0; i < entries.length; i++) {\n            var entry = entries[i];\n            if (this.equalsFunction(key, entry.key))\n                return entry.value;\n        }\n    }\n    return null;\n};\n\nMap.prototype.entries = function () {\n    var l = [];\n    for (var key in this.data) {\n        if (key.indexOf(\"hash_\") === 0) {\n            l = l.concat(this.data[key]);\n        }\n    }\n    return l;\n};\n\n\nMap.prototype.getKeys = function () {\n    return this.entries().map(function(e) {\n        return e.key;\n    });\n};\n\n\nMap.prototype.getValues = function () {\n    return this.entries().map(function(e) {\n            return e.value;\n    });\n};\n\n\nMap.prototype.toString = function () {\n    var ss = this.entries().map(function(entry) {\n        return '{' + entry.key + ':' + entry.value + '}';\n    });\n    return '[' + ss.join(\", \") + ']';\n};\n\n\nfunction AltDict() {\n    this.data = {};\n    return this;\n}\n\n\nAltDict.prototype.get = function (key) {\n    key = \"k-\" + key;\n    if (key in this.data) {\n        return this.data[key];\n    } else {\n        return null;\n    }\n};\n\nAltDict.prototype.put = function (key, value) {\n    key = \"k-\" + key;\n    this.data[key] = value;\n};\n\nAltDict.prototype.values = function () {\n    var data = this.data;\n    var keys = Object.keys(this.data);\n    return keys.map(function (key) {\n        return data[key];\n    });\n};\n\nfunction DoubleDict() {\n    return this;\n}\n\nfunction Hash() {\n    this.count = 0;\n    this.hash = 0;\n    return this;\n}\n\nHash.prototype.update = function () {\n    for(var i=0;i<arguments.length;i++) {\n        var value = arguments[i];\n        if (value == null)\n            continue;\n        if(Array.isArray(value))\n            this.update.apply(value);\n        else {\n            var k = 0;\n            switch (typeof(value)) {\n                case 'undefined':\n                case 'function':\n                    continue;\n                case 'number':\n                case 'boolean':\n                    k = value;\n                    break;\n                case 'string':\n                    k = value.hashCode();\n                    break;\n                default:\n                    value.updateHashCode(this);\n                    continue;\n            }\n            k = k * 0xCC9E2D51;\n            k = (k << 15) | (k >>> (32 - 15));\n            k = k * 0x1B873593;\n            this.count = this.count + 1;\n            var hash = this.hash ^ k;\n            hash = (hash << 13) | (hash >>> (32 - 13));\n            hash = hash * 5 + 0xE6546B64;\n            this.hash = hash;\n        }\n    }\n}\n\nHash.prototype.finish = function () {\n    var hash = this.hash ^ (this.count * 4);\n    hash = hash ^ (hash >>> 16);\n    hash = hash * 0x85EBCA6B;\n    hash = hash ^ (hash >>> 13);\n    hash = hash * 0xC2B2AE35;\n    hash = hash ^ (hash >>> 16);\n    return hash;\n}\n\nfunction hashStuff() {\n    var hash = new Hash();\n    hash.update.apply(arguments);\n    return hash.finish();\n}\n\nDoubleDict.prototype.get = function (a, b) {\n    var d = this[a] || null;\n    return d === null ? null : (d[b] || null);\n};\n\nDoubleDict.prototype.set = function (a, b, o) {\n    var d = this[a] || null;\n    if (d === null) {\n        d = {};\n        this[a] = d;\n    }\n    d[b] = o;\n};\n\n\nfunction escapeWhitespace(s, escapeSpaces) {\n    s = s.replace(/\\t/g, \"\\\\t\")\n         .replace(/\\n/g, \"\\\\n\")\n         .replace(/\\r/g, \"\\\\r\");\n    if (escapeSpaces) {\n        s = s.replace(/ /g, \"\\u00B7\");\n    }\n    return s;\n}\n\nfunction titleCase(str) {\n    return str.replace(/\\w\\S*/g, function (txt) {\n        return txt.charAt(0).toUpperCase() + txt.substr(1);\n    });\n};\n\nfunction equalArrays(a, b)\n{\n    if (!Array.isArray(a) || !Array.isArray(b))\n        return false;\n    if (a == b)\n        return true;\n    if (a.length != b.length)\n        return false;\n    for (var i = 0; i < a.length; i++) {\n        if (a[i] == b[i])\n            continue;\n        if (!a[i].equals(b[i]))\n            return false;\n    }\n    return true;\n};\n\nexports.Hash = Hash;\nexports.Set = Set;\nexports.Map = Map;\nexports.BitSet = BitSet;\nexports.AltDict = AltDict;\nexports.DoubleDict = DoubleDict;\nexports.hashStuff = hashStuff;\nexports.escapeWhitespace = escapeWhitespace;\nexports.arrayToString = arrayToString;\nexports.titleCase = titleCase;\nexports.equalArrays = equalArrays;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/Utils.js\n// module id = bz+k\n// module chunks = 0 1 2","require('../../modules/es6.number.is-integer');\nmodule.exports = require('../../modules/_core').Number.isInteger;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/number/is-integer.js\n// module id = c45H\n// module chunks = 0 2","\"use strict\";\n\nexports.__esModule = true;\n\nvar _isIterable2 = require(\"../core-js/is-iterable\");\n\nvar _isIterable3 = _interopRequireDefault(_isIterable2);\n\nvar _getIterator2 = require(\"../core-js/get-iterator\");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if ((0, _isIterable3.default)(Object(arr))) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/helpers/slicedToArray.js\n// module id = d7EF\n// module chunks = 0 2","export const PRESENTABLE_STATUS_TIPS = [\n  {\n    text: '测试状态',\n    type: 'info'\n  },\n  {\n    text: '未开始执行',\n    type: 'info'\n  },\n  {\n    text: '执行中',\n    type: ''\n  },\n  {\n    text: '生效中',\n    type: 'success'\n  },\n  {\n    text: '用户终止',\n    type: 'danger'\n  },\n  {\n    text: '系统终止',\n    type: 'danger'\n  }\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/config/presentable.js","function injectStyle (ssrContext) {\n  require(\"!!../../../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3eb35d32\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-3eb35d32\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-3eb35d32\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/node/presentable/contract/detail/index.vue\n// module id = dibs\n// module chunks = 2","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $values = require('./_object-to-array')(false);\n\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es7.object.values.js\n// module id = fZOM\n// module chunks = 0 2","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.get-iterator');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/get-iterator.js\n// module id = fxRn\n// module chunks = 0 2","var anObject = require('./_an-object');\nvar get = require('./core.get-iterator-method');\nmodule.exports = require('./_core').getIterator = function (it) {\n  var iterFn = get(it);\n  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/core.get-iterator.js\n// module id = g8Ux\n// module chunks = 0 2","module.exports = { \"default\": require(\"core-js/library/fn/object/values\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/object/values.js\n// module id = gRE1\n// module chunks = 0 2","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\n// A lexer is recognizer that draws input symbols from a character stream.\n//  lexer grammars result in a subclass of this object. A Lexer object\n//  uses simplified match() and error recovery mechanisms in the interest of speed.\n\nvar Token = require('./Token').Token;\nvar Recognizer = require('./Recognizer').Recognizer;\nvar CommonTokenFactory = require('./CommonTokenFactory').CommonTokenFactory;\nvar RecognitionException  = require('./error/Errors').RecognitionException;\nvar LexerNoViableAltException = require('./error/Errors').LexerNoViableAltException;\n\nfunction TokenSource() {\n\treturn this;\n}\n\nfunction Lexer(input) {\n\tRecognizer.call(this);\n\tthis._input = input;\n\tthis._factory = CommonTokenFactory.DEFAULT;\n\tthis._tokenFactorySourcePair = [ this, input ];\n\n\tthis._interp = null; // child classes must populate this\n\n\t// The goal of all lexer rules/methods is to create a token object.\n\t// this is an instance variable as multiple rules may collaborate to\n\t// create a single token. nextToken will return this object after\n\t// matching lexer rule(s). If you subclass to allow multiple token\n\t// emissions, then set this to the last token to be matched or\n\t// something nonnull so that the auto token emit mechanism will not\n\t// emit another token.\n\tthis._token = null;\n\n\t// What character index in the stream did the current token start at?\n\t// Needed, for example, to get the text for current token. Set at\n\t// the start of nextToken.\n\tthis._tokenStartCharIndex = -1;\n\n\t// The line on which the first character of the token resides///\n\tthis._tokenStartLine = -1;\n\n\t// The character position of first character within the line///\n\tthis._tokenStartColumn = -1;\n\n\t// Once we see EOF on char stream, next token will be EOF.\n\t// If you have DONE : EOF ; then you see DONE EOF.\n\tthis._hitEOF = false;\n\n\t// The channel number for the current token///\n\tthis._channel = Token.DEFAULT_CHANNEL;\n\n\t// The token type for the current token///\n\tthis._type = Token.INVALID_TYPE;\n\n\tthis._modeStack = [];\n\tthis._mode = Lexer.DEFAULT_MODE;\n\n\t// You can set the text for the current token to override what is in\n\t// the input char buffer. Use setText() or can set this instance var.\n\t// /\n\tthis._text = null;\n\n\treturn this;\n}\n\nLexer.prototype = Object.create(Recognizer.prototype);\nLexer.prototype.constructor = Lexer;\n\nLexer.DEFAULT_MODE = 0;\nLexer.MORE = -2;\nLexer.SKIP = -3;\n\nLexer.DEFAULT_TOKEN_CHANNEL = Token.DEFAULT_CHANNEL;\nLexer.HIDDEN = Token.HIDDEN_CHANNEL;\nLexer.MIN_CHAR_VALUE = 0x0000;\nLexer.MAX_CHAR_VALUE = 0x10FFFF;\n\nLexer.prototype.reset = function() {\n\t// wack Lexer state variables\n\tif (this._input !== null) {\n\t\tthis._input.seek(0); // rewind the input\n\t}\n\tthis._token = null;\n\tthis._type = Token.INVALID_TYPE;\n\tthis._channel = Token.DEFAULT_CHANNEL;\n\tthis._tokenStartCharIndex = -1;\n\tthis._tokenStartColumn = -1;\n\tthis._tokenStartLine = -1;\n\tthis._text = null;\n\n\tthis._hitEOF = false;\n\tthis._mode = Lexer.DEFAULT_MODE;\n\tthis._modeStack = [];\n\n\tthis._interp.reset();\n};\n\n// Return a token from this source; i.e., match a token on the char stream.\nLexer.prototype.nextToken = function() {\n\tif (this._input === null) {\n\t\tthrow \"nextToken requires a non-null input stream.\";\n\t}\n\n\t// Mark start location in char stream so unbuffered streams are\n\t// guaranteed at least have text of current token\n\tvar tokenStartMarker = this._input.mark();\n\ttry {\n\t\twhile (true) {\n\t\t\tif (this._hitEOF) {\n\t\t\t\tthis.emitEOF();\n\t\t\t\treturn this._token;\n\t\t\t}\n\t\t\tthis._token = null;\n\t\t\tthis._channel = Token.DEFAULT_CHANNEL;\n\t\t\tthis._tokenStartCharIndex = this._input.index;\n\t\t\tthis._tokenStartColumn = this._interp.column;\n\t\t\tthis._tokenStartLine = this._interp.line;\n\t\t\tthis._text = null;\n\t\t\tvar continueOuter = false;\n\t\t\twhile (true) {\n\t\t\t\tthis._type = Token.INVALID_TYPE;\n\t\t\t\tvar ttype = Lexer.SKIP;\n\t\t\t\ttry {\n\t\t\t\t\tttype = this._interp.match(this._input, this._mode);\n\t\t\t\t} catch (e) {\n\t\t\t\t    if(e instanceof RecognitionException) {\n                        this.notifyListeners(e); // report error\n                        this.recover(e);\n                    } else {\n                        console.log(e.stack);\n                        throw e;\n                    }\n\t\t\t\t}\n\t\t\t\tif (this._input.LA(1) === Token.EOF) {\n\t\t\t\t\tthis._hitEOF = true;\n\t\t\t\t}\n\t\t\t\tif (this._type === Token.INVALID_TYPE) {\n\t\t\t\t\tthis._type = ttype;\n\t\t\t\t}\n\t\t\t\tif (this._type === Lexer.SKIP) {\n\t\t\t\t\tcontinueOuter = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (this._type !== Lexer.MORE) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (continueOuter) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (this._token === null) {\n\t\t\t\tthis.emit();\n\t\t\t}\n\t\t\treturn this._token;\n\t\t}\n\t} finally {\n\t\t// make sure we release marker after match or\n\t\t// unbuffered char stream will keep buffering\n\t\tthis._input.release(tokenStartMarker);\n\t}\n};\n\n// Instruct the lexer to skip creating a token for current lexer rule\n// and look for another token. nextToken() knows to keep looking when\n// a lexer rule finishes with token set to SKIP_TOKEN. Recall that\n// if token==null at end of any token rule, it creates one for you\n// and emits it.\n// /\nLexer.prototype.skip = function() {\n\tthis._type = Lexer.SKIP;\n};\n\nLexer.prototype.more = function() {\n\tthis._type = Lexer.MORE;\n};\n\nLexer.prototype.mode = function(m) {\n\tthis._mode = m;\n};\n\nLexer.prototype.pushMode = function(m) {\n\tif (this._interp.debug) {\n\t\tconsole.log(\"pushMode \" + m);\n\t}\n\tthis._modeStack.push(this._mode);\n\tthis.mode(m);\n};\n\nLexer.prototype.popMode = function() {\n\tif (this._modeStack.length === 0) {\n\t\tthrow \"Empty Stack\";\n\t}\n\tif (this._interp.debug) {\n\t\tconsole.log(\"popMode back to \" + this._modeStack.slice(0, -1));\n\t}\n\tthis.mode(this._modeStack.pop());\n\treturn this._mode;\n};\n\n// Set the char stream and reset the lexer\nObject.defineProperty(Lexer.prototype, \"inputStream\", {\n\tget : function() {\n\t\treturn this._input;\n\t},\n\tset : function(input) {\n\t\tthis._input = null;\n\t\tthis._tokenFactorySourcePair = [ this, this._input ];\n\t\tthis.reset();\n\t\tthis._input = input;\n\t\tthis._tokenFactorySourcePair = [ this, this._input ];\n\t}\n});\n\nObject.defineProperty(Lexer.prototype, \"sourceName\", {\n\tget : function sourceName() {\n\t\treturn this._input.sourceName;\n\t}\n});\n\n// By default does not support multiple emits per nextToken invocation\n// for efficiency reasons. Subclass and override this method, nextToken,\n// and getToken (to push tokens into a list and pull from that list\n// rather than a single variable as this implementation does).\n// /\nLexer.prototype.emitToken = function(token) {\n\tthis._token = token;\n};\n\n// The standard method called to automatically emit a token at the\n// outermost lexical rule. The token object should point into the\n// char buffer start..stop. If there is a text override in 'text',\n// use that to set the token's text. Override this method to emit\n// custom Token objects or provide a new factory.\n// /\nLexer.prototype.emit = function() {\n\tvar t = this._factory.create(this._tokenFactorySourcePair, this._type,\n\t\t\tthis._text, this._channel, this._tokenStartCharIndex, this\n\t\t\t\t\t.getCharIndex() - 1, this._tokenStartLine,\n\t\t\tthis._tokenStartColumn);\n\tthis.emitToken(t);\n\treturn t;\n};\n\nLexer.prototype.emitEOF = function() {\n\tvar cpos = this.column;\n\tvar lpos = this.line;\n\tvar eof = this._factory.create(this._tokenFactorySourcePair, Token.EOF,\n\t\t\tnull, Token.DEFAULT_CHANNEL, this._input.index,\n\t\t\tthis._input.index - 1, lpos, cpos);\n\tthis.emitToken(eof);\n\treturn eof;\n};\n\nObject.defineProperty(Lexer.prototype, \"type\", {\n\tget : function() {\n\t\treturn this.type;\n\t},\n\tset : function(type) {\n\t\tthis._type = type;\n\t}\n});\n\nObject.defineProperty(Lexer.prototype, \"line\", {\n\tget : function() {\n\t\treturn this._interp.line;\n\t},\n\tset : function(line) {\n\t\tthis._interp.line = line;\n\t}\n});\n\nObject.defineProperty(Lexer.prototype, \"column\", {\n\tget : function() {\n\t\treturn this._interp.column;\n\t},\n\tset : function(column) {\n\t\tthis._interp.column = column;\n\t}\n});\n\n\n// What is the index of the current character of lookahead?///\nLexer.prototype.getCharIndex = function() {\n\treturn this._input.index;\n};\n\n// Return the text matched so far for the current token or any text override.\n//Set the complete text of this token; it wipes any previous changes to the text.\nObject.defineProperty(Lexer.prototype, \"text\", {\n\tget : function() {\n\t\tif (this._text !== null) {\n\t\t\treturn this._text;\n\t\t} else {\n\t\t\treturn this._interp.getText(this._input);\n\t\t}\n\t},\n\tset : function(text) {\n\t\tthis._text = text;\n\t}\n});\n// Return a list of all Token objects in input char stream.\n// Forces load of all tokens. Does not include EOF token.\n// /\nLexer.prototype.getAllTokens = function() {\n\tvar tokens = [];\n\tvar t = this.nextToken();\n\twhile (t.type !== Token.EOF) {\n\t\ttokens.push(t);\n\t\tt = this.nextToken();\n\t}\n\treturn tokens;\n};\n\nLexer.prototype.notifyListeners = function(e) {\n\tvar start = this._tokenStartCharIndex;\n\tvar stop = this._input.index;\n\tvar text = this._input.getText(start, stop);\n\tvar msg = \"token recognition error at: '\" + this.getErrorDisplay(text) + \"'\";\n\tvar listener = this.getErrorListenerDispatch();\n\tlistener.syntaxError(this, null, this._tokenStartLine,\n\t\t\tthis._tokenStartColumn, msg, e);\n};\n\nLexer.prototype.getErrorDisplay = function(s) {\n\tvar d = [];\n\tfor (var i = 0; i < s.length; i++) {\n\t\td.push(s[i]);\n\t}\n\treturn d.join('');\n};\n\nLexer.prototype.getErrorDisplayForChar = function(c) {\n\tif (c.charCodeAt(0) === Token.EOF) {\n\t\treturn \"<EOF>\";\n\t} else if (c === '\\n') {\n\t\treturn \"\\\\n\";\n\t} else if (c === '\\t') {\n\t\treturn \"\\\\t\";\n\t} else if (c === '\\r') {\n\t\treturn \"\\\\r\";\n\t} else {\n\t\treturn c;\n\t}\n};\n\nLexer.prototype.getCharErrorDisplay = function(c) {\n\treturn \"'\" + this.getErrorDisplayForChar(c) + \"'\";\n};\n\n// Lexers can normally match any char in it's vocabulary after matching\n// a token, so do the easy thing and just kill a character and hope\n// it all works out. You can instead use the rule invocation stack\n// to do sophisticated error recovery if you are in a fragment rule.\n// /\nLexer.prototype.recover = function(re) {\n\tif (this._input.LA(1) !== Token.EOF) {\n\t\tif (re instanceof LexerNoViableAltException) {\n\t\t\t// skip a char and try again\n\t\t\tthis._interp.consume(this._input);\n\t\t} else {\n\t\t\t// TODO: Do we lose character or line position information?\n\t\t\tthis._input.consume();\n\t\t}\n\t}\n};\n\nexports.Lexer = Lexer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/Lexer.js\n// module id = h0lj\n// module chunks = 0 1 2","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n// A DFA walker that knows how to dump them to serialized strings.#/\n\n\nfunction DFASerializer(dfa, literalNames, symbolicNames) {\n\tthis.dfa = dfa;\n\tthis.literalNames = literalNames || [];\n\tthis.symbolicNames = symbolicNames || [];\n\treturn this;\n}\n\nDFASerializer.prototype.toString = function() {\n   if(this.dfa.s0 === null) {\n       return null;\n   }\n   var buf = \"\";\n   var states = this.dfa.sortedStates();\n   for(var i=0;i<states.length;i++) {\n       var s = states[i];\n       if(s.edges!==null) {\n            var n = s.edges.length;\n            for(var j=0;j<n;j++) {\n                var t = s.edges[j] || null;\n                if(t!==null && t.stateNumber !== 0x7FFFFFFF) {\n                    buf = buf.concat(this.getStateString(s));\n                    buf = buf.concat(\"-\");\n                    buf = buf.concat(this.getEdgeLabel(j));\n                    buf = buf.concat(\"->\");\n                    buf = buf.concat(this.getStateString(t));\n                    buf = buf.concat('\\n');\n                }\n            }\n       }\n   }\n   return buf.length===0 ? null : buf;\n};\n\nDFASerializer.prototype.getEdgeLabel = function(i) {\n    if (i===0) {\n        return \"EOF\";\n    } else if(this.literalNames !==null || this.symbolicNames!==null) {\n        return this.literalNames[i-1] || this.symbolicNames[i-1];\n    } else {\n        return String.fromCharCode(i-1);\n    }\n};\n\nDFASerializer.prototype.getStateString = function(s) {\n    var baseStateStr = ( s.isAcceptState ? \":\" : \"\") + \"s\" + s.stateNumber + ( s.requiresFullContext ? \"^\" : \"\");\n    if(s.isAcceptState) {\n        if (s.predicates !== null) {\n            return baseStateStr + \"=>\" + s.predicates.toString();\n        } else {\n            return baseStateStr + \"=>\" + s.prediction.toString();\n        }\n    } else {\n        return baseStateStr;\n    }\n};\n\nfunction LexerDFASerializer(dfa) {\n\tDFASerializer.call(this, dfa, null);\n\treturn this;\n}\n\nLexerDFASerializer.prototype = Object.create(DFASerializer.prototype);\nLexerDFASerializer.prototype.constructor = LexerDFASerializer;\n\nLexerDFASerializer.prototype.getEdgeLabel = function(i) {\n\treturn \"'\" + String.fromCharCode(i) + \"'\";\n};\n\nexports.DFASerializer = DFASerializer;\nexports.LexerDFASerializer = LexerDFASerializer;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/dfa/DFASerializer.js\n// module id = hL6x\n// module chunks = 0 1 2","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('presentable-steps',{attrs:{\"active\":_vm.step.active}}),_vm._v(\" \"),_c('el-row',[_c('el-form',{ref:\"ruleForm\",attrs:{\"model\":_vm.formData,\"rules\":_vm.rules,\"label-width\":\"200px\"}},[_c('el-form-item',{attrs:{\"label\":\"presentable名\",\"required\":\"\",\"prop\":\"presentableName\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入presentable名\"},model:{value:(_vm.formData.presentableName),callback:function ($$v) {_vm.$set(_vm.formData, \"presentableName\", $$v)},expression:\"formData.presentableName\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"presentable tags\",\"prop\":\"presentableTags\"}},[_c('presentable-tags',{model:{value:(_vm.formData.presentableTags),callback:function ($$v) {_vm.$set(_vm.formData, \"presentableTags\", $$v)},expression:\"formData.presentableTags\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"presentable_policy\",\"required\":\"\",\"prop\":\"userPolicy\"}},[_c('el-input',{staticClass:\"gap\",attrs:{\"spellcheck\":\"false\",\"type\":\"textarea\",\"rows\":8,\"placeholder\":\"请输入policy\"},model:{value:(_vm.formData.userPolicy),callback:function ($$v) {_vm.$set(_vm.formData, \"userPolicy\", $$v)},expression:\"formData.userPolicy\"}})],1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.validateLoading},on:{\"click\":function($event){_vm.validate('ruleForm')}}},[_vm._v(\"校验\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.submitLoading},on:{\"click\":_vm.submit}},[_vm._v(\"提交\")])],1)],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-d708ef40\",\"hasScoped\":true,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/node/presentable/edit/index.vue\n// module id = hVtP\n// module chunks = 2","import compiler from 'presentable_policy_compiler'\nimport PresentableSteps from '@/views/node/presentable/steps/index.vue'\nimport PresentableContractDetail from '../contract/detail/index.vue'\nimport PresentablePolicy from '../policy/index.vue'\nimport PresentableTags from '../tags/index.vue'\n\nexport default {\n  name: 'presentable-detail',\n  data() {\n    return {\n      tabPosition: 'left',\n      detail: {},\n      activeTabName: 'resource',\n      userPolicy: '',\n      inputValue: '',\n      tags: []\n    }\n  },\n  components: {\n    PresentableSteps,\n    PresentableContractDetail,\n    PresentablePolicy,\n    PresentableTags\n  },\n\n  mounted() {\n    const query = this.$route.query\n\n    if (this.$route.hash) {\n      this.activeTabName = this.$route.hash.slice(1)\n    }\n\n    if (query.presentableId) {\n      this.loadPresentableDetail(query.presentableId)\n        .then(this.loadDetail.bind(this))\n        .then(this.formatData.bind(this))\n    } else if (query.contractId) {\n      let param = Object.assign({}, query)\n      this.loadDetail(param)\n        .then(this.formatData.bind(this))\n    } else {\n      this.$message.error('缺少参数');\n    }\n  },\n  methods: {\n    loadDetail(detail) {\n      return this.loadContractDetail(detail.contractId).then((contract) => {\n        return this.loadResourceDetail(contract.resourceId).then((resource) => {\n          detail._contractDetail = contract\n          detail._resourceDetail = resource\n          return detail\n        })\n      }).catch(this.$error.showErrorMessage)\n    },\n    beautifySegmentText(text) {\n      if (text) {\n        return compiler.compile(text, 'beautify').stringArray.splice(1).join(' ').replace(/\\n\\s/g, '\\n');\n      } else {\n        return ''\n      }\n    },\n    formatData(detail) {\n      if (detail.presentableId) {\n        detail.policy.forEach((segment) => {\n          segment._formatSegmentText = this.beautifySegmentText(segment.segmentText)\n        })\n        detail._formatSegmentText = this.beautifySegmentText(detail.policyText)\n        this.originPresentable = {\n          name: detail.name,\n          policyText: detail.policyText,\n          userDefinedTags: detail.tagInfo.userDefined.join(',')\n        }\n      }\n\n      this.detail = detail\n      console.log('detail', detail)\n    },\n    loadResourceDetail(resId) {\n      return this.$services.resource.get(resId).then((res) => {\n        if (res.data.errcode === 0) {\n          return res.getData();\n        } else {\n          throw new Error(res.data.msg)\n        }\n      })\n    },\n    loadPresentableDetail(param) {\n      return this.$services.presentables.get(param || {})\n        .then((res) => {\n          if (res.data.errcode === 0) {\n            return res.getData();\n          } else {\n            throw new Error(res.data.msg)\n          }\n        }).catch(this.$error.showErrorMessage)\n    },\n    loadContractDetail(param) {\n      return this.$services.contract.get(param || {})\n        .then((res) => {\n          if (res.data.errcode === 0) {\n            return res.getData();\n          } else {\n            throw new Error(res.data.msg)\n          }\n        }).catch(this.$error.showErrorMessage)\n    },\n    createUserPolicyHandler() {\n      var path = `/node/${this.$route.params.nodeId}/presentable/edit`\n      this.$router.push({\n        path: path,\n        query: {\n          contractId: this.detail._contractDetail.contractId\n        }\n      })\n    },\n    updatePresentableHandler() {\n      var data = {\n        name: this.detail.name,\n        policyText: this.detail._formatSegmentText,\n        userDefinedTags: this.detail.tagInfo.userDefined.join(',')\n      };\n      var param = {}\n      Object.keys(this.originPresentable).forEach((key) => {\n        if (data[key] !== this.originPresentable[key]) {\n          param[key] = data[key]\n        }\n      });\n\n      this.originPresentable = data\n      this.$services.presentables.put(this.detail.presentableId, param)\n        .then((res) => {\n          if (res.data.errcode === 0) {\n            var data = res.getData()\n            Object.assign(this.detail, data)\n          } else {\n            this.$message.error(res.data.msg || '更新失败')\n          }\n        }).catch(this.$error.showErrorMessage)\n    },\n    updateContractDetail() {\n      this.loadContractDetail(this.detail._contractDetail.contractId).then((contract) => {\n        Object.assign(this.detail._contractDetail, contract)\n      })\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/views/node/presentable/detail/index.js","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nfunction ATNDeserializationOptions(copyFrom) {\n\tif(copyFrom===undefined) {\n\t\tcopyFrom = null;\n\t}\n\tthis.readOnly = false;\n    this.verifyATN = copyFrom===null ? true : copyFrom.verifyATN;\n    this.generateRuleBypassTransitions = copyFrom===null ? false : copyFrom.generateRuleBypassTransitions;\n\n    return this;\n}\n\nATNDeserializationOptions.defaultOptions = new ATNDeserializationOptions();\nATNDeserializationOptions.defaultOptions.readOnly = true;\n\n//    def __setattr__(self, key, value):\n//        if key!=\"readOnly\" and self.readOnly:\n//            raise Exception(\"The object is read only.\")\n//        super(type(self), self).__setattr__(key,value)\n\nexports.ATNDeserializationOptions = ATNDeserializationOptions;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/atn/ATNDeserializationOptions.js\n// module id = hs4g\n// module chunks = 0 1 2","// Generated from presentable_policy.g4 by ANTLR 4.7\r\n// jshint ignore: start\r\nvar antlr4 = require('antlr4/index');\r\nvar presentable_policyListener = require('./presentable_policyListener').presentable_policyListener;\r\nvar grammarFileName = \"presentable_policy.g4\";\r\n\r\nvar serializedATN = [\"\\u0003\\u608b\\ua72a\\u8133\\ub9ed\\u417c\\u3be7\\u7786\\u5964\",\r\n    \"\\u00030\\u011a\\u0004\\u0002\\t\\u0002\\u0004\\u0003\\t\\u0003\\u0004\\u0004\\t\",\r\n    \"\\u0004\\u0004\\u0005\\t\\u0005\\u0004\\u0006\\t\\u0006\\u0004\\u0007\\t\\u0007\\u0004\",\r\n    \"\\b\\t\\b\\u0004\\t\\t\\t\\u0004\\n\\t\\n\\u0004\\u000b\\t\\u000b\\u0004\\f\\t\\f\\u0004\",\r\n    \"\\r\\t\\r\\u0004\\u000e\\t\\u000e\\u0004\\u000f\\t\\u000f\\u0004\\u0010\\t\\u0010\\u0004\",\r\n    \"\\u0011\\t\\u0011\\u0004\\u0012\\t\\u0012\\u0004\\u0013\\t\\u0013\\u0004\\u0014\\t\",\r\n    \"\\u0014\\u0004\\u0015\\t\\u0015\\u0004\\u0016\\t\\u0016\\u0004\\u0017\\t\\u0017\\u0004\",\r\n    \"\\u0018\\t\\u0018\\u0004\\u0019\\t\\u0019\\u0004\\u001a\\t\\u001a\\u0004\\u001b\\t\",\r\n    \"\\u001b\\u0004\\u001c\\t\\u001c\\u0004\\u001d\\t\\u001d\\u0004\\u001e\\t\\u001e\\u0004\",\r\n    \"\\u001f\\t\\u001f\\u0004 \\t \\u0004!\\t!\\u0004\\\"\\t\\\"\\u0004#\\t#\\u0004$\\t$\\u0004\",\r\n    \"%\\t%\\u0004&\\t&\\u0003\\u0002\\u0006\\u0002N\\n\\u0002\\r\\u0002\\u000e\\u0002\",\r\n    \"O\\u0003\\u0002\\u0003\\u0002\\u0003\\u0003\\u0003\\u0003\\u0006\\u0003V\\n\\u0003\",\r\n    \"\\r\\u0003\\u000e\\u0003W\\u0003\\u0003\\u0003\\u0003\\u0007\\u0003\\\\\\n\\u0003\",\r\n    \"\\f\\u0003\\u000e\\u0003_\\u000b\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0004\",\r\n    \"\\u0003\\u0004\\u0003\\u0004\\u0005\\u0004f\\n\\u0004\\u0003\\u0004\\u0003\\u0004\",\r\n    \"\\u0003\\u0004\\u0005\\u0004k\\n\\u0004\\u0005\\u0004m\\n\\u0004\\u0003\\u0005\\u0003\",\r\n    \"\\u0005\\u0007\\u0005q\\n\\u0005\\f\\u0005\\u000e\\u0005t\\u000b\\u0005\\u0003\\u0005\",\r\n    \"\\u0007\\u0005w\\n\\u0005\\f\\u0005\\u000e\\u0005z\\u000b\\u0005\\u0003\\u0006\\u0003\",\r\n    \"\\u0006\\u0003\\u0006\\u0007\\u0006\\u007f\\n\\u0006\\f\\u0006\\u000e\\u0006\\u0082\",\r\n    \"\\u000b\\u0006\\u0003\\u0007\\u0003\\u0007\\u0003\\u0007\\u0003\\u0007\\u0007\\u0007\",\r\n    \"\\u0088\\n\\u0007\\f\\u0007\\u000e\\u0007\\u008b\\u000b\\u0007\\u0003\\b\\u0003\\b\",\r\n    \"\\u0006\\b\\u008f\\n\\b\\r\\b\\u000e\\b\\u0090\\u0003\\t\\u0003\\t\\u0003\\t\\u0003\\t\",\r\n    \"\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0007\\n\\u009c\\n\\n\\f\\n\\u000e\",\r\n    \"\\n\\u009f\\u000b\\n\\u0003\\n\\u0003\\n\\u0007\\n\\u00a3\\n\\n\\f\\n\\u000e\\n\\u00a6\",\r\n    \"\\u000b\\n\\u0003\\u000b\\u0003\\u000b\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\",\r\n    \"\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0005\\f\\u00b4\\n\\f\\u0003\\r\",\r\n    \"\\u0003\\r\\u0003\\r\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\\u000f\\u0003\",\r\n    \"\\u000f\\u0003\\u000f\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\",\r\n    \"\\u0011\\u0003\\u0011\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\",\r\n    \"\\u0013\\u0003\\u0013\\u0005\\u0013\\u00cb\\n\\u0013\\u0003\\u0014\\u0003\\u0014\",\r\n    \"\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0015\\u0003\\u0015\",\r\n    \"\\u0003\\u0015\\u0003\\u0016\\u0003\\u0016\\u0007\\u0016\\u00d8\\n\\u0016\\f\\u0016\",\r\n    \"\\u000e\\u0016\\u00db\\u000b\\u0016\\u0003\\u0016\\u0006\\u0016\\u00de\\n\\u0016\",\r\n    \"\\r\\u0016\\u000e\\u0016\\u00df\\u0003\\u0017\\u0003\\u0017\\u0005\\u0017\\u00e4\",\r\n    \"\\n\\u0017\\u0003\\u0018\\u0003\\u0018\\u0003\\u0018\\u0003\\u0019\\u0003\\u0019\",\r\n    \"\\u0003\\u0019\\u0003\\u001a\\u0003\\u001a\\u0005\\u001a\\u00ee\\n\\u001a\\u0003\",\r\n    \"\\u001b\\u0003\\u001b\\u0003\\u001b\\u0003\\u001c\\u0003\\u001c\\u0003\\u001c\\u0003\",\r\n    \"\\u001d\\u0003\\u001d\\u0003\\u001e\\u0003\\u001e\\u0003\\u001f\\u0003\\u001f\\u0003\",\r\n    \" \\u0003 \\u0003 \\u0007 \\u00ff\\n \\f \\u000e \\u0102\\u000b \\u0003!\\u0003\",\r\n    \"!\\u0003!\\u0007!\\u0107\\n!\\f!\\u000e!\\u010a\\u000b!\\u0003\\\"\\u0003\\\"\\u0003\",\r\n    \"#\\u0003#\\u0003$\\u0003$\\u0003%\\u0003%\\u0003%\\u0003%\\u0003&\\u0003&\\u0003\",\r\n    \"&\\u0003&\\u0003&\\u0002\\u0002\\'\\u0002\\u0004\\u0006\\b\\n\\f\\u000e\\u0010\\u0012\",\r\n    \"\\u0014\\u0016\\u0018\\u001a\\u001c\\u001e \\\"$&(*,.02468:<>@BDFHJ\\u0002\\u0004\",\r\n    \"\\u0003\\u0002\\u0019\\u001a\\u0004\\u0002\\u0012\\u0012\\u001b\\u001d\\u0002\\u0111\",\r\n    \"\\u0002M\\u0003\\u0002\\u0002\\u0002\\u0004S\\u0003\\u0002\\u0002\\u0002\\u0006\",\r\n    \"l\\u0003\\u0002\\u0002\\u0002\\bn\\u0003\\u0002\\u0002\\u0002\\n{\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\f\\u0083\\u0003\\u0002\\u0002\\u0002\\u000e\\u008c\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0010\\u0092\\u0003\\u0002\\u0002\\u0002\\u0012\\u0096\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0014\\u00a7\\u0003\\u0002\\u0002\\u0002\\u0016\\u00b3\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0018\\u00b5\\u0003\\u0002\\u0002\\u0002\\u001a\\u00b8\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u001c\\u00bb\\u0003\\u0002\\u0002\\u0002\\u001e\\u00be\\u0003\\u0002\",\r\n    \"\\u0002\\u0002 \\u00c2\\u0003\\u0002\\u0002\\u0002\\\"\\u00c4\\u0003\\u0002\\u0002\",\r\n    \"\\u0002$\\u00ca\\u0003\\u0002\\u0002\\u0002&\\u00cc\\u0003\\u0002\\u0002\\u0002\",\r\n    \"(\\u00d2\\u0003\\u0002\\u0002\\u0002*\\u00d5\\u0003\\u0002\\u0002\\u0002,\\u00e3\",\r\n    \"\\u0003\\u0002\\u0002\\u0002.\\u00e5\\u0003\\u0002\\u0002\\u00020\\u00e8\\u0003\",\r\n    \"\\u0002\\u0002\\u00022\\u00ed\\u0003\\u0002\\u0002\\u00024\\u00ef\\u0003\\u0002\",\r\n    \"\\u0002\\u00026\\u00f2\\u0003\\u0002\\u0002\\u00028\\u00f5\\u0003\\u0002\\u0002\",\r\n    \"\\u0002:\\u00f7\\u0003\\u0002\\u0002\\u0002<\\u00f9\\u0003\\u0002\\u0002\\u0002\",\r\n    \">\\u00fb\\u0003\\u0002\\u0002\\u0002@\\u0103\\u0003\\u0002\\u0002\\u0002B\\u010b\",\r\n    \"\\u0003\\u0002\\u0002\\u0002D\\u010d\\u0003\\u0002\\u0002\\u0002F\\u010f\\u0003\",\r\n    \"\\u0002\\u0002\\u0002H\\u0111\\u0003\\u0002\\u0002\\u0002J\\u0115\\u0003\\u0002\",\r\n    \"\\u0002\\u0002LN\\u0005\\u0004\\u0003\\u0002ML\\u0003\\u0002\\u0002\\u0002NO\\u0003\",\r\n    \"\\u0002\\u0002\\u0002OM\\u0003\\u0002\\u0002\\u0002OP\\u0003\\u0002\\u0002\\u0002\",\r\n    \"PQ\\u0003\\u0002\\u0002\\u0002QR\\u0007\\u0002\\u0002\\u0003R\\u0003\\u0003\\u0002\",\r\n    \"\\u0002\\u0002SU\\u0007\\u001e\\u0002\\u0002TV\\u0005\\u0006\\u0004\\u0002UT\\u0003\",\r\n    \"\\u0002\\u0002\\u0002VW\\u0003\\u0002\\u0002\\u0002WU\\u0003\\u0002\\u0002\\u0002\",\r\n    \"WX\\u0003\\u0002\\u0002\\u0002XY\\u0003\\u0002\\u0002\\u0002Y]\\u0007\\u0003\\u0002\",\r\n    \"\\u0002Z\\\\\\u0005\\u000e\\b\\u0002[Z\\u0003\\u0002\\u0002\\u0002\\\\_\\u0003\\u0002\",\r\n    \"\\u0002\\u0002][\\u0003\\u0002\\u0002\\u0002]^\\u0003\\u0002\\u0002\\u0002^`\\u0003\",\r\n    \"\\u0002\\u0002\\u0002_]\\u0003\\u0002\\u0002\\u0002`a\\u0005\\b\\u0005\\u0002a\",\r\n    \"\\u0005\\u0003\\u0002\\u0002\\u0002be\\u0005\\n\\u0006\\u0002cd\\u0007\\u0004\\u0002\",\r\n    \"\\u0002df\\u0005\\f\\u0007\\u0002ec\\u0003\\u0002\\u0002\\u0002ef\\u0003\\u0002\",\r\n    \"\\u0002\\u0002fm\\u0003\\u0002\\u0002\\u0002gj\\u0005\\f\\u0007\\u0002hi\\u0007\",\r\n    \"\\u0004\\u0002\\u0002ik\\u0005\\n\\u0006\\u0002jh\\u0003\\u0002\\u0002\\u0002j\",\r\n    \"k\\u0003\\u0002\\u0002\\u0002km\\u0003\\u0002\\u0002\\u0002lb\\u0003\\u0002\\u0002\",\r\n    \"\\u0002lg\\u0003\\u0002\\u0002\\u0002m\\u0007\\u0003\\u0002\\u0002\\u0002nx\\u0007\",\r\n    \"\\u0005\\u0002\\u0002oq\\u0007\\u0006\\u0002\\u0002po\\u0003\\u0002\\u0002\\u0002\",\r\n    \"qt\\u0003\\u0002\\u0002\\u0002rp\\u0003\\u0002\\u0002\\u0002rs\\u0003\\u0002\\u0002\",\r\n    \"\\u0002su\\u0003\\u0002\\u0002\\u0002tr\\u0003\\u0002\\u0002\\u0002uw\\u0007-\",\r\n    \"\\u0002\\u0002vr\\u0003\\u0002\\u0002\\u0002wz\\u0003\\u0002\\u0002\\u0002xv\\u0003\",\r\n    \"\\u0002\\u0002\\u0002xy\\u0003\\u0002\\u0002\\u0002y\\t\\u0003\\u0002\\u0002\\u0002\",\r\n    \"zx\\u0003\\u0002\\u0002\\u0002{\\u0080\\u0005> \\u0002|}\\u0007\\u0006\\u0002\",\r\n    \"\\u0002}\\u007f\\u0005> \\u0002~|\\u0003\\u0002\\u0002\\u0002\\u007f\\u0082\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0080~\\u0003\\u0002\\u0002\\u0002\\u0080\\u0081\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0081\\u000b\\u0003\\u0002\\u0002\\u0002\\u0082\\u0080\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0083\\u0084\\u0007\\u0007\\u0002\\u0002\\u0084\\u0089\\u0005\",\r\n    \"@!\\u0002\\u0085\\u0086\\u0007\\u0006\\u0002\\u0002\\u0086\\u0088\\u0005@!\\u0002\",\r\n    \"\\u0087\\u0085\\u0003\\u0002\\u0002\\u0002\\u0088\\u008b\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0089\\u0087\\u0003\\u0002\\u0002\\u0002\\u0089\\u008a\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u008a\\r\\u0003\\u0002\\u0002\\u0002\\u008b\\u0089\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u008c\\u008e\\u0005\\u0010\\t\\u0002\\u008d\\u008f\\u0005\\u0012\\n\\u0002\\u008e\",\r\n    \"\\u008d\\u0003\\u0002\\u0002\\u0002\\u008f\\u0090\\u0003\\u0002\\u0002\\u0002\\u0090\",\r\n    \"\\u008e\\u0003\\u0002\\u0002\\u0002\\u0090\\u0091\\u0003\\u0002\\u0002\\u0002\\u0091\",\r\n    \"\\u000f\\u0003\\u0002\\u0002\\u0002\\u0092\\u0093\\u0007#\\u0002\\u0002\\u0093\",\r\n    \"\\u0094\\u0007-\\u0002\\u0002\\u0094\\u0095\\u0007\\b\\u0002\\u0002\\u0095\\u0011\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0096\\u0097\\u0007!\\u0002\\u0002\\u0097\\u0098\",\r\n    \"\\u0007\\\"\\u0002\\u0002\\u0098\\u0099\\u0007-\\u0002\\u0002\\u0099\\u009d\\u0007\",\r\n    \"$\\u0002\\u0002\\u009a\\u009c\\u0005\\u0014\\u000b\\u0002\\u009b\\u009a\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u009c\\u009f\\u0003\\u0002\\u0002\\u0002\\u009d\\u009b\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u009d\\u009e\\u0003\\u0002\\u0002\\u0002\\u009e\\u00a0\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u009f\\u009d\\u0003\\u0002\\u0002\\u0002\\u00a0\\u00a4\\u0005\",\r\n    \"\\u0016\\f\\u0002\\u00a1\\u00a3\\u0005\\u0018\\r\\u0002\\u00a2\\u00a1\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u00a3\\u00a6\\u0003\\u0002\\u0002\\u0002\\u00a4\\u00a2\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u00a4\\u00a5\\u0003\\u0002\\u0002\\u0002\\u00a5\\u0013\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u00a6\\u00a4\\u0003\\u0002\\u0002\\u0002\\u00a7\\u00a8\\u0007%\",\r\n    \"\\u0002\\u0002\\u00a8\\u0015\\u0003\\u0002\\u0002\\u0002\\u00a9\\u00b4\\u0005\\u001a\",\r\n    \"\\u000e\\u0002\\u00aa\\u00b4\\u0005\\u001c\\u000f\\u0002\\u00ab\\u00b4\\u0005\\u001e\",\r\n    \"\\u0010\\u0002\\u00ac\\u00b4\\u0005 \\u0011\\u0002\\u00ad\\u00b4\\u0005\\\"\\u0012\",\r\n    \"\\u0002\\u00ae\\u00b4\\u0005$\\u0013\\u0002\\u00af\\u00b4\\u0005*\\u0016\\u0002\",\r\n    \"\\u00b0\\u00b4\\u0005,\\u0017\\u0002\\u00b1\\u00b4\\u00052\\u001a\\u0002\\u00b2\",\r\n    \"\\u00b4\\u00058\\u001d\\u0002\\u00b3\\u00a9\\u0003\\u0002\\u0002\\u0002\\u00b3\",\r\n    \"\\u00aa\\u0003\\u0002\\u0002\\u0002\\u00b3\\u00ab\\u0003\\u0002\\u0002\\u0002\\u00b3\",\r\n    \"\\u00ac\\u0003\\u0002\\u0002\\u0002\\u00b3\\u00ad\\u0003\\u0002\\u0002\\u0002\\u00b3\",\r\n    \"\\u00ae\\u0003\\u0002\\u0002\\u0002\\u00b3\\u00af\\u0003\\u0002\\u0002\\u0002\\u00b3\",\r\n    \"\\u00b0\\u0003\\u0002\\u0002\\u0002\\u00b3\\u00b1\\u0003\\u0002\\u0002\\u0002\\u00b3\",\r\n    \"\\u00b2\\u0003\\u0002\\u0002\\u0002\\u00b4\\u0017\\u0003\\u0002\\u0002\\u0002\\u00b5\",\r\n    \"\\u00b6\\u0007\\t\\u0002\\u0002\\u00b6\\u00b7\\u0005\\u0016\\f\\u0002\\u00b7\\u0019\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u00b8\\u00b9\\u0007\\n\\u0002\\u0002\\u00b9\\u00ba\",\r\n    \"\\u0005F$\\u0002\\u00ba\\u001b\\u0003\\u0002\\u0002\\u0002\\u00bb\\u00bc\\u0007\",\r\n    \"\\u000b\\u0002\\u0002\\u00bc\\u00bd\\u00070\\u0002\\u0002\\u00bd\\u001d\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00be\\u00bf\\u0007/\\u0002\\u0002\\u00bf\\u00c0\\u0005\",\r\n    \"F$\\u0002\\u00c0\\u00c1\\u0007\\f\\u0002\\u0002\\u00c1\\u001f\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00c2\\u00c3\\u0007\\r\\u0002\\u0002\\u00c3!\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00c4\\u00c5\\u0007\\u000e\\u0002\\u0002\\u00c5\\u00c6\\u0007/\\u0002\\u0002\",\r\n    \"\\u00c6\\u00c7\\u0007\\u000f\\u0002\\u0002\\u00c7#\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00c8\\u00cb\\u0005&\\u0014\\u0002\\u00c9\\u00cb\\u0005(\\u0015\\u0002\\u00ca\",\r\n    \"\\u00c8\\u0003\\u0002\\u0002\\u0002\\u00ca\\u00c9\\u0003\\u0002\\u0002\\u0002\\u00cb\",\r\n    \"%\\u0003\\u0002\\u0002\\u0002\\u00cc\\u00cd\\u0007\\u0010\\u0002\\u0002\\u00cd\",\r\n    \"\\u00ce\\u0007/\\u0002\\u0002\\u00ce\\u00cf\\u0007\\u0011\\u0002\\u0002\\u00cf\",\r\n    \"\\u00d0\\u0007/\\u0002\\u0002\\u00d0\\u00d1\\u0007\\u0012\\u0002\\u0002\\u00d1\",\r\n    \"\\'\\u0003\\u0002\\u0002\\u0002\\u00d2\\u00d3\\u0007\\u0013\\u0002\\u0002\\u00d3\",\r\n    \"\\u00d4\\u0007/\\u0002\\u0002\\u00d4)\\u0003\\u0002\\u0002\\u0002\\u00d5\\u00dd\",\r\n    \"\\u0007\\'\\u0002\\u0002\\u00d6\\u00d8\\u0007\\u0006\\u0002\\u0002\\u00d7\\u00d6\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u00d8\\u00db\\u0003\\u0002\\u0002\\u0002\\u00d9\\u00d7\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u00d9\\u00da\\u0003\\u0002\\u0002\\u0002\\u00da\\u00dc\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u00db\\u00d9\\u0003\\u0002\\u0002\\u0002\\u00dc\\u00de\",\r\n    \"\\u0005:\\u001e\\u0002\\u00dd\\u00d9\\u0003\\u0002\\u0002\\u0002\\u00de\\u00df\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u00df\\u00dd\\u0003\\u0002\\u0002\\u0002\\u00df\\u00e0\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u00e0+\\u0003\\u0002\\u0002\\u0002\\u00e1\\u00e4\",\r\n    \"\\u0005.\\u0018\\u0002\\u00e2\\u00e4\\u00050\\u0019\\u0002\\u00e3\\u00e1\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00e3\\u00e2\\u0003\\u0002\\u0002\\u0002\\u00e4-\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00e5\\u00e6\\u0007\\u0014\\u0002\\u0002\\u00e6\\u00e7\\u0007\",\r\n    \"/\\u0002\\u0002\\u00e7/\\u0003\\u0002\\u0002\\u0002\\u00e8\\u00e9\\u0007\\u0015\",\r\n    \"\\u0002\\u0002\\u00e9\\u00ea\\u0007/\\u0002\\u0002\\u00ea1\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00eb\\u00ee\\u00054\\u001b\\u0002\\u00ec\\u00ee\\u00056\\u001c\\u0002\",\r\n    \"\\u00ed\\u00eb\\u0003\\u0002\\u0002\\u0002\\u00ed\\u00ec\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00ee3\\u0003\\u0002\\u0002\\u0002\\u00ef\\u00f0\\u0007\\u0016\\u0002\\u0002\",\r\n    \"\\u00f0\\u00f1\\u0007/\\u0002\\u0002\\u00f15\\u0003\\u0002\\u0002\\u0002\\u00f2\",\r\n    \"\\u00f3\\u0007\\u0017\\u0002\\u0002\\u00f3\\u00f4\\u0007/\\u0002\\u0002\\u00f4\",\r\n    \"7\\u0003\\u0002\\u0002\\u0002\\u00f5\\u00f6\\u0007\\u0018\\u0002\\u0002\\u00f6\",\r\n    \"9\\u0003\\u0002\\u0002\\u0002\\u00f7\\u00f8\\u0007-\\u0002\\u0002\\u00f8;\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00f9\\u00fa\\u0007-\\u0002\\u0002\\u00fa=\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u00fb\\u0100\\u0007-\\u0002\\u0002\\u00fc\\u00fd\\u0007\\u0006\",\r\n    \"\\u0002\\u0002\\u00fd\\u00ff\\u0007-\\u0002\\u0002\\u00fe\\u00fc\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u00ff\\u0102\\u0003\\u0002\\u0002\\u0002\\u0100\\u00fe\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0100\\u0101\\u0003\\u0002\\u0002\\u0002\\u0101?\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0102\\u0100\\u0003\\u0002\\u0002\\u0002\\u0103\\u0108\\u0007-\",\r\n    \"\\u0002\\u0002\\u0104\\u0105\\u0007\\u0006\\u0002\\u0002\\u0105\\u0107\\u0007-\",\r\n    \"\\u0002\\u0002\\u0106\\u0104\\u0003\\u0002\\u0002\\u0002\\u0107\\u010a\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0108\\u0106\\u0003\\u0002\\u0002\\u0002\\u0108\\u0109\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0109A\\u0003\\u0002\\u0002\\u0002\\u010a\\u0108\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u010b\\u010c\\u0007\\u0004\\u0002\\u0002\\u010cC\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u010d\\u010e\\t\\u0002\\u0002\\u0002\\u010eE\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u010f\\u0110\\t\\u0003\\u0002\\u0002\\u0110G\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0111\\u0112\\u0007/\\u0002\\u0002\\u0112\\u0113\\u0007\\b\\u0002\\u0002\\u0113\",\r\n    \"\\u0114\\u0007/\\u0002\\u0002\\u0114I\\u0003\\u0002\\u0002\\u0002\\u0115\\u0116\",\r\n    \"\\u0007/\\u0002\\u0002\\u0116\\u0117\\u0007\\b\\u0002\\u0002\\u0117\\u0118\\u0007\",\r\n    \"/\\u0002\\u0002\\u0118K\\u0003\\u0002\\u0002\\u0002\\u0017OW]ejlrx\\u0080\\u0089\",\r\n    \"\\u0090\\u009d\\u00a4\\u00b3\\u00ca\\u00d9\\u00df\\u00e3\\u00ed\\u0100\\u0108\"].join(\"\");\r\n\r\n\r\nvar atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);\r\n\r\nvar decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });\r\n\r\nvar sharedContextCache = new antlr4.PredictionContextCache();\r\n\r\nvar literalNames = [ null, \"'in the following states:'\", \"'and'\", \"'I agree to authorize token in'\", \r\n                     \"','\", \"'users in'\", \"':'\", \"'and on'\", \"'the end of'\", \r\n                     \"'date'\", \"'after contract creation'\", \"'price priceExpression'\", \r\n                     \"'transaction of'\", \"'to owner'\", \"'contract_guaranty of'\", \r\n                     \"'refund after'\", \"'day'\", \"'platform_guaranty of'\", \r\n                     \"'visit_increment of'\", \"'visit of'\", \"'account_balance greater than'\", \r\n                     \"'account_balance smaller than'\", \"'account_settled'\", \r\n                     \"'in total'\", \"'per view'\", \"'year'\", \"'week'\", \"'cycle'\", \r\n                     \"'For'\", \"'usergroups'\", \"'users'\", \"'proceed'\", \"'to'\", \r\n                     \"'in'\", \"'on'\", \"'accepting'\", null, \"'license'\", \"'paying'\", \r\n                     \"'per'\", \"'view'\", \"'require'\", \"'nothing'\" ];\r\n\r\nvar symbolicNames = [ null, null, null, null, null, null, null, null, null, \r\n                      null, null, null, null, null, null, null, null, null, \r\n                      null, null, null, null, null, null, null, null, null, \r\n                      null, \"FOR\", \"USERGROUPS\", \"USERS\", \"PROCEED\", \"TO\", \r\n                      \"IN\", \"ON\", \"ACCEPTING\", \"SELF\", \"LICENSE\", \"PAYING\", \r\n                      \"PER\", \"VIEW\", \"REQUIRE\", \"NOTHING\", \"ID\", \"WS\", \"INT\", \r\n                      \"DATE\" ];\r\n\r\nvar ruleNames =  [ \"p\", \"segment\", \"audience_clause\", \"athorize_token_clause\", \r\n                   \"audience_individuals_clause\", \"audience_groups_clause\", \r\n                   \"state_clause\", \"current_state_clause\", \"target_clause\", \r\n                   \"accepting\", \"event\", \"and_event\", \"period_event\", \"specific_date_event\", \r\n                   \"relative_date_event\", \"pricing_agreement_event\", \"transaction_event\", \r\n                   \"guaranty_event\", \"contract_guaranty\", \"platform_guaranty\", \r\n                   \"signing_event\", \"access_count_event\", \"visit_increment_event\", \r\n                   \"visit_event\", \"balance_event\", \"balance_greater\", \"balance_smaller\", \r\n                   \"settlement_event\", \"license_resource_id\", \"account_id\", \r\n                   \"users\", \"user_groups\", \"and\", \"view_unit\", \"time_unit\", \r\n                   \"start_hour\", \"end_hour\" ];\r\n\r\nfunction presentable_policyParser (input) {\r\n\tantlr4.Parser.call(this, input);\r\n    this._interp = new antlr4.atn.ParserATNSimulator(this, atn, decisionsToDFA, sharedContextCache);\r\n    this.ruleNames = ruleNames;\r\n    this.literalNames = literalNames;\r\n    this.symbolicNames = symbolicNames;\r\n    return this;\r\n}\r\n\r\npresentable_policyParser.prototype = Object.create(antlr4.Parser.prototype);\r\npresentable_policyParser.prototype.constructor = presentable_policyParser;\r\n\r\nObject.defineProperty(presentable_policyParser.prototype, \"atn\", {\r\n\tget : function() {\r\n\t\treturn atn;\r\n\t}\r\n});\r\n\r\npresentable_policyParser.EOF = antlr4.Token.EOF;\r\npresentable_policyParser.T__0 = 1;\r\npresentable_policyParser.T__1 = 2;\r\npresentable_policyParser.T__2 = 3;\r\npresentable_policyParser.T__3 = 4;\r\npresentable_policyParser.T__4 = 5;\r\npresentable_policyParser.T__5 = 6;\r\npresentable_policyParser.T__6 = 7;\r\npresentable_policyParser.T__7 = 8;\r\npresentable_policyParser.T__8 = 9;\r\npresentable_policyParser.T__9 = 10;\r\npresentable_policyParser.T__10 = 11;\r\npresentable_policyParser.T__11 = 12;\r\npresentable_policyParser.T__12 = 13;\r\npresentable_policyParser.T__13 = 14;\r\npresentable_policyParser.T__14 = 15;\r\npresentable_policyParser.T__15 = 16;\r\npresentable_policyParser.T__16 = 17;\r\npresentable_policyParser.T__17 = 18;\r\npresentable_policyParser.T__18 = 19;\r\npresentable_policyParser.T__19 = 20;\r\npresentable_policyParser.T__20 = 21;\r\npresentable_policyParser.T__21 = 22;\r\npresentable_policyParser.T__22 = 23;\r\npresentable_policyParser.T__23 = 24;\r\npresentable_policyParser.T__24 = 25;\r\npresentable_policyParser.T__25 = 26;\r\npresentable_policyParser.T__26 = 27;\r\npresentable_policyParser.FOR = 28;\r\npresentable_policyParser.USERGROUPS = 29;\r\npresentable_policyParser.USERS = 30;\r\npresentable_policyParser.PROCEED = 31;\r\npresentable_policyParser.TO = 32;\r\npresentable_policyParser.IN = 33;\r\npresentable_policyParser.ON = 34;\r\npresentable_policyParser.ACCEPTING = 35;\r\npresentable_policyParser.SELF = 36;\r\npresentable_policyParser.LICENSE = 37;\r\npresentable_policyParser.PAYING = 38;\r\npresentable_policyParser.PER = 39;\r\npresentable_policyParser.VIEW = 40;\r\npresentable_policyParser.REQUIRE = 41;\r\npresentable_policyParser.NOTHING = 42;\r\npresentable_policyParser.ID = 43;\r\npresentable_policyParser.WS = 44;\r\npresentable_policyParser.INT = 45;\r\npresentable_policyParser.DATE = 46;\r\n\r\npresentable_policyParser.RULE_p = 0;\r\npresentable_policyParser.RULE_segment = 1;\r\npresentable_policyParser.RULE_audience_clause = 2;\r\npresentable_policyParser.RULE_athorize_token_clause = 3;\r\npresentable_policyParser.RULE_audience_individuals_clause = 4;\r\npresentable_policyParser.RULE_audience_groups_clause = 5;\r\npresentable_policyParser.RULE_state_clause = 6;\r\npresentable_policyParser.RULE_current_state_clause = 7;\r\npresentable_policyParser.RULE_target_clause = 8;\r\npresentable_policyParser.RULE_accepting = 9;\r\npresentable_policyParser.RULE_event = 10;\r\npresentable_policyParser.RULE_and_event = 11;\r\npresentable_policyParser.RULE_period_event = 12;\r\npresentable_policyParser.RULE_specific_date_event = 13;\r\npresentable_policyParser.RULE_relative_date_event = 14;\r\npresentable_policyParser.RULE_pricing_agreement_event = 15;\r\npresentable_policyParser.RULE_transaction_event = 16;\r\npresentable_policyParser.RULE_guaranty_event = 17;\r\npresentable_policyParser.RULE_contract_guaranty = 18;\r\npresentable_policyParser.RULE_platform_guaranty = 19;\r\npresentable_policyParser.RULE_signing_event = 20;\r\npresentable_policyParser.RULE_access_count_event = 21;\r\npresentable_policyParser.RULE_visit_increment_event = 22;\r\npresentable_policyParser.RULE_visit_event = 23;\r\npresentable_policyParser.RULE_balance_event = 24;\r\npresentable_policyParser.RULE_balance_greater = 25;\r\npresentable_policyParser.RULE_balance_smaller = 26;\r\npresentable_policyParser.RULE_settlement_event = 27;\r\npresentable_policyParser.RULE_license_resource_id = 28;\r\npresentable_policyParser.RULE_account_id = 29;\r\npresentable_policyParser.RULE_users = 30;\r\npresentable_policyParser.RULE_user_groups = 31;\r\npresentable_policyParser.RULE_and = 32;\r\npresentable_policyParser.RULE_view_unit = 33;\r\npresentable_policyParser.RULE_time_unit = 34;\r\npresentable_policyParser.RULE_start_hour = 35;\r\npresentable_policyParser.RULE_end_hour = 36;\r\n\r\nfunction PContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_p;\r\n    return this;\r\n}\r\n\r\nPContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nPContext.prototype.constructor = PContext;\r\n\r\nPContext.prototype.EOF = function() {\r\n    return this.getToken(presentable_policyParser.EOF, 0);\r\n};\r\n\r\nPContext.prototype.segment = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(SegmentContext);\r\n    } else {\r\n        return this.getTypedRuleContext(SegmentContext,i);\r\n    }\r\n};\r\n\r\nPContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterP(this);\r\n\t}\r\n};\r\n\r\nPContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitP(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.PContext = PContext;\r\n\r\npresentable_policyParser.prototype.p = function() {\r\n\r\n    var localctx = new PContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 0, presentable_policyParser.RULE_p);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 75; \r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        do {\r\n            this.state = 74;\r\n            this.segment();\r\n            this.state = 77; \r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        } while(_la===presentable_policyParser.FOR);\r\n        this.state = 79;\r\n        this.match(presentable_policyParser.EOF);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction SegmentContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_segment;\r\n    return this;\r\n}\r\n\r\nSegmentContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nSegmentContext.prototype.constructor = SegmentContext;\r\n\r\nSegmentContext.prototype.FOR = function() {\r\n    return this.getToken(presentable_policyParser.FOR, 0);\r\n};\r\n\r\nSegmentContext.prototype.athorize_token_clause = function() {\r\n    return this.getTypedRuleContext(Athorize_token_clauseContext,0);\r\n};\r\n\r\nSegmentContext.prototype.audience_clause = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(Audience_clauseContext);\r\n    } else {\r\n        return this.getTypedRuleContext(Audience_clauseContext,i);\r\n    }\r\n};\r\n\r\nSegmentContext.prototype.state_clause = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(State_clauseContext);\r\n    } else {\r\n        return this.getTypedRuleContext(State_clauseContext,i);\r\n    }\r\n};\r\n\r\nSegmentContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterSegment(this);\r\n\t}\r\n};\r\n\r\nSegmentContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitSegment(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.SegmentContext = SegmentContext;\r\n\r\npresentable_policyParser.prototype.segment = function() {\r\n\r\n    var localctx = new SegmentContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 2, presentable_policyParser.RULE_segment);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 81;\r\n        this.match(presentable_policyParser.FOR);\r\n        this.state = 83; \r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        do {\r\n            this.state = 82;\r\n            this.audience_clause();\r\n            this.state = 85; \r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        } while(_la===presentable_policyParser.T__4 || _la===presentable_policyParser.ID);\r\n        this.state = 87;\r\n        this.match(presentable_policyParser.T__0);\r\n        this.state = 91;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        while(_la===presentable_policyParser.IN) {\r\n            this.state = 88;\r\n            this.state_clause();\r\n            this.state = 93;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        }\r\n        this.state = 94;\r\n        this.athorize_token_clause();\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Audience_clauseContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_audience_clause;\r\n    return this;\r\n}\r\n\r\nAudience_clauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAudience_clauseContext.prototype.constructor = Audience_clauseContext;\r\n\r\nAudience_clauseContext.prototype.audience_individuals_clause = function() {\r\n    return this.getTypedRuleContext(Audience_individuals_clauseContext,0);\r\n};\r\n\r\nAudience_clauseContext.prototype.audience_groups_clause = function() {\r\n    return this.getTypedRuleContext(Audience_groups_clauseContext,0);\r\n};\r\n\r\nAudience_clauseContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterAudience_clause(this);\r\n\t}\r\n};\r\n\r\nAudience_clauseContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitAudience_clause(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Audience_clauseContext = Audience_clauseContext;\r\n\r\npresentable_policyParser.prototype.audience_clause = function() {\r\n\r\n    var localctx = new Audience_clauseContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 4, presentable_policyParser.RULE_audience_clause);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.state = 106;\r\n        this._errHandler.sync(this);\r\n        switch(this._input.LA(1)) {\r\n        case presentable_policyParser.ID:\r\n            this.enterOuterAlt(localctx, 1);\r\n            this.state = 96;\r\n            this.audience_individuals_clause();\r\n            this.state = 99;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n            if(_la===presentable_policyParser.T__1) {\r\n                this.state = 97;\r\n                this.match(presentable_policyParser.T__1);\r\n                this.state = 98;\r\n                this.audience_groups_clause();\r\n            }\r\n\r\n            break;\r\n        case presentable_policyParser.T__4:\r\n            this.enterOuterAlt(localctx, 2);\r\n            this.state = 101;\r\n            this.audience_groups_clause();\r\n            this.state = 104;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n            if(_la===presentable_policyParser.T__1) {\r\n                this.state = 102;\r\n                this.match(presentable_policyParser.T__1);\r\n                this.state = 103;\r\n                this.audience_individuals_clause();\r\n            }\r\n\r\n            break;\r\n        default:\r\n            throw new antlr4.error.NoViableAltException(this);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Athorize_token_clauseContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_athorize_token_clause;\r\n    return this;\r\n}\r\n\r\nAthorize_token_clauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAthorize_token_clauseContext.prototype.constructor = Athorize_token_clauseContext;\r\n\r\nAthorize_token_clauseContext.prototype.ID = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(presentable_policyParser.ID);\r\n    } else {\r\n        return this.getToken(presentable_policyParser.ID, i);\r\n    }\r\n};\r\n\r\n\r\nAthorize_token_clauseContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterAthorize_token_clause(this);\r\n\t}\r\n};\r\n\r\nAthorize_token_clauseContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitAthorize_token_clause(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Athorize_token_clauseContext = Athorize_token_clauseContext;\r\n\r\npresentable_policyParser.prototype.athorize_token_clause = function() {\r\n\r\n    var localctx = new Athorize_token_clauseContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 6, presentable_policyParser.RULE_athorize_token_clause);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 108;\r\n        this.match(presentable_policyParser.T__2);\r\n        this.state = 118;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        while(_la===presentable_policyParser.T__3 || _la===presentable_policyParser.ID) {\r\n            this.state = 112;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n            while(_la===presentable_policyParser.T__3) {\r\n                this.state = 109;\r\n                this.match(presentable_policyParser.T__3);\r\n                this.state = 114;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n            }\r\n            this.state = 115;\r\n            this.match(presentable_policyParser.ID);\r\n            this.state = 120;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Audience_individuals_clauseContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_audience_individuals_clause;\r\n    return this;\r\n}\r\n\r\nAudience_individuals_clauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAudience_individuals_clauseContext.prototype.constructor = Audience_individuals_clauseContext;\r\n\r\nAudience_individuals_clauseContext.prototype.users = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(UsersContext);\r\n    } else {\r\n        return this.getTypedRuleContext(UsersContext,i);\r\n    }\r\n};\r\n\r\nAudience_individuals_clauseContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterAudience_individuals_clause(this);\r\n\t}\r\n};\r\n\r\nAudience_individuals_clauseContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitAudience_individuals_clause(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Audience_individuals_clauseContext = Audience_individuals_clauseContext;\r\n\r\npresentable_policyParser.prototype.audience_individuals_clause = function() {\r\n\r\n    var localctx = new Audience_individuals_clauseContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 8, presentable_policyParser.RULE_audience_individuals_clause);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 121;\r\n        this.users();\r\n        this.state = 126;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        while(_la===presentable_policyParser.T__3) {\r\n            this.state = 122;\r\n            this.match(presentable_policyParser.T__3);\r\n            this.state = 123;\r\n            this.users();\r\n            this.state = 128;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Audience_groups_clauseContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_audience_groups_clause;\r\n    return this;\r\n}\r\n\r\nAudience_groups_clauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAudience_groups_clauseContext.prototype.constructor = Audience_groups_clauseContext;\r\n\r\nAudience_groups_clauseContext.prototype.user_groups = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(User_groupsContext);\r\n    } else {\r\n        return this.getTypedRuleContext(User_groupsContext,i);\r\n    }\r\n};\r\n\r\nAudience_groups_clauseContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterAudience_groups_clause(this);\r\n\t}\r\n};\r\n\r\nAudience_groups_clauseContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitAudience_groups_clause(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Audience_groups_clauseContext = Audience_groups_clauseContext;\r\n\r\npresentable_policyParser.prototype.audience_groups_clause = function() {\r\n\r\n    var localctx = new Audience_groups_clauseContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 10, presentable_policyParser.RULE_audience_groups_clause);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 129;\r\n        this.match(presentable_policyParser.T__4);\r\n        this.state = 130;\r\n        this.user_groups();\r\n        this.state = 135;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        while(_la===presentable_policyParser.T__3) {\r\n            this.state = 131;\r\n            this.match(presentable_policyParser.T__3);\r\n            this.state = 132;\r\n            this.user_groups();\r\n            this.state = 137;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction State_clauseContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_state_clause;\r\n    return this;\r\n}\r\n\r\nState_clauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nState_clauseContext.prototype.constructor = State_clauseContext;\r\n\r\nState_clauseContext.prototype.current_state_clause = function() {\r\n    return this.getTypedRuleContext(Current_state_clauseContext,0);\r\n};\r\n\r\nState_clauseContext.prototype.target_clause = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(Target_clauseContext);\r\n    } else {\r\n        return this.getTypedRuleContext(Target_clauseContext,i);\r\n    }\r\n};\r\n\r\nState_clauseContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterState_clause(this);\r\n\t}\r\n};\r\n\r\nState_clauseContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitState_clause(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.State_clauseContext = State_clauseContext;\r\n\r\npresentable_policyParser.prototype.state_clause = function() {\r\n\r\n    var localctx = new State_clauseContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 12, presentable_policyParser.RULE_state_clause);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 138;\r\n        this.current_state_clause();\r\n        this.state = 140; \r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        do {\r\n            this.state = 139;\r\n            this.target_clause();\r\n            this.state = 142; \r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        } while(_la===presentable_policyParser.PROCEED);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Current_state_clauseContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_current_state_clause;\r\n    return this;\r\n}\r\n\r\nCurrent_state_clauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nCurrent_state_clauseContext.prototype.constructor = Current_state_clauseContext;\r\n\r\nCurrent_state_clauseContext.prototype.IN = function() {\r\n    return this.getToken(presentable_policyParser.IN, 0);\r\n};\r\n\r\nCurrent_state_clauseContext.prototype.ID = function() {\r\n    return this.getToken(presentable_policyParser.ID, 0);\r\n};\r\n\r\nCurrent_state_clauseContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterCurrent_state_clause(this);\r\n\t}\r\n};\r\n\r\nCurrent_state_clauseContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitCurrent_state_clause(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Current_state_clauseContext = Current_state_clauseContext;\r\n\r\npresentable_policyParser.prototype.current_state_clause = function() {\r\n\r\n    var localctx = new Current_state_clauseContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 14, presentable_policyParser.RULE_current_state_clause);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 144;\r\n        this.match(presentable_policyParser.IN);\r\n        this.state = 145;\r\n        this.match(presentable_policyParser.ID);\r\n        this.state = 146;\r\n        this.match(presentable_policyParser.T__5);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Target_clauseContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_target_clause;\r\n    return this;\r\n}\r\n\r\nTarget_clauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nTarget_clauseContext.prototype.constructor = Target_clauseContext;\r\n\r\nTarget_clauseContext.prototype.PROCEED = function() {\r\n    return this.getToken(presentable_policyParser.PROCEED, 0);\r\n};\r\n\r\nTarget_clauseContext.prototype.TO = function() {\r\n    return this.getToken(presentable_policyParser.TO, 0);\r\n};\r\n\r\nTarget_clauseContext.prototype.ID = function() {\r\n    return this.getToken(presentable_policyParser.ID, 0);\r\n};\r\n\r\nTarget_clauseContext.prototype.event = function() {\r\n    return this.getTypedRuleContext(EventContext,0);\r\n};\r\n\r\nTarget_clauseContext.prototype.accepting = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(AcceptingContext);\r\n    } else {\r\n        return this.getTypedRuleContext(AcceptingContext,i);\r\n    }\r\n};\r\n\r\nTarget_clauseContext.prototype.and_event = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(And_eventContext);\r\n    } else {\r\n        return this.getTypedRuleContext(And_eventContext,i);\r\n    }\r\n};\r\n\r\nTarget_clauseContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterTarget_clause(this);\r\n\t}\r\n};\r\n\r\nTarget_clauseContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitTarget_clause(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Target_clauseContext = Target_clauseContext;\r\n\r\npresentable_policyParser.prototype.target_clause = function() {\r\n\r\n    var localctx = new Target_clauseContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 16, presentable_policyParser.RULE_target_clause);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 148;\r\n        this.match(presentable_policyParser.PROCEED);\r\n        this.state = 149;\r\n        this.match(presentable_policyParser.TO);\r\n        this.state = 150;\r\n        this.match(presentable_policyParser.ID);\r\n        this.state = 151;\r\n        this.match(presentable_policyParser.ON);\r\n        this.state = 155;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        while(_la===presentable_policyParser.ACCEPTING) {\r\n            this.state = 152;\r\n            this.accepting();\r\n            this.state = 157;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        }\r\n        this.state = 158;\r\n        this.event();\r\n        this.state = 162;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        while(_la===presentable_policyParser.T__6) {\r\n            this.state = 159;\r\n            this.and_event();\r\n            this.state = 164;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction AcceptingContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_accepting;\r\n    return this;\r\n}\r\n\r\nAcceptingContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAcceptingContext.prototype.constructor = AcceptingContext;\r\n\r\n\r\nAcceptingContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterAccepting(this);\r\n\t}\r\n};\r\n\r\nAcceptingContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitAccepting(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.AcceptingContext = AcceptingContext;\r\n\r\npresentable_policyParser.prototype.accepting = function() {\r\n\r\n    var localctx = new AcceptingContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 18, presentable_policyParser.RULE_accepting);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 165;\r\n        this.match(presentable_policyParser.ACCEPTING);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction EventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_event;\r\n    return this;\r\n}\r\n\r\nEventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nEventContext.prototype.constructor = EventContext;\r\n\r\nEventContext.prototype.period_event = function() {\r\n    return this.getTypedRuleContext(Period_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.specific_date_event = function() {\r\n    return this.getTypedRuleContext(Specific_date_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.relative_date_event = function() {\r\n    return this.getTypedRuleContext(Relative_date_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.pricing_agreement_event = function() {\r\n    return this.getTypedRuleContext(Pricing_agreement_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.transaction_event = function() {\r\n    return this.getTypedRuleContext(Transaction_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.guaranty_event = function() {\r\n    return this.getTypedRuleContext(Guaranty_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.signing_event = function() {\r\n    return this.getTypedRuleContext(Signing_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.access_count_event = function() {\r\n    return this.getTypedRuleContext(Access_count_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.balance_event = function() {\r\n    return this.getTypedRuleContext(Balance_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.settlement_event = function() {\r\n    return this.getTypedRuleContext(Settlement_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterEvent(this);\r\n\t}\r\n};\r\n\r\nEventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitEvent(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.EventContext = EventContext;\r\n\r\npresentable_policyParser.prototype.event = function() {\r\n\r\n    var localctx = new EventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 20, presentable_policyParser.RULE_event);\r\n    try {\r\n        this.state = 177;\r\n        this._errHandler.sync(this);\r\n        switch(this._input.LA(1)) {\r\n        case presentable_policyParser.T__7:\r\n            this.enterOuterAlt(localctx, 1);\r\n            this.state = 167;\r\n            this.period_event();\r\n            break;\r\n        case presentable_policyParser.T__8:\r\n            this.enterOuterAlt(localctx, 2);\r\n            this.state = 168;\r\n            this.specific_date_event();\r\n            break;\r\n        case presentable_policyParser.INT:\r\n            this.enterOuterAlt(localctx, 3);\r\n            this.state = 169;\r\n            this.relative_date_event();\r\n            break;\r\n        case presentable_policyParser.T__10:\r\n            this.enterOuterAlt(localctx, 4);\r\n            this.state = 170;\r\n            this.pricing_agreement_event();\r\n            break;\r\n        case presentable_policyParser.T__11:\r\n            this.enterOuterAlt(localctx, 5);\r\n            this.state = 171;\r\n            this.transaction_event();\r\n            break;\r\n        case presentable_policyParser.T__13:\r\n        case presentable_policyParser.T__16:\r\n            this.enterOuterAlt(localctx, 6);\r\n            this.state = 172;\r\n            this.guaranty_event();\r\n            break;\r\n        case presentable_policyParser.LICENSE:\r\n            this.enterOuterAlt(localctx, 7);\r\n            this.state = 173;\r\n            this.signing_event();\r\n            break;\r\n        case presentable_policyParser.T__17:\r\n        case presentable_policyParser.T__18:\r\n            this.enterOuterAlt(localctx, 8);\r\n            this.state = 174;\r\n            this.access_count_event();\r\n            break;\r\n        case presentable_policyParser.T__19:\r\n        case presentable_policyParser.T__20:\r\n            this.enterOuterAlt(localctx, 9);\r\n            this.state = 175;\r\n            this.balance_event();\r\n            break;\r\n        case presentable_policyParser.T__21:\r\n            this.enterOuterAlt(localctx, 10);\r\n            this.state = 176;\r\n            this.settlement_event();\r\n            break;\r\n        default:\r\n            throw new antlr4.error.NoViableAltException(this);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction And_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_and_event;\r\n    return this;\r\n}\r\n\r\nAnd_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAnd_eventContext.prototype.constructor = And_eventContext;\r\n\r\nAnd_eventContext.prototype.event = function() {\r\n    return this.getTypedRuleContext(EventContext,0);\r\n};\r\n\r\nAnd_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterAnd_event(this);\r\n\t}\r\n};\r\n\r\nAnd_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitAnd_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.And_eventContext = And_eventContext;\r\n\r\npresentable_policyParser.prototype.and_event = function() {\r\n\r\n    var localctx = new And_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 22, presentable_policyParser.RULE_and_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 179;\r\n        this.match(presentable_policyParser.T__6);\r\n        this.state = 180;\r\n        this.event();\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Period_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_period_event;\r\n    return this;\r\n}\r\n\r\nPeriod_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nPeriod_eventContext.prototype.constructor = Period_eventContext;\r\n\r\nPeriod_eventContext.prototype.time_unit = function() {\r\n    return this.getTypedRuleContext(Time_unitContext,0);\r\n};\r\n\r\nPeriod_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterPeriod_event(this);\r\n\t}\r\n};\r\n\r\nPeriod_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitPeriod_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Period_eventContext = Period_eventContext;\r\n\r\npresentable_policyParser.prototype.period_event = function() {\r\n\r\n    var localctx = new Period_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 24, presentable_policyParser.RULE_period_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 182;\r\n        this.match(presentable_policyParser.T__7);\r\n        this.state = 183;\r\n        this.time_unit();\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Specific_date_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_specific_date_event;\r\n    return this;\r\n}\r\n\r\nSpecific_date_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nSpecific_date_eventContext.prototype.constructor = Specific_date_eventContext;\r\n\r\nSpecific_date_eventContext.prototype.DATE = function() {\r\n    return this.getToken(presentable_policyParser.DATE, 0);\r\n};\r\n\r\nSpecific_date_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterSpecific_date_event(this);\r\n\t}\r\n};\r\n\r\nSpecific_date_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitSpecific_date_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Specific_date_eventContext = Specific_date_eventContext;\r\n\r\npresentable_policyParser.prototype.specific_date_event = function() {\r\n\r\n    var localctx = new Specific_date_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 26, presentable_policyParser.RULE_specific_date_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 185;\r\n        this.match(presentable_policyParser.T__8);\r\n        this.state = 186;\r\n        this.match(presentable_policyParser.DATE);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Relative_date_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_relative_date_event;\r\n    return this;\r\n}\r\n\r\nRelative_date_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nRelative_date_eventContext.prototype.constructor = Relative_date_eventContext;\r\n\r\nRelative_date_eventContext.prototype.INT = function() {\r\n    return this.getToken(presentable_policyParser.INT, 0);\r\n};\r\n\r\nRelative_date_eventContext.prototype.time_unit = function() {\r\n    return this.getTypedRuleContext(Time_unitContext,0);\r\n};\r\n\r\nRelative_date_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterRelative_date_event(this);\r\n\t}\r\n};\r\n\r\nRelative_date_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitRelative_date_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Relative_date_eventContext = Relative_date_eventContext;\r\n\r\npresentable_policyParser.prototype.relative_date_event = function() {\r\n\r\n    var localctx = new Relative_date_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 28, presentable_policyParser.RULE_relative_date_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 188;\r\n        this.match(presentable_policyParser.INT);\r\n        this.state = 189;\r\n        this.time_unit();\r\n        this.state = 190;\r\n        this.match(presentable_policyParser.T__9);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Pricing_agreement_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_pricing_agreement_event;\r\n    return this;\r\n}\r\n\r\nPricing_agreement_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nPricing_agreement_eventContext.prototype.constructor = Pricing_agreement_eventContext;\r\n\r\n\r\nPricing_agreement_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterPricing_agreement_event(this);\r\n\t}\r\n};\r\n\r\nPricing_agreement_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitPricing_agreement_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Pricing_agreement_eventContext = Pricing_agreement_eventContext;\r\n\r\npresentable_policyParser.prototype.pricing_agreement_event = function() {\r\n\r\n    var localctx = new Pricing_agreement_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 30, presentable_policyParser.RULE_pricing_agreement_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 192;\r\n        this.match(presentable_policyParser.T__10);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Transaction_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_transaction_event;\r\n    return this;\r\n}\r\n\r\nTransaction_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nTransaction_eventContext.prototype.constructor = Transaction_eventContext;\r\n\r\nTransaction_eventContext.prototype.INT = function() {\r\n    return this.getToken(presentable_policyParser.INT, 0);\r\n};\r\n\r\nTransaction_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterTransaction_event(this);\r\n\t}\r\n};\r\n\r\nTransaction_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitTransaction_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Transaction_eventContext = Transaction_eventContext;\r\n\r\npresentable_policyParser.prototype.transaction_event = function() {\r\n\r\n    var localctx = new Transaction_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 32, presentable_policyParser.RULE_transaction_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 194;\r\n        this.match(presentable_policyParser.T__11);\r\n        this.state = 195;\r\n        this.match(presentable_policyParser.INT);\r\n        this.state = 196;\r\n        this.match(presentable_policyParser.T__12);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Guaranty_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_guaranty_event;\r\n    return this;\r\n}\r\n\r\nGuaranty_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nGuaranty_eventContext.prototype.constructor = Guaranty_eventContext;\r\n\r\nGuaranty_eventContext.prototype.contract_guaranty = function() {\r\n    return this.getTypedRuleContext(Contract_guarantyContext,0);\r\n};\r\n\r\nGuaranty_eventContext.prototype.platform_guaranty = function() {\r\n    return this.getTypedRuleContext(Platform_guarantyContext,0);\r\n};\r\n\r\nGuaranty_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterGuaranty_event(this);\r\n\t}\r\n};\r\n\r\nGuaranty_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitGuaranty_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Guaranty_eventContext = Guaranty_eventContext;\r\n\r\npresentable_policyParser.prototype.guaranty_event = function() {\r\n\r\n    var localctx = new Guaranty_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 34, presentable_policyParser.RULE_guaranty_event);\r\n    try {\r\n        this.state = 200;\r\n        this._errHandler.sync(this);\r\n        switch(this._input.LA(1)) {\r\n        case presentable_policyParser.T__13:\r\n            this.enterOuterAlt(localctx, 1);\r\n            this.state = 198;\r\n            this.contract_guaranty();\r\n            break;\r\n        case presentable_policyParser.T__16:\r\n            this.enterOuterAlt(localctx, 2);\r\n            this.state = 199;\r\n            this.platform_guaranty();\r\n            break;\r\n        default:\r\n            throw new antlr4.error.NoViableAltException(this);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Contract_guarantyContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_contract_guaranty;\r\n    return this;\r\n}\r\n\r\nContract_guarantyContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nContract_guarantyContext.prototype.constructor = Contract_guarantyContext;\r\n\r\nContract_guarantyContext.prototype.INT = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(presentable_policyParser.INT);\r\n    } else {\r\n        return this.getToken(presentable_policyParser.INT, i);\r\n    }\r\n};\r\n\r\n\r\nContract_guarantyContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterContract_guaranty(this);\r\n\t}\r\n};\r\n\r\nContract_guarantyContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitContract_guaranty(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Contract_guarantyContext = Contract_guarantyContext;\r\n\r\npresentable_policyParser.prototype.contract_guaranty = function() {\r\n\r\n    var localctx = new Contract_guarantyContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 36, presentable_policyParser.RULE_contract_guaranty);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 202;\r\n        this.match(presentable_policyParser.T__13);\r\n        this.state = 203;\r\n        this.match(presentable_policyParser.INT);\r\n        this.state = 204;\r\n        this.match(presentable_policyParser.T__14);\r\n        this.state = 205;\r\n        this.match(presentable_policyParser.INT);\r\n        this.state = 206;\r\n        this.match(presentable_policyParser.T__15);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Platform_guarantyContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_platform_guaranty;\r\n    return this;\r\n}\r\n\r\nPlatform_guarantyContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nPlatform_guarantyContext.prototype.constructor = Platform_guarantyContext;\r\n\r\nPlatform_guarantyContext.prototype.INT = function() {\r\n    return this.getToken(presentable_policyParser.INT, 0);\r\n};\r\n\r\nPlatform_guarantyContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterPlatform_guaranty(this);\r\n\t}\r\n};\r\n\r\nPlatform_guarantyContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitPlatform_guaranty(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Platform_guarantyContext = Platform_guarantyContext;\r\n\r\npresentable_policyParser.prototype.platform_guaranty = function() {\r\n\r\n    var localctx = new Platform_guarantyContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 38, presentable_policyParser.RULE_platform_guaranty);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 208;\r\n        this.match(presentable_policyParser.T__16);\r\n        this.state = 209;\r\n        this.match(presentable_policyParser.INT);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Signing_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_signing_event;\r\n    return this;\r\n}\r\n\r\nSigning_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nSigning_eventContext.prototype.constructor = Signing_eventContext;\r\n\r\nSigning_eventContext.prototype.LICENSE = function() {\r\n    return this.getToken(presentable_policyParser.LICENSE, 0);\r\n};\r\n\r\nSigning_eventContext.prototype.license_resource_id = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(License_resource_idContext);\r\n    } else {\r\n        return this.getTypedRuleContext(License_resource_idContext,i);\r\n    }\r\n};\r\n\r\nSigning_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterSigning_event(this);\r\n\t}\r\n};\r\n\r\nSigning_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitSigning_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Signing_eventContext = Signing_eventContext;\r\n\r\npresentable_policyParser.prototype.signing_event = function() {\r\n\r\n    var localctx = new Signing_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 40, presentable_policyParser.RULE_signing_event);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 211;\r\n        this.match(presentable_policyParser.LICENSE);\r\n        this.state = 219; \r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        do {\r\n            this.state = 215;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n            while(_la===presentable_policyParser.T__3) {\r\n                this.state = 212;\r\n                this.match(presentable_policyParser.T__3);\r\n                this.state = 217;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n            }\r\n            this.state = 218;\r\n            this.license_resource_id();\r\n            this.state = 221; \r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        } while(_la===presentable_policyParser.T__3 || _la===presentable_policyParser.ID);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Access_count_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_access_count_event;\r\n    return this;\r\n}\r\n\r\nAccess_count_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAccess_count_eventContext.prototype.constructor = Access_count_eventContext;\r\n\r\nAccess_count_eventContext.prototype.visit_increment_event = function() {\r\n    return this.getTypedRuleContext(Visit_increment_eventContext,0);\r\n};\r\n\r\nAccess_count_eventContext.prototype.visit_event = function() {\r\n    return this.getTypedRuleContext(Visit_eventContext,0);\r\n};\r\n\r\nAccess_count_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterAccess_count_event(this);\r\n\t}\r\n};\r\n\r\nAccess_count_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitAccess_count_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Access_count_eventContext = Access_count_eventContext;\r\n\r\npresentable_policyParser.prototype.access_count_event = function() {\r\n\r\n    var localctx = new Access_count_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 42, presentable_policyParser.RULE_access_count_event);\r\n    try {\r\n        this.state = 225;\r\n        this._errHandler.sync(this);\r\n        switch(this._input.LA(1)) {\r\n        case presentable_policyParser.T__17:\r\n            this.enterOuterAlt(localctx, 1);\r\n            this.state = 223;\r\n            this.visit_increment_event();\r\n            break;\r\n        case presentable_policyParser.T__18:\r\n            this.enterOuterAlt(localctx, 2);\r\n            this.state = 224;\r\n            this.visit_event();\r\n            break;\r\n        default:\r\n            throw new antlr4.error.NoViableAltException(this);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Visit_increment_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_visit_increment_event;\r\n    return this;\r\n}\r\n\r\nVisit_increment_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nVisit_increment_eventContext.prototype.constructor = Visit_increment_eventContext;\r\n\r\nVisit_increment_eventContext.prototype.INT = function() {\r\n    return this.getToken(presentable_policyParser.INT, 0);\r\n};\r\n\r\nVisit_increment_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterVisit_increment_event(this);\r\n\t}\r\n};\r\n\r\nVisit_increment_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitVisit_increment_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Visit_increment_eventContext = Visit_increment_eventContext;\r\n\r\npresentable_policyParser.prototype.visit_increment_event = function() {\r\n\r\n    var localctx = new Visit_increment_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 44, presentable_policyParser.RULE_visit_increment_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 227;\r\n        this.match(presentable_policyParser.T__17);\r\n        this.state = 228;\r\n        this.match(presentable_policyParser.INT);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Visit_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_visit_event;\r\n    return this;\r\n}\r\n\r\nVisit_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nVisit_eventContext.prototype.constructor = Visit_eventContext;\r\n\r\nVisit_eventContext.prototype.INT = function() {\r\n    return this.getToken(presentable_policyParser.INT, 0);\r\n};\r\n\r\nVisit_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterVisit_event(this);\r\n\t}\r\n};\r\n\r\nVisit_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitVisit_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Visit_eventContext = Visit_eventContext;\r\n\r\npresentable_policyParser.prototype.visit_event = function() {\r\n\r\n    var localctx = new Visit_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 46, presentable_policyParser.RULE_visit_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 230;\r\n        this.match(presentable_policyParser.T__18);\r\n        this.state = 231;\r\n        this.match(presentable_policyParser.INT);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Balance_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_balance_event;\r\n    return this;\r\n}\r\n\r\nBalance_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nBalance_eventContext.prototype.constructor = Balance_eventContext;\r\n\r\nBalance_eventContext.prototype.balance_greater = function() {\r\n    return this.getTypedRuleContext(Balance_greaterContext,0);\r\n};\r\n\r\nBalance_eventContext.prototype.balance_smaller = function() {\r\n    return this.getTypedRuleContext(Balance_smallerContext,0);\r\n};\r\n\r\nBalance_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterBalance_event(this);\r\n\t}\r\n};\r\n\r\nBalance_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitBalance_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Balance_eventContext = Balance_eventContext;\r\n\r\npresentable_policyParser.prototype.balance_event = function() {\r\n\r\n    var localctx = new Balance_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 48, presentable_policyParser.RULE_balance_event);\r\n    try {\r\n        this.state = 235;\r\n        this._errHandler.sync(this);\r\n        switch(this._input.LA(1)) {\r\n        case presentable_policyParser.T__19:\r\n            this.enterOuterAlt(localctx, 1);\r\n            this.state = 233;\r\n            this.balance_greater();\r\n            break;\r\n        case presentable_policyParser.T__20:\r\n            this.enterOuterAlt(localctx, 2);\r\n            this.state = 234;\r\n            this.balance_smaller();\r\n            break;\r\n        default:\r\n            throw new antlr4.error.NoViableAltException(this);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Balance_greaterContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_balance_greater;\r\n    return this;\r\n}\r\n\r\nBalance_greaterContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nBalance_greaterContext.prototype.constructor = Balance_greaterContext;\r\n\r\nBalance_greaterContext.prototype.INT = function() {\r\n    return this.getToken(presentable_policyParser.INT, 0);\r\n};\r\n\r\nBalance_greaterContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterBalance_greater(this);\r\n\t}\r\n};\r\n\r\nBalance_greaterContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitBalance_greater(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Balance_greaterContext = Balance_greaterContext;\r\n\r\npresentable_policyParser.prototype.balance_greater = function() {\r\n\r\n    var localctx = new Balance_greaterContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 50, presentable_policyParser.RULE_balance_greater);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 237;\r\n        this.match(presentable_policyParser.T__19);\r\n        this.state = 238;\r\n        this.match(presentable_policyParser.INT);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Balance_smallerContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_balance_smaller;\r\n    return this;\r\n}\r\n\r\nBalance_smallerContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nBalance_smallerContext.prototype.constructor = Balance_smallerContext;\r\n\r\nBalance_smallerContext.prototype.INT = function() {\r\n    return this.getToken(presentable_policyParser.INT, 0);\r\n};\r\n\r\nBalance_smallerContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterBalance_smaller(this);\r\n\t}\r\n};\r\n\r\nBalance_smallerContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitBalance_smaller(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Balance_smallerContext = Balance_smallerContext;\r\n\r\npresentable_policyParser.prototype.balance_smaller = function() {\r\n\r\n    var localctx = new Balance_smallerContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 52, presentable_policyParser.RULE_balance_smaller);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 240;\r\n        this.match(presentable_policyParser.T__20);\r\n        this.state = 241;\r\n        this.match(presentable_policyParser.INT);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Settlement_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_settlement_event;\r\n    return this;\r\n}\r\n\r\nSettlement_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nSettlement_eventContext.prototype.constructor = Settlement_eventContext;\r\n\r\n\r\nSettlement_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterSettlement_event(this);\r\n\t}\r\n};\r\n\r\nSettlement_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitSettlement_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Settlement_eventContext = Settlement_eventContext;\r\n\r\npresentable_policyParser.prototype.settlement_event = function() {\r\n\r\n    var localctx = new Settlement_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 54, presentable_policyParser.RULE_settlement_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 243;\r\n        this.match(presentable_policyParser.T__21);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction License_resource_idContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_license_resource_id;\r\n    return this;\r\n}\r\n\r\nLicense_resource_idContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nLicense_resource_idContext.prototype.constructor = License_resource_idContext;\r\n\r\nLicense_resource_idContext.prototype.ID = function() {\r\n    return this.getToken(presentable_policyParser.ID, 0);\r\n};\r\n\r\nLicense_resource_idContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterLicense_resource_id(this);\r\n\t}\r\n};\r\n\r\nLicense_resource_idContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitLicense_resource_id(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.License_resource_idContext = License_resource_idContext;\r\n\r\npresentable_policyParser.prototype.license_resource_id = function() {\r\n\r\n    var localctx = new License_resource_idContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 56, presentable_policyParser.RULE_license_resource_id);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 245;\r\n        this.match(presentable_policyParser.ID);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Account_idContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_account_id;\r\n    return this;\r\n}\r\n\r\nAccount_idContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAccount_idContext.prototype.constructor = Account_idContext;\r\n\r\nAccount_idContext.prototype.ID = function() {\r\n    return this.getToken(presentable_policyParser.ID, 0);\r\n};\r\n\r\nAccount_idContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterAccount_id(this);\r\n\t}\r\n};\r\n\r\nAccount_idContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitAccount_id(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Account_idContext = Account_idContext;\r\n\r\npresentable_policyParser.prototype.account_id = function() {\r\n\r\n    var localctx = new Account_idContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 58, presentable_policyParser.RULE_account_id);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 247;\r\n        this.match(presentable_policyParser.ID);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction UsersContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_users;\r\n    return this;\r\n}\r\n\r\nUsersContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nUsersContext.prototype.constructor = UsersContext;\r\n\r\nUsersContext.prototype.ID = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(presentable_policyParser.ID);\r\n    } else {\r\n        return this.getToken(presentable_policyParser.ID, i);\r\n    }\r\n};\r\n\r\n\r\nUsersContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterUsers(this);\r\n\t}\r\n};\r\n\r\nUsersContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitUsers(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.UsersContext = UsersContext;\r\n\r\npresentable_policyParser.prototype.users = function() {\r\n\r\n    var localctx = new UsersContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 60, presentable_policyParser.RULE_users);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 249;\r\n        this.match(presentable_policyParser.ID);\r\n        this.state = 254;\r\n        this._errHandler.sync(this);\r\n        var _alt = this._interp.adaptivePredict(this._input,19,this._ctx)\r\n        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {\r\n            if(_alt===1) {\r\n                this.state = 250;\r\n                this.match(presentable_policyParser.T__3);\r\n                this.state = 251;\r\n                this.match(presentable_policyParser.ID); \r\n            }\r\n            this.state = 256;\r\n            this._errHandler.sync(this);\r\n            _alt = this._interp.adaptivePredict(this._input,19,this._ctx);\r\n        }\r\n\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction User_groupsContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_user_groups;\r\n    return this;\r\n}\r\n\r\nUser_groupsContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nUser_groupsContext.prototype.constructor = User_groupsContext;\r\n\r\nUser_groupsContext.prototype.ID = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(presentable_policyParser.ID);\r\n    } else {\r\n        return this.getToken(presentable_policyParser.ID, i);\r\n    }\r\n};\r\n\r\n\r\nUser_groupsContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterUser_groups(this);\r\n\t}\r\n};\r\n\r\nUser_groupsContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitUser_groups(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.User_groupsContext = User_groupsContext;\r\n\r\npresentable_policyParser.prototype.user_groups = function() {\r\n\r\n    var localctx = new User_groupsContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 62, presentable_policyParser.RULE_user_groups);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 257;\r\n        this.match(presentable_policyParser.ID);\r\n        this.state = 262;\r\n        this._errHandler.sync(this);\r\n        var _alt = this._interp.adaptivePredict(this._input,20,this._ctx)\r\n        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {\r\n            if(_alt===1) {\r\n                this.state = 258;\r\n                this.match(presentable_policyParser.T__3);\r\n                this.state = 259;\r\n                this.match(presentable_policyParser.ID); \r\n            }\r\n            this.state = 264;\r\n            this._errHandler.sync(this);\r\n            _alt = this._interp.adaptivePredict(this._input,20,this._ctx);\r\n        }\r\n\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction AndContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_and;\r\n    return this;\r\n}\r\n\r\nAndContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAndContext.prototype.constructor = AndContext;\r\n\r\n\r\nAndContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterAnd(this);\r\n\t}\r\n};\r\n\r\nAndContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitAnd(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.AndContext = AndContext;\r\n\r\npresentable_policyParser.prototype.and = function() {\r\n\r\n    var localctx = new AndContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 64, presentable_policyParser.RULE_and);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 265;\r\n        this.match(presentable_policyParser.T__1);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction View_unitContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_view_unit;\r\n    return this;\r\n}\r\n\r\nView_unitContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nView_unitContext.prototype.constructor = View_unitContext;\r\n\r\n\r\nView_unitContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterView_unit(this);\r\n\t}\r\n};\r\n\r\nView_unitContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitView_unit(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.View_unitContext = View_unitContext;\r\n\r\npresentable_policyParser.prototype.view_unit = function() {\r\n\r\n    var localctx = new View_unitContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 66, presentable_policyParser.RULE_view_unit);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 267;\r\n        _la = this._input.LA(1);\r\n        if(!(_la===presentable_policyParser.T__22 || _la===presentable_policyParser.T__23)) {\r\n        this._errHandler.recoverInline(this);\r\n        }\r\n        else {\r\n        \tthis._errHandler.reportMatch(this);\r\n            this.consume();\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Time_unitContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_time_unit;\r\n    return this;\r\n}\r\n\r\nTime_unitContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nTime_unitContext.prototype.constructor = Time_unitContext;\r\n\r\n\r\nTime_unitContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterTime_unit(this);\r\n\t}\r\n};\r\n\r\nTime_unitContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitTime_unit(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Time_unitContext = Time_unitContext;\r\n\r\npresentable_policyParser.prototype.time_unit = function() {\r\n\r\n    var localctx = new Time_unitContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 68, presentable_policyParser.RULE_time_unit);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 269;\r\n        _la = this._input.LA(1);\r\n        if(!((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << presentable_policyParser.T__15) | (1 << presentable_policyParser.T__24) | (1 << presentable_policyParser.T__25) | (1 << presentable_policyParser.T__26))) !== 0))) {\r\n        this._errHandler.recoverInline(this);\r\n        }\r\n        else {\r\n        \tthis._errHandler.reportMatch(this);\r\n            this.consume();\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Start_hourContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_start_hour;\r\n    return this;\r\n}\r\n\r\nStart_hourContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nStart_hourContext.prototype.constructor = Start_hourContext;\r\n\r\nStart_hourContext.prototype.INT = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(presentable_policyParser.INT);\r\n    } else {\r\n        return this.getToken(presentable_policyParser.INT, i);\r\n    }\r\n};\r\n\r\n\r\nStart_hourContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterStart_hour(this);\r\n\t}\r\n};\r\n\r\nStart_hourContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitStart_hour(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.Start_hourContext = Start_hourContext;\r\n\r\npresentable_policyParser.prototype.start_hour = function() {\r\n\r\n    var localctx = new Start_hourContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 70, presentable_policyParser.RULE_start_hour);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 271;\r\n        this.match(presentable_policyParser.INT);\r\n        this.state = 272;\r\n        this.match(presentable_policyParser.T__5);\r\n        this.state = 273;\r\n        this.match(presentable_policyParser.INT);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction End_hourContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = presentable_policyParser.RULE_end_hour;\r\n    return this;\r\n}\r\n\r\nEnd_hourContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nEnd_hourContext.prototype.constructor = End_hourContext;\r\n\r\nEnd_hourContext.prototype.INT = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(presentable_policyParser.INT);\r\n    } else {\r\n        return this.getToken(presentable_policyParser.INT, i);\r\n    }\r\n};\r\n\r\n\r\nEnd_hourContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.enterEnd_hour(this);\r\n\t}\r\n};\r\n\r\nEnd_hourContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof presentable_policyListener ) {\r\n        listener.exitEnd_hour(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npresentable_policyParser.End_hourContext = End_hourContext;\r\n\r\npresentable_policyParser.prototype.end_hour = function() {\r\n\r\n    var localctx = new End_hourContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 72, presentable_policyParser.RULE_end_hour);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 275;\r\n        this.match(presentable_policyParser.INT);\r\n        this.state = 276;\r\n        this.match(presentable_policyParser.T__5);\r\n        this.state = 277;\r\n        this.match(presentable_policyParser.INT);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nexports.presentable_policyParser = presentable_policyParser;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/presentable_policy_lang/gen/presentable_policyParser.js\n// module id = iUzR\n// module chunks = 2","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\n// A token has properties: text, type, line, character position in the line\n// (so we can ignore tabs), token channel, index, and source from which\n// we obtained this token.\n\nfunction Token() {\n\tthis.source = null;\n\tthis.type = null; // token type of the token\n\tthis.channel = null; // The parser ignores everything not on DEFAULT_CHANNEL\n\tthis.start = null; // optional; return -1 if not implemented.\n\tthis.stop = null; // optional; return -1 if not implemented.\n\tthis.tokenIndex = null; // from 0..n-1 of the token object in the input stream\n\tthis.line = null; // line=1..n of the 1st character\n\tthis.column = null; // beginning of the line at which it occurs, 0..n-1\n\tthis._text = null; // text of the token.\n\treturn this;\n}\n\nToken.INVALID_TYPE = 0;\n\n// During lookahead operations, this \"token\" signifies we hit rule end ATN state\n// and did not follow it despite needing to.\nToken.EPSILON = -2;\n\nToken.MIN_USER_TOKEN_TYPE = 1;\n\nToken.EOF = -1;\n\n// All tokens go to the parser (unless skip() is called in that rule)\n// on a particular \"channel\". The parser tunes to a particular channel\n// so that whitespace etc... can go to the parser on a \"hidden\" channel.\n\nToken.DEFAULT_CHANNEL = 0;\n\n// Anything on different channel than DEFAULT_CHANNEL is not parsed\n// by parser.\n\nToken.HIDDEN_CHANNEL = 1;\n\n// Explicitly set the text for this token. If {code text} is not\n// {@code null}, then {@link //getText} will return this value rather than\n// extracting the text from the input.\n//\n// @param text The explicit text of the token, or {@code null} if the text\n// should be obtained from the input along with the start and stop indexes\n// of the token.\n\nObject.defineProperty(Token.prototype, \"text\", {\n\tget : function() {\n\t\treturn this._text;\n\t},\n\tset : function(text) {\n\t\tthis._text = text;\n\t}\n});\n\nToken.prototype.getTokenSource = function() {\n\treturn this.source[0];\n};\n\nToken.prototype.getInputStream = function() {\n\treturn this.source[1];\n};\n\nfunction CommonToken(source, type, channel, start, stop) {\n\tToken.call(this);\n\tthis.source = source !== undefined ? source : CommonToken.EMPTY_SOURCE;\n\tthis.type = type !== undefined ? type : null;\n\tthis.channel = channel !== undefined ? channel : Token.DEFAULT_CHANNEL;\n\tthis.start = start !== undefined ? start : -1;\n\tthis.stop = stop !== undefined ? stop : -1;\n\tthis.tokenIndex = -1;\n\tif (this.source[0] !== null) {\n\t\tthis.line = source[0].line;\n\t\tthis.column = source[0].column;\n\t} else {\n\t\tthis.column = -1;\n\t}\n\treturn this;\n}\n\nCommonToken.prototype = Object.create(Token.prototype);\nCommonToken.prototype.constructor = CommonToken;\n\n// An empty {@link Pair} which is used as the default value of\n// {@link //source} for tokens that do not have a source.\nCommonToken.EMPTY_SOURCE = [ null, null ];\n\n// Constructs a new {@link CommonToken} as a copy of another {@link Token}.\n//\n// <p>\n// If {@code oldToken} is also a {@link CommonToken} instance, the newly\n// constructed token will share a reference to the {@link //text} field and\n// the {@link Pair} stored in {@link //source}. Otherwise, {@link //text} will\n// be assigned the result of calling {@link //getText}, and {@link //source}\n// will be constructed from the result of {@link Token//getTokenSource} and\n// {@link Token//getInputStream}.</p>\n//\n// @param oldToken The token to copy.\n//\nCommonToken.prototype.clone = function() {\n\tvar t = new CommonToken(this.source, this.type, this.channel, this.start,\n\t\t\tthis.stop);\n\tt.tokenIndex = this.tokenIndex;\n\tt.line = this.line;\n\tt.column = this.column;\n\tt.text = this.text;\n\treturn t;\n};\n\nObject.defineProperty(CommonToken.prototype, \"text\", {\n\tget : function() {\n\t\tif (this._text !== null) {\n\t\t\treturn this._text;\n\t\t}\n\t\tvar input = this.getInputStream();\n\t\tif (input === null) {\n\t\t\treturn null;\n\t\t}\n\t\tvar n = input.size;\n\t\tif (this.start < n && this.stop < n) {\n\t\t\treturn input.getText(this.start, this.stop);\n\t\t} else {\n\t\t\treturn \"<EOF>\";\n\t\t}\n\t},\n\tset : function(text) {\n\t\tthis._text = text;\n\t}\n});\n\nCommonToken.prototype.toString = function() {\n\tvar txt = this.text;\n\tif (txt !== null) {\n\t\ttxt = txt.replace(/\\n/g, \"\\\\n\").replace(/\\r/g, \"\\\\r\").replace(/\\t/g, \"\\\\t\");\n\t} else {\n\t\ttxt = \"<no text>\";\n\t}\n\treturn \"[@\" + this.tokenIndex + \",\" + this.start + \":\" + this.stop + \"='\" +\n\t\t\ttxt + \"',<\" + this.type + \">\" +\n\t\t\t(this.channel > 0 ? \",channel=\" + this.channel : \"\") + \",\" +\n\t\t\tthis.line + \":\" + this.column + \"]\";\n};\n\nexports.Token = Token;\nexports.CommonToken = CommonToken;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/Token.js\n// module id = j/5l\n// module chunks = 0 1 2","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\n// The following images show the relation of states and\n// {@link ATNState//transitions} for various grammar constructs.\n//\n// <ul>\n//\n// <li>Solid edges marked with an &//0949; indicate a required\n// {@link EpsilonTransition}.</li>\n//\n// <li>Dashed edges indicate locations where any transition derived from\n// {@link Transition} might appear.</li>\n//\n// <li>Dashed nodes are place holders for either a sequence of linked\n// {@link BasicState} states or the inclusion of a block representing a nested\n// construct in one of the forms below.</li>\n//\n// <li>Nodes showing multiple outgoing alternatives with a {@code ...} support\n// any number of alternatives (one or more). Nodes without the {@code ...} only\n// support the exact number of alternatives shown in the diagram.</li>\n//\n// </ul>\n//\n// <h2>Basic Blocks</h2>\n//\n// <h3>Rule</h3>\n//\n// <embed src=\"images/Rule.svg\" type=\"image/svg+xml\"/>\n//\n// <h3>Block of 1 or more alternatives</h3>\n//\n// <embed src=\"images/Block.svg\" type=\"image/svg+xml\"/>\n//\n// <h2>Greedy Loops</h2>\n//\n// <h3>Greedy Closure: {@code (...)*}</h3>\n//\n// <embed src=\"images/ClosureGreedy.svg\" type=\"image/svg+xml\"/>\n//\n// <h3>Greedy Positive Closure: {@code (...)+}</h3>\n//\n// <embed src=\"images/PositiveClosureGreedy.svg\" type=\"image/svg+xml\"/>\n//\n// <h3>Greedy Optional: {@code (...)?}</h3>\n//\n// <embed src=\"images/OptionalGreedy.svg\" type=\"image/svg+xml\"/>\n//\n// <h2>Non-Greedy Loops</h2>\n//\n// <h3>Non-Greedy Closure: {@code (...)*?}</h3>\n//\n// <embed src=\"images/ClosureNonGreedy.svg\" type=\"image/svg+xml\"/>\n//\n// <h3>Non-Greedy Positive Closure: {@code (...)+?}</h3>\n//\n// <embed src=\"images/PositiveClosureNonGreedy.svg\" type=\"image/svg+xml\"/>\n//\n// <h3>Non-Greedy Optional: {@code (...)??}</h3>\n//\n// <embed src=\"images/OptionalNonGreedy.svg\" type=\"image/svg+xml\"/>\n//\n\nvar INITIAL_NUM_TRANSITIONS = 4;\n\nfunction ATNState() {\n    // Which ATN are we in?\n    this.atn = null;\n    this.stateNumber = ATNState.INVALID_STATE_NUMBER;\n    this.stateType = null;\n    this.ruleIndex = 0; // at runtime, we don't have Rule objects\n    this.epsilonOnlyTransitions = false;\n    // Track the transitions emanating from this ATN state.\n    this.transitions = [];\n    // Used to cache lookahead during parsing, not used during construction\n    this.nextTokenWithinRule = null;\n    return this;\n}\n\n// constants for serialization\nATNState.INVALID_TYPE = 0;\nATNState.BASIC = 1;\nATNState.RULE_START = 2;\nATNState.BLOCK_START = 3;\nATNState.PLUS_BLOCK_START = 4;\nATNState.STAR_BLOCK_START = 5;\nATNState.TOKEN_START = 6;\nATNState.RULE_STOP = 7;\nATNState.BLOCK_END = 8;\nATNState.STAR_LOOP_BACK = 9;\nATNState.STAR_LOOP_ENTRY = 10;\nATNState.PLUS_LOOP_BACK = 11;\nATNState.LOOP_END = 12;\n\nATNState.serializationNames = [\n            \"INVALID\",\n            \"BASIC\",\n            \"RULE_START\",\n            \"BLOCK_START\",\n            \"PLUS_BLOCK_START\",\n            \"STAR_BLOCK_START\",\n            \"TOKEN_START\",\n            \"RULE_STOP\",\n            \"BLOCK_END\",\n            \"STAR_LOOP_BACK\",\n            \"STAR_LOOP_ENTRY\",\n            \"PLUS_LOOP_BACK\",\n            \"LOOP_END\" ];\n\nATNState.INVALID_STATE_NUMBER = -1;\n\nATNState.prototype.toString = function() {\n\treturn this.stateNumber;\n};\n\nATNState.prototype.equals = function(other) {\n    if (other instanceof ATNState) {\n        return this.stateNumber===other.stateNumber;\n    } else {\n        return false;\n    }\n};\n\nATNState.prototype.isNonGreedyExitState = function() {\n    return false;\n};\n\n\nATNState.prototype.addTransition = function(trans, index) {\n\tif(index===undefined) {\n\t\tindex = -1;\n\t}\n    if (this.transitions.length===0) {\n        this.epsilonOnlyTransitions = trans.isEpsilon;\n    } else if(this.epsilonOnlyTransitions !== trans.isEpsilon) {\n        this.epsilonOnlyTransitions = false;\n    }\n    if (index===-1) {\n        this.transitions.push(trans);\n    } else {\n        this.transitions.splice(index, 1, trans);\n    }\n};\n\nfunction BasicState() {\n\tATNState.call(this);\n    this.stateType = ATNState.BASIC;\n    return this;\n}\n\nBasicState.prototype = Object.create(ATNState.prototype);\nBasicState.prototype.constructor = BasicState;\n\n\nfunction DecisionState() {\n\tATNState.call(this);\n    this.decision = -1;\n    this.nonGreedy = false;\n    return this;\n}\n\nDecisionState.prototype = Object.create(ATNState.prototype);\nDecisionState.prototype.constructor = DecisionState;\n\n\n//  The start of a regular {@code (...)} block.\nfunction BlockStartState() {\n\tDecisionState.call(this);\n\tthis.endState = null;\n\treturn this;\n}\n\nBlockStartState.prototype = Object.create(DecisionState.prototype);\nBlockStartState.prototype.constructor = BlockStartState;\n\n\nfunction BasicBlockStartState() {\n\tBlockStartState.call(this);\n\tthis.stateType = ATNState.BLOCK_START;\n\treturn this;\n}\n\nBasicBlockStartState.prototype = Object.create(BlockStartState.prototype);\nBasicBlockStartState.prototype.constructor = BasicBlockStartState;\n\n\n// Terminal node of a simple {@code (a|b|c)} block.\nfunction BlockEndState() {\n\tATNState.call(this);\n\tthis.stateType = ATNState.BLOCK_END;\n    this.startState = null;\n    return this;\n}\n\nBlockEndState.prototype = Object.create(ATNState.prototype);\nBlockEndState.prototype.constructor = BlockEndState;\n\n\n// The last node in the ATN for a rule, unless that rule is the start symbol.\n//  In that case, there is one transition to EOF. Later, we might encode\n//  references to all calls to this rule to compute FOLLOW sets for\n//  error handling.\n//\nfunction RuleStopState() {\n\tATNState.call(this);\n    this.stateType = ATNState.RULE_STOP;\n    return this;\n}\n\nRuleStopState.prototype = Object.create(ATNState.prototype);\nRuleStopState.prototype.constructor = RuleStopState;\n\nfunction RuleStartState() {\n\tATNState.call(this);\n\tthis.stateType = ATNState.RULE_START;\n\tthis.stopState = null;\n\tthis.isPrecedenceRule = false;\n\treturn this;\n}\n\nRuleStartState.prototype = Object.create(ATNState.prototype);\nRuleStartState.prototype.constructor = RuleStartState;\n\n// Decision state for {@code A+} and {@code (A|B)+}.  It has two transitions:\n//  one to the loop back to start of the block and one to exit.\n//\nfunction PlusLoopbackState() {\n\tDecisionState.call(this);\n\tthis.stateType = ATNState.PLUS_LOOP_BACK;\n\treturn this;\n}\n\nPlusLoopbackState.prototype = Object.create(DecisionState.prototype);\nPlusLoopbackState.prototype.constructor = PlusLoopbackState;\n\n\n// Start of {@code (A|B|...)+} loop. Technically a decision state, but\n//  we don't use for code generation; somebody might need it, so I'm defining\n//  it for completeness. In reality, the {@link PlusLoopbackState} node is the\n//  real decision-making note for {@code A+}.\n//\nfunction PlusBlockStartState() {\n\tBlockStartState.call(this);\n\tthis.stateType = ATNState.PLUS_BLOCK_START;\n    this.loopBackState = null;\n    return this;\n}\n\nPlusBlockStartState.prototype = Object.create(BlockStartState.prototype);\nPlusBlockStartState.prototype.constructor = PlusBlockStartState;\n\n// The block that begins a closure loop.\nfunction StarBlockStartState() {\n\tBlockStartState.call(this);\n\tthis.stateType = ATNState.STAR_BLOCK_START;\n\treturn this;\n}\n\nStarBlockStartState.prototype = Object.create(BlockStartState.prototype);\nStarBlockStartState.prototype.constructor = StarBlockStartState;\n\n\nfunction StarLoopbackState() {\n\tATNState.call(this);\n\tthis.stateType = ATNState.STAR_LOOP_BACK;\n\treturn this;\n}\n\nStarLoopbackState.prototype = Object.create(ATNState.prototype);\nStarLoopbackState.prototype.constructor = StarLoopbackState;\n\n\nfunction StarLoopEntryState() {\n\tDecisionState.call(this);\n\tthis.stateType = ATNState.STAR_LOOP_ENTRY;\n    this.loopBackState = null;\n    // Indicates whether this state can benefit from a precedence DFA during SLL decision making.\n    this.isPrecedenceDecision = null;\n    return this;\n}\n\nStarLoopEntryState.prototype = Object.create(DecisionState.prototype);\nStarLoopEntryState.prototype.constructor = StarLoopEntryState;\n\n\n// Mark the end of a * or + loop.\nfunction LoopEndState() {\n\tATNState.call(this);\n\tthis.stateType = ATNState.LOOP_END;\n\tthis.loopBackState = null;\n\treturn this;\n}\n\nLoopEndState.prototype = Object.create(ATNState.prototype);\nLoopEndState.prototype.constructor = LoopEndState;\n\n\n// The Tokens rule start state linking to each lexer rule start state */\nfunction TokensStartState() {\n\tDecisionState.call(this);\n\tthis.stateType = ATNState.TOKEN_START;\n\treturn this;\n}\n\nTokensStartState.prototype = Object.create(DecisionState.prototype);\nTokensStartState.prototype.constructor = TokensStartState;\n\nexports.ATNState = ATNState;\nexports.BasicState = BasicState;\nexports.DecisionState = DecisionState;\nexports.BlockStartState = BlockStartState;\nexports.BlockEndState = BlockEndState;\nexports.LoopEndState = LoopEndState;\nexports.RuleStartState = RuleStartState;\nexports.RuleStopState = RuleStopState;\nexports.TokensStartState = TokensStartState;\nexports.PlusLoopbackState = PlusLoopbackState;\nexports.StarLoopbackState = StarLoopbackState;\nexports.StarLoopEntryState = StarLoopEntryState;\nexports.PlusBlockStartState = PlusBlockStartState;\nexports.StarBlockStartState = StarBlockStartState;\nexports.BasicBlockStartState = BasicBlockStartState;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/atn/ATNState.js\n// module id = j0Qz\n// module chunks = 0 1 2","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\nvar Token = require('./../Token').Token;\nvar Errors = require('./Errors');\nvar NoViableAltException = Errors.NoViableAltException;\nvar InputMismatchException = Errors.InputMismatchException;\nvar FailedPredicateException = Errors.FailedPredicateException;\nvar ParseCancellationException = Errors.ParseCancellationException;\nvar ATNState = require('./../atn/ATNState').ATNState;\nvar Interval = require('./../IntervalSet').Interval;\nvar IntervalSet = require('./../IntervalSet').IntervalSet;\n\nfunction ErrorStrategy() {\n\n}\n\nErrorStrategy.prototype.reset = function(recognizer){\n};\n\nErrorStrategy.prototype.recoverInline = function(recognizer){\n};\n\nErrorStrategy.prototype.recover = function(recognizer, e){\n};\n\nErrorStrategy.prototype.sync = function(recognizer){\n};\n\nErrorStrategy.prototype.inErrorRecoveryMode = function(recognizer){\n};\n\nErrorStrategy.prototype.reportError = function(recognizer){\n};\n\n\n\n// This is the default implementation of {@link ANTLRErrorStrategy} used for\n// error reporting and recovery in ANTLR parsers.\n//\nfunction DefaultErrorStrategy() {\n\tErrorStrategy.call(this);\n    // Indicates whether the error strategy is currently \"recovering from an\n    // error\". This is used to suppress reporting multiple error messages while\n    // attempting to recover from a detected syntax error.\n    //\n    // @see //inErrorRecoveryMode\n    //\n    this.errorRecoveryMode = false;\n\n    // The index into the input stream where the last error occurred.\n    // This is used to prevent infinite loops where an error is found\n    // but no token is consumed during recovery...another error is found,\n    // ad nauseum. This is a failsafe mechanism to guarantee that at least\n    // one token/tree node is consumed for two errors.\n    //\n    this.lastErrorIndex = -1;\n    this.lastErrorStates = null;\n    return this;\n}\n\nDefaultErrorStrategy.prototype = Object.create(ErrorStrategy.prototype);\nDefaultErrorStrategy.prototype.constructor = DefaultErrorStrategy;\n\n// <p>The default implementation simply calls {@link //endErrorCondition} to\n// ensure that the handler is not in error recovery mode.</p>\nDefaultErrorStrategy.prototype.reset = function(recognizer) {\n    this.endErrorCondition(recognizer);\n};\n\n//\n// This method is called to enter error recovery mode when a recognition\n// exception is reported.\n//\n// @param recognizer the parser instance\n//\nDefaultErrorStrategy.prototype.beginErrorCondition = function(recognizer) {\n    this.errorRecoveryMode = true;\n};\n\nDefaultErrorStrategy.prototype.inErrorRecoveryMode = function(recognizer) {\n    return this.errorRecoveryMode;\n};\n\n//\n// This method is called to leave error recovery mode after recovering from\n// a recognition exception.\n//\n// @param recognizer\n//\nDefaultErrorStrategy.prototype.endErrorCondition = function(recognizer) {\n    this.errorRecoveryMode = false;\n    this.lastErrorStates = null;\n    this.lastErrorIndex = -1;\n};\n\n//\n// {@inheritDoc}\n//\n// <p>The default implementation simply calls {@link //endErrorCondition}.</p>\n//\nDefaultErrorStrategy.prototype.reportMatch = function(recognizer) {\n    this.endErrorCondition(recognizer);\n};\n\n//\n// {@inheritDoc}\n//\n// <p>The default implementation returns immediately if the handler is already\n// in error recovery mode. Otherwise, it calls {@link //beginErrorCondition}\n// and dispatches the reporting task based on the runtime type of {@code e}\n// according to the following table.</p>\n//\n// <ul>\n// <li>{@link NoViableAltException}: Dispatches the call to\n// {@link //reportNoViableAlternative}</li>\n// <li>{@link InputMismatchException}: Dispatches the call to\n// {@link //reportInputMismatch}</li>\n// <li>{@link FailedPredicateException}: Dispatches the call to\n// {@link //reportFailedPredicate}</li>\n// <li>All other types: calls {@link Parser//notifyErrorListeners} to report\n// the exception</li>\n// </ul>\n//\nDefaultErrorStrategy.prototype.reportError = function(recognizer, e) {\n   // if we've already reported an error and have not matched a token\n   // yet successfully, don't report any errors.\n    if(this.inErrorRecoveryMode(recognizer)) {\n        return; // don't report spurious errors\n    }\n    this.beginErrorCondition(recognizer);\n    if ( e instanceof NoViableAltException ) {\n        this.reportNoViableAlternative(recognizer, e);\n    } else if ( e instanceof InputMismatchException ) {\n        this.reportInputMismatch(recognizer, e);\n    } else if ( e instanceof FailedPredicateException ) {\n        this.reportFailedPredicate(recognizer, e);\n    } else {\n        console.log(\"unknown recognition error type: \" + e.constructor.name);\n        console.log(e.stack);\n        recognizer.notifyErrorListeners(e.getOffendingToken(), e.getMessage(), e);\n    }\n};\n//\n// {@inheritDoc}\n//\n// <p>The default implementation resynchronizes the parser by consuming tokens\n// until we find one in the resynchronization set--loosely the set of tokens\n// that can follow the current rule.</p>\n//\nDefaultErrorStrategy.prototype.recover = function(recognizer, e) {\n    if (this.lastErrorIndex===recognizer.getInputStream().index &&\n        this.lastErrorStates !== null && this.lastErrorStates.indexOf(recognizer.state)>=0) {\n\t\t// uh oh, another error at same token index and previously-visited\n\t\t// state in ATN; must be a case where LT(1) is in the recovery\n\t\t// token set so nothing got consumed. Consume a single token\n\t\t// at least to prevent an infinite loop; this is a failsafe.\n\t\trecognizer.consume();\n    }\n    this.lastErrorIndex = recognizer._input.index;\n    if (this.lastErrorStates === null) {\n        this.lastErrorStates = [];\n    }\n    this.lastErrorStates.push(recognizer.state);\n    var followSet = this.getErrorRecoverySet(recognizer);\n    this.consumeUntil(recognizer, followSet);\n};\n\n// The default implementation of {@link ANTLRErrorStrategy//sync} makes sure\n// that the current lookahead symbol is consistent with what were expecting\n// at this point in the ATN. You can call this anytime but ANTLR only\n// generates code to check before subrules/loops and each iteration.\n//\n// <p>Implements Jim Idle's magic sync mechanism in closures and optional\n// subrules. E.g.,</p>\n//\n// <pre>\n// a : sync ( stuff sync )* ;\n// sync : {consume to what can follow sync} ;\n// </pre>\n//\n// At the start of a sub rule upon error, {@link //sync} performs single\n// token deletion, if possible. If it can't do that, it bails on the current\n// rule and uses the default error recovery, which consumes until the\n// resynchronization set of the current rule.\n//\n// <p>If the sub rule is optional ({@code (...)?}, {@code (...)*}, or block\n// with an empty alternative), then the expected set includes what follows\n// the subrule.</p>\n//\n// <p>During loop iteration, it consumes until it sees a token that can start a\n// sub rule or what follows loop. Yes, that is pretty aggressive. We opt to\n// stay in the loop as long as possible.</p>\n//\n// <p><strong>ORIGINS</strong></p>\n//\n// <p>Previous versions of ANTLR did a poor job of their recovery within loops.\n// A single mismatch token or missing token would force the parser to bail\n// out of the entire rules surrounding the loop. So, for rule</p>\n//\n// <pre>\n// classDef : 'class' ID '{' member* '}'\n// </pre>\n//\n// input with an extra token between members would force the parser to\n// consume until it found the next class definition rather than the next\n// member definition of the current class.\n//\n// <p>This functionality cost a little bit of effort because the parser has to\n// compare token set at the start of the loop and at each iteration. If for\n// some reason speed is suffering for you, you can turn off this\n// functionality by simply overriding this method as a blank { }.</p>\n//\nDefaultErrorStrategy.prototype.sync = function(recognizer) {\n    // If already recovering, don't try to sync\n    if (this.inErrorRecoveryMode(recognizer)) {\n        return;\n    }\n    var s = recognizer._interp.atn.states[recognizer.state];\n    var la = recognizer.getTokenStream().LA(1);\n    // try cheaper subset first; might get lucky. seems to shave a wee bit off\n    var nextTokens = recognizer.atn.nextTokens(s);\n    if (nextTokens.contains(Token.EPSILON) || nextTokens.contains(la)) {\n        return;\n    }\n    switch (s.stateType) {\n    case ATNState.BLOCK_START:\n    case ATNState.STAR_BLOCK_START:\n    case ATNState.PLUS_BLOCK_START:\n    case ATNState.STAR_LOOP_ENTRY:\n       // report error and recover if possible\n        if( this.singleTokenDeletion(recognizer) !== null) {\n            return;\n        } else {\n            throw new InputMismatchException(recognizer);\n        }\n        break;\n    case ATNState.PLUS_LOOP_BACK:\n    case ATNState.STAR_LOOP_BACK:\n        this.reportUnwantedToken(recognizer);\n        var expecting = new IntervalSet();\n        expecting.addSet(recognizer.getExpectedTokens());\n        var whatFollowsLoopIterationOrRule = expecting.addSet(this.getErrorRecoverySet(recognizer));\n        this.consumeUntil(recognizer, whatFollowsLoopIterationOrRule);\n        break;\n    default:\n        // do nothing if we can't identify the exact kind of ATN state\n    }\n};\n\n// This is called by {@link //reportError} when the exception is a\n// {@link NoViableAltException}.\n//\n// @see //reportError\n//\n// @param recognizer the parser instance\n// @param e the recognition exception\n//\nDefaultErrorStrategy.prototype.reportNoViableAlternative = function(recognizer, e) {\n    var tokens = recognizer.getTokenStream();\n    var input;\n    if(tokens !== null) {\n        if (e.startToken.type===Token.EOF) {\n            input = \"<EOF>\";\n        } else {\n            input = tokens.getText(new Interval(e.startToken.tokenIndex, e.offendingToken.tokenIndex));\n        }\n    } else {\n        input = \"<unknown input>\";\n    }\n    var msg = \"no viable alternative at input \" + this.escapeWSAndQuote(input);\n    recognizer.notifyErrorListeners(msg, e.offendingToken, e);\n};\n\n//\n// This is called by {@link //reportError} when the exception is an\n// {@link InputMismatchException}.\n//\n// @see //reportError\n//\n// @param recognizer the parser instance\n// @param e the recognition exception\n//\nDefaultErrorStrategy.prototype.reportInputMismatch = function(recognizer, e) {\n    var msg = \"mismatched input \" + this.getTokenErrorDisplay(e.offendingToken) +\n          \" expecting \" + e.getExpectedTokens().toString(recognizer.literalNames, recognizer.symbolicNames);\n    recognizer.notifyErrorListeners(msg, e.offendingToken, e);\n};\n\n//\n// This is called by {@link //reportError} when the exception is a\n// {@link FailedPredicateException}.\n//\n// @see //reportError\n//\n// @param recognizer the parser instance\n// @param e the recognition exception\n//\nDefaultErrorStrategy.prototype.reportFailedPredicate = function(recognizer, e) {\n    var ruleName = recognizer.ruleNames[recognizer._ctx.ruleIndex];\n    var msg = \"rule \" + ruleName + \" \" + e.message;\n    recognizer.notifyErrorListeners(msg, e.offendingToken, e);\n};\n\n// This method is called to report a syntax error which requires the removal\n// of a token from the input stream. At the time this method is called, the\n// erroneous symbol is current {@code LT(1)} symbol and has not yet been\n// removed from the input stream. When this method returns,\n// {@code recognizer} is in error recovery mode.\n//\n// <p>This method is called when {@link //singleTokenDeletion} identifies\n// single-token deletion as a viable recovery strategy for a mismatched\n// input error.</p>\n//\n// <p>The default implementation simply returns if the handler is already in\n// error recovery mode. Otherwise, it calls {@link //beginErrorCondition} to\n// enter error recovery mode, followed by calling\n// {@link Parser//notifyErrorListeners}.</p>\n//\n// @param recognizer the parser instance\n//\nDefaultErrorStrategy.prototype.reportUnwantedToken = function(recognizer) {\n    if (this.inErrorRecoveryMode(recognizer)) {\n        return;\n    }\n    this.beginErrorCondition(recognizer);\n    var t = recognizer.getCurrentToken();\n    var tokenName = this.getTokenErrorDisplay(t);\n    var expecting = this.getExpectedTokens(recognizer);\n    var msg = \"extraneous input \" + tokenName + \" expecting \" +\n        expecting.toString(recognizer.literalNames, recognizer.symbolicNames);\n    recognizer.notifyErrorListeners(msg, t, null);\n};\n// This method is called to report a syntax error which requires the\n// insertion of a missing token into the input stream. At the time this\n// method is called, the missing token has not yet been inserted. When this\n// method returns, {@code recognizer} is in error recovery mode.\n//\n// <p>This method is called when {@link //singleTokenInsertion} identifies\n// single-token insertion as a viable recovery strategy for a mismatched\n// input error.</p>\n//\n// <p>The default implementation simply returns if the handler is already in\n// error recovery mode. Otherwise, it calls {@link //beginErrorCondition} to\n// enter error recovery mode, followed by calling\n// {@link Parser//notifyErrorListeners}.</p>\n//\n// @param recognizer the parser instance\n//\nDefaultErrorStrategy.prototype.reportMissingToken = function(recognizer) {\n    if ( this.inErrorRecoveryMode(recognizer)) {\n        return;\n    }\n    this.beginErrorCondition(recognizer);\n    var t = recognizer.getCurrentToken();\n    var expecting = this.getExpectedTokens(recognizer);\n    var msg = \"missing \" + expecting.toString(recognizer.literalNames, recognizer.symbolicNames) +\n          \" at \" + this.getTokenErrorDisplay(t);\n    recognizer.notifyErrorListeners(msg, t, null);\n};\n\n// <p>The default implementation attempts to recover from the mismatched input\n// by using single token insertion and deletion as described below. If the\n// recovery attempt fails, this method throws an\n// {@link InputMismatchException}.</p>\n//\n// <p><strong>EXTRA TOKEN</strong> (single token deletion)</p>\n//\n// <p>{@code LA(1)} is not what we are looking for. If {@code LA(2)} has the\n// right token, however, then assume {@code LA(1)} is some extra spurious\n// token and delete it. Then consume and return the next token (which was\n// the {@code LA(2)} token) as the successful result of the match operation.</p>\n//\n// <p>This recovery strategy is implemented by {@link\n// //singleTokenDeletion}.</p>\n//\n// <p><strong>MISSING TOKEN</strong> (single token insertion)</p>\n//\n// <p>If current token (at {@code LA(1)}) is consistent with what could come\n// after the expected {@code LA(1)} token, then assume the token is missing\n// and use the parser's {@link TokenFactory} to create it on the fly. The\n// \"insertion\" is performed by returning the created token as the successful\n// result of the match operation.</p>\n//\n// <p>This recovery strategy is implemented by {@link\n// //singleTokenInsertion}.</p>\n//\n// <p><strong>EXAMPLE</strong></p>\n//\n// <p>For example, Input {@code i=(3;} is clearly missing the {@code ')'}. When\n// the parser returns from the nested call to {@code expr}, it will have\n// call chain:</p>\n//\n// <pre>\n// stat &rarr; expr &rarr; atom\n// </pre>\n//\n// and it will be trying to match the {@code ')'} at this point in the\n// derivation:\n//\n// <pre>\n// =&gt; ID '=' '(' INT ')' ('+' atom)* ';'\n// ^\n// </pre>\n//\n// The attempt to match {@code ')'} will fail when it sees {@code ';'} and\n// call {@link //recoverInline}. To recover, it sees that {@code LA(1)==';'}\n// is in the set of tokens that can follow the {@code ')'} token reference\n// in rule {@code atom}. It can assume that you forgot the {@code ')'}.\n//\nDefaultErrorStrategy.prototype.recoverInline = function(recognizer) {\n    // SINGLE TOKEN DELETION\n    var matchedSymbol = this.singleTokenDeletion(recognizer);\n    if (matchedSymbol !== null) {\n        // we have deleted the extra token.\n        // now, move past ttype token as if all were ok\n        recognizer.consume();\n        return matchedSymbol;\n    }\n    // SINGLE TOKEN INSERTION\n    if (this.singleTokenInsertion(recognizer)) {\n        return this.getMissingSymbol(recognizer);\n    }\n    // even that didn't work; must throw the exception\n    throw new InputMismatchException(recognizer);\n};\n\n//\n// This method implements the single-token insertion inline error recovery\n// strategy. It is called by {@link //recoverInline} if the single-token\n// deletion strategy fails to recover from the mismatched input. If this\n// method returns {@code true}, {@code recognizer} will be in error recovery\n// mode.\n//\n// <p>This method determines whether or not single-token insertion is viable by\n// checking if the {@code LA(1)} input symbol could be successfully matched\n// if it were instead the {@code LA(2)} symbol. If this method returns\n// {@code true}, the caller is responsible for creating and inserting a\n// token with the correct type to produce this behavior.</p>\n//\n// @param recognizer the parser instance\n// @return {@code true} if single-token insertion is a viable recovery\n// strategy for the current mismatched input, otherwise {@code false}\n//\nDefaultErrorStrategy.prototype.singleTokenInsertion = function(recognizer) {\n    var currentSymbolType = recognizer.getTokenStream().LA(1);\n    // if current token is consistent with what could come after current\n    // ATN state, then we know we're missing a token; error recovery\n    // is free to conjure up and insert the missing token\n    var atn = recognizer._interp.atn;\n    var currentState = atn.states[recognizer.state];\n    var next = currentState.transitions[0].target;\n    var expectingAtLL2 = atn.nextTokens(next, recognizer._ctx);\n    if (expectingAtLL2.contains(currentSymbolType) ){\n        this.reportMissingToken(recognizer);\n        return true;\n    } else {\n        return false;\n    }\n};\n\n// This method implements the single-token deletion inline error recovery\n// strategy. It is called by {@link //recoverInline} to attempt to recover\n// from mismatched input. If this method returns null, the parser and error\n// handler state will not have changed. If this method returns non-null,\n// {@code recognizer} will <em>not</em> be in error recovery mode since the\n// returned token was a successful match.\n//\n// <p>If the single-token deletion is successful, this method calls\n// {@link //reportUnwantedToken} to report the error, followed by\n// {@link Parser//consume} to actually \"delete\" the extraneous token. Then,\n// before returning {@link //reportMatch} is called to signal a successful\n// match.</p>\n//\n// @param recognizer the parser instance\n// @return the successfully matched {@link Token} instance if single-token\n// deletion successfully recovers from the mismatched input, otherwise\n// {@code null}\n//\nDefaultErrorStrategy.prototype.singleTokenDeletion = function(recognizer) {\n    var nextTokenType = recognizer.getTokenStream().LA(2);\n    var expecting = this.getExpectedTokens(recognizer);\n    if (expecting.contains(nextTokenType)) {\n        this.reportUnwantedToken(recognizer);\n        // print(\"recoverFromMismatchedToken deleting \" \\\n        // + str(recognizer.getTokenStream().LT(1)) \\\n        // + \" since \" + str(recognizer.getTokenStream().LT(2)) \\\n        // + \" is what we want\", file=sys.stderr)\n        recognizer.consume(); // simply delete extra token\n        // we want to return the token we're actually matching\n        var matchedSymbol = recognizer.getCurrentToken();\n        this.reportMatch(recognizer); // we know current token is correct\n        return matchedSymbol;\n    } else {\n        return null;\n    }\n};\n\n// Conjure up a missing token during error recovery.\n//\n// The recognizer attempts to recover from single missing\n// symbols. But, actions might refer to that missing symbol.\n// For example, x=ID {f($x);}. The action clearly assumes\n// that there has been an identifier matched previously and that\n// $x points at that token. If that token is missing, but\n// the next token in the stream is what we want we assume that\n// this token is missing and we keep going. Because we\n// have to return some token to replace the missing token,\n// we have to conjure one up. This method gives the user control\n// over the tokens returned for missing tokens. Mostly,\n// you will want to create something special for identifier\n// tokens. For literals such as '{' and ',', the default\n// action in the parser or tree parser works. It simply creates\n// a CommonToken of the appropriate type. The text will be the token.\n// If you change what tokens must be created by the lexer,\n// override this method to create the appropriate tokens.\n//\nDefaultErrorStrategy.prototype.getMissingSymbol = function(recognizer) {\n    var currentSymbol = recognizer.getCurrentToken();\n    var expecting = this.getExpectedTokens(recognizer);\n    var expectedTokenType = expecting.first(); // get any element\n    var tokenText;\n    if (expectedTokenType===Token.EOF) {\n        tokenText = \"<missing EOF>\";\n    } else {\n        tokenText = \"<missing \" + recognizer.literalNames[expectedTokenType] + \">\";\n    }\n    var current = currentSymbol;\n    var lookback = recognizer.getTokenStream().LT(-1);\n    if (current.type===Token.EOF && lookback !== null) {\n        current = lookback;\n    }\n    return recognizer.getTokenFactory().create(current.source,\n        expectedTokenType, tokenText, Token.DEFAULT_CHANNEL,\n        -1, -1, current.line, current.column);\n};\n\nDefaultErrorStrategy.prototype.getExpectedTokens = function(recognizer) {\n    return recognizer.getExpectedTokens();\n};\n\n// How should a token be displayed in an error message? The default\n// is to display just the text, but during development you might\n// want to have a lot of information spit out. Override in that case\n// to use t.toString() (which, for CommonToken, dumps everything about\n// the token). This is better than forcing you to override a method in\n// your token objects because you don't have to go modify your lexer\n// so that it creates a new Java type.\n//\nDefaultErrorStrategy.prototype.getTokenErrorDisplay = function(t) {\n    if (t === null) {\n        return \"<no token>\";\n    }\n    var s = t.text;\n    if (s === null) {\n        if (t.type===Token.EOF) {\n            s = \"<EOF>\";\n        } else {\n            s = \"<\" + t.type + \">\";\n        }\n    }\n    return this.escapeWSAndQuote(s);\n};\n\nDefaultErrorStrategy.prototype.escapeWSAndQuote = function(s) {\n    s = s.replace(/\\n/g,\"\\\\n\");\n    s = s.replace(/\\r/g,\"\\\\r\");\n    s = s.replace(/\\t/g,\"\\\\t\");\n    return \"'\" + s + \"'\";\n};\n\n// Compute the error recovery set for the current rule. During\n// rule invocation, the parser pushes the set of tokens that can\n// follow that rule reference on the stack; this amounts to\n// computing FIRST of what follows the rule reference in the\n// enclosing rule. See LinearApproximator.FIRST().\n// This local follow set only includes tokens\n// from within the rule; i.e., the FIRST computation done by\n// ANTLR stops at the end of a rule.\n//\n// EXAMPLE\n//\n// When you find a \"no viable alt exception\", the input is not\n// consistent with any of the alternatives for rule r. The best\n// thing to do is to consume tokens until you see something that\n// can legally follow a call to r//or* any rule that called r.\n// You don't want the exact set of viable next tokens because the\n// input might just be missing a token--you might consume the\n// rest of the input looking for one of the missing tokens.\n//\n// Consider grammar:\n//\n// a : '[' b ']'\n// | '(' b ')'\n// ;\n// b : c '^' INT ;\n// c : ID\n// | INT\n// ;\n//\n// At each rule invocation, the set of tokens that could follow\n// that rule is pushed on a stack. Here are the various\n// context-sensitive follow sets:\n//\n// FOLLOW(b1_in_a) = FIRST(']') = ']'\n// FOLLOW(b2_in_a) = FIRST(')') = ')'\n// FOLLOW(c_in_b) = FIRST('^') = '^'\n//\n// Upon erroneous input \"[]\", the call chain is\n//\n// a -> b -> c\n//\n// and, hence, the follow context stack is:\n//\n// depth follow set start of rule execution\n// 0 <EOF> a (from main())\n// 1 ']' b\n// 2 '^' c\n//\n// Notice that ')' is not included, because b would have to have\n// been called from a different context in rule a for ')' to be\n// included.\n//\n// For error recovery, we cannot consider FOLLOW(c)\n// (context-sensitive or otherwise). We need the combined set of\n// all context-sensitive FOLLOW sets--the set of all tokens that\n// could follow any reference in the call chain. We need to\n// resync to one of those tokens. Note that FOLLOW(c)='^' and if\n// we resync'd to that token, we'd consume until EOF. We need to\n// sync to context-sensitive FOLLOWs for a, b, and c: {']','^'}.\n// In this case, for input \"[]\", LA(1) is ']' and in the set, so we would\n// not consume anything. After printing an error, rule c would\n// return normally. Rule b would not find the required '^' though.\n// At this point, it gets a mismatched token error and throws an\n// exception (since LA(1) is not in the viable following token\n// set). The rule exception handler tries to recover, but finds\n// the same recovery set and doesn't consume anything. Rule b\n// exits normally returning to rule a. Now it finds the ']' (and\n// with the successful match exits errorRecovery mode).\n//\n// So, you can see that the parser walks up the call chain looking\n// for the token that was a member of the recovery set.\n//\n// Errors are not generated in errorRecovery mode.\n//\n// ANTLR's error recovery mechanism is based upon original ideas:\n//\n// \"Algorithms + Data Structures = Programs\" by Niklaus Wirth\n//\n// and\n//\n// \"A note on error recovery in recursive descent parsers\":\n// http://portal.acm.org/citation.cfm?id=947902.947905\n//\n// Later, Josef Grosch had some good ideas:\n//\n// \"Efficient and Comfortable Error Recovery in Recursive Descent\n// Parsers\":\n// ftp://www.cocolab.com/products/cocktail/doca4.ps/ell.ps.zip\n//\n// Like Grosch I implement context-sensitive FOLLOW sets that are combined\n// at run-time upon error to avoid overhead during parsing.\n//\nDefaultErrorStrategy.prototype.getErrorRecoverySet = function(recognizer) {\n    var atn = recognizer._interp.atn;\n    var ctx = recognizer._ctx;\n    var recoverSet = new IntervalSet();\n    while (ctx !== null && ctx.invokingState>=0) {\n        // compute what follows who invoked us\n        var invokingState = atn.states[ctx.invokingState];\n        var rt = invokingState.transitions[0];\n        var follow = atn.nextTokens(rt.followState);\n        recoverSet.addSet(follow);\n        ctx = ctx.parentCtx;\n    }\n    recoverSet.removeOne(Token.EPSILON);\n    return recoverSet;\n};\n\n// Consume tokens until one matches the given token set.//\nDefaultErrorStrategy.prototype.consumeUntil = function(recognizer, set) {\n    var ttype = recognizer.getTokenStream().LA(1);\n    while( ttype !== Token.EOF && !set.contains(ttype)) {\n        recognizer.consume();\n        ttype = recognizer.getTokenStream().LA(1);\n    }\n};\n\n//\n// This implementation of {@link ANTLRErrorStrategy} responds to syntax errors\n// by immediately canceling the parse operation with a\n// {@link ParseCancellationException}. The implementation ensures that the\n// {@link ParserRuleContext//exception} field is set for all parse tree nodes\n// that were not completed prior to encountering the error.\n//\n// <p>\n// This error strategy is useful in the following scenarios.</p>\n//\n// <ul>\n// <li><strong>Two-stage parsing:</strong> This error strategy allows the first\n// stage of two-stage parsing to immediately terminate if an error is\n// encountered, and immediately fall back to the second stage. In addition to\n// avoiding wasted work by attempting to recover from errors here, the empty\n// implementation of {@link BailErrorStrategy//sync} improves the performance of\n// the first stage.</li>\n// <li><strong>Silent validation:</strong> When syntax errors are not being\n// reported or logged, and the parse result is simply ignored if errors occur,\n// the {@link BailErrorStrategy} avoids wasting work on recovering from errors\n// when the result will be ignored either way.</li>\n// </ul>\n//\n// <p>\n// {@code myparser.setErrorHandler(new BailErrorStrategy());}</p>\n//\n// @see Parser//setErrorHandler(ANTLRErrorStrategy)\n//\nfunction BailErrorStrategy() {\n\tDefaultErrorStrategy.call(this);\n\treturn this;\n}\n\nBailErrorStrategy.prototype = Object.create(DefaultErrorStrategy.prototype);\nBailErrorStrategy.prototype.constructor = BailErrorStrategy;\n\n// Instead of recovering from exception {@code e}, re-throw it wrapped\n// in a {@link ParseCancellationException} so it is not caught by the\n// rule function catches. Use {@link Exception//getCause()} to get the\n// original {@link RecognitionException}.\n//\nBailErrorStrategy.prototype.recover = function(recognizer, e) {\n    var context = recognizer._ctx;\n    while (context !== null) {\n        context.exception = e;\n        context = context.parentCtx;\n    }\n    throw new ParseCancellationException(e);\n};\n\n// Make sure we don't attempt to recover inline; if the parser\n// successfully recovers, it won't throw an exception.\n//\nBailErrorStrategy.prototype.recoverInline = function(recognizer) {\n    this.recover(recognizer, new InputMismatchException(recognizer));\n};\n\n// Make sure we don't attempt to recover from problems in subrules.//\nBailErrorStrategy.prototype.sync = function(recognizer) {\n    // pass\n};\n\nexports.BailErrorStrategy = BailErrorStrategy;\nexports.DefaultErrorStrategy = DefaultErrorStrategy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/error/ErrorStrategy.js\n// module id = k1zP\n// module chunks = 0 1 2","exports.policyLexer = require('./gen/presentable_policyLexer').presentable_policyLexer;\r\nexports.policyParser = require('./gen/presentable_policyParser').presentable_policyParser;\r\nexports.policyListener = require('./gen/presentable_policyListener').presentable_policyListener;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/presentable_policy_lang/index.js\n// module id = k2M1\n// module chunks = 2","export const CONTRACT_STATUS = {\n  uncreated: -1,\n  initial: 1,\n  running: 2,\n  activated: 3,\n  userTerminated: 4,\n  sysTerminated: 5,\n  terminated: 6\n};\n\n\nexport const CONTRACT_STATUS_TIPS = {\n  '-1': '未创建合同',\n  1: '未开始执行',\n  2: '执行中',\n  3: '生效中',\n  4: '用户终止',\n  5: '系统终止',\n  6: '合同已终止'\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/config/contract.js","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-afdd11ca\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-afdd11ca\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-afdd11ca\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/node/presentables/index.vue\n// module id = kQ4V\n// module chunks = 2","import TableView from '@/components/TableView/index.vue'\nimport CONFIG from '@/config/index'\n\nconst STATUS_TIPS = CONFIG.PRESENTABLE_STATUS_TIPS\nexport default {\n  name: 'presentables',\n  data() {\n    return {\n      resourceList: [],\n      query: ''\n    }\n  },\n  components: {\n    TableView\n  },\n\n  mounted() {\n  },\n  methods: {\n    queryHandler() {\n      this.$message.warning('待开发')\n    },\n    formatHandler(list) {\n      list.forEach((item) => {\n        item._statusInfo = STATUS_TIPS[item.status]\n      })\n      return list\n    },\n    mergeResourceData(contracts, data) {\n      var dataMap = {}\n      data.forEach((p) => {\n        dataMap[p.resourceId] = p\n      })\n\n      contracts.forEach((contract) => {\n        var item = dataMap[contract.resourceId] || null;\n        if (item) {\n          Object.assign(contract, {\n            resourceDetail: item\n          })\n        }\n      })\n    },\n    mergePersentableData(contracts, data) {\n      var dataMap = {}\n      data.forEach((p) => {\n        dataMap[p.contractId] = p\n      })\n      contracts.forEach((contract) => {\n        var item = dataMap[contract.contractId] || null;\n        if (item && item.presentableId) {\n          Object.assign(contract, {\n            presentableDetail: item\n          })\n        }\n      })\n    },\n    loader() {\n      const self = this;\n      return (param) => {\n        const nodeId = self.$route.params.nodeId\n        if (typeof param === 'object') {\n          Object.assign(param, {\n            partyTwo: nodeId\n          })\n          param = {\n            params: param\n          }\n        }\n        return self.loadContracts(param).then((res) => {\n          var contracts = res.data.data.dataList\n          if (!contracts.length) {\n            return res\n          }\n\n          var contractIds = []\n          var resourceIds = []\n          contracts.forEach((c) => {\n            contractIds.push(c.contractId)\n            resourceIds.push(c.resourceId)\n          })\n\n          return Promise.all([\n            this.loadResourceData(resourceIds),\n            self.loadPresentables({\n              contractIds: contractIds.join(','),\n              nodeId: nodeId\n            })\n          ]).then((responses) => {\n            var resourcesData = responses[0]\n            var presentables = responses[1]\n            self.mergeResourceData(contracts, resourcesData)\n            self.mergePersentableData(contracts, presentables)\n            console.log(contracts)\n            return res\n          })\n        })\n      }\n    },\n    loadResourceData(resIds) {\n      var promiseList = resIds.map((resId) => {\n        return this.$services.resource.get(resId).then((res) => {\n          return res.getData()\n        })\n      })\n\n      return Promise.all(promiseList)\n    },\n    loadContracts(param) {\n      return this.$services.contract.get(param || {}).then((res) => {\n        return res\n      }).catch((err) => {\n        this.$message.error(err.response.errorMsg || err)\n      })\n    },\n    loadPresentables(param) {\n      return this.$services.presentables.get({params: param}).then((res) => {\n        return res.getData()\n      }).catch((err) => {\n        this.$message.error(err.response.errorMsg || err)\n      })\n    },\n    handlePresentable(row, type, hash) {\n      var query = {\n        presentableId: row.presentableDetail && row.presentableDetail.presentableId,\n        contractId: row.contractId\n      }\n      type = type || 'detail'\n      hash = (hash && (`#${hash}`)) || ''\n\n      if (!hash && !row.presentableDetail) {\n        hash = '#presentable'\n      }\n      var path = `/node/${this.$route.params.nodeId}/presentable/${type}${hash}`\n      this.$router.push({\n        path: path,\n        query: query\n      })\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/views/node/presentables/index.js","function injectStyle (ssrContext) {\n  require(\"!!../../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-f9f08148\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-f9f08148\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-f9f08148\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/node/presentable/create/index.vue\n// module id = lISv\n// module chunks = 2","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[(_vm.contractDetail)?_c('div',[_c('ul',{staticClass:\"p-detail\"},[_c('li',[_c('label',{staticClass:\"item-title\"},[_vm._v(\"contract Id\")]),_vm._v(\" \"),_c('span',{staticClass:\"item-detail\"},[_vm._v(_vm._s(_vm.contractDetail.contractId))])]),_vm._v(\" \"),_c('li',[_c('label',{staticClass:\"item-title\"},[_vm._v(\"合同状态：\")]),_vm._v(\" \"),_c('span',{staticClass:\"item-detail\"},[_vm._v(_vm._s(_vm.formatContractDetail.statusTip))])]),_vm._v(\" \"),_c('li',[_c('label',{staticClass:\"item-title\"},[_vm._v(\"合同甲方：\")]),_vm._v(\" \"),_c('span',{staticClass:\"item-detail\"},[_vm._v(_vm._s(_vm.contractDetail.partyOne))])]),_vm._v(\" \"),_c('li',[_c('label',{staticClass:\"item-title\"},[_vm._v(\"合同乙方：\")]),_vm._v(\" \"),_c('span',{staticClass:\"item-detail\"},[_vm._v(_vm._s(_vm.contractDetail.partyTwo))])]),_vm._v(\" \"),_c('li',[_c('label',{staticClass:\"item-title\"},[_vm._v(\"合同创建时间：\")]),_vm._v(\" \"),_c('span',{staticClass:\"item-detail\"},[_vm._v(_vm._s(_vm._f(\"fmtDate\")(_vm.contractDetail.createDate)))])]),_vm._v(\" \"),_c('li',[_c('label',{staticClass:\"item-title\"},[_vm._v(\"合同当前状态：\")]),_vm._v(\" \"),_c('span',{staticClass:\"item-detail\"},[_c('el-tag',{attrs:{\"type\":_vm.contractDetail.status===3?'success':'info'}},[_vm._v(\"\\n          \"+_vm._s(_vm.contractDetail.fsmState)+\"\\n          \")])],1)]),_vm._v(\" \"),_c('li',[_c('label',{staticClass:\"item-title\"},[_vm._v(\"合同详情：\")]),_vm._v(\" \"),_c('pre',{staticClass:\"item-detail\"},[_vm._v(_vm._s(_vm.contractDetail.policySegment.segmentText))])]),_vm._v(\" \"),_c('li',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.formatContractDetail.events.length),expression:\"formatContractDetail.events.length\"}]},[_c('label',{staticClass:\"item-title\"},[_vm._v(\"合同事件：\")]),_vm._v(\" \"),_c('el-select',{staticClass:\"item-detail\",attrs:{\"placeholder\":\"请选择\"},model:{value:(_vm.selectedContractEvent),callback:function ($$v) {_vm.selectedContractEvent=$$v},expression:\"selectedContractEvent\"}},_vm._l((_vm.formatContractDetail.events),function(event,index){return _c('el-option',{key:Math.random(),attrs:{\"label\":event.desc,\"value\":index},domProps:{\"innerHTML\":_vm._s(event.desc)}})})),_vm._v(\" \"),_c('el-button',{attrs:{\"disabled\":_vm.selectedContractEvent === ''},on:{\"click\":_vm.executeContractHandler}},[_vm._v(\"trigger\")])],1)])]):_vm._e()])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-3eb35d32\",\"hasScoped\":true,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/node/presentable/contract/detail/index.vue\n// module id = lL/Q\n// module chunks = 2","var getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) if (isEnum.call(O, key = keys[i++])) {\n      result.push(isEntries ? [key, O[key]] : O[key]);\n    } return result;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-to-array.js\n// module id = mbce\n// module chunks = 0 1 2","function Extend(that) {\r\n  that.syntaxError = function(recognizer, offendingSymbol, line, column, msg, e) {\r\n    this.errorMsg = msg;\r\n  };\r\n}\r\nmodule.exports = Extend;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/freelog_policy_compiler/ErrorListenerExtend.js\n// module id = mywV\n// module chunks = 0 1 2","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".step-row[data-v-f9f08148]{color:#409eff;margin-bottom:9px}.step-title[data-v-f9f08148]{display:inline-block;font-size:14px;margin-left:6px}.step-circle[data-v-f9f08148]{border:2px solid;border-radius:50%;width:24px;height:24px;font-size:14px;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-sizing:border-box;box-sizing:border-box}.el-icon-circle-close-outline[data-v-f9f08148]{padding:5px;cursor:pointer}.icon-tip[data-v-f9f08148]{margin-left:6px;font-size:16px;color:#67c23a;vertical-align:middle}.form-ft[data-v-f9f08148]{border-top:1px solid #ccc;padding-top:15px;text-align:center;margin-top:15px}.p-name[data-v-f9f08148]{margin-bottom:15px;margin-top:12px}.op-step[data-v-f9f08148]{margin-bottom:15px}\", \"\", {\"version\":3,\"sources\":[\"/Users/daizecheng/workplace/freelog/console/client/src/views/node/presentable/create/index.vue\"],\"names\":[],\"mappings\":\"AACA,2BACE,cAAe,AACf,iBAAmB,CACpB,AACD,6BACE,qBAAsB,AACtB,eAAgB,AAChB,eAAiB,CAClB,AACD,8BACE,iBAAkB,AAClB,kBAAmB,AACnB,WAAY,AACZ,YAAa,AACb,eAAgB,AAChB,2BAA4B,AAC5B,2BAA4B,AAC5B,oBAAqB,AACrB,wBAAyB,AACrB,qBAAsB,AAClB,uBAAwB,AAChC,yBAA0B,AACtB,sBAAuB,AACnB,mBAAoB,AAC5B,8BAA+B,AACvB,qBAAuB,CAChC,AACD,+CACE,YAAa,AACb,cAAgB,CACjB,AACD,2BACE,gBAAiB,AACjB,eAAgB,AAChB,cAAe,AACf,qBAAuB,CACxB,AACD,0BACE,0BAA2B,AAC3B,iBAAkB,AAClB,kBAAmB,AACnB,eAAiB,CAClB,AACD,yBACE,mBAAoB,AACpB,eAAiB,CAClB,AACD,0BACE,kBAAoB,CACrB\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.step-row[data-v-f9f08148] {\\n  color: #409EFF;\\n  margin-bottom: 9px;\\n}\\n.step-title[data-v-f9f08148] {\\n  display: inline-block;\\n  font-size: 14px;\\n  margin-left: 6px;\\n}\\n.step-circle[data-v-f9f08148] {\\n  border: 2px solid;\\n  border-radius: 50%;\\n  width: 24px;\\n  height: 24px;\\n  font-size: 14px;\\n  display: -webkit-inline-box;\\n  display: -ms-inline-flexbox;\\n  display: inline-flex;\\n  -webkit-box-pack: center;\\n      -ms-flex-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  -webkit-box-sizing: border-box;\\n          box-sizing: border-box;\\n}\\n.el-icon-circle-close-outline[data-v-f9f08148] {\\n  padding: 5px;\\n  cursor: pointer;\\n}\\n.icon-tip[data-v-f9f08148] {\\n  margin-left: 6px;\\n  font-size: 16px;\\n  color: #67C23A;\\n  vertical-align: middle;\\n}\\n.form-ft[data-v-f9f08148] {\\n  border-top: 1px solid #ccc;\\n  padding-top: 15px;\\n  text-align: center;\\n  margin-top: 15px;\\n}\\n.p-name[data-v-f9f08148] {\\n  margin-bottom: 15px;\\n  margin-top: 12px;\\n}\\n.op-step[data-v-f9f08148] {\\n  margin-bottom: 15px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-f9f08148\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/less-loader/dist/cjs.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/views/node/presentable/create/index.vue\n// module id = o7dJ\n// module chunks = 2","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-6983dd12\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../../node_modules/less-loader/dist/cjs.js?{\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"30fcdd4e\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/vue-style-loader!./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-6983dd12\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/less-loader/dist/cjs.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/views/node/presentable/detail/index.vue\n// module id = ojA3\n// module chunks = 2","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nexports.ATN = require('./ATN').ATN;\nexports.ATNDeserializer = require('./ATNDeserializer').ATNDeserializer;\nexports.LexerATNSimulator = require('./LexerATNSimulator').LexerATNSimulator;\nexports.ParserATNSimulator = require('./ParserATNSimulator').ParserATNSimulator;\nexports.PredictionMode = require('./PredictionMode').PredictionMode;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/atn/index.js\n// module id = pHgc\n// module chunks = 0 1 2","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".query-input[data-v-afdd11ca]{margin-bottom:15px;width:50%}.presentable-detail-expand[data-v-afdd11ca]{font-size:0}.presentable-detail-expand label[data-v-afdd11ca]{width:90px;color:#99a9bf}.presentable-detail-expand .el-form-item[data-v-afdd11ca]{margin-right:0;margin-bottom:0;width:50%}.resource-list[data-v-afdd11ca]{width:100%;min-height:600px}\", \"\", {\"version\":3,\"sources\":[\"/Users/daizecheng/workplace/freelog/console/client/src/views/node/presentables/index.vue\"],\"names\":[],\"mappings\":\"AACA,8BACE,mBAAoB,AACpB,SAAW,CACZ,AACD,4CACE,WAAa,CACd,AACD,kDACE,WAAY,AACZ,aAAe,CAChB,AACD,0DACE,eAAgB,AAChB,gBAAiB,AACjB,SAAW,CACZ,AACD,gCACE,WAAY,AACZ,gBAAkB,CACnB\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.query-input[data-v-afdd11ca] {\\n  margin-bottom: 15px;\\n  width: 50%;\\n}\\n.presentable-detail-expand[data-v-afdd11ca] {\\n  font-size: 0;\\n}\\n.presentable-detail-expand label[data-v-afdd11ca] {\\n  width: 90px;\\n  color: #99a9bf;\\n}\\n.presentable-detail-expand .el-form-item[data-v-afdd11ca] {\\n  margin-right: 0;\\n  margin-bottom: 0;\\n  width: 50%;\\n}\\n.resource-list[data-v-afdd11ca] {\\n  width: 100%;\\n  min-height: 600px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-afdd11ca\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/less-loader/dist/cjs.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/views/node/presentables/index.vue\n// module id = pNox\n// module chunks = 2","/*! https://mths.be/fromcodepoint v0.2.1 by @mathias */\nif (!String.fromCodePoint) {\n\t(function() {\n\t\tvar defineProperty = (function() {\n\t\t\t// IE 8 only supports `Object.defineProperty` on DOM elements\n\t\t\ttry {\n\t\t\t\tvar object = {};\n\t\t\t\tvar $defineProperty = Object.defineProperty;\n\t\t\t\tvar result = $defineProperty(object, object, object) && $defineProperty;\n\t\t\t} catch(error) {}\n\t\t\treturn result;\n\t\t}());\n\t\tvar stringFromCharCode = String.fromCharCode;\n\t\tvar floor = Math.floor;\n\t\tvar fromCodePoint = function(_) {\n\t\t\tvar MAX_SIZE = 0x4000;\n\t\t\tvar codeUnits = [];\n\t\t\tvar highSurrogate;\n\t\t\tvar lowSurrogate;\n\t\t\tvar index = -1;\n\t\t\tvar length = arguments.length;\n\t\t\tif (!length) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tvar result = '';\n\t\t\twhile (++index < length) {\n\t\t\t\tvar codePoint = Number(arguments[index]);\n\t\t\t\tif (\n\t\t\t\t\t!isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n\t\t\t\t\tcodePoint < 0 || // not a valid Unicode code point\n\t\t\t\t\tcodePoint > 0x10FFFF || // not a valid Unicode code point\n\t\t\t\t\tfloor(codePoint) != codePoint // not an integer\n\t\t\t\t) {\n\t\t\t\t\tthrow RangeError('Invalid code point: ' + codePoint);\n\t\t\t\t}\n\t\t\t\tif (codePoint <= 0xFFFF) { // BMP code point\n\t\t\t\t\tcodeUnits.push(codePoint);\n\t\t\t\t} else { // Astral code point; split in surrogate halves\n\t\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\t\tcodePoint -= 0x10000;\n\t\t\t\t\thighSurrogate = (codePoint >> 10) + 0xD800;\n\t\t\t\t\tlowSurrogate = (codePoint % 0x400) + 0xDC00;\n\t\t\t\t\tcodeUnits.push(highSurrogate, lowSurrogate);\n\t\t\t\t}\n\t\t\t\tif (index + 1 == length || codeUnits.length > MAX_SIZE) {\n\t\t\t\t\tresult += stringFromCharCode.apply(null, codeUnits);\n\t\t\t\t\tcodeUnits.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t};\n\t\tif (defineProperty) {\n\t\t\tdefineProperty(String, 'fromCodePoint', {\n\t\t\t\t'value': fromCodePoint,\n\t\t\t\t'configurable': true,\n\t\t\t\t'writable': true\n\t\t\t});\n\t\t} else {\n\t\t\tString.fromCodePoint = fromCodePoint;\n\t\t}\n\t}());\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/polyfills/fromcodepoint.js\n// module id = pr/i\n// module chunks = 0 1 2","import {mapGetters} from 'vuex'\nimport PresentableSteps from '@/views/node/presentable/steps/index.vue'\nimport compiler from 'presentable_policy_compiler'\nimport PresentableTags from '../tags/index.vue'\n\nexport default {\n  name: 'presentable-editor',\n  data() {\n    return {\n      resourceType: '',\n      validateLoading: false,\n      submitLoading: false,\n      options: [\n        {value: 'widget', label: 'widget'},\n        {value: 'file', label: 'file'}\n      ],\n      step: {\n        active: 1\n      },\n      headers: {},\n      formData: {\n        presentableTags: [],\n        userPolicy: `For userAuserB in the following states:\n    in initial :\n      proceed to activate on accepting license licenseA\n    in activate :\n      proceed to suspend on visit of 20000\n        I agree to authorize token in activate`,\n        presentableName: ''\n      },\n      rules: {\n        presentableName: [\n          {required: true, message: '请输入活动名称', trigger: 'blur'},\n          {min: 3, max: 30, message: '长度在 3 到 5 个字符', trigger: 'blur'}\n        ]\n      }\n    }\n  },\n  computed: mapGetters({\n    session: 'session'\n  }),\n  components: {\n    PresentableSteps,\n    PresentableTags\n  },\n  mounted() {\n    this.headers.Authorization = `Bearer ${this.session.token}`\n  },\n  methods: {\n    errorHandler(err, file) {\n      switch (err.status) {\n        case 400:\n          this.$message.error('不支持的文件类型');\n          break;\n        case 401:\n          this.$message.error('权限未经验证');\n          break;\n      }\n    },\n    nextAction() {\n      console.log('successfully upload!');\n    },\n    validate(formName) {\n      this.formData.userPolicy = compiler.compile(this.formData.userPolicy, 'beautify').stringArray.splice(1).join(' ').replace(/\\n\\s/g, '\\n');\n      // this.validateLoading = true;\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          this.$message.success('通过校验');\n        } else {\n          this.$message.error('未通过校验');\n          return false;\n        }\n      });\n    },\n    submit() {\n      this.submitLoading = true;\n      if (!this.$route.query.contractId) {\n        this.$message.error('没有资源Id, 请重新选择');\n      }\n\n      var nodeId = parseInt(this.$route.params.nodeId)\n      var formData = this.formData\n      this.$services.presentables.post({\n        name: formData.presentableName,\n        nodeId: nodeId,\n        contractId: this.$route.query.contractId,\n        policyText: btoa(formData.userPolicy),\n        languageType: 'freelog_policy_lang',\n        userDefinedTags: formData.presentableTags.join(',')\n      }).then((res) => {\n        var data = res.getData()\n        this.submitLoading = false;\n        if (!data) {\n          this.$message.error(res.data.msg)\n        } else {\n          this.$message.success('presentable创建成功');\n          this.step = {\n            active: 3\n          }\n          this.$router.push({\n            path: `/node/${nodeId}/presentable/detail#presentable`,\n            query: {presentableId: data.presentableId}\n          })\n        }\n      }).catch((err) => {\n        this.submitLoading = false;\n        this.$message.error(err.response.errorMsg);\n      })\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/views/node/presentable/edit/index.js","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n// Provides an empty default implementation of {@link ANTLRErrorListener}. The\n// default implementation of each method does nothing, but can be overridden as\n// necessary.\n\nfunction ErrorListener() {\n\treturn this;\n}\n\nErrorListener.prototype.syntaxError = function(recognizer, offendingSymbol, line, column, msg, e) {\n};\n\nErrorListener.prototype.reportAmbiguity = function(recognizer, dfa, startIndex, stopIndex, exact, ambigAlts, configs) {\n};\n\nErrorListener.prototype.reportAttemptingFullContext = function(recognizer, dfa, startIndex, stopIndex, conflictingAlts, configs) {\n};\n\nErrorListener.prototype.reportContextSensitivity = function(recognizer, dfa, startIndex, stopIndex, prediction, configs) {\n};\n\nfunction ConsoleErrorListener() {\n\tErrorListener.call(this);\n\treturn this;\n}\n\nConsoleErrorListener.prototype = Object.create(ErrorListener.prototype);\nConsoleErrorListener.prototype.constructor = ConsoleErrorListener;\n\n//\n// Provides a default instance of {@link ConsoleErrorListener}.\n//\nConsoleErrorListener.INSTANCE = new ConsoleErrorListener();\n\n//\n// {@inheritDoc}\n//\n// <p>\n// This implementation prints messages to {@link System//err} containing the\n// values of {@code line}, {@code charPositionInLine}, and {@code msg} using\n// the following format.</p>\n//\n// <pre>\n// line <em>line</em>:<em>charPositionInLine</em> <em>msg</em>\n// </pre>\n//\nConsoleErrorListener.prototype.syntaxError = function(recognizer, offendingSymbol, line, column, msg, e) {\n    console.error(\"line \" + line + \":\" + column + \" \" + msg);\n};\n\nfunction ProxyErrorListener(delegates) {\n\tErrorListener.call(this);\n    if (delegates===null) {\n        throw \"delegates\";\n    }\n    this.delegates = delegates;\n\treturn this;\n}\n\nProxyErrorListener.prototype = Object.create(ErrorListener.prototype);\nProxyErrorListener.prototype.constructor = ProxyErrorListener;\n\nProxyErrorListener.prototype.syntaxError = function(recognizer, offendingSymbol, line, column, msg, e) {\n    this.delegates.map(function(d) { d.syntaxError(recognizer, offendingSymbol, line, column, msg, e); });\n};\n\nProxyErrorListener.prototype.reportAmbiguity = function(recognizer, dfa, startIndex, stopIndex, exact, ambigAlts, configs) {\n    this.delegates.map(function(d) { d.reportAmbiguity(recognizer, dfa, startIndex, stopIndex, exact, ambigAlts, configs); });\n};\n\nProxyErrorListener.prototype.reportAttemptingFullContext = function(recognizer, dfa, startIndex, stopIndex, conflictingAlts, configs) {\n\tthis.delegates.map(function(d) { d.reportAttemptingFullContext(recognizer, dfa, startIndex, stopIndex, conflictingAlts, configs); });\n};\n\nProxyErrorListener.prototype.reportContextSensitivity = function(recognizer, dfa, startIndex, stopIndex, prediction, configs) {\n\tthis.delegates.map(function(d) { d.reportContextSensitivity(recognizer, dfa, startIndex, stopIndex, prediction, configs); });\n};\n\nexports.ErrorListener = ErrorListener;\nexports.ConsoleErrorListener = ConsoleErrorListener;\nexports.ProxyErrorListener = ProxyErrorListener;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/error/ErrorListener.js\n// module id = qFmK\n// module chunks = 0 1 2","<template>\n  <section>\n    <!--<el-button @click=\"debugHandler\">debugger</el-button>-->\n    <presentable-steps class=\"presentable-steps\" :active=\"1\" v-if=\"!detail.presentableId\"></presentable-steps>\n\n    <el-tabs :tab-position=\"tabPosition\" v-model=\"activeTabName\">\n      <el-tab-pane label=\"资源详情\" name=\"resource\">\n        <ul class=\"p-detail\" v-if=\"detail._resourceDetail\">\n          <li>\n            <label class=\"item-title\">resource Id</label>\n            <span class=\"item-detail\">{{detail._resourceDetail.resourceId}}</span>\n          </li>\n          <li>\n            <label class=\"item-title\">resource name</label>\n            <span class=\"item-detail\">{{detail._resourceDetail.resourceName}}</span>\n          </li>\n          <li>\n            <label class=\"item-title\">resource type</label>\n            <span class=\"item-detail\">{{detail._resourceDetail.resourceType}}</span>\n          </li>\n          <li>\n            <label class=\"item-title\">status</label>\n            <span class=\"item-detail\">{{detail._resourceDetail.status}}</span>\n          </li>\n          <li>\n            <label class=\"item-title\">author</label>\n            <span class=\"item-detail\">{{detail._resourceDetail.userId}}</span>\n          </li>\n          <li>\n            <label class=\"item-title\">create date</label>\n            <span class=\"item-detail\">{{detail._resourceDetail.createDate|fmtDate}}</span>\n          </li>\n        </ul>\n      </el-tab-pane>\n      <el-tab-pane label=\"presentable 详情\" name=\"presentable\">\n        <div v-if=\"detail.presentableId\">\n          <ul class=\"p-detail\">\n            <li>\n              <label class=\"item-title\">presentable Id</label>\n              <span class=\"item-detail\">{{detail.presentableId}}</span>\n            </li>\n            <li>\n              <label class=\"item-title\">create date</label>\n              <span class=\"item-detail\">{{detail.createDate | fmtDate}}</span>\n            </li>\n            <li>\n              <label class=\"item-title\">presentable name</label>\n              <span class=\"item-detail\">\n              <el-input v-model=\"detail.name\"></el-input>\n            </span>\n            </li>\n            <li>\n              <label class=\"item-title\">tags</label>\n              <div class=\"item-detail\">\n                <presentable-tags v-model=\"detail.tagInfo.userDefined\"></presentable-tags>\n              </div>\n            </li>\n            <li>\n              <label class=\"item-title\">use policy</label>\n              <div class=\"item-detail\" style=\"width: 500px;\">\n                <presentable-policy v-model=\"detail._formatSegmentText\"></presentable-policy>\n              </div>\n            </li>\n            <el-button type=\"primary\" @click=\"updatePresentableHandler\">更新presentable</el-button>\n          </ul>\n        </div>\n        <div class=\"uncreated-policy-tip\" v-else>\n          还未创建user policy\n          <el-button @click=\"updatePresentableHandler\">创建</el-button>\n        </div>\n      </el-tab-pane>\n      <el-tab-pane label=\"合同详情\" name=\"contract\">\n        <presentable-contract-detail :contractDetail=\"detail._contractDetail\"></presentable-contract-detail>\n      </el-tab-pane>\n    </el-tabs>\n  </section>\n</template>\n\n<script>\n  import PresentableDetail from './index'\n\n  export default PresentableDetail\n</script>\n\n<style lang=\"less\" scoped>\n  @import \"index.less\";\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/views/node/presentable/detail/index.vue","function injectStyle (ssrContext) {\n  require(\"!!../../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-6983dd12\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-6983dd12\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-6983dd12\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/node/presentable/detail/index.vue\n// module id = rBJF\n// module chunks = 2","<template>\n  <div class=\"table-view-wrapper\" v-loading.body=\"loading\">\n    <el-table\n      class=\"table\"\n      :data=\"tableData\"\n      stripe\n      border>\n      <slot></slot>\n    </el-table>\n    <el-pagination\n      v-show=\"showPagination\"\n      class=\"pagination\"\n      @size-change=\"handleSizeChange\"\n      @current-change=\"handleCurrentChange\"\n      :background=\"true\"\n      :current-page=\"pageMeta.page\"\n      :page-sizes=\"[10, 20, 30, 50]\"\n      :page-size=\"pageMeta.pageSize\"\n      layout=\"total, sizes, prev, pager, next, jumper\"\n      :total=\"total\">\n    </el-pagination>\n  </div>\n</template>\n\n<script>\n  import TableView from './index'\n  export default TableView\n</script>\n\n<style lang=\"less\" scoped>\n.table-view-wrapper {\n  .table {\n    max-height: 100%;\n  }\n\n  .pagination {\n    margin-top: 15px;\n    text-align: center;\n  }\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/TableView/index.vue","//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/underscore/underscore.js\n// module id = rdLu\n// module chunks = 0 1 2","import CONFIG from '@/config/index'\n\nconst {CONTRACT_STATUS_TIPS} = CONFIG\n\nlet contractEventsMap = {\n  signing(params) {\n    return '进入协议签署页面'\n  },\n  contractGuaranty() {\n    return '进入支付保证金'\n  },\n  period() {\n    return '周期性支付'\n  },\n  arrivalDate(params) {\n    if (params[0] == 1) {\n      return '到达日期' + params[1] + '进入下一个状态'\n    } else if (params[0] == 0) {\n      return params[1] + '天后进入下一个状态'\n    }\n  }\n\n}\n\n\nexport default {\n  name: 'presentable-contract-detail',\n  data() {\n    return {\n      selectedContractEvent: '',\n      formatContractDetail: null\n    }\n  },\n  props: {\n    contractDetail: Object\n  },\n  watch: {\n    contractDetail: 'formatData'\n  },\n  methods: {\n    formatData() {\n      var detail = this.contractDetail\n      var formatContractDetail = {}\n\n      formatContractDetail.statusTip = CONTRACT_STATUS_TIPS[detail.status]\n      formatContractDetail.events = this.resolveContractEvents(detail)\n      this.formatContractDetail = formatContractDetail\n    },\n    resolveContractEvents(detail) {\n      let events = []\n      let fsmState = detail.fsmState;\n      let stateTransitionMap = detail.policySegment.fsmDescription;\n      let corresponseEvents = [];\n\n      stateTransitionMap.forEach((transition) => {\n        if (transition.currentState === fsmState) {\n          corresponseEvents.push(transition)\n        }\n      })\n\n      var pushEvent = (event) => {\n        var eventFn = contractEventsMap[event.type] || (() => 'no event handler')\n        events.push({\n          desc: eventFn(event.type),\n          type: event.type,\n          params: event\n        })\n      }\n\n      corresponseEvents.forEach((transition) => {\n        if (transition.event.type === 'compoundEvents') {\n          transition.event.params.forEach(pushEvent)\n        } else {\n          pushEvent(transition.event)\n        }\n      })\n\n      console.log(events)\n      return events\n    },\n    loadContractDetail(param) {\n      return this.$services.contract.get(param || {})\n        .then((res) => {\n          return res.getData();\n        }).catch((err) => {\n          this.$message.error(err.response.errorMsg || err)\n        })\n    },\n    updateContractDetail() {\n      this.loadContractDetail(this.contractDetail.contractId).then((contract) => {\n        Object.assign(this.contractDetail, contract)\n        this.formatData()\n      })\n    },\n    executeContractHandler() {\n      var selectedContractEvent = this.formatContractDetail.events[this.selectedContractEvent]\n      console.log(selectedContractEvent)\n      //test\n      this.$services.eventTest.post({\n        contractId: this.contractDetail.contractId,\n        eventId: selectedContractEvent.params.eventId\n      }).then(() => {\n        this.selectedContractEvent = ''\n        this.updateContractDetail()\n        this.$message.success('执行成功')\n      })\n\n      //todo\n      // this.$axios.post('//api.freelog.com/v1/contracts/test', {\n      //   contractId: this.contractDetail.contractId,\n      //   eventId: selectedContractEvent.params.eventId\n      // }).then((res) => {\n      //   console.log(res.getData())\n      //    this.updateContractDetail()\n      // }).catch((err) => {\n      //   this.$message.error((err.response && err.response.errorMsg) || err)\n      // });\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/views/node/presentable/contract/detail/index.js","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('el-input',{staticClass:\"query-input\",attrs:{\"placeholder\":\"请输入搜索内容\"},model:{value:(_vm.query),callback:function ($$v) {_vm.query=$$v},expression:\"query\"}},[_c('el-button',{attrs:{\"slot\":\"append\",\"icon\":\"el-icon-search\",\"type\":\"primary\"},on:{\"click\":_vm.queryHandler},slot:\"append\"})],1),_vm._v(\" \"),_c('table-view',{staticClass:\"resource-list\",attrs:{\"loader\":_vm.loader(),\"formatHandler\":_vm.formatHandler}},[_c('el-table-column',{attrs:{\"align\":\"center\",\"label\":\"presentable name\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.presentableDetail)?_c('span',[_vm._v(_vm._s(scope.row.presentableDetail.name))]):_c('span',[_vm._v(\"-\")])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"resourceDetail.resourceName\",\"label\":\"resource name\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"resourceDetail.resourceType\",\"label\":\"resource type\",\"align\":\"center\",\"width\":\"150px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"align\":\"center\",\"label\":\"create date\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',[_vm._v(_vm._s(_vm._f(\"fmtDate\")(scope.row.createDate)))])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"contractId\",\"align\":\"center\",\"label\":\"合同 ID\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"resourceId\",\"label\":\"resourceId\",\"align\":\"center\",\"width\":\"350px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"status\",\"align\":\"center\",\"width\":\"120px\",\"label\":\"合同状态\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-tag',{attrs:{\"type\":scope.row._statusInfo.type}},[_vm._v(_vm._s(scope.row._statusInfo.text))])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"\",\"width\":\"250px\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"small\"},on:{\"click\":function($event){_vm.handlePresentable(scope.row,'detail')}}},[_vm._v(\"查看详情\\n        \")]),_vm._v(\" \"),(!scope.row.presentableDetail)?_c('el-button',{attrs:{\"size\":\"small\"},on:{\"click\":function($event){_vm.handlePresentable(scope.row, 'edit')}}},[_vm._v(\"去创建user\\n          policy\\n        \")]):(scope.row.status===1 || scope.row.status===2)?_c('el-button',{attrs:{\"size\":\"small\"},on:{\"click\":function($event){_vm.handlePresentable(scope.row, 'detail', 'contract')}}},[_vm._v(\"去执行合同\\n        \")]):_vm._e()]}}])})],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-afdd11ca\",\"hasScoped\":true,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/node/presentables/index.vue\n// module id = szxE\n// module chunks = 2","<template>\n  <div>\n    <el-tag\n      :key=\"tag\"\n      v-for=\"tag in presentableTags\"\n      closable\n      :disable-transitions=\"false\"\n      @close=\"handleClose(tag)\">\n      {{tag}}\n    </el-tag>\n    <el-input\n      class=\"input-new-tag\"\n      v-if=\"inputVisible\"\n      v-model=\"inputValue\"\n      ref=\"saveTagInput\"\n      size=\"small\"\n      @keyup.enter.native=\"handleInputConfirm\"\n      @blur=\"handleInputConfirm\">\n    </el-input>\n    <el-button v-else class=\"button-new-tag\" size=\"small\" @click=\"showInput\">+ New Tag</el-button>\n  </div>\n</template>\n\n<script>\n  import PresentableTags from './index'\n\n  export default PresentableTags\n</script>\n\n<style lang=\"less\" scoped>\n\n  .el-tag + .el-tag {\n    margin-left: 10px;\n  }\n  .button-new-tag {\n    margin-left: 10px;\n    height: 32px;\n    line-height: 30px;\n    padding-top: 0;\n    padding-bottom: 0;\n  }\n  .input-new-tag {\n    width: 90px;\n    margin-left: 10px;\n    vertical-align: bottom;\n  }\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/views/node/presentable/tags/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('presentable-steps',{attrs:{\"active\":0}}),_vm._v(\" \"),_c('el-alert',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.done),expression:\"done\"}],attrs:{\"title\":\"该资源已创建过presentable\",\"type\":\"success\",\"show-icon\":\"\"}}),_vm._v(\" \"),_c('el-tabs',{attrs:{\"type\":\"border-card\"},model:{value:(_vm.activeName),callback:function ($$v) {_vm.activeName=$$v},expression:\"activeName\"}},[_vm._l((_vm.tabList),function(tabData,indexOuter){return _c('el-tab-pane',{key:indexOuter,attrs:{\"name\":tabData.resourceId}},[_c('span',{attrs:{\"slot\":\"label\"},slot:\"label\"},[_vm._v(\"\\n        \"+_vm._s(tabData.resourceName)+\"\\n\\n        \"),_c('el-tooltip',{directives:[{name:\"show\",rawName:\"v-show\",value:(tabData.checked),expression:\"tabData.checked\"}],staticClass:\"item\",attrs:{\"effect\":\"dark\",\"content\":\"已选中合同\",\"placement\":\"top\"}},[_c('i',{staticClass:\"el-icon-circle-check-outline icon-tip\"})]),_vm._v(\" \"),_c('el-tooltip',{directives:[{name:\"show\",rawName:\"v-show\",value:(tabData.created),expression:\"tabData.created\"}],staticClass:\"item\",attrs:{\"effect\":\"dark\",\"content\":\"已创建过合同\",\"placement\":\"top\"}},[_c('i',{staticClass:\"el-icon-circle-check icon-tip\"})])],1),_vm._v(\" \"),_c('div',{staticClass:\"p-name\"},[_c('label',[_vm._v(\"presentable name:\")]),_vm._v(\" \"),_c('el-input',{staticStyle:{\"width\":\"400px\"},attrs:{\"placeholder\":\"请输入presentable名\"},model:{value:(tabData.presentableName),callback:function ($$v) {_vm.$set(tabData, \"presentableName\", $$v)},expression:\"tabData.presentableName\"}})],1),_vm._v(\" \"),_c('div',{staticClass:\"step-1 op-step\"},[_c('div',{staticClass:\"step-row\"},[_c('div',{staticClass:\"step-circle\"},[_vm._v(\"1\")]),_vm._v(\" \"),_c('div',{staticClass:\"step-title\"},[_vm._v(\"选择合同segment\")])]),_vm._v(\" \"),_c('el-table',{attrs:{\"data\":tabData.data.policy}},[_c('el-table-column',{attrs:{\"type\":\"expand\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('pre',[_vm._v(_vm._s(scope.row._formatSegmentText))])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"segmentId\",\"prop\":\"segmentId\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(props){return [_c('el-radio',{attrs:{\"label\":props.$index},on:{\"change\":function($event){_vm.segmentChangeHandler(tabData)}},model:{value:(tabData.selected),callback:function ($$v) {_vm.$set(tabData, \"selected\", $$v)},expression:\"tabData.selected\"}},[_c('span',{attrs:{\"title\":\"placeholder\"}})]),_vm._v(\" \"),_c('el-tooltip',{directives:[{name:\"show\",rawName:\"v-show\",value:(props.row.created),expression:\"props.row.created\"}],staticClass:\"item\",attrs:{\"effect\":\"dark\",\"content\":\"该策略已经创建过合同\",\"placement\":\"top\"}},[_c('i',{staticClass:\"el-icon-info\"})]),_vm._v(\" \"),_c('el-tooltip',{directives:[{name:\"show\",rawName:\"v-show\",value:(tabData.selected===props.$index),expression:\"tabData.selected===props.$index\"}],staticClass:\"item\",attrs:{\"effect\":\"dark\",\"content\":\"取消选择\",\"placement\":\"top\"}},[_c('i',{staticClass:\"el-icon-circle-close-outline\",on:{\"click\":function($event){_vm.segmentChangeHandler(tabData, false)}}})])]}}])})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"step-2 op-step\"},[_c('div',{staticClass:\"step-row\"},[_c('div',{staticClass:\"step-circle\"},[_vm._v(\"2\")]),_vm._v(\" \"),_c('div',{staticClass:\"step-title\"},[_vm._v(\"创建user policy\")])]),_vm._v(\" \"),_c('presentable-policy',{model:{value:(tabData.userPolicy),callback:function ($$v) {_vm.$set(tabData, \"userPolicy\", $$v)},expression:\"tabData.userPolicy\"}})],1)])}),_vm._v(\" \"),_c('div',{staticClass:\"form-ft\"},[_c('el-button',{attrs:{\"disabled\":!_vm.selected},on:{\"click\":_vm.submit}},[_vm._v(\"提交\")])],1)],2)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-f9f08148\",\"hasScoped\":true,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/node/presentable/create/index.vue\n// module id = tdq/\n// module chunks = 2","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".upload-container[data-v-d708ef40]{width:20%;margin:auto}.gap[data-v-d708ef40]{margin-bottom:12px}\", \"\", {\"version\":3,\"sources\":[\"/Users/daizecheng/workplace/freelog/console/client/src/views/node/presentable/edit/index.vue\"],\"names\":[],\"mappings\":\"AACA,mCACE,UAAW,AACX,WAAa,CACd,AACD,sBACE,kBAAoB,CACrB\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.upload-container[data-v-d708ef40] {\\n  width: 20%;\\n  margin: auto;\\n}\\n.gap[data-v-d708ef40] {\\n  margin-bottom: 12px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-d708ef40\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/less-loader/dist/cjs.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/views/node/presentable/edit/index.vue\n// module id = uY8j\n// module chunks = 2","// Generated from policy.g4 by ANTLR 4.7\r\n// jshint ignore: start\r\nvar antlr4 = require('antlr4/index');\r\n\r\n\r\nvar serializedATN = [\"\\u0003\\u608b\\ua72a\\u8133\\ub9ed\\u417c\\u3be7\\u7786\\u5964\",\r\n    \"\\u00027\\u0283\\b\\u0001\\u0004\\u0002\\t\\u0002\\u0004\\u0003\\t\\u0003\\u0004\",\r\n    \"\\u0004\\t\\u0004\\u0004\\u0005\\t\\u0005\\u0004\\u0006\\t\\u0006\\u0004\\u0007\\t\",\r\n    \"\\u0007\\u0004\\b\\t\\b\\u0004\\t\\t\\t\\u0004\\n\\t\\n\\u0004\\u000b\\t\\u000b\\u0004\",\r\n    \"\\f\\t\\f\\u0004\\r\\t\\r\\u0004\\u000e\\t\\u000e\\u0004\\u000f\\t\\u000f\\u0004\\u0010\",\r\n    \"\\t\\u0010\\u0004\\u0011\\t\\u0011\\u0004\\u0012\\t\\u0012\\u0004\\u0013\\t\\u0013\",\r\n    \"\\u0004\\u0014\\t\\u0014\\u0004\\u0015\\t\\u0015\\u0004\\u0016\\t\\u0016\\u0004\\u0017\",\r\n    \"\\t\\u0017\\u0004\\u0018\\t\\u0018\\u0004\\u0019\\t\\u0019\\u0004\\u001a\\t\\u001a\",\r\n    \"\\u0004\\u001b\\t\\u001b\\u0004\\u001c\\t\\u001c\\u0004\\u001d\\t\\u001d\\u0004\\u001e\",\r\n    \"\\t\\u001e\\u0004\\u001f\\t\\u001f\\u0004 \\t \\u0004!\\t!\\u0004\\\"\\t\\\"\\u0004#\",\r\n    \"\\t#\\u0004$\\t$\\u0004%\\t%\\u0004&\\t&\\u0004\\'\\t\\'\\u0004(\\t(\\u0004)\\t)\\u0004\",\r\n    \"*\\t*\\u0004+\\t+\\u0004,\\t,\\u0004-\\t-\\u0004.\\t.\\u0004/\\t/\\u00040\\t0\\u0004\",\r\n    \"1\\t1\\u00042\\t2\\u00043\\t3\\u00044\\t4\\u00045\\t5\\u00046\\t6\\u0003\\u0002\\u0003\",\r\n    \"\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\",\r\n    \"\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\",\r\n    \"\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\",\r\n    \"\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\",\r\n    \"\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\",\r\n    \"\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\",\r\n    \"\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\",\r\n    \"\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\",\r\n    \"\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\",\r\n    \"\\u0004\\u0003\\u0004\\u0003\\u0005\\u0003\\u0005\\u0003\\u0005\\u0003\\u0005\\u0003\",\r\n    \"\\u0005\\u0003\\u0005\\u0003\\u0005\\u0003\\u0005\\u0003\\u0005\\u0003\\u0006\\u0003\",\r\n    \"\\u0006\\u0003\\u0007\\u0003\\u0007\\u0003\\u0007\\u0003\\u0007\\u0003\\u0007\\u0003\",\r\n    \"\\u0007\\u0003\\u0007\\u0003\\b\\u0003\\b\\u0003\\b\\u0003\\b\\u0003\\b\\u0003\\b\\u0003\",\r\n    \"\\b\\u0003\\b\\u0003\\b\\u0003\\b\\u0003\\b\\u0003\\t\\u0003\\t\\u0003\\t\\u0003\\t\\u0003\",\r\n    \"\\t\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\",\r\n    \"\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\",\r\n    \"\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\u000b\\u0003\",\r\n    \"\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\",\r\n    \"\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\",\r\n    \"\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\",\r\n    \"\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\",\r\n    \"\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\",\r\n    \"\\f\\u0003\\f\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\",\r\n    \"\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\",\r\n    \"\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\",\r\n    \"\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\",\r\n    \"\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\\u000f\\u0003\\u000f\",\r\n    \"\\u0003\\u000f\\u0003\\u000f\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\",\r\n    \"\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\",\r\n    \"\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\",\r\n    \"\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0011\",\r\n    \"\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\",\r\n    \"\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\",\r\n    \"\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\",\r\n    \"\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\",\r\n    \"\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\",\r\n    \"\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\",\r\n    \"\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\",\r\n    \"\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\",\r\n    \"\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\",\r\n    \"\\u0003\\u0013\\u0003\\u0013\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\",\r\n    \"\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\",\r\n    \"\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\",\r\n    \"\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\",\r\n    \"\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\",\r\n    \"\\u0003\\u0014\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\",\r\n    \"\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\",\r\n    \"\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0016\",\r\n    \"\\u0003\\u0016\\u0003\\u0017\\u0003\\u0017\\u0003\\u0018\\u0003\\u0018\\u0003\\u0019\",\r\n    \"\\u0003\\u0019\\u0003\\u0019\\u0003\\u0019\\u0003\\u0019\\u0003\\u0019\\u0003\\u0019\",\r\n    \"\\u0003\\u0019\\u0003\\u0019\\u0003\\u0019\\u0003\\u0019\\u0003\\u0019\\u0003\\u0019\",\r\n    \"\\u0003\\u0019\\u0003\\u0019\\u0003\\u001a\\u0003\\u001a\\u0003\\u001a\\u0003\\u001a\",\r\n    \"\\u0003\\u001a\\u0003\\u001a\\u0003\\u001a\\u0003\\u001a\\u0003\\u001a\\u0003\\u001a\",\r\n    \"\\u0003\\u001b\\u0003\\u001b\\u0003\\u001b\\u0003\\u001b\\u0003\\u001b\\u0003\\u001b\",\r\n    \"\\u0003\\u001b\\u0003\\u001b\\u0003\\u001b\\u0003\\u001b\\u0003\\u001b\\u0003\\u001c\",\r\n    \"\\u0003\\u001c\\u0003\\u001c\\u0003\\u001c\\u0003\\u001c\\u0003\\u001c\\u0003\\u001c\",\r\n    \"\\u0003\\u001c\\u0003\\u001c\\u0003\\u001c\\u0003\\u001c\\u0003\\u001c\\u0003\\u001c\",\r\n    \"\\u0003\\u001c\\u0003\\u001c\\u0003\\u001d\\u0003\\u001d\\u0003\\u001d\\u0003\\u001d\",\r\n    \"\\u0003\\u001e\\u0003\\u001e\\u0003\\u001e\\u0003\\u001e\\u0003\\u001e\\u0003\\u001e\",\r\n    \"\\u0003\\u001e\\u0003\\u001e\\u0003\\u001e\\u0003\\u001f\\u0003\\u001f\\u0003\\u001f\",\r\n    \"\\u0003\\u001f\\u0003\\u001f\\u0003\\u001f\\u0003\\u001f\\u0003\\u001f\\u0003\\u001f\",\r\n    \"\\u0003 \\u0003 \\u0003 \\u0003 \\u0003 \\u0003!\\u0003!\\u0003!\\u0003!\\u0003\",\r\n    \"!\\u0003\\\"\\u0003\\\"\\u0003\\\"\\u0003\\\"\\u0003\\\"\\u0003\\\"\\u0003#\\u0003#\\u0003\",\r\n    \"#\\u0003#\\u0003$\\u0003$\\u0003$\\u0003$\\u0003$\\u0003$\\u0003$\\u0003$\\u0003\",\r\n    \"$\\u0003$\\u0003$\\u0003%\\u0003%\\u0003%\\u0003%\\u0003%\\u0003%\\u0003&\\u0003\",\r\n    \"&\\u0003&\\u0003&\\u0003&\\u0003&\\u0003&\\u0003&\\u0003\\'\\u0003\\'\\u0003\\'\",\r\n    \"\\u0003(\\u0003(\\u0003(\\u0003)\\u0003)\\u0003)\\u0003*\\u0003*\\u0003*\\u0003\",\r\n    \"*\\u0003*\\u0003*\\u0003*\\u0003*\\u0003*\\u0003*\\u0003+\\u0003+\\u0003+\\u0003\",\r\n    \"+\\u0003+\\u0003+\\u0003+\\u0003+\\u0005+\\u023e\\n+\\u0003,\\u0003,\\u0003,\\u0003\",\r\n    \",\\u0003,\\u0003,\\u0003,\\u0003,\\u0003-\\u0003-\\u0003-\\u0003-\\u0003-\\u0003\",\r\n    \"-\\u0003-\\u0003.\\u0003.\\u0003.\\u0003.\\u0003/\\u0003/\\u0003/\\u0003/\\u0003\",\r\n    \"/\\u00030\\u00030\\u00030\\u00030\\u00030\\u00030\\u00030\\u00030\\u00031\\u0003\",\r\n    \"1\\u00031\\u00031\\u00031\\u00031\\u00031\\u00031\\u00032\\u00062\\u0269\\n2\\r\",\r\n    \"2\\u000e2\\u026a\\u00033\\u00063\\u026e\\n3\\r3\\u000e3\\u026f\\u00034\\u00064\",\r\n    \"\\u0273\\n4\\r4\\u000e4\\u0274\\u00035\\u00065\\u0278\\n5\\r5\\u000e5\\u0279\\u0003\",\r\n    \"5\\u00035\\u00036\\u00036\\u00036\\u00036\\u00036\\u00036\\u0002\\u00027\\u0003\",\r\n    \"\\u0003\\u0005\\u0004\\u0007\\u0005\\t\\u0006\\u000b\\u0007\\r\\b\\u000f\\t\\u0011\",\r\n    \"\\n\\u0013\\u000b\\u0015\\f\\u0017\\r\\u0019\\u000e\\u001b\\u000f\\u001d\\u0010\\u001f\",\r\n    \"\\u0011!\\u0012#\\u0013%\\u0014\\'\\u0015)\\u0016+\\u0017-\\u0018/\\u00191\\u001a\",\r\n    \"3\\u001b5\\u001c7\\u001d9\\u001e;\\u001f= ?!A\\\"C#E$G%I&K\\'M(O)Q*S+U,W-Y.\",\r\n    \"[/]0_1a2c3e4g5i6k7\\u0003\\u0002\\u0006\\u0005\\u0002C\\\\aac|\\u0003\\u0002\",\r\n    \"2;\\u0005\\u00022;C\\\\c|\\u0005\\u0002\\u000b\\f\\u000f\\u000f\\\"\\\"\\u0002\\u0287\",\r\n    \"\\u0002\\u0003\\u0003\\u0002\\u0002\\u0002\\u0002\\u0005\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0002\\u0007\\u0003\\u0002\\u0002\\u0002\\u0002\\t\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0002\\u000b\\u0003\\u0002\\u0002\\u0002\\u0002\\r\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0002\\u000f\\u0003\\u0002\\u0002\\u0002\\u0002\\u0011\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0002\\u0013\\u0003\\u0002\\u0002\\u0002\\u0002\\u0015\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0002\\u0017\\u0003\\u0002\\u0002\\u0002\\u0002\\u0019\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0002\\u001b\\u0003\\u0002\\u0002\\u0002\\u0002\\u001d\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0002\\u001f\\u0003\\u0002\\u0002\\u0002\\u0002!\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0002#\\u0003\\u0002\\u0002\\u0002\\u0002%\\u0003\\u0002\\u0002\\u0002\\u0002\",\r\n    \"\\'\\u0003\\u0002\\u0002\\u0002\\u0002)\\u0003\\u0002\\u0002\\u0002\\u0002+\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0002-\\u0003\\u0002\\u0002\\u0002\\u0002/\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u00021\\u0003\\u0002\\u0002\\u0002\\u00023\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00025\\u0003\\u0002\\u0002\\u0002\\u00027\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00029\\u0003\\u0002\\u0002\\u0002\\u0002;\\u0003\\u0002\\u0002\\u0002\\u0002\",\r\n    \"=\\u0003\\u0002\\u0002\\u0002\\u0002?\\u0003\\u0002\\u0002\\u0002\\u0002A\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0002C\\u0003\\u0002\\u0002\\u0002\\u0002E\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0002G\\u0003\\u0002\\u0002\\u0002\\u0002I\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0002K\\u0003\\u0002\\u0002\\u0002\\u0002M\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0002O\\u0003\\u0002\\u0002\\u0002\\u0002Q\\u0003\\u0002\\u0002\\u0002\\u0002\",\r\n    \"S\\u0003\\u0002\\u0002\\u0002\\u0002U\\u0003\\u0002\\u0002\\u0002\\u0002W\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0002Y\\u0003\\u0002\\u0002\\u0002\\u0002[\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0002]\\u0003\\u0002\\u0002\\u0002\\u0002_\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0002a\\u0003\\u0002\\u0002\\u0002\\u0002c\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0002e\\u0003\\u0002\\u0002\\u0002\\u0002g\\u0003\\u0002\\u0002\\u0002\\u0002\",\r\n    \"i\\u0003\\u0002\\u0002\\u0002\\u0002k\\u0003\\u0002\\u0002\\u0002\\u0003m\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0005\\u0086\\u0003\\u0002\\u0002\\u0002\\u0007\\u00a4\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\t\\u00a6\\u0003\\u0002\\u0002\\u0002\\u000b\\u00af\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\r\\u00b1\\u0003\\u0002\\u0002\\u0002\\u000f\\u00b8\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0011\\u00c3\\u0003\\u0002\\u0002\\u0002\\u0013\\u00c8\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0015\\u00e0\\u0003\\u0002\\u0002\\u0002\\u0017\\u00f6\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0019\\u0105\\u0003\\u0002\\u0002\\u0002\\u001b\\u011a\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u001d\\u0127\\u0003\\u0002\\u0002\\u0002\\u001f\\u012b\\u0003\",\r\n    \"\\u0002\\u0002\\u0002!\\u0140\\u0003\\u0002\\u0002\\u0002#\\u0153\\u0003\\u0002\",\r\n    \"\\u0002\\u0002%\\u015c\\u0003\\u0002\\u0002\\u0002\\'\\u0179\\u0003\\u0002\\u0002\",\r\n    \"\\u0002)\\u0196\\u0003\\u0002\\u0002\\u0002+\\u01a6\\u0003\\u0002\\u0002\\u0002\",\r\n    \"-\\u01a8\\u0003\\u0002\\u0002\\u0002/\\u01aa\\u0003\\u0002\\u0002\\u00021\\u01ac\",\r\n    \"\\u0003\\u0002\\u0002\\u00023\\u01bb\\u0003\\u0002\\u0002\\u00025\\u01c5\\u0003\",\r\n    \"\\u0002\\u0002\\u00027\\u01d0\\u0003\\u0002\\u0002\\u00029\\u01df\\u0003\\u0002\",\r\n    \"\\u0002\\u0002;\\u01e3\\u0003\\u0002\\u0002\\u0002=\\u01ec\\u0003\\u0002\\u0002\",\r\n    \"\\u0002?\\u01f5\\u0003\\u0002\\u0002\\u0002A\\u01fa\\u0003\\u0002\\u0002\\u0002\",\r\n    \"C\\u01ff\\u0003\\u0002\\u0002\\u0002E\\u0205\\u0003\\u0002\\u0002\\u0002G\\u0209\",\r\n    \"\\u0003\\u0002\\u0002\\u0002I\\u0214\\u0003\\u0002\\u0002\\u0002K\\u021a\\u0003\",\r\n    \"\\u0002\\u0002\\u0002M\\u0222\\u0003\\u0002\\u0002\\u0002O\\u0225\\u0003\\u0002\",\r\n    \"\\u0002\\u0002Q\\u0228\\u0003\\u0002\\u0002\\u0002S\\u022b\\u0003\\u0002\\u0002\",\r\n    \"\\u0002U\\u023d\\u0003\\u0002\\u0002\\u0002W\\u023f\\u0003\\u0002\\u0002\\u0002\",\r\n    \"Y\\u0247\\u0003\\u0002\\u0002\\u0002[\\u024e\\u0003\\u0002\\u0002\\u0002]\\u0252\",\r\n    \"\\u0003\\u0002\\u0002\\u0002_\\u0257\\u0003\\u0002\\u0002\\u0002a\\u025f\\u0003\",\r\n    \"\\u0002\\u0002\\u0002c\\u0268\\u0003\\u0002\\u0002\\u0002e\\u026d\\u0003\\u0002\",\r\n    \"\\u0002\\u0002g\\u0272\\u0003\\u0002\\u0002\\u0002i\\u0277\\u0003\\u0002\\u0002\",\r\n    \"\\u0002k\\u027d\\u0003\\u0002\\u0002\\u0002mn\\u0007k\\u0002\\u0002no\\u0007p\",\r\n    \"\\u0002\\u0002op\\u0007\\\"\\u0002\\u0002pq\\u0007v\\u0002\\u0002qr\\u0007j\\u0002\",\r\n    \"\\u0002rs\\u0007g\\u0002\\u0002st\\u0007\\\"\\u0002\\u0002tu\\u0007h\\u0002\\u0002\",\r\n    \"uv\\u0007q\\u0002\\u0002vw\\u0007n\\u0002\\u0002wx\\u0007n\\u0002\\u0002xy\\u0007\",\r\n    \"q\\u0002\\u0002yz\\u0007y\\u0002\\u0002z{\\u0007k\\u0002\\u0002{|\\u0007p\\u0002\",\r\n    \"\\u0002|}\\u0007i\\u0002\\u0002}~\\u0007\\\"\\u0002\\u0002~\\u007f\\u0007u\\u0002\",\r\n    \"\\u0002\\u007f\\u0080\\u0007v\\u0002\\u0002\\u0080\\u0081\\u0007c\\u0002\\u0002\",\r\n    \"\\u0081\\u0082\\u0007v\\u0002\\u0002\\u0082\\u0083\\u0007g\\u0002\\u0002\\u0083\",\r\n    \"\\u0084\\u0007u\\u0002\\u0002\\u0084\\u0085\\u0007<\\u0002\\u0002\\u0085\\u0004\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0086\\u0087\\u0007K\\u0002\\u0002\\u0087\\u0088\",\r\n    \"\\u0007\\\"\\u0002\\u0002\\u0088\\u0089\\u0007c\\u0002\\u0002\\u0089\\u008a\\u0007\",\r\n    \"i\\u0002\\u0002\\u008a\\u008b\\u0007t\\u0002\\u0002\\u008b\\u008c\\u0007g\\u0002\",\r\n    \"\\u0002\\u008c\\u008d\\u0007g\\u0002\\u0002\\u008d\\u008e\\u0007\\\"\\u0002\\u0002\",\r\n    \"\\u008e\\u008f\\u0007v\\u0002\\u0002\\u008f\\u0090\\u0007q\\u0002\\u0002\\u0090\",\r\n    \"\\u0091\\u0007\\\"\\u0002\\u0002\\u0091\\u0092\\u0007c\\u0002\\u0002\\u0092\\u0093\",\r\n    \"\\u0007w\\u0002\\u0002\\u0093\\u0094\\u0007v\\u0002\\u0002\\u0094\\u0095\\u0007\",\r\n    \"j\\u0002\\u0002\\u0095\\u0096\\u0007q\\u0002\\u0002\\u0096\\u0097\\u0007t\\u0002\",\r\n    \"\\u0002\\u0097\\u0098\\u0007k\\u0002\\u0002\\u0098\\u0099\\u0007|\\u0002\\u0002\",\r\n    \"\\u0099\\u009a\\u0007g\\u0002\\u0002\\u009a\\u009b\\u0007\\\"\\u0002\\u0002\\u009b\",\r\n    \"\\u009c\\u0007v\\u0002\\u0002\\u009c\\u009d\\u0007q\\u0002\\u0002\\u009d\\u009e\",\r\n    \"\\u0007m\\u0002\\u0002\\u009e\\u009f\\u0007g\\u0002\\u0002\\u009f\\u00a0\\u0007\",\r\n    \"p\\u0002\\u0002\\u00a0\\u00a1\\u0007\\\"\\u0002\\u0002\\u00a1\\u00a2\\u0007k\\u0002\",\r\n    \"\\u0002\\u00a2\\u00a3\\u0007p\\u0002\\u0002\\u00a3\\u0006\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00a4\\u00a5\\u0007.\\u0002\\u0002\\u00a5\\b\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00a6\\u00a7\\u0007w\\u0002\\u0002\\u00a7\\u00a8\\u0007u\\u0002\\u0002\\u00a8\",\r\n    \"\\u00a9\\u0007g\\u0002\\u0002\\u00a9\\u00aa\\u0007t\\u0002\\u0002\\u00aa\\u00ab\",\r\n    \"\\u0007u\\u0002\\u0002\\u00ab\\u00ac\\u0007\\\"\\u0002\\u0002\\u00ac\\u00ad\\u0007\",\r\n    \"k\\u0002\\u0002\\u00ad\\u00ae\\u0007p\\u0002\\u0002\\u00ae\\n\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00af\\u00b0\\u0007<\\u0002\\u0002\\u00b0\\f\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00b1\\u00b2\\u0007c\\u0002\\u0002\\u00b2\\u00b3\\u0007p\\u0002\\u0002\\u00b3\",\r\n    \"\\u00b4\\u0007f\\u0002\\u0002\\u00b4\\u00b5\\u0007\\\"\\u0002\\u0002\\u00b5\\u00b6\",\r\n    \"\\u0007q\\u0002\\u0002\\u00b6\\u00b7\\u0007p\\u0002\\u0002\\u00b7\\u000e\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00b8\\u00b9\\u0007v\\u0002\\u0002\\u00b9\\u00ba\\u0007\",\r\n    \"j\\u0002\\u0002\\u00ba\\u00bb\\u0007g\\u0002\\u0002\\u00bb\\u00bc\\u0007\\\"\\u0002\",\r\n    \"\\u0002\\u00bc\\u00bd\\u0007g\\u0002\\u0002\\u00bd\\u00be\\u0007p\\u0002\\u0002\",\r\n    \"\\u00be\\u00bf\\u0007f\\u0002\\u0002\\u00bf\\u00c0\\u0007\\\"\\u0002\\u0002\\u00c0\",\r\n    \"\\u00c1\\u0007q\\u0002\\u0002\\u00c1\\u00c2\\u0007h\\u0002\\u0002\\u00c2\\u0010\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u00c3\\u00c4\\u0007f\\u0002\\u0002\\u00c4\\u00c5\",\r\n    \"\\u0007c\\u0002\\u0002\\u00c5\\u00c6\\u0007v\\u0002\\u0002\\u00c6\\u00c7\\u0007\",\r\n    \"g\\u0002\\u0002\\u00c7\\u0012\\u0003\\u0002\\u0002\\u0002\\u00c8\\u00c9\\u0007\",\r\n    \"c\\u0002\\u0002\\u00c9\\u00ca\\u0007h\\u0002\\u0002\\u00ca\\u00cb\\u0007v\\u0002\",\r\n    \"\\u0002\\u00cb\\u00cc\\u0007g\\u0002\\u0002\\u00cc\\u00cd\\u0007t\\u0002\\u0002\",\r\n    \"\\u00cd\\u00ce\\u0007\\\"\\u0002\\u0002\\u00ce\\u00cf\\u0007e\\u0002\\u0002\\u00cf\",\r\n    \"\\u00d0\\u0007q\\u0002\\u0002\\u00d0\\u00d1\\u0007p\\u0002\\u0002\\u00d1\\u00d2\",\r\n    \"\\u0007v\\u0002\\u0002\\u00d2\\u00d3\\u0007t\\u0002\\u0002\\u00d3\\u00d4\\u0007\",\r\n    \"c\\u0002\\u0002\\u00d4\\u00d5\\u0007e\\u0002\\u0002\\u00d5\\u00d6\\u0007v\\u0002\",\r\n    \"\\u0002\\u00d6\\u00d7\\u0007\\\"\\u0002\\u0002\\u00d7\\u00d8\\u0007e\\u0002\\u0002\",\r\n    \"\\u00d8\\u00d9\\u0007t\\u0002\\u0002\\u00d9\\u00da\\u0007g\\u0002\\u0002\\u00da\",\r\n    \"\\u00db\\u0007c\\u0002\\u0002\\u00db\\u00dc\\u0007v\\u0002\\u0002\\u00dc\\u00dd\",\r\n    \"\\u0007k\\u0002\\u0002\\u00dd\\u00de\\u0007q\\u0002\\u0002\\u00de\\u00df\\u0007\",\r\n    \"p\\u0002\\u0002\\u00df\\u0014\\u0003\\u0002\\u0002\\u0002\\u00e0\\u00e1\\u0007\",\r\n    \"r\\u0002\\u0002\\u00e1\\u00e2\\u0007t\\u0002\\u0002\\u00e2\\u00e3\\u0007k\\u0002\",\r\n    \"\\u0002\\u00e3\\u00e4\\u0007e\\u0002\\u0002\\u00e4\\u00e5\\u0007g\\u0002\\u0002\",\r\n    \"\\u00e5\\u00e6\\u0007\\\"\\u0002\\u0002\\u00e6\\u00e7\\u0007r\\u0002\\u0002\\u00e7\",\r\n    \"\\u00e8\\u0007t\\u0002\\u0002\\u00e8\\u00e9\\u0007k\\u0002\\u0002\\u00e9\\u00ea\",\r\n    \"\\u0007e\\u0002\\u0002\\u00ea\\u00eb\\u0007g\\u0002\\u0002\\u00eb\\u00ec\\u0007\",\r\n    \"G\\u0002\\u0002\\u00ec\\u00ed\\u0007z\\u0002\\u0002\\u00ed\\u00ee\\u0007r\\u0002\",\r\n    \"\\u0002\\u00ee\\u00ef\\u0007t\\u0002\\u0002\\u00ef\\u00f0\\u0007g\\u0002\\u0002\",\r\n    \"\\u00f0\\u00f1\\u0007u\\u0002\\u0002\\u00f1\\u00f2\\u0007u\\u0002\\u0002\\u00f2\",\r\n    \"\\u00f3\\u0007k\\u0002\\u0002\\u00f3\\u00f4\\u0007q\\u0002\\u0002\\u00f4\\u00f5\",\r\n    \"\\u0007p\\u0002\\u0002\\u00f5\\u0016\\u0003\\u0002\\u0002\\u0002\\u00f6\\u00f7\",\r\n    \"\\u0007v\\u0002\\u0002\\u00f7\\u00f8\\u0007t\\u0002\\u0002\\u00f8\\u00f9\\u0007\",\r\n    \"c\\u0002\\u0002\\u00f9\\u00fa\\u0007p\\u0002\\u0002\\u00fa\\u00fb\\u0007u\\u0002\",\r\n    \"\\u0002\\u00fb\\u00fc\\u0007c\\u0002\\u0002\\u00fc\\u00fd\\u0007e\\u0002\\u0002\",\r\n    \"\\u00fd\\u00fe\\u0007v\\u0002\\u0002\\u00fe\\u00ff\\u0007k\\u0002\\u0002\\u00ff\",\r\n    \"\\u0100\\u0007q\\u0002\\u0002\\u0100\\u0101\\u0007p\\u0002\\u0002\\u0101\\u0102\",\r\n    \"\\u0007\\\"\\u0002\\u0002\\u0102\\u0103\\u0007q\\u0002\\u0002\\u0103\\u0104\\u0007\",\r\n    \"h\\u0002\\u0002\\u0104\\u0018\\u0003\\u0002\\u0002\\u0002\\u0105\\u0106\\u0007\",\r\n    \"e\\u0002\\u0002\\u0106\\u0107\\u0007q\\u0002\\u0002\\u0107\\u0108\\u0007p\\u0002\",\r\n    \"\\u0002\\u0108\\u0109\\u0007v\\u0002\\u0002\\u0109\\u010a\\u0007t\\u0002\\u0002\",\r\n    \"\\u010a\\u010b\\u0007c\\u0002\\u0002\\u010b\\u010c\\u0007e\\u0002\\u0002\\u010c\",\r\n    \"\\u010d\\u0007v\\u0002\\u0002\\u010d\\u010e\\u0007a\\u0002\\u0002\\u010e\\u010f\",\r\n    \"\\u0007i\\u0002\\u0002\\u010f\\u0110\\u0007w\\u0002\\u0002\\u0110\\u0111\\u0007\",\r\n    \"c\\u0002\\u0002\\u0111\\u0112\\u0007t\\u0002\\u0002\\u0112\\u0113\\u0007c\\u0002\",\r\n    \"\\u0002\\u0113\\u0114\\u0007p\\u0002\\u0002\\u0114\\u0115\\u0007v\\u0002\\u0002\",\r\n    \"\\u0115\\u0116\\u0007{\\u0002\\u0002\\u0116\\u0117\\u0007\\\"\\u0002\\u0002\\u0117\",\r\n    \"\\u0118\\u0007q\\u0002\\u0002\\u0118\\u0119\\u0007h\\u0002\\u0002\\u0119\\u001a\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u011a\\u011b\\u0007t\\u0002\\u0002\\u011b\\u011c\",\r\n    \"\\u0007g\\u0002\\u0002\\u011c\\u011d\\u0007h\\u0002\\u0002\\u011d\\u011e\\u0007\",\r\n    \"w\\u0002\\u0002\\u011e\\u011f\\u0007p\\u0002\\u0002\\u011f\\u0120\\u0007f\\u0002\",\r\n    \"\\u0002\\u0120\\u0121\\u0007\\\"\\u0002\\u0002\\u0121\\u0122\\u0007c\\u0002\\u0002\",\r\n    \"\\u0122\\u0123\\u0007h\\u0002\\u0002\\u0123\\u0124\\u0007v\\u0002\\u0002\\u0124\",\r\n    \"\\u0125\\u0007g\\u0002\\u0002\\u0125\\u0126\\u0007t\\u0002\\u0002\\u0126\\u001c\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0127\\u0128\\u0007f\\u0002\\u0002\\u0128\\u0129\",\r\n    \"\\u0007c\\u0002\\u0002\\u0129\\u012a\\u0007{\\u0002\\u0002\\u012a\\u001e\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u012b\\u012c\\u0007r\\u0002\\u0002\\u012c\\u012d\\u0007\",\r\n    \"n\\u0002\\u0002\\u012d\\u012e\\u0007c\\u0002\\u0002\\u012e\\u012f\\u0007v\\u0002\",\r\n    \"\\u0002\\u012f\\u0130\\u0007h\\u0002\\u0002\\u0130\\u0131\\u0007q\\u0002\\u0002\",\r\n    \"\\u0131\\u0132\\u0007t\\u0002\\u0002\\u0132\\u0133\\u0007o\\u0002\\u0002\\u0133\",\r\n    \"\\u0134\\u0007a\\u0002\\u0002\\u0134\\u0135\\u0007i\\u0002\\u0002\\u0135\\u0136\",\r\n    \"\\u0007w\\u0002\\u0002\\u0136\\u0137\\u0007c\\u0002\\u0002\\u0137\\u0138\\u0007\",\r\n    \"t\\u0002\\u0002\\u0138\\u0139\\u0007c\\u0002\\u0002\\u0139\\u013a\\u0007p\\u0002\",\r\n    \"\\u0002\\u013a\\u013b\\u0007v\\u0002\\u0002\\u013b\\u013c\\u0007{\\u0002\\u0002\",\r\n    \"\\u013c\\u013d\\u0007\\\"\\u0002\\u0002\\u013d\\u013e\\u0007q\\u0002\\u0002\\u013e\",\r\n    \"\\u013f\\u0007h\\u0002\\u0002\\u013f \\u0003\\u0002\\u0002\\u0002\\u0140\\u0141\",\r\n    \"\\u0007x\\u0002\\u0002\\u0141\\u0142\\u0007k\\u0002\\u0002\\u0142\\u0143\\u0007\",\r\n    \"u\\u0002\\u0002\\u0143\\u0144\\u0007k\\u0002\\u0002\\u0144\\u0145\\u0007v\\u0002\",\r\n    \"\\u0002\\u0145\\u0146\\u0007a\\u0002\\u0002\\u0146\\u0147\\u0007k\\u0002\\u0002\",\r\n    \"\\u0147\\u0148\\u0007p\\u0002\\u0002\\u0148\\u0149\\u0007e\\u0002\\u0002\\u0149\",\r\n    \"\\u014a\\u0007t\\u0002\\u0002\\u014a\\u014b\\u0007g\\u0002\\u0002\\u014b\\u014c\",\r\n    \"\\u0007o\\u0002\\u0002\\u014c\\u014d\\u0007g\\u0002\\u0002\\u014d\\u014e\\u0007\",\r\n    \"p\\u0002\\u0002\\u014e\\u014f\\u0007v\\u0002\\u0002\\u014f\\u0150\\u0007\\\"\\u0002\",\r\n    \"\\u0002\\u0150\\u0151\\u0007q\\u0002\\u0002\\u0151\\u0152\\u0007h\\u0002\\u0002\",\r\n    \"\\u0152\\\"\\u0003\\u0002\\u0002\\u0002\\u0153\\u0154\\u0007x\\u0002\\u0002\\u0154\",\r\n    \"\\u0155\\u0007k\\u0002\\u0002\\u0155\\u0156\\u0007u\\u0002\\u0002\\u0156\\u0157\",\r\n    \"\\u0007k\\u0002\\u0002\\u0157\\u0158\\u0007v\\u0002\\u0002\\u0158\\u0159\\u0007\",\r\n    \"\\\"\\u0002\\u0002\\u0159\\u015a\\u0007q\\u0002\\u0002\\u015a\\u015b\\u0007h\\u0002\",\r\n    \"\\u0002\\u015b$\\u0003\\u0002\\u0002\\u0002\\u015c\\u015d\\u0007c\\u0002\\u0002\",\r\n    \"\\u015d\\u015e\\u0007e\\u0002\\u0002\\u015e\\u015f\\u0007e\\u0002\\u0002\\u015f\",\r\n    \"\\u0160\\u0007q\\u0002\\u0002\\u0160\\u0161\\u0007w\\u0002\\u0002\\u0161\\u0162\",\r\n    \"\\u0007p\\u0002\\u0002\\u0162\\u0163\\u0007v\\u0002\\u0002\\u0163\\u0164\\u0007\",\r\n    \"a\\u0002\\u0002\\u0164\\u0165\\u0007d\\u0002\\u0002\\u0165\\u0166\\u0007c\\u0002\",\r\n    \"\\u0002\\u0166\\u0167\\u0007n\\u0002\\u0002\\u0167\\u0168\\u0007c\\u0002\\u0002\",\r\n    \"\\u0168\\u0169\\u0007p\\u0002\\u0002\\u0169\\u016a\\u0007e\\u0002\\u0002\\u016a\",\r\n    \"\\u016b\\u0007g\\u0002\\u0002\\u016b\\u016c\\u0007\\\"\\u0002\\u0002\\u016c\\u016d\",\r\n    \"\\u0007i\\u0002\\u0002\\u016d\\u016e\\u0007t\\u0002\\u0002\\u016e\\u016f\\u0007\",\r\n    \"g\\u0002\\u0002\\u016f\\u0170\\u0007c\\u0002\\u0002\\u0170\\u0171\\u0007v\\u0002\",\r\n    \"\\u0002\\u0171\\u0172\\u0007g\\u0002\\u0002\\u0172\\u0173\\u0007t\\u0002\\u0002\",\r\n    \"\\u0173\\u0174\\u0007\\\"\\u0002\\u0002\\u0174\\u0175\\u0007v\\u0002\\u0002\\u0175\",\r\n    \"\\u0176\\u0007j\\u0002\\u0002\\u0176\\u0177\\u0007c\\u0002\\u0002\\u0177\\u0178\",\r\n    \"\\u0007p\\u0002\\u0002\\u0178&\\u0003\\u0002\\u0002\\u0002\\u0179\\u017a\\u0007\",\r\n    \"c\\u0002\\u0002\\u017a\\u017b\\u0007e\\u0002\\u0002\\u017b\\u017c\\u0007e\\u0002\",\r\n    \"\\u0002\\u017c\\u017d\\u0007q\\u0002\\u0002\\u017d\\u017e\\u0007w\\u0002\\u0002\",\r\n    \"\\u017e\\u017f\\u0007p\\u0002\\u0002\\u017f\\u0180\\u0007v\\u0002\\u0002\\u0180\",\r\n    \"\\u0181\\u0007a\\u0002\\u0002\\u0181\\u0182\\u0007d\\u0002\\u0002\\u0182\\u0183\",\r\n    \"\\u0007c\\u0002\\u0002\\u0183\\u0184\\u0007n\\u0002\\u0002\\u0184\\u0185\\u0007\",\r\n    \"c\\u0002\\u0002\\u0185\\u0186\\u0007p\\u0002\\u0002\\u0186\\u0187\\u0007e\\u0002\",\r\n    \"\\u0002\\u0187\\u0188\\u0007g\\u0002\\u0002\\u0188\\u0189\\u0007\\\"\\u0002\\u0002\",\r\n    \"\\u0189\\u018a\\u0007u\\u0002\\u0002\\u018a\\u018b\\u0007o\\u0002\\u0002\\u018b\",\r\n    \"\\u018c\\u0007c\\u0002\\u0002\\u018c\\u018d\\u0007n\\u0002\\u0002\\u018d\\u018e\",\r\n    \"\\u0007n\\u0002\\u0002\\u018e\\u018f\\u0007g\\u0002\\u0002\\u018f\\u0190\\u0007\",\r\n    \"t\\u0002\\u0002\\u0190\\u0191\\u0007\\\"\\u0002\\u0002\\u0191\\u0192\\u0007v\\u0002\",\r\n    \"\\u0002\\u0192\\u0193\\u0007j\\u0002\\u0002\\u0193\\u0194\\u0007c\\u0002\\u0002\",\r\n    \"\\u0194\\u0195\\u0007p\\u0002\\u0002\\u0195(\\u0003\\u0002\\u0002\\u0002\\u0196\",\r\n    \"\\u0197\\u0007c\\u0002\\u0002\\u0197\\u0198\\u0007e\\u0002\\u0002\\u0198\\u0199\",\r\n    \"\\u0007e\\u0002\\u0002\\u0199\\u019a\\u0007q\\u0002\\u0002\\u019a\\u019b\\u0007\",\r\n    \"w\\u0002\\u0002\\u019b\\u019c\\u0007p\\u0002\\u0002\\u019c\\u019d\\u0007v\\u0002\",\r\n    \"\\u0002\\u019d\\u019e\\u0007a\\u0002\\u0002\\u019e\\u019f\\u0007u\\u0002\\u0002\",\r\n    \"\\u019f\\u01a0\\u0007g\\u0002\\u0002\\u01a0\\u01a1\\u0007v\\u0002\\u0002\\u01a1\",\r\n    \"\\u01a2\\u0007v\\u0002\\u0002\\u01a2\\u01a3\\u0007n\\u0002\\u0002\\u01a3\\u01a4\",\r\n    \"\\u0007g\\u0002\\u0002\\u01a4\\u01a5\\u0007f\\u0002\\u0002\\u01a5*\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u01a6\\u01a7\\u00070\\u0002\\u0002\\u01a7,\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u01a8\\u01a9\\u0007B\\u0002\\u0002\\u01a9.\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u01aa\\u01ab\\u0007a\\u0002\\u0002\\u01ab0\\u0003\\u0002\\u0002\\u0002\\u01ac\",\r\n    \"\\u01ad\\u0007T\\u0002\\u0002\\u01ad\\u01ae\\u0007g\\u0002\\u0002\\u01ae\\u01af\",\r\n    \"\\u0007i\\u0002\\u0002\\u01af\\u01b0\\u0007k\\u0002\\u0002\\u01b0\\u01b1\\u0007\",\r\n    \"u\\u0002\\u0002\\u01b1\\u01b2\\u0007v\\u0002\\u0002\\u01b2\\u01b3\\u0007g\\u0002\",\r\n    \"\\u0002\\u01b3\\u01b4\\u0007t\\u0002\\u0002\\u01b4\\u01b5\\u0007g\\u0002\\u0002\",\r\n    \"\\u01b5\\u01b6\\u0007f\\u0002\\u0002\\u01b6\\u01b7\\u0007W\\u0002\\u0002\\u01b7\",\r\n    \"\\u01b8\\u0007u\\u0002\\u0002\\u01b8\\u01b9\\u0007g\\u0002\\u0002\\u01b9\\u01ba\",\r\n    \"\\u0007t\\u0002\\u0002\\u01ba2\\u0003\\u0002\\u0002\\u0002\\u01bb\\u01bc\\u0007\",\r\n    \"N\\u0002\\u0002\\u01bc\\u01bd\\u0007q\\u0002\\u0002\\u01bd\\u01be\\u0007i\\u0002\",\r\n    \"\\u0002\\u01be\\u01bf\\u0007k\\u0002\\u0002\\u01bf\\u01c0\\u0007p\\u0002\\u0002\",\r\n    \"\\u01c0\\u01c1\\u0007W\\u0002\\u0002\\u01c1\\u01c2\\u0007u\\u0002\\u0002\\u01c2\",\r\n    \"\\u01c3\\u0007g\\u0002\\u0002\\u01c3\\u01c4\\u0007t\\u0002\\u0002\\u01c44\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u01c5\\u01c6\\u0007C\\u0002\\u0002\\u01c6\\u01c7\\u0007\",\r\n    \"n\\u0002\\u0002\\u01c7\\u01c8\\u0007n\\u0002\\u0002\\u01c8\\u01c9\\u0007X\\u0002\",\r\n    \"\\u0002\\u01c9\\u01ca\\u0007k\\u0002\\u0002\\u01ca\\u01cb\\u0007u\\u0002\\u0002\",\r\n    \"\\u01cb\\u01cc\\u0007k\\u0002\\u0002\\u01cc\\u01cd\\u0007v\\u0002\\u0002\\u01cd\",\r\n    \"\\u01ce\\u0007g\\u0002\\u0002\\u01ce\\u01cf\\u0007t\\u0002\\u0002\\u01cf6\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u01d0\\u01d1\\u0007T\\u0002\\u0002\\u01d1\\u01d2\\u0007\",\r\n    \"g\\u0002\\u0002\\u01d2\\u01d3\\u0007i\\u0002\\u0002\\u01d3\\u01d4\\u0007k\\u0002\",\r\n    \"\\u0002\\u01d4\\u01d5\\u0007u\\u0002\\u0002\\u01d5\\u01d6\\u0007v\\u0002\\u0002\",\r\n    \"\\u01d6\\u01d7\\u0007g\\u0002\\u0002\\u01d7\\u01d8\\u0007t\\u0002\\u0002\\u01d8\",\r\n    \"\\u01d9\\u0007g\\u0002\\u0002\\u01d9\\u01da\\u0007f\\u0002\\u0002\\u01da\\u01db\",\r\n    \"\\u0007P\\u0002\\u0002\\u01db\\u01dc\\u0007q\\u0002\\u0002\\u01dc\\u01dd\\u0007\",\r\n    \"f\\u0002\\u0002\\u01dd\\u01de\\u0007g\\u0002\\u0002\\u01de8\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u01df\\u01e0\\u0007c\\u0002\\u0002\\u01e0\\u01e1\\u0007p\\u0002\\u0002\",\r\n    \"\\u01e1\\u01e2\\u0007f\\u0002\\u0002\\u01e2:\\u0003\\u0002\\u0002\\u0002\\u01e3\",\r\n    \"\\u01e4\\u0007k\\u0002\\u0002\\u01e4\\u01e5\\u0007p\\u0002\\u0002\\u01e5\\u01e6\",\r\n    \"\\u0007\\\"\\u0002\\u0002\\u01e6\\u01e7\\u0007v\\u0002\\u0002\\u01e7\\u01e8\\u0007\",\r\n    \"q\\u0002\\u0002\\u01e8\\u01e9\\u0007v\\u0002\\u0002\\u01e9\\u01ea\\u0007c\\u0002\",\r\n    \"\\u0002\\u01ea\\u01eb\\u0007n\\u0002\\u0002\\u01eb<\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u01ec\\u01ed\\u0007r\\u0002\\u0002\\u01ed\\u01ee\\u0007g\\u0002\\u0002\\u01ee\",\r\n    \"\\u01ef\\u0007t\\u0002\\u0002\\u01ef\\u01f0\\u0007\\\"\\u0002\\u0002\\u01f0\\u01f1\",\r\n    \"\\u0007x\\u0002\\u0002\\u01f1\\u01f2\\u0007k\\u0002\\u0002\\u01f2\\u01f3\\u0007\",\r\n    \"g\\u0002\\u0002\\u01f3\\u01f4\\u0007y\\u0002\\u0002\\u01f4>\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u01f5\\u01f6\\u0007{\\u0002\\u0002\\u01f6\\u01f7\\u0007g\\u0002\\u0002\",\r\n    \"\\u01f7\\u01f8\\u0007c\\u0002\\u0002\\u01f8\\u01f9\\u0007t\\u0002\\u0002\\u01f9\",\r\n    \"@\\u0003\\u0002\\u0002\\u0002\\u01fa\\u01fb\\u0007y\\u0002\\u0002\\u01fb\\u01fc\",\r\n    \"\\u0007g\\u0002\\u0002\\u01fc\\u01fd\\u0007g\\u0002\\u0002\\u01fd\\u01fe\\u0007\",\r\n    \"m\\u0002\\u0002\\u01feB\\u0003\\u0002\\u0002\\u0002\\u01ff\\u0200\\u0007e\\u0002\",\r\n    \"\\u0002\\u0200\\u0201\\u0007{\\u0002\\u0002\\u0201\\u0202\\u0007e\\u0002\\u0002\",\r\n    \"\\u0202\\u0203\\u0007n\\u0002\\u0002\\u0203\\u0204\\u0007g\\u0002\\u0002\\u0204\",\r\n    \"D\\u0003\\u0002\\u0002\\u0002\\u0205\\u0206\\u0007H\\u0002\\u0002\\u0206\\u0207\",\r\n    \"\\u0007q\\u0002\\u0002\\u0207\\u0208\\u0007t\\u0002\\u0002\\u0208F\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0209\\u020a\\u0007w\\u0002\\u0002\\u020a\\u020b\\u0007u\\u0002\",\r\n    \"\\u0002\\u020b\\u020c\\u0007g\\u0002\\u0002\\u020c\\u020d\\u0007t\\u0002\\u0002\",\r\n    \"\\u020d\\u020e\\u0007i\\u0002\\u0002\\u020e\\u020f\\u0007t\\u0002\\u0002\\u020f\",\r\n    \"\\u0210\\u0007q\\u0002\\u0002\\u0210\\u0211\\u0007w\\u0002\\u0002\\u0211\\u0212\",\r\n    \"\\u0007r\\u0002\\u0002\\u0212\\u0213\\u0007u\\u0002\\u0002\\u0213H\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0214\\u0215\\u0007w\\u0002\\u0002\\u0215\\u0216\\u0007u\\u0002\",\r\n    \"\\u0002\\u0216\\u0217\\u0007g\\u0002\\u0002\\u0217\\u0218\\u0007t\\u0002\\u0002\",\r\n    \"\\u0218\\u0219\\u0007u\\u0002\\u0002\\u0219J\\u0003\\u0002\\u0002\\u0002\\u021a\",\r\n    \"\\u021b\\u0007r\\u0002\\u0002\\u021b\\u021c\\u0007t\\u0002\\u0002\\u021c\\u021d\",\r\n    \"\\u0007q\\u0002\\u0002\\u021d\\u021e\\u0007e\\u0002\\u0002\\u021e\\u021f\\u0007\",\r\n    \"g\\u0002\\u0002\\u021f\\u0220\\u0007g\\u0002\\u0002\\u0220\\u0221\\u0007f\\u0002\",\r\n    \"\\u0002\\u0221L\\u0003\\u0002\\u0002\\u0002\\u0222\\u0223\\u0007v\\u0002\\u0002\",\r\n    \"\\u0223\\u0224\\u0007q\\u0002\\u0002\\u0224N\\u0003\\u0002\\u0002\\u0002\\u0225\",\r\n    \"\\u0226\\u0007k\\u0002\\u0002\\u0226\\u0227\\u0007p\\u0002\\u0002\\u0227P\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0228\\u0229\\u0007q\\u0002\\u0002\\u0229\\u022a\\u0007\",\r\n    \"p\\u0002\\u0002\\u022aR\\u0003\\u0002\\u0002\\u0002\\u022b\\u022c\\u0007c\\u0002\",\r\n    \"\\u0002\\u022c\\u022d\\u0007e\\u0002\\u0002\\u022d\\u022e\\u0007e\\u0002\\u0002\",\r\n    \"\\u022e\\u022f\\u0007g\\u0002\\u0002\\u022f\\u0230\\u0007r\\u0002\\u0002\\u0230\",\r\n    \"\\u0231\\u0007v\\u0002\\u0002\\u0231\\u0232\\u0007k\\u0002\\u0002\\u0232\\u0233\",\r\n    \"\\u0007p\\u0002\\u0002\\u0233\\u0234\\u0007i\\u0002\\u0002\\u0234T\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0235\\u0236\\u0007u\\u0002\\u0002\\u0236\\u0237\\u0007g\\u0002\",\r\n    \"\\u0002\\u0237\\u0238\\u0007n\\u0002\\u0002\\u0238\\u023e\\u0007h\\u0002\\u0002\",\r\n    \"\\u0239\\u023a\\u0007U\\u0002\\u0002\\u023a\\u023b\\u0007G\\u0002\\u0002\\u023b\",\r\n    \"\\u023c\\u0007N\\u0002\\u0002\\u023c\\u023e\\u0007H\\u0002\\u0002\\u023d\\u0235\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u023d\\u0239\\u0003\\u0002\\u0002\\u0002\\u023eV\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u023f\\u0240\\u0007n\\u0002\\u0002\\u0240\\u0241\",\r\n    \"\\u0007k\\u0002\\u0002\\u0241\\u0242\\u0007e\\u0002\\u0002\\u0242\\u0243\\u0007\",\r\n    \"g\\u0002\\u0002\\u0243\\u0244\\u0007p\\u0002\\u0002\\u0244\\u0245\\u0007u\\u0002\",\r\n    \"\\u0002\\u0245\\u0246\\u0007g\\u0002\\u0002\\u0246X\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0247\\u0248\\u0007r\\u0002\\u0002\\u0248\\u0249\\u0007c\\u0002\\u0002\\u0249\",\r\n    \"\\u024a\\u0007{\\u0002\\u0002\\u024a\\u024b\\u0007k\\u0002\\u0002\\u024b\\u024c\",\r\n    \"\\u0007p\\u0002\\u0002\\u024c\\u024d\\u0007i\\u0002\\u0002\\u024dZ\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u024e\\u024f\\u0007r\\u0002\\u0002\\u024f\\u0250\\u0007g\\u0002\",\r\n    \"\\u0002\\u0250\\u0251\\u0007t\\u0002\\u0002\\u0251\\\\\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0252\\u0253\\u0007x\\u0002\\u0002\\u0253\\u0254\\u0007k\\u0002\\u0002\\u0254\",\r\n    \"\\u0255\\u0007g\\u0002\\u0002\\u0255\\u0256\\u0007y\\u0002\\u0002\\u0256^\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0257\\u0258\\u0007t\\u0002\\u0002\\u0258\\u0259\\u0007\",\r\n    \"g\\u0002\\u0002\\u0259\\u025a\\u0007s\\u0002\\u0002\\u025a\\u025b\\u0007w\\u0002\",\r\n    \"\\u0002\\u025b\\u025c\\u0007k\\u0002\\u0002\\u025c\\u025d\\u0007t\\u0002\\u0002\",\r\n    \"\\u025d\\u025e\\u0007g\\u0002\\u0002\\u025e`\\u0003\\u0002\\u0002\\u0002\\u025f\",\r\n    \"\\u0260\\u0007p\\u0002\\u0002\\u0260\\u0261\\u0007q\\u0002\\u0002\\u0261\\u0262\",\r\n    \"\\u0007v\\u0002\\u0002\\u0262\\u0263\\u0007j\\u0002\\u0002\\u0263\\u0264\\u0007\",\r\n    \"k\\u0002\\u0002\\u0264\\u0265\\u0007p\\u0002\\u0002\\u0265\\u0266\\u0007i\\u0002\",\r\n    \"\\u0002\\u0266b\\u0003\\u0002\\u0002\\u0002\\u0267\\u0269\\t\\u0002\\u0002\\u0002\",\r\n    \"\\u0268\\u0267\\u0003\\u0002\\u0002\\u0002\\u0269\\u026a\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u026a\\u0268\\u0003\\u0002\\u0002\\u0002\\u026a\\u026b\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u026bd\\u0003\\u0002\\u0002\\u0002\\u026c\\u026e\\t\\u0003\\u0002\\u0002\\u026d\",\r\n    \"\\u026c\\u0003\\u0002\\u0002\\u0002\\u026e\\u026f\\u0003\\u0002\\u0002\\u0002\\u026f\",\r\n    \"\\u026d\\u0003\\u0002\\u0002\\u0002\\u026f\\u0270\\u0003\\u0002\\u0002\\u0002\\u0270\",\r\n    \"f\\u0003\\u0002\\u0002\\u0002\\u0271\\u0273\\t\\u0004\\u0002\\u0002\\u0272\\u0271\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0273\\u0274\\u0003\\u0002\\u0002\\u0002\\u0274\\u0272\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0274\\u0275\\u0003\\u0002\\u0002\\u0002\\u0275h\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0276\\u0278\\t\\u0005\\u0002\\u0002\\u0277\\u0276\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0278\\u0279\\u0003\\u0002\\u0002\\u0002\\u0279\\u0277\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0279\\u027a\\u0003\\u0002\\u0002\\u0002\\u027a\\u027b\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u027b\\u027c\\b5\\u0002\\u0002\\u027cj\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u027d\\u027e\\u0005e3\\u0002\\u027e\\u027f\\u0007/\\u0002\\u0002\",\r\n    \"\\u027f\\u0280\\u0005e3\\u0002\\u0280\\u0281\\u0007/\\u0002\\u0002\\u0281\\u0282\",\r\n    \"\\u0005e3\\u0002\\u0282l\\u0003\\u0002\\u0002\\u0002\\t\\u0002\\u023d\\u0268\\u026a\",\r\n    \"\\u026f\\u0274\\u0279\\u0003\\b\\u0002\\u0002\"].join(\"\");\r\n\r\n\r\nvar atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);\r\n\r\nvar decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });\r\n\r\nfunction policyLexer(input) {\r\n\tantlr4.Lexer.call(this, input);\r\n    this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());\r\n    return this;\r\n}\r\n\r\npolicyLexer.prototype = Object.create(antlr4.Lexer.prototype);\r\npolicyLexer.prototype.constructor = policyLexer;\r\n\r\npolicyLexer.EOF = antlr4.Token.EOF;\r\npolicyLexer.T__0 = 1;\r\npolicyLexer.T__1 = 2;\r\npolicyLexer.T__2 = 3;\r\npolicyLexer.T__3 = 4;\r\npolicyLexer.T__4 = 5;\r\npolicyLexer.T__5 = 6;\r\npolicyLexer.T__6 = 7;\r\npolicyLexer.T__7 = 8;\r\npolicyLexer.T__8 = 9;\r\npolicyLexer.T__9 = 10;\r\npolicyLexer.T__10 = 11;\r\npolicyLexer.T__11 = 12;\r\npolicyLexer.T__12 = 13;\r\npolicyLexer.T__13 = 14;\r\npolicyLexer.T__14 = 15;\r\npolicyLexer.T__15 = 16;\r\npolicyLexer.T__16 = 17;\r\npolicyLexer.T__17 = 18;\r\npolicyLexer.T__18 = 19;\r\npolicyLexer.T__19 = 20;\r\npolicyLexer.T__20 = 21;\r\npolicyLexer.T__21 = 22;\r\npolicyLexer.T__22 = 23;\r\npolicyLexer.T__23 = 24;\r\npolicyLexer.T__24 = 25;\r\npolicyLexer.T__25 = 26;\r\npolicyLexer.T__26 = 27;\r\npolicyLexer.T__27 = 28;\r\npolicyLexer.T__28 = 29;\r\npolicyLexer.T__29 = 30;\r\npolicyLexer.T__30 = 31;\r\npolicyLexer.T__31 = 32;\r\npolicyLexer.T__32 = 33;\r\npolicyLexer.FOR = 34;\r\npolicyLexer.USERGROUPS = 35;\r\npolicyLexer.USERS = 36;\r\npolicyLexer.PROCEED = 37;\r\npolicyLexer.TO = 38;\r\npolicyLexer.IN = 39;\r\npolicyLexer.ON = 40;\r\npolicyLexer.ACCEPTING = 41;\r\npolicyLexer.SELF = 42;\r\npolicyLexer.LICENSE = 43;\r\npolicyLexer.PAYING = 44;\r\npolicyLexer.PER = 45;\r\npolicyLexer.VIEW = 46;\r\npolicyLexer.REQUIRE = 47;\r\npolicyLexer.NOTHING = 48;\r\npolicyLexer.ID = 49;\r\npolicyLexer.INT = 50;\r\npolicyLexer.FEATHERACCOUNT = 51;\r\npolicyLexer.WS = 52;\r\npolicyLexer.DATE = 53;\r\n\r\npolicyLexer.prototype.channelNames = [ \"DEFAULT_TOKEN_CHANNEL\", \"HIDDEN\" ];\r\n\r\npolicyLexer.prototype.modeNames = [ \"DEFAULT_MODE\" ];\r\n\r\npolicyLexer.prototype.literalNames = [ null, \"'in the following states:'\", \r\n                                       \"'I agree to authorize token in'\", \r\n                                       \"','\", \"'users in'\", \"':'\", \"'and on'\", \r\n                                       \"'the end of'\", \"'date'\", \"'after contract creation'\", \r\n                                       \"'price priceExpression'\", \"'transaction of'\", \r\n                                       \"'contract_guaranty of'\", \"'refund after'\", \r\n                                       \"'day'\", \"'platform_guaranty of'\", \r\n                                       \"'visit_increment of'\", \"'visit of'\", \r\n                                       \"'account_balance greater than'\", \r\n                                       \"'account_balance smaller than'\", \r\n                                       \"'account_settled'\", \"'.'\", \"'@'\", \r\n                                       \"'_'\", \"'RegisteredUser'\", \"'LoginUser'\", \r\n                                       \"'AllVisiter'\", \"'RegisteredNode'\", \r\n                                       \"'and'\", \"'in total'\", \"'per view'\", \r\n                                       \"'year'\", \"'week'\", \"'cycle'\", \"'For'\", \r\n                                       \"'usergroups'\", \"'users'\", \"'proceed'\", \r\n                                       \"'to'\", \"'in'\", \"'on'\", \"'accepting'\", \r\n                                       null, \"'license'\", \"'paying'\", \"'per'\", \r\n                                       \"'view'\", \"'require'\", \"'nothing'\" ];\r\n\r\npolicyLexer.prototype.symbolicNames = [ null, null, null, null, null, null, \r\n                                        null, null, null, null, null, null, \r\n                                        null, null, null, null, null, null, \r\n                                        null, null, null, null, null, null, \r\n                                        null, null, null, null, null, null, \r\n                                        null, null, null, null, \"FOR\", \"USERGROUPS\", \r\n                                        \"USERS\", \"PROCEED\", \"TO\", \"IN\", \r\n                                        \"ON\", \"ACCEPTING\", \"SELF\", \"LICENSE\", \r\n                                        \"PAYING\", \"PER\", \"VIEW\", \"REQUIRE\", \r\n                                        \"NOTHING\", \"ID\", \"INT\", \"FEATHERACCOUNT\", \r\n                                        \"WS\", \"DATE\" ];\r\n\r\npolicyLexer.prototype.ruleNames = [ \"T__0\", \"T__1\", \"T__2\", \"T__3\", \"T__4\", \r\n                                    \"T__5\", \"T__6\", \"T__7\", \"T__8\", \"T__9\", \r\n                                    \"T__10\", \"T__11\", \"T__12\", \"T__13\", \r\n                                    \"T__14\", \"T__15\", \"T__16\", \"T__17\", \r\n                                    \"T__18\", \"T__19\", \"T__20\", \"T__21\", \r\n                                    \"T__22\", \"T__23\", \"T__24\", \"T__25\", \r\n                                    \"T__26\", \"T__27\", \"T__28\", \"T__29\", \r\n                                    \"T__30\", \"T__31\", \"T__32\", \"FOR\", \"USERGROUPS\", \r\n                                    \"USERS\", \"PROCEED\", \"TO\", \"IN\", \"ON\", \r\n                                    \"ACCEPTING\", \"SELF\", \"LICENSE\", \"PAYING\", \r\n                                    \"PER\", \"VIEW\", \"REQUIRE\", \"NOTHING\", \r\n                                    \"ID\", \"INT\", \"FEATHERACCOUNT\", \"WS\", \r\n                                    \"DATE\" ];\r\n\r\npolicyLexer.prototype.grammarFileName = \"policy.g4\";\r\n\r\n\r\n\r\nexports.policyLexer = policyLexer;\r\n\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/policy_lang/gen/policyLexer.js\n// module id = ucRY\n// module chunks = 0 1 2","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar policyListener = require('presentable_policy_lang').policyListener;\nvar _ = require('underscore');\nvar indentLevel = 2;\n\nvar Beautify = function (_policyListener) {\n  _inherits(Beautify, _policyListener);\n\n  function Beautify() {\n    _classCallCheck(this, Beautify);\n\n    var _this = _possibleConstructorReturn(this, (Beautify.__proto__ || Object.getPrototypeOf(Beautify)).call(this));\n\n    _this.errorMsg = null;\n    _this.stringArray = [];\n    _this._nextIndent = ' ';\n    return _this;\n  }\n\n  _createClass(Beautify, [{\n    key: 'addIndent',\n    value: function addIndent() {\n      var _this2 = this;\n\n      _.each(_.range(indentLevel), function () {\n        _this2._nextIndent += \" \";\n      });\n    }\n  }, {\n    key: 'deleteIndent',\n    value: function deleteIndent() {\n      this._nextIndent = this._nextIndent.slice(0, Number('-' + indentLevel));\n    }\n  }, {\n    key: 'enterSegment',\n    value: function enterSegment(ctx) {\n      this.stringArray.push('\\n');\n      this.stringArray.push('For');\n    }\n  }, {\n    key: 'exitSegment',\n    value: function exitSegment(ctx) {\n      this.deleteIndent();\n    }\n  }, {\n    key: 'enterAudience_clause',\n    value: function enterAudience_clause(ctx) {\n      _.map(ctx.children, function (child) {\n        // this.stringArray.push(child.getText());\n        // console.log(child.getText());\n      });\n    }\n  }, {\n    key: 'exitAudience_clause',\n    value: function exitAudience_clause(ctx) {\n      this.stringArray.push('in the following states:');\n      this.addIndent();\n      this.stringArray.push(this._nextIndent);\n    }\n  }, {\n    key: 'enterState_clause',\n    value: function enterState_clause(ctx) {\n      this.stringArray.push('\\n');\n      this.stringArray.push(this._nextIndent);\n    }\n  }, {\n    key: 'enterCurrent_state_clause',\n    value: function enterCurrent_state_clause(ctx) {\n      var _this3 = this;\n\n      _.map(ctx.children, function (child) {\n        _this3.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterTarget_clause',\n    value: function enterTarget_clause(ctx) {\n      this.stringArray.push('\\n');\n      this.addIndent();\n      this.stringArray.push(this._nextIndent);\n      this.stringArray = this.stringArray.concat(['proceed to', ctx.ID().getText(), 'on']);\n    }\n  }, {\n    key: 'exitTarget_clause',\n    value: function exitTarget_clause() {\n      this.deleteIndent();\n    }\n  }, {\n    key: 'enterAccepting',\n    value: function enterAccepting(ctx) {\n      this.stringArray.push('accepting');\n    }\n  }, {\n    key: 'enterAnd_event',\n    value: function enterAnd_event(ctx) {\n      this.stringArray.push('and on');\n    }\n  }, {\n    key: 'enterPeriod_event',\n    value: function enterPeriod_event(ctx) {\n      var _this4 = this;\n\n      _.map(ctx.children, function (child) {\n        _this4.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterSpecific_date_event',\n    value: function enterSpecific_date_event(ctx) {\n      var _this5 = this;\n\n      _.map(ctx.children, function (child) {\n        _this5.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterRelative_date_event',\n    value: function enterRelative_date_event(ctx) {\n      var _this6 = this;\n\n      _.map(ctx.children, function (child) {\n        _this6.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterPricing_agreement_event',\n    value: function enterPricing_agreement_event(ctx) {\n      var _this7 = this;\n\n      _.map(ctx.children, function (child) {\n        _this7.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterTransaction_event',\n    value: function enterTransaction_event(ctx) {\n      var _this8 = this;\n\n      _.map(ctx.children, function (child) {\n        _this8.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterContract_guaranty',\n    value: function enterContract_guaranty(ctx) {\n      var _this9 = this;\n\n      _.map(ctx.children, function (child) {\n        _this9.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterPlatform_guaranty',\n    value: function enterPlatform_guaranty(ctx) {\n      var _this10 = this;\n\n      _.map(ctx.children, function (child) {\n        _this10.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterSigning_event',\n    value: function enterSigning_event(ctx) {\n      var _this11 = this;\n\n      _.map(ctx.children, function (child) {\n        _this11.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterSettlement_event',\n    value: function enterSettlement_event(ctx) {\n      var _this12 = this;\n\n      _.map(ctx.children, function (child) {\n        _this12.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterVisit_increment_event',\n    value: function enterVisit_increment_event(ctx) {\n      var _this13 = this;\n\n      _.map(ctx.children, function (child) {\n        _this13.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterVisit_event',\n    value: function enterVisit_event(ctx) {\n      var _this14 = this;\n\n      _.map(ctx.children, function (child) {\n        _this14.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterBalance_greater',\n    value: function enterBalance_greater(ctx) {\n      var _this15 = this;\n\n      _.map(ctx.children, function (child) {\n        _this15.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterBalance_smaller',\n    value: function enterBalance_smaller(ctx) {\n      var _this16 = this;\n\n      _.map(ctx.children, function (child) {\n        _this16.stringArray.push(child.getText());\n      });\n    }\n  }, {\n    key: 'enterUsers',\n    value: function enterUsers(ctx) {\n      for (var i = 0; i < ctx.getChildCount(); i++) {\n        this.stringArray.push(ctx.getChild(i).getText());\n      }\n    }\n  }, {\n    key: 'enterUser_groups',\n    value: function enterUser_groups(ctx) {\n      this.stringArray.push('users in');\n      for (var i = 0; i < ctx.getChildCount(); i++) {\n        this.stringArray.push(ctx.getChild(i).getText());\n      }\n    }\n  }, {\n    key: 'enterAthorize_token_clause',\n    value: function enterAthorize_token_clause(ctx) {\n      var _this17 = this;\n\n      this.stringArray.push('\\n');\n      this.stringArray.push(this._nextIndent);\n      _.map(ctx.children, function (child) {\n        _this17.stringArray.push(child.getText());\n      });\n    }\n  }]);\n\n  return Beautify;\n}(policyListener);\n\n;\n\nmodule.exports = Beautify;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/presentable_policy_compiler/BeautifyExtension.js\n// module id = uruK\n// module chunks = 2","module.exports = { \"default\": require(\"core-js/library/fn/is-iterable\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/is-iterable.js\n// module id = us/S\n// module chunks = 0 2","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-09f5c69c\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../../node_modules/less-loader/dist/cjs.js?{\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"f4e22d62\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/vue-style-loader!./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-09f5c69c\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/less-loader/dist/cjs.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/views/node/presentable/tags/index.vue\n// module id = wADU\n// module chunks = 2","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n//\n// Specialized {@link Set}{@code <}{@link ATNConfig}{@code >} that can track\n// info about the set, with support for combining similar configurations using a\n// graph-structured stack.\n///\n\nvar ATN = require('./ATN').ATN;\nvar Utils = require('./../Utils');\nvar Hash = Utils.Hash;\nvar Set = Utils.Set;\nvar SemanticContext = require('./SemanticContext').SemanticContext;\nvar merge = require('./../PredictionContext').merge;\n\nfunction hashATNConfig(c) {\n\treturn c.hashCodeForConfigSet();\n}\n\nfunction equalATNConfigs(a, b) {\n\tif ( a===b ) {\n\t\treturn true;\n\t} else if ( a===null || b===null ) {\n\t\treturn false;\n\t} else\n       return a.equalsForConfigSet(b);\n }\n\n\nfunction ATNConfigSet(fullCtx) {\n\t//\n\t// The reason that we need this is because we don't want the hash map to use\n\t// the standard hash code and equals. We need all configurations with the\n\t// same\n\t// {@code (s,i,_,semctx)} to be equal. Unfortunately, this key effectively\n\t// doubles\n\t// the number of objects associated with ATNConfigs. The other solution is\n\t// to\n\t// use a hash table that lets us specify the equals/hashcode operation.\n\t// All configs but hashed by (s, i, _, pi) not including context. Wiped out\n\t// when we go readonly as this set becomes a DFA state.\n\tthis.configLookup = new Set(hashATNConfig, equalATNConfigs);\n\t// Indicates that this configuration set is part of a full context\n\t// LL prediction. It will be used to determine how to merge $. With SLL\n\t// it's a wildcard whereas it is not for LL context merge.\n\tthis.fullCtx = fullCtx === undefined ? true : fullCtx;\n\t// Indicates that the set of configurations is read-only. Do not\n\t// allow any code to manipulate the set; DFA states will point at\n\t// the sets and they must not change. This does not protect the other\n\t// fields; in particular, conflictingAlts is set after\n\t// we've made this readonly.\n\tthis.readOnly = false;\n\t// Track the elements as they are added to the set; supports get(i)///\n\tthis.configs = [];\n\n\t// TODO: these fields make me pretty uncomfortable but nice to pack up info\n\t// together, saves recomputation\n\t// TODO: can we track conflicts as they are added to save scanning configs\n\t// later?\n\tthis.uniqueAlt = 0;\n\tthis.conflictingAlts = null;\n\n\t// Used in parser and lexer. In lexer, it indicates we hit a pred\n\t// while computing a closure operation. Don't make a DFA state from this.\n\tthis.hasSemanticContext = false;\n\tthis.dipsIntoOuterContext = false;\n\n\tthis.cachedHashCode = -1;\n\n\treturn this;\n}\n\n// Adding a new config means merging contexts with existing configs for\n// {@code (s, i, pi, _)}, where {@code s} is the\n// {@link ATNConfig//state}, {@code i} is the {@link ATNConfig//alt}, and\n// {@code pi} is the {@link ATNConfig//semanticContext}. We use\n// {@code (s,i,pi)} as key.\n//\n// <p>This method updates {@link //dipsIntoOuterContext} and\n// {@link //hasSemanticContext} when necessary.</p>\n// /\nATNConfigSet.prototype.add = function(config, mergeCache) {\n\tif (mergeCache === undefined) {\n\t\tmergeCache = null;\n\t}\n\tif (this.readOnly) {\n\t\tthrow \"This set is readonly\";\n\t}\n\tif (config.semanticContext !== SemanticContext.NONE) {\n\t\tthis.hasSemanticContext = true;\n\t}\n\tif (config.reachesIntoOuterContext > 0) {\n\t\tthis.dipsIntoOuterContext = true;\n\t}\n\tvar existing = this.configLookup.add(config);\n\tif (existing === config) {\n\t\tthis.cachedHashCode = -1;\n\t\tthis.configs.push(config); // track order here\n\t\treturn true;\n\t}\n\t// a previous (s,i,pi,_), merge with it and save result\n\tvar rootIsWildcard = !this.fullCtx;\n\tvar merged = merge(existing.context, config.context, rootIsWildcard, mergeCache);\n\t// no need to check for existing.context, config.context in cache\n\t// since only way to create new graphs is \"call rule\" and here. We\n\t// cache at both places.\n\texisting.reachesIntoOuterContext = Math.max( existing.reachesIntoOuterContext, config.reachesIntoOuterContext);\n\t// make sure to preserve the precedence filter suppression during the merge\n\tif (config.precedenceFilterSuppressed) {\n\t\texisting.precedenceFilterSuppressed = true;\n\t}\n\texisting.context = merged; // replace context; no need to alt mapping\n\treturn true;\n};\n\nATNConfigSet.prototype.getStates = function() {\n\tvar states = new Set();\n\tfor (var i = 0; i < this.configs.length; i++) {\n\t\tstates.add(this.configs[i].state);\n\t}\n\treturn states;\n};\n\nATNConfigSet.prototype.getPredicates = function() {\n\tvar preds = [];\n\tfor (var i = 0; i < this.configs.length; i++) {\n\t\tvar c = this.configs[i].semanticContext;\n\t\tif (c !== SemanticContext.NONE) {\n\t\t\tpreds.push(c.semanticContext);\n\t\t}\n\t}\n\treturn preds;\n};\n\nObject.defineProperty(ATNConfigSet.prototype, \"items\", {\n\tget : function() {\n\t\treturn this.configs;\n\t}\n});\n\nATNConfigSet.prototype.optimizeConfigs = function(interpreter) {\n\tif (this.readOnly) {\n\t\tthrow \"This set is readonly\";\n\t}\n\tif (this.configLookup.length === 0) {\n\t\treturn;\n\t}\n\tfor (var i = 0; i < this.configs.length; i++) {\n\t\tvar config = this.configs[i];\n\t\tconfig.context = interpreter.getCachedContext(config.context);\n\t}\n};\n\nATNConfigSet.prototype.addAll = function(coll) {\n\tfor (var i = 0; i < coll.length; i++) {\n\t\tthis.add(coll[i]);\n\t}\n\treturn false;\n};\n\nATNConfigSet.prototype.equals = function(other) {\n\treturn this === other ||\n\t\t(other instanceof ATNConfigSet &&\n\t\tUtils.equalArrays(this.configs, other.configs) &&\n\t\tthis.fullCtx === other.fullCtx &&\n\t\tthis.uniqueAlt === other.uniqueAlt &&\n\t\tthis.conflictingAlts === other.conflictingAlts &&\n\t\tthis.hasSemanticContext === other.hasSemanticContext &&\n\t\tthis.dipsIntoOuterContext === other.dipsIntoOuterContext);\n};\n\nATNConfigSet.prototype.hashCode = function() {\n    var hash = new Hash();\n    this.updateHashCode(hash);\n    return hash.finish();\n};\n\n\nATNConfigSet.prototype.updateHashCode = function(hash) {\n\tif (this.readOnly) {\n\t\tif (this.cachedHashCode === -1) {\n            var hash = new Hash();\n            hash.update(this.configs);\n\t\t\tthis.cachedHashCode = hash.finish();\n\t\t}\n        hash.update(this.cachedHashCode);\n\t} else {\n        hash.update(this.configs);\n\t}\n};\n\n\nObject.defineProperty(ATNConfigSet.prototype, \"length\", {\n\tget : function() {\n\t\treturn this.configs.length;\n\t}\n});\n\nATNConfigSet.prototype.isEmpty = function() {\n\treturn this.configs.length === 0;\n};\n\nATNConfigSet.prototype.contains = function(item) {\n\tif (this.configLookup === null) {\n\t\tthrow \"This method is not implemented for readonly sets.\";\n\t}\n\treturn this.configLookup.contains(item);\n};\n\nATNConfigSet.prototype.containsFast = function(item) {\n\tif (this.configLookup === null) {\n\t\tthrow \"This method is not implemented for readonly sets.\";\n\t}\n\treturn this.configLookup.containsFast(item);\n};\n\nATNConfigSet.prototype.clear = function() {\n\tif (this.readOnly) {\n\t\tthrow \"This set is readonly\";\n\t}\n\tthis.configs = [];\n\tthis.cachedHashCode = -1;\n\tthis.configLookup = new Set();\n};\n\nATNConfigSet.prototype.setReadonly = function(readOnly) {\n\tthis.readOnly = readOnly;\n\tif (readOnly) {\n\t\tthis.configLookup = null; // can't mod, no need for lookup cache\n\t}\n};\n\nATNConfigSet.prototype.toString = function() {\n\treturn Utils.arrayToString(this.configs) +\n\t\t(this.hasSemanticContext ? \",hasSemanticContext=\" + this.hasSemanticContext : \"\") +\n\t\t(this.uniqueAlt !== ATN.INVALID_ALT_NUMBER ? \",uniqueAlt=\" + this.uniqueAlt : \"\") +\n\t\t(this.conflictingAlts !== null ? \",conflictingAlts=\" + this.conflictingAlts : \"\") +\n\t\t(this.dipsIntoOuterContext ? \",dipsIntoOuterContext\" : \"\");\n};\n\nfunction OrderedATNConfigSet() {\n\tATNConfigSet.call(this);\n\tthis.configLookup = new Set();\n\treturn this;\n}\n\nOrderedATNConfigSet.prototype = Object.create(ATNConfigSet.prototype);\nOrderedATNConfigSet.prototype.constructor = OrderedATNConfigSet;\n\nexports.ATNConfigSet = ATNConfigSet;\nexports.OrderedATNConfigSet = OrderedATNConfigSet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/atn/ATNConfigSet.js\n// module id = wMEt\n// module chunks = 0 1 2","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\n// A tree structure used to record the semantic context in which\n//  an ATN configuration is valid.  It's either a single predicate,\n//  a conjunction {@code p1&&p2}, or a sum of products {@code p1||p2}.\n//\n//  <p>I have scoped the {@link AND}, {@link OR}, and {@link Predicate} subclasses of\n//  {@link SemanticContext} within the scope of this outer class.</p>\n//\n\nvar Set = require('./../Utils').Set;\nvar Hash = require('./../Utils').Hash;\n\nfunction SemanticContext() {\n\treturn this;\n}\n\nSemanticContext.prototype.hashCode = function() {\n    var hash = new Hash();\n    this.updateHashCode(hash);\n    return hash.finish();\n};\n\n// For context independent predicates, we evaluate them without a local\n// context (i.e., null context). That way, we can evaluate them without\n// having to create proper rule-specific context during prediction (as\n// opposed to the parser, which creates them naturally). In a practical\n// sense, this avoids a cast exception from RuleContext to myruleContext.\n//\n// <p>For context dependent predicates, we must pass in a local context so that\n// references such as $arg evaluate properly as _localctx.arg. We only\n// capture context dependent predicates in the context in which we begin\n// prediction, so we passed in the outer context here in case of context\n// dependent predicate evaluation.</p>\n//\nSemanticContext.prototype.evaluate = function(parser, outerContext) {\n};\n\n//\n// Evaluate the precedence predicates for the context and reduce the result.\n//\n// @param parser The parser instance.\n// @param outerContext The current parser context object.\n// @return The simplified semantic context after precedence predicates are\n// evaluated, which will be one of the following values.\n// <ul>\n// <li>{@link //NONE}: if the predicate simplifies to {@code true} after\n// precedence predicates are evaluated.</li>\n// <li>{@code null}: if the predicate simplifies to {@code false} after\n// precedence predicates are evaluated.</li>\n// <li>{@code this}: if the semantic context is not changed as a result of\n// precedence predicate evaluation.</li>\n// <li>A non-{@code null} {@link SemanticContext}: the new simplified\n// semantic context after precedence predicates are evaluated.</li>\n// </ul>\n//\nSemanticContext.prototype.evalPrecedence = function(parser, outerContext) {\n\treturn this;\n};\n\nSemanticContext.andContext = function(a, b) {\n\tif (a === null || a === SemanticContext.NONE) {\n\t\treturn b;\n\t}\n\tif (b === null || b === SemanticContext.NONE) {\n\t\treturn a;\n\t}\n\tvar result = new AND(a, b);\n\tif (result.opnds.length === 1) {\n\t\treturn result.opnds[0];\n\t} else {\n\t\treturn result;\n\t}\n};\n\nSemanticContext.orContext = function(a, b) {\n\tif (a === null) {\n\t\treturn b;\n\t}\n\tif (b === null) {\n\t\treturn a;\n\t}\n\tif (a === SemanticContext.NONE || b === SemanticContext.NONE) {\n\t\treturn SemanticContext.NONE;\n\t}\n\tvar result = new OR(a, b);\n\tif (result.opnds.length === 1) {\n\t\treturn result.opnds[0];\n\t} else {\n\t\treturn result;\n\t}\n};\n\nfunction Predicate(ruleIndex, predIndex, isCtxDependent) {\n\tSemanticContext.call(this);\n\tthis.ruleIndex = ruleIndex === undefined ? -1 : ruleIndex;\n\tthis.predIndex = predIndex === undefined ? -1 : predIndex;\n\tthis.isCtxDependent = isCtxDependent === undefined ? false : isCtxDependent; // e.g., $i ref in pred\n\treturn this;\n}\n\nPredicate.prototype = Object.create(SemanticContext.prototype);\nPredicate.prototype.constructor = Predicate;\n\n//The default {@link SemanticContext}, which is semantically equivalent to\n//a predicate of the form {@code {true}?}.\n//\nSemanticContext.NONE = new Predicate();\n\n\nPredicate.prototype.evaluate = function(parser, outerContext) {\n\tvar localctx = this.isCtxDependent ? outerContext : null;\n\treturn parser.sempred(localctx, this.ruleIndex, this.predIndex);\n};\n\nPredicate.prototype.updateHashCode = function(hash) {\n\thash.update(this.ruleIndex, this.predIndex, this.isCtxDependent);\n};\n\nPredicate.prototype.equals = function(other) {\n\tif (this === other) {\n\t\treturn true;\n\t} else if (!(other instanceof Predicate)) {\n\t\treturn false;\n\t} else {\n\t\treturn this.ruleIndex === other.ruleIndex &&\n\t\t\t\tthis.predIndex === other.predIndex &&\n\t\t\t\tthis.isCtxDependent === other.isCtxDependent;\n\t}\n};\n\nPredicate.prototype.toString = function() {\n\treturn \"{\" + this.ruleIndex + \":\" + this.predIndex + \"}?\";\n};\n\nfunction PrecedencePredicate(precedence) {\n\tSemanticContext.call(this);\n\tthis.precedence = precedence === undefined ? 0 : precedence;\n}\n\nPrecedencePredicate.prototype = Object.create(SemanticContext.prototype);\nPrecedencePredicate.prototype.constructor = PrecedencePredicate;\n\nPrecedencePredicate.prototype.evaluate = function(parser, outerContext) {\n\treturn parser.precpred(outerContext, this.precedence);\n};\n\nPrecedencePredicate.prototype.evalPrecedence = function(parser, outerContext) {\n\tif (parser.precpred(outerContext, this.precedence)) {\n\t\treturn SemanticContext.NONE;\n\t} else {\n\t\treturn null;\n\t}\n};\n\nPrecedencePredicate.prototype.compareTo = function(other) {\n\treturn this.precedence - other.precedence;\n};\n\nPrecedencePredicate.prototype.updateHashCode = function(hash) {\n    hash.update(31);\n};\n\nPrecedencePredicate.prototype.equals = function(other) {\n\tif (this === other) {\n\t\treturn true;\n\t} else if (!(other instanceof PrecedencePredicate)) {\n\t\treturn false;\n\t} else {\n\t\treturn this.precedence === other.precedence;\n\t}\n};\n\nPrecedencePredicate.prototype.toString = function() {\n\treturn \"{\"+this.precedence+\">=prec}?\";\n};\n\n\n\nPrecedencePredicate.filterPrecedencePredicates = function(set) {\n\tvar result = [];\n\tset.values().map( function(context) {\n\t\tif (context instanceof PrecedencePredicate) {\n\t\t\tresult.push(context);\n\t\t}\n\t});\n\treturn result;\n};\n\n\n// A semantic context which is true whenever none of the contained contexts\n// is false.\n//\nfunction AND(a, b) {\n\tSemanticContext.call(this);\n\tvar operands = new Set();\n\tif (a instanceof AND) {\n\t\ta.opnds.map(function(o) {\n\t\t\toperands.add(o);\n\t\t});\n\t} else {\n\t\toperands.add(a);\n\t}\n\tif (b instanceof AND) {\n\t\tb.opnds.map(function(o) {\n\t\t\toperands.add(o);\n\t\t});\n\t} else {\n\t\toperands.add(b);\n\t}\n\tvar precedencePredicates = PrecedencePredicate.filterPrecedencePredicates(operands);\n\tif (precedencePredicates.length > 0) {\n\t\t// interested in the transition with the lowest precedence\n\t\tvar reduced = null;\n\t\tprecedencePredicates.map( function(p) {\n\t\t\tif(reduced===null || p.precedence<reduced.precedence) {\n\t\t\t\treduced = p;\n\t\t\t}\n\t\t});\n\t\toperands.add(reduced);\n\t}\n\tthis.opnds = operands.values();\n\treturn this;\n}\n\nAND.prototype = Object.create(SemanticContext.prototype);\nAND.prototype.constructor = AND;\n\nAND.prototype.equals = function(other) {\n\tif (this === other) {\n\t\treturn true;\n\t} else if (!(other instanceof AND)) {\n\t\treturn false;\n\t} else {\n\t\treturn this.opnds === other.opnds;\n\t}\n};\n\nAND.prototype.updateHashCode = function(hash) {\n    hash.update(this.opnds, \"AND\");\n};\n//\n// {@inheritDoc}\n//\n// <p>\n// The evaluation of predicates by this context is short-circuiting, but\n// unordered.</p>\n//\nAND.prototype.evaluate = function(parser, outerContext) {\n\tfor (var i = 0; i < this.opnds.length; i++) {\n\t\tif (!this.opnds[i].evaluate(parser, outerContext)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n};\n\nAND.prototype.evalPrecedence = function(parser, outerContext) {\n\tvar differs = false;\n\tvar operands = [];\n\tfor (var i = 0; i < this.opnds.length; i++) {\n\t\tvar context = this.opnds[i];\n\t\tvar evaluated = context.evalPrecedence(parser, outerContext);\n\t\tdiffers |= (evaluated !== context);\n\t\tif (evaluated === null) {\n\t\t\t// The AND context is false if any element is false\n\t\t\treturn null;\n\t\t} else if (evaluated !== SemanticContext.NONE) {\n\t\t\t// Reduce the result by skipping true elements\n\t\t\toperands.push(evaluated);\n\t\t}\n\t}\n\tif (!differs) {\n\t\treturn this;\n\t}\n\tif (operands.length === 0) {\n\t\t// all elements were true, so the AND context is true\n\t\treturn SemanticContext.NONE;\n\t}\n\tvar result = null;\n\toperands.map(function(o) {\n\t\tresult = result === null ? o : SemanticContext.andContext(result, o);\n\t});\n\treturn result;\n};\n\nAND.prototype.toString = function() {\n\tvar s = \"\";\n\tthis.opnds.map(function(o) {\n\t\ts += \"&& \" + o.toString();\n\t});\n\treturn s.length > 3 ? s.slice(3) : s;\n};\n\n//\n// A semantic context which is true whenever at least one of the contained\n// contexts is true.\n//\nfunction OR(a, b) {\n\tSemanticContext.call(this);\n\tvar operands = new Set();\n\tif (a instanceof OR) {\n\t\ta.opnds.map(function(o) {\n\t\t\toperands.add(o);\n\t\t});\n\t} else {\n\t\toperands.add(a);\n\t}\n\tif (b instanceof OR) {\n\t\tb.opnds.map(function(o) {\n\t\t\toperands.add(o);\n\t\t});\n\t} else {\n\t\toperands.add(b);\n\t}\n\n\tvar precedencePredicates = PrecedencePredicate.filterPrecedencePredicates(operands);\n\tif (precedencePredicates.length > 0) {\n\t\t// interested in the transition with the highest precedence\n\t\tvar s = precedencePredicates.sort(function(a, b) {\n\t\t\treturn a.compareTo(b);\n\t\t});\n\t\tvar reduced = s[s.length-1];\n\t\toperands.add(reduced);\n\t}\n\tthis.opnds = operands.values();\n\treturn this;\n}\n\nOR.prototype = Object.create(SemanticContext.prototype);\nOR.prototype.constructor = OR;\n\nOR.prototype.constructor = function(other) {\n\tif (this === other) {\n\t\treturn true;\n\t} else if (!(other instanceof OR)) {\n\t\treturn false;\n\t} else {\n\t\treturn this.opnds === other.opnds;\n\t}\n};\n\nOR.prototype.updateHashCode = function(hash) {\n    hash.update(this.opnds, \"OR\");\n};\n\n// <p>\n// The evaluation of predicates by this context is short-circuiting, but\n// unordered.</p>\n//\nOR.prototype.evaluate = function(parser, outerContext) {\n\tfor (var i = 0; i < this.opnds.length; i++) {\n\t\tif (this.opnds[i].evaluate(parser, outerContext)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n};\n\nOR.prototype.evalPrecedence = function(parser, outerContext) {\n\tvar differs = false;\n\tvar operands = [];\n\tfor (var i = 0; i < this.opnds.length; i++) {\n\t\tvar context = this.opnds[i];\n\t\tvar evaluated = context.evalPrecedence(parser, outerContext);\n\t\tdiffers |= (evaluated !== context);\n\t\tif (evaluated === SemanticContext.NONE) {\n\t\t\t// The OR context is true if any element is true\n\t\t\treturn SemanticContext.NONE;\n\t\t} else if (evaluated !== null) {\n\t\t\t// Reduce the result by skipping false elements\n\t\t\toperands.push(evaluated);\n\t\t}\n\t}\n\tif (!differs) {\n\t\treturn this;\n\t}\n\tif (operands.length === 0) {\n\t\t// all elements were false, so the OR context is false\n\t\treturn null;\n\t}\n\tvar result = null;\n\toperands.map(function(o) {\n\t\treturn result === null ? o : SemanticContext.orContext(result, o);\n\t});\n\treturn result;\n};\n\nOR.prototype.toString = function() {\n\tvar s = \"\";\n\tthis.opnds.map(function(o) {\n\t\ts += \"|| \" + o.toString();\n\t});\n\treturn s.length > 3 ? s.slice(3) : s;\n};\n\nexports.SemanticContext = SemanticContext;\nexports.PrecedencePredicate = PrecedencePredicate;\nexports.Predicate = Predicate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/atn/SemanticContext.js\n// module id = wQJ6\n// module chunks = 0 1 2","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".el-tag+.el-tag[data-v-09f5c69c]{margin-left:10px}.button-new-tag[data-v-09f5c69c]{margin-left:10px;height:32px;line-height:30px;padding-top:0;padding-bottom:0}.input-new-tag[data-v-09f5c69c]{width:90px;margin-left:10px;vertical-align:bottom}\", \"\", {\"version\":3,\"sources\":[\"/Users/daizecheng/workplace/freelog/console/client/src/views/node/presentable/tags/index.vue\"],\"names\":[],\"mappings\":\"AACA,iCACE,gBAAkB,CACnB,AACD,iCACE,iBAAkB,AAClB,YAAa,AACb,iBAAkB,AAClB,cAAe,AACf,gBAAkB,CACnB,AACD,gCACE,WAAY,AACZ,iBAAkB,AAClB,qBAAuB,CACxB\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.el-tag + .el-tag[data-v-09f5c69c] {\\n  margin-left: 10px;\\n}\\n.button-new-tag[data-v-09f5c69c] {\\n  margin-left: 10px;\\n  height: 32px;\\n  line-height: 30px;\\n  padding-top: 0;\\n  padding-bottom: 0;\\n}\\n.input-new-tag[data-v-09f5c69c] {\\n  width: 90px;\\n  margin-left: 10px;\\n  vertical-align: bottom;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-09f5c69c\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/less-loader/dist/cjs.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/views/node/presentable/tags/index.vue\n// module id = wThA\n// module chunks = 2","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\n//\n//  This is an InputStream that is loaded from a file all at once\n//  when you construct the object.\n//\nvar InputStream = require('./InputStream').InputStream;\nvar isNodeJs = typeof window === 'undefined' && typeof importScripts === 'undefined';\nvar fs = isNodeJs ? require(\"fs\") : null;\n\nfunction FileStream(fileName, decodeToUnicodeCodePoints) {\n\tvar data = fs.readFileSync(fileName, \"utf8\");\n\tInputStream.call(this, data, decodeToUnicodeCodePoints);\n\tthis.fileName = fileName;\n\treturn this;\n}\n\nFileStream.prototype = Object.create(InputStream.prototype);\nFileStream.prototype.constructor = FileStream;\n\nexports.FileStream = FileStream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/FileStream.js\n// module id = wf8X\n// module chunks = 0 1 2","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-b9e66b48\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../../node_modules/less-loader/dist/cjs.js?{\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"2ce55a32\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/vue-style-loader!./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-b9e66b48\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/less-loader/dist/cjs.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/views/node/presentable/steps/index.vue\n// module id = xs1j\n// module chunks = 0 2","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nexports.RecognitionException = require('./Errors').RecognitionException;\nexports.NoViableAltException = require('./Errors').NoViableAltException;\nexports.LexerNoViableAltException = require('./Errors').LexerNoViableAltException;\nexports.InputMismatchException = require('./Errors').InputMismatchException;\nexports.FailedPredicateException = require('./Errors').FailedPredicateException;\nexports.DiagnosticErrorListener = require('./DiagnosticErrorListener').DiagnosticErrorListener;\nexports.BailErrorStrategy = require('./ErrorStrategy').BailErrorStrategy;\nexports.ErrorListener = require('./ErrorListener').ErrorListener;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/error/index.js\n// module id = y2Ps\n// module chunks = 0 1 2","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\n// A tuple: (ATN state, predicted alt, syntactic, semantic context).\n//  The syntactic context is a graph-structured stack node whose\n//  path(s) to the root is the rule invocation(s)\n//  chain used to arrive at the state.  The semantic context is\n//  the tree of semantic predicates encountered before reaching\n//  an ATN state.\n///\n\nvar DecisionState = require('./ATNState').DecisionState;\nvar SemanticContext = require('./SemanticContext').SemanticContext;\nvar Hash = require(\"../Utils\").Hash;\n\n\nfunction checkParams(params, isCfg) {\n\tif(params===null) {\n\t\tvar result = { state:null, alt:null, context:null, semanticContext:null };\n\t\tif(isCfg) {\n\t\t\tresult.reachesIntoOuterContext = 0;\n\t\t}\n\t\treturn result;\n\t} else {\n\t\tvar props = {};\n\t\tprops.state = params.state || null;\n\t\tprops.alt = (params.alt === undefined) ? null : params.alt;\n\t\tprops.context = params.context || null;\n\t\tprops.semanticContext = params.semanticContext || null;\n\t\tif(isCfg) {\n\t\t\tprops.reachesIntoOuterContext = params.reachesIntoOuterContext || 0;\n\t\t\tprops.precedenceFilterSuppressed = params.precedenceFilterSuppressed || false;\n\t\t}\n\t\treturn props;\n\t}\n}\n\nfunction ATNConfig(params, config) {\n\tthis.checkContext(params, config);\n\tparams = checkParams(params);\n\tconfig = checkParams(config, true);\n    // The ATN state associated with this configuration///\n    this.state = params.state!==null ? params.state : config.state;\n    // What alt (or lexer rule) is predicted by this configuration///\n    this.alt = params.alt!==null ? params.alt : config.alt;\n    // The stack of invoking states leading to the rule/states associated\n    //  with this config.  We track only those contexts pushed during\n    //  execution of the ATN simulator.\n    this.context = params.context!==null ? params.context : config.context;\n    this.semanticContext = params.semanticContext!==null ? params.semanticContext :\n        (config.semanticContext!==null ? config.semanticContext : SemanticContext.NONE);\n    // We cannot execute predicates dependent upon local context unless\n    // we know for sure we are in the correct context. Because there is\n    // no way to do this efficiently, we simply cannot evaluate\n    // dependent predicates unless we are in the rule that initially\n    // invokes the ATN simulator.\n    //\n    // closure() tracks the depth of how far we dip into the\n    // outer context: depth &gt; 0.  Note that it may not be totally\n    // accurate depth since I don't ever decrement. TODO: make it a boolean then\n    this.reachesIntoOuterContext = config.reachesIntoOuterContext;\n    this.precedenceFilterSuppressed = config.precedenceFilterSuppressed;\n    return this;\n}\n\nATNConfig.prototype.checkContext = function(params, config) {\n\tif((params.context===null || params.context===undefined) &&\n\t\t\t(config===null || config.context===null || config.context===undefined)) {\n\t\tthis.context = null;\n\t}\n};\n\n\nATNConfig.prototype.hashCode = function() {\n    var hash = new Hash();\n    this.updateHashCode(hash);\n    return hash.finish();\n};\n\n\nATNConfig.prototype.updateHashCode = function(hash) {\n    hash.update(this.state.stateNumber, this.alt, this.context, this.semanticContext);\n};\n\n// An ATN configuration is equal to another if both have\n//  the same state, they predict the same alternative, and\n//  syntactic/semantic contexts are the same.\n\nATNConfig.prototype.equals = function(other) {\n    if (this === other) {\n        return true;\n    } else if (! (other instanceof ATNConfig)) {\n        return false;\n    } else {\n        return this.state.stateNumber===other.state.stateNumber &&\n            this.alt===other.alt &&\n            (this.context===null ? other.context===null : this.context.equals(other.context)) &&\n            this.semanticContext.equals(other.semanticContext) &&\n            this.precedenceFilterSuppressed===other.precedenceFilterSuppressed;\n    }\n};\n\n\nATNConfig.prototype.hashCodeForConfigSet = function() {\n    var hash = new Hash();\n    hash.update(this.state.stateNumber, this.alt, this.semanticContext);\n    return hash.finish();\n};\n\n\nATNConfig.prototype.equalsForConfigSet = function(other) {\n    if (this === other) {\n        return true;\n    } else if (! (other instanceof ATNConfig)) {\n        return false;\n    } else {\n        return this.state.stateNumber===other.state.stateNumber &&\n            this.alt===other.alt &&\n            this.semanticContext.equals(other.semanticContext);\n    }\n};\n\n\nATNConfig.prototype.toString = function() {\n    return \"(\" + this.state + \",\" + this.alt +\n        (this.context!==null ? \",[\" + this.context.toString() + \"]\" : \"\") +\n        (this.semanticContext !== SemanticContext.NONE ?\n                (\",\" + this.semanticContext.toString())\n                : \"\") +\n        (this.reachesIntoOuterContext>0 ?\n                (\",up=\" + this.reachesIntoOuterContext)\n                : \"\") + \")\";\n};\n\n\nfunction LexerATNConfig(params, config) {\n\tATNConfig.call(this, params, config);\n\n    // This is the backing field for {@link //getLexerActionExecutor}.\n\tvar lexerActionExecutor = params.lexerActionExecutor || null;\n    this.lexerActionExecutor = lexerActionExecutor || (config!==null ? config.lexerActionExecutor : null);\n    this.passedThroughNonGreedyDecision = config!==null ? this.checkNonGreedyDecision(config, this.state) : false;\n    return this;\n}\n\nLexerATNConfig.prototype = Object.create(ATNConfig.prototype);\nLexerATNConfig.prototype.constructor = LexerATNConfig;\n\nLexerATNConfig.prototype.updateHashCode = function(hash) {\n    hash.update(this.state.stateNumber, this.alt, this.context, this.semanticContext, this.passedThroughNonGreedyDecision, this.lexerActionExecutor);\n};\n\nLexerATNConfig.prototype.equals = function(other) {\n    return this === other ||\n            (other instanceof LexerATNConfig &&\n            this.passedThroughNonGreedyDecision == other.passedThroughNonGreedyDecision &&\n            (this.lexerActionExecutor ? this.lexerActionExecutor.equals(other.lexerActionExecutor) : !other.lexerActionExecutor) &&\n            ATNConfig.prototype.equals.call(this, other));\n};\n\nLexerATNConfig.prototype.hashCodeForConfigSet = LexerATNConfig.prototype.hashCode;\n\nLexerATNConfig.prototype.equalsForConfigSet = LexerATNConfig.prototype.equals;\n\n\nLexerATNConfig.prototype.checkNonGreedyDecision = function(source, target) {\n    return source.passedThroughNonGreedyDecision ||\n        (target instanceof DecisionState) && target.nonGreedy;\n};\n\nexports.ATNConfig = ATNConfig;\nexports.LexerATNConfig = LexerATNConfig;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/atn/ATNConfig.js\n// module id = yEAX\n// module chunks = 0 1 2","<template>\n  <div>\n    <el-input class=\"gap\"\n              spellcheck=\"false\"\n              type=\"textarea\"\n              :rows=\"15\"\n              placeholder=\"请输入policy\"\n              @change=\"textChange\"\n              v-model=\"policyText\">\n    </el-input>\n    <el-button type=\"primary\"\n               @click=\"validate\">格式校验</el-button>\n  </div>\n</template>\n\n<script>\n  import PresentablePolicy from './index'\n\n  export default PresentablePolicy\n</script>\n\n<style lang=\"less\" scoped>\n  .gap {\n    margin-bottom: 12px;\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/views/node/presentable/policy/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-input',{staticClass:\"gap\",attrs:{\"spellcheck\":\"false\",\"type\":\"textarea\",\"rows\":15,\"placeholder\":\"请输入policy\"},on:{\"change\":_vm.textChange},model:{value:(_vm.policyText),callback:function ($$v) {_vm.policyText=$$v},expression:\"policyText\"}}),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.validate}},[_vm._v(\"格式校验\")])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-41f78b08\",\"hasScoped\":true,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/node/presentable/policy/index.vue\n// module id = z7tt\n// module chunks = 2"],"sourceRoot":""}